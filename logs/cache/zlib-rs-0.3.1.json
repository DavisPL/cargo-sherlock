{
  "rustsec_label": "MEDIUM",
  "in_rustsec_patched": false,
  "in_rustsec_current": true,
  "in_rust_sec": true,
  "rustsec_tag": "Vulnerability",
  "developers": [
    "rnijveld",
    "folkertdev"
  ],
  "stars": 434,
  "forks": 20,
  "downloads": 339405,
  "num_side_effects": 301,
  "failed_rudra": false,
  "audits": [
    {
      "organization": "isrg",
      "criteria": "safe-to-deploy",
      "delta": "",
      "version": "0.4.0",
      "notes": "zlib-rs uses unsafe Rust for invoking compiler intrinsics (i.e. SIMD), eschewing bounds checks, along the FFI boundary, and for interacting with pointers sourced from C. I have extensively reviewed and fuzzed the unsafe code. All findings from that work have been resolved as of version 0.4.0. To the best of my ability, I believe it's free of any serious security problems.\\n\\nzlib-rs does not require any external dependencies.\\n"
    },
    {
      "organization": "isrg",
      "criteria": "safe-to-deploy",
      "delta": "0.4.0 -> 0.4.1",
      "version": "",
      "notes": ""
    },
    {
      "organization": "isrg",
      "criteria": "safe-to-deploy",
      "delta": "0.4.1 -> 0.4.2",
      "version": "",
      "notes": ""
    }
  ],
  "dependencies": [],
  "passed_audit": false,
  "num_unsafe_calls": 296,
  "miri": true,
  "past_audit": false,
  "miri_details": {
    "status": "crash",
    "passed": 0,
    "failed": 1,
    "ignored": 0,
    "measured": 0,
    "filtered_out": 0,
    "time_seconds": 0.0
  }
}