{
  "rustsec_label": "Safe",
  "in_rustsec_patched": false,
  "in_rustsec_current": false,
  "in_rust_sec": false,
  "rustsec_tag": null,
  "developers": [
    "hawkw",
    "github:tokio-rs:publish-tracing"
  ],
  "stars": 5775,
  "forks": 766,
  "downloads": 255404243,
  "num_side_effects": 18,
  "failed_rudra": false,
  "audits": [
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-deploy",
      "delta": "0.1.28 -> 0.1.31",
      "version": "",
      "notes": "This is a relatively minor set of releases with minor refactorings and bug\\nfixes. Nothing fundamental was added in these changes.\\n"
    },
    {
      "organization": "google",
      "criteria": "safe-to-run",
      "delta": "",
      "version": "0.1.29",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"ub-risk-2\",]",
      "delta": "0.1.21 -> 0.1.31",
      "version": "",
      "notes": "Reviewed on https://fxrev.dev/906816"
    },
    {
      "organization": "google",
      "criteria": "[ \"ub-risk-2\", \"does-not-implement-crypto\",]",
      "delta": "",
      "version": "0.1.30",
      "notes": "Reviewed in CL 555490997"
    },
    {
      "organization": "google",
      "criteria": "ub-risk-2",
      "delta": "0.1.30 -> 0.1.32",
      "version": "",
      "notes": "Reviewed in CL 573852436"
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "",
      "version": "0.1.30",
      "notes": "Most unsafe code is in implementing non-std sync primitives. Unsafe impls are\\nlogically correct and justified in comments, and unsafe code is sound and\\njustified in comments.\\n"
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-run",
      "delta": "0.1.27 -> 0.1.29",
      "version": "",
      "notes": ""
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-run",
      "delta": "0.1.29 -> 0.1.30",
      "version": "",
      "notes": ""
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "0.1.30 -> 0.1.31",
      "version": "",
      "notes": "The only new `unsafe` block is to intentionally leak a scoped subscriber onto\\nthe heap when setting it as the global default dispatcher. I checked that the\\nglobal default can only be set once and is never dropped.\\n"
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "0.1.31 -> 0.1.32",
      "version": "",
      "notes": ""
    }
  ],
  "dependencies": [],
  "passed_audit": false,
  "num_unsafe_calls": 17,
  "miri": false,
  "past_audit": true,
  "miri_details": {
    "status": "ok",
    "passed": 11,
    "failed": 0,
    "ignored": 2,
    "measured": 0,
    "filtered_out": 0,
    "time_seconds": 0.47
  }
}