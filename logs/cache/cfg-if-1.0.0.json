{
  "rustsec_label": "Safe",
  "in_rustsec_patched": false,
  "in_rustsec_current": false,
  "in_rust_sec": false,
  "rustsec_tag": null,
  "developers": [
    "alexcrichton",
    "rust-lang-owner",
    "github:rust-lang:libs"
  ],
  "stars": 581,
  "forks": 42,
  "downloads": 478522168,
  "num_side_effects": 0,
  "failed_rudra": false,
  "audits": [
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-deploy",
      "delta": "",
      "version": "1.0.0",
      "notes": "I am the author of this crate."
    },
    {
      "organization": "google",
      "criteria": "[ \"does-not-implement-crypto\", \"safe-to-deploy\",]",
      "delta": "",
      "version": "1.0.0",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "safe-to-run",
      "delta": "",
      "version": "1.0.0",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "ub-risk-0",
      "delta": "",
      "version": "1.0.0",
      "notes": "`rg -i unsafe` resulted in zero hits for this package."
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "",
      "version": "1.0.0",
      "notes": "I grepped for \\\\\\\"unsafe\\\\\\\", \\\\\\\"crypt\\\\\\\", \\\\\\\"cipher\\\\\\\", \\\\\\\"fs\\\\\\\", \\\\\\\"net\\\\\\\" - there were\\nno hits.  This is a really small crate (only `lib.rs` which is less than 200\\nlines + one end-to-end test) so I also skimmed through the macro's definition\\nand everything looks okay to me.\\n"
    }
  ],
  "dependencies": [],
  "passed_audit": true,
  "num_unsafe_calls": 0,
  "miri": true,
  "past_audit": false,
  "miri_details": {
    "status": "crash",
    "passed": 0,
    "failed": 14,
    "ignored": 0,
    "measured": 0,
    "filtered_out": 0,
    "time_seconds": 0.0
  }
}