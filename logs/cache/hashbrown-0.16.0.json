{
  "rustsec_label": "Patched",
  "in_rustsec_patched": true,
  "in_rustsec_current": false,
  "in_rust_sec": true,
  "rustsec_tag": "Vulnerability",
  "developers": [
    "Amanieu",
    "rust-lang-owner"
  ],
  "stars": 2774,
  "forks": 322,
  "downloads": 883206526,
  "num_side_effects": 475,
  "failed_rudra": false,
  "audits": [
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-deploy",
      "delta": "0.12.3 -> 0.13.1",
      "version": "",
      "notes": "The diff looks plausible. Much of it is low-level memory-layout code and I can't be 100% certain without a deeper dive into the implementation logic, but nothing looks actively malicious."
    },
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-deploy",
      "delta": "0.13.1 -> 0.13.2",
      "version": "",
      "notes": "I read through the diff between v0.13.1 and v0.13.2, and verified that the changes made matched up with the changelog entries. There were very few changes between these two releases, and it was easy to verify what they did."
    },
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-deploy",
      "delta": "0.14.5 -> 0.15.2",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "",
      "version": "0.13.2",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "0.13.2 -> 0.12.3",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "0.13.2 -> 0.14.3",
      "version": "",
      "notes": ""
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "",
      "version": "0.12.3",
      "notes": "This version is used in rust's libstd, so effectively we're already trusting it"
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "0.15.2 -> 0.15.5",
      "version": "",
      "notes": ""
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "0.15.5 -> 0.16.0",
      "version": "",
      "notes": ""
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "0.13.2 -> 0.14.0",
      "version": "",
      "notes": "There is some additional use of unsafe code but the changes in this crate looked plausible.\\nThere is a new default dependency on the `allocator-api2` crate, which itself has quite a lot of unsafe code.\\nMany previously undocumented safety requirements have been documented.\\n"
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "0.14.2 -> 0.14.5",
      "version": "",
      "notes": "I did not thoroughly check the safety argument for fold_impl, but it at least seems to be well documented."
    }
  ],
  "dependencies": [],
  "passed_audit": true,
  "num_unsafe_calls": 440,
  "miri": false,
  "past_audit": true,
  "miri_details": {
    "status": "ok",
    "passed": 254,
    "failed": 0,
    "ignored": 0,
    "measured": 0,
    "filtered_out": 0,
    "time_seconds": 5.19
  }
}