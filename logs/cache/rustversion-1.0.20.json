{
  "rustsec_label": "Safe",
  "in_rustsec_patched": false,
  "in_rustsec_current": false,
  "in_rust_sec": false,
  "rustsec_tag": null,
  "developers": [
    "dtolnay"
  ],
  "stars": 350,
  "forks": 17,
  "downloads": 176430151,
  "num_side_effects": 21,
  "failed_rudra": false,
  "audits": [
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "",
      "version": "1.0.9",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"ub-risk-0\", \"safe-to-deploy\", \"does-not-implement-crypto\",]",
      "delta": "",
      "version": "1.0.14",
      "notes": "Grepped for `-i cipher`, `-i crypto`, `'x08fsx08'``, `'x08netx08'``, `'x08unsafex08'``\\nand there were no hits except for:\\n\\n* Using trivially-safe `unsafe` in test code:\\n\\n    ```\\n    tests/test_const.rs:unsafe fn _unsafe() {}\\n    tests/test_const.rs:const _UNSAFE: () = unsafe { _unsafe() };\\n    ```\\n\\n* Using `unsafe` in a string:\\n\\n    ```\\n    src/constfn.rs:            \\\"unsafe\\\" => Qualifiers::Unsafe,\\n    ```\\n\\n* Using `std::fs` in `build/build.rs` to write `${OUT_DIR}/version.expr`\\n  which is later read back via `include!` used in `src/lib.rs`.\\n\\nVersion `1.0.6` of this crate has been added to Chromium in\\nhttps://source.chromium.org/chromium/chromium/src/+/28841c33c77833cc30b286f9ae24c97e7a8f4057\\n"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "1.0.14 -> 1.0.15",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "1.0.15 -> 1.0.16",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "1.0.16 -> 1.0.17",
      "version": "",
      "notes": "Just updates windows compat"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "1.0.17 -> 1.0.18",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "1.0.18 -> 1.0.19",
      "version": "",
      "notes": "No unsafe, just doc changes"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "1.0.19 -> 1.0.20",
      "version": "",
      "notes": "Only minor updates to documentation and the mock today used for testing."
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "",
      "version": "1.0.9",
      "notes": "This crate has a build-time component and procedural macro logic, which I looked\\nat enough to convince myself it wasn't going to do anything dramatically wrong.\\nI don't think logic bugs in the version parsing etc can realistically introduce\\na security vulnerability.\\n"
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-run",
      "delta": "1.0.9 -> 1.0.11",
      "version": "",
      "notes": ""
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "1.0.9 -> 1.0.14",
      "version": "",
      "notes": "Doc updates, minimal CI changes and a fix to build-script reruns"
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.15 -> 1.0.16",
      "version": "",
      "notes": ""
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.16 -> 1.0.17",
      "version": "",
      "notes": ""
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.18 -> 1.0.19",
      "version": "",
      "notes": ""
    }
  ],
  "dependencies": [],
  "passed_audit": true,
  "num_unsafe_calls": 0,
  "miri": false,
  "past_audit": true,
  "miri_details": {
    "status": "ok",
    "passed": 1,
    "failed": 0,
    "ignored": 0,
    "measured": 0,
    "filtered_out": 0,
    "time_seconds": 0.38
  }
}