{
  "rustsec_label": "Safe",
  "in_rustsec_patched": false,
  "in_rustsec_current": false,
  "in_rust_sec": false,
  "rustsec_tag": null,
  "developers": [
    "oyvindln",
    "Frommi"
  ],
  "stars": 202,
  "forks": 55,
  "downloads": 298686151,
  "num_side_effects": 0,
  "failed_rudra": false,
  "audits": [
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-deploy",
      "delta": "",
      "version": "0.7.1",
      "notes": "This crate is a Rust implementation of zlib compression/decompression and has\\nbeen used by default by the Rust standard library for quite some time. It's also\\na default dependency of the popular `backtrace` crate for decompressing debug\\ninformation. This crate forbids unsafe code and does not otherwise access system\\nresources. It's originally a port of the `miniz.c` library as well, and given\\nits own longevity should be relatively hardened against some of the more common\\ncompression-related issues.\\n"
    },
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-run",
      "delta": "0.5.1 -> 0.5.3",
      "version": "",
      "notes": "This looks to be a minor update to the crate to remove some `unsafe` code,\\nupdate Rust stylistic conventions, and perhaps some clippy lints. No major\\nchanges.\\n"
    },
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-deploy",
      "delta": "0.7.1 -> 0.8.0",
      "version": "",
      "notes": "Minor updates, using new Rust features like `const`, no major changes."
    },
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-deploy",
      "delta": "0.8.0 -> 0.7.4",
      "version": "",
      "notes": "Very few changes here, only minor updates here and there."
    },
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-deploy",
      "delta": "0.8.0 -> 0.8.5",
      "version": "",
      "notes": "Lots of small updates here and there, for example around modernizing Rust\\nidioms. No new `unsafe` code and everything looks like what you'd expect a\\ncompression library to be doing.\\n"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "",
      "version": "0.6.2",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "0.4.4 -> 0.3.7",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "0.5.4 -> 0.4.4",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "0.6.2 -> 0.5.4",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "0.6.2 -> 0.7.1",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "",
      "version": "0.7.4",
      "notes": "Grepped for `-i cipher`, `-i crypto`, `'\\\\bfs\\\\b'`, `'\\\\bnet\\\\b'`, `'\\\\bunsafe\\\\b'`\\nand there were no hits, except for some mentions of \\\"unsafe\\\" in the `README.md`\\nand in a comment in `src/deflate/core.rs`.  The comment discusses whether a\\nfunction should be treated as unsafe, but there is no actual `unsafe` code, so\\nthe crate meets the `ub-risk-0` criteria.\\n\\nNote that some additional, internal notes about an older version of this crate\\ncan be found at go/image-crate-chromium-security-review.\\n"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "0.7.4 -> 0.8.0",
      "version": "",
      "notes": "This delta audit has been reviewed in https://crrev.com/c/5811890\\n\\nThe delta can be inspected at https://diff.rs/miniz_oxide/0.7.4/0.8.0\\nand is fairly small (changes related to `const fn` and to `adler2`\\nswitch).\\n\\nI've grepped for `-i cipher`, `-i crypto`, `\\\\bfs\\\\b`, `\\\\bnet\\\\b`, and\\n`\\\\bunsafe\\\\b`.  There were no hits (except for comments in `core.rs`\\nand in `Readme.md`).\\n"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "0.8.0 -> 0.8.2",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "0.8.2 -> 0.8.3",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "0.8.3 -> 0.8.4",
      "version": "",
      "notes": "No big changes. Replaces some array with Box and other minor changes."
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-deploy\", \"does-not-implement-crypto\", \"ub-risk-0\",]",
      "delta": "0.8.4 -> 0.8.5",
      "version": "",
      "notes": "No additions of or changes to unsafe code. Delta consists of a bug fix + cleanups/changes to make it easier for the compiler to elide checks."
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "0.5.3 -> 0.6.2",
      "version": "",
      "notes": ""
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "0.7.1 -> 0.7.2",
      "version": "",
      "notes": ""
    }
  ],
  "dependencies": [
    [
      "adler2",
      "2.0.0"
    ]
  ],
  "passed_audit": true,
  "num_unsafe_calls": 0,
  "miri": false,
  "past_audit": true,
  "miri_details": {
    "status": "ok",
    "passed": 1,
    "failed": 0,
    "ignored": 0,
    "measured": 0,
    "filtered_out": 0,
    "time_seconds": 0.64
  }
}