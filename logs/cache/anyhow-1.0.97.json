{
  "rustsec_label": "Safe",
  "in_rustsec_patched": false,
  "in_rustsec_current": false,
  "in_rust_sec": false,
  "rustsec_tag": null,
  "developers": [
    "dtolnay"
  ],
  "stars": 5815,
  "forks": 150,
  "downloads": 299818164,
  "num_side_effects": 77,
  "failed_rudra": false,
  "audits": [
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-deploy",
      "delta": "1.0.62 -> 1.0.66",
      "version": "",
      "notes": "This update looks to be related to minor fixes and mostly integrating with a\\nnightly feature in the standard library for backtrace integration. No undue\\n`unsafe` is added and nothing unsurprising for the `anyhow` crate is happening\\nhere.\\n"
    },
    {
      "organization": "bytecode-alliance",
      "criteria": "safe-to-deploy",
      "delta": "1.0.69 -> 1.0.71",
      "version": "",
      "notes": ""
    },
    {
      "organization": "embark-studios",
      "criteria": "safe-to-deploy",
      "delta": "",
      "version": "1.0.58",
      "notes": ""
    },
    {
      "organization": "embark-studios",
      "criteria": "safe-to-deploy",
      "delta": "1.0.58 -> 1.0.66",
      "version": "",
      "notes": "New unsafe usage, looks sane. Expert maintainer"
    },
    {
      "organization": "fermyon",
      "criteria": "safe-to-deploy",
      "delta": "",
      "version": "1.0.65",
      "notes": ""
    },
    {
      "organization": "fermyon",
      "criteria": "safe-to-deploy",
      "delta": "1.0.65 -> 1.0.68",
      "version": "",
      "notes": "CI and test updates plus minor Rust efficiency improvements."
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "",
      "version": "1.0.68",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.68 -> 1.0.70",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.70 -> 1.0.71",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.71 -> 1.0.72",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.72 -> 1.0.75",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.75 -> 1.0.79",
      "version": "",
      "notes": "1.0.75 has been previously audited as \\\"safe-to-run\\\",\\n\\\"does-not-implement-crypto\\\" - see\\nhttps://github.com/google/rust-crate-audits/blob/c2d49cb6e80bb817f569debecf846161dcebd88c/audits.toml#L277-L305\\nThe \\\"1.0.75 -> 1.0.79\\\" delta meets the same criteria.\\n\\nThis is an incremental/delta audit - we don't claim any particular `ub-risk-N`\\nlevel for the baseline or for the final version.  OTOH note that additional\\nuses of `unsafe` have been reviewed in https://crrev.com/c/5178771 and the\\n**delta**  was evaluated as `ub-risk-3` - no known unsoundness but:\\n* Little safety comments to explain why a particular usage of `unsafe`\\n  is safe and/or necessary\\n* Safety analysis couldn't be done locally, but required considering the\\n  whole crate (e.g. checking if the public `Ref.ptr` is mutated anywhere)\\n"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.79 -> 1.0.80",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.80 -> 1.0.81",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.81 -> 1.0.82",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.82 -> 1.0.83",
      "version": "",
      "notes": "No change to UB-risk profile either."
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.83 -> 1.0.86",
      "version": "",
      "notes": "Delta only updates the ensure macro implementation, still safe to run, no crypto"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.86 -> 1.0.87",
      "version": "",
      "notes": "Minimal changes, mostly renaming std to core for a type"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.87 -> 1.0.89",
      "version": "",
      "notes": "No safety-related changes in this delta"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.89 -> 1.0.91",
      "version": "",
      "notes": "Minimal changes"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.91 -> 1.0.93",
      "version": "",
      "notes": "`ensure!` macro tweaks to handle\\nhttps://github.com/rust-lang/rfcs/blob/master/text/2582-raw-reference-mir-operator.md\\n"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.93 -> 1.0.94",
      "version": "",
      "notes": "No behavioral changes"
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.94 -> 1.0.95",
      "version": "",
      "notes": ""
    },
    {
      "organization": "google",
      "criteria": "[ \"safe-to-run\", \"does-not-implement-crypto\",]",
      "delta": "1.0.95 -> 1.0.97",
      "version": "",
      "notes": "Only minor changes to comments, tests, and clippy expectations."
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "1.0.57 -> 1.0.61",
      "version": "",
      "notes": ""
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "1.0.58 -> 1.0.57",
      "version": "",
      "notes": "No functional differences, just CI config and docs."
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "1.0.61 -> 1.0.62",
      "version": "",
      "notes": ""
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "1.0.62 -> 1.0.68",
      "version": "",
      "notes": ""
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "1.0.68 -> 1.0.69",
      "version": "",
      "notes": ""
    },
    {
      "organization": "mozilla",
      "criteria": "safe-to-deploy",
      "delta": "1.0.71 -> 1.0.95",
      "version": "",
      "notes": ""
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.82 -> 1.0.83",
      "version": "",
      "notes": ""
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.56 -> 1.0.61",
      "version": "",
      "notes": "Update does not introduce new code. Minor build script changes look fine."
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.61 -> 1.0.65",
      "version": "",
      "notes": "Build script changes just alter what it is probing for; no difference in side effects."
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.68 -> 1.0.69",
      "version": "",
      "notes": ""
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.69 -> 1.0.70",
      "version": "",
      "notes": ""
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.71 -> 1.0.75",
      "version": "",
      "notes": "`unsafe` changes are migrating from `core::any::Demand` to `std::error::Request` when the\\nnightly features are available.\\n"
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.75 -> 1.0.77",
      "version": "",
      "notes": "- Build script changes are to rerun cargo if the `RUSTC_BOOTSTRAP` env variable\\n  changes, and enable a few more `rustc` config flags.\\n- Some `unsafe fn`s were altered to add `unsafe` blocks, to make the safety\\n  contracts in the code clearer (instead of using the `unsafe fn`'s implicit\\n  `unsafe` block); no actual `unsafe` changes were made.\\n"
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.77 -> 1.0.79",
      "version": "",
      "notes": "Build script changes are to refactor the existing probe into a separate file\\n(which removes a filesystem write), and adjust how it gets rerun in response to\\nchanges in the build environment.\\n"
    },
    {
      "organization": "zcash",
      "criteria": "safe-to-deploy",
      "delta": "1.0.79 -> 1.0.82",
      "version": "",
      "notes": ""
    }
  ],
  "dependencies": [],
  "passed_audit": true,
  "num_unsafe_calls": 52,
  "miri": false,
  "past_audit": true,
  "miri_details": {
    "status": "ok",
    "passed": 24,
    "failed": 0,
    "ignored": 0,
    "measured": 0,
    "filtered_out": 0,
    "time_seconds": 0.54
  }
}