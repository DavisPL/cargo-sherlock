************************************
event,timestamp,label
RustSec,-,Critical
************************************
event,timestamp,organization,type,criteria,delta,version,notes
************************************
event,timestamp,name,username,url
Author,-,Theodore Cipicchio,okready,https://github.com/okready
************************************
event,timestamp,downloads
Downloads,-,7747
************************************
event,timestamp,total,flagged
Side Effects,-,,
************************************
Rudra,timestamp
"2024-06-21 16:14:09.653024 |INFO | [rudra-progress] Running cargo rudra
2024-06-21 16:14:13.112686 |INFO | [rudra-progress] Running rudra for target lib:scratchpad
[0m[1m[33mwarning[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0msrc/traits.rs:1003:30[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1003[0m[0m [0m[0m[1m[38;5;12m| [0m[0m        F: for<'a> FnMut(&'a SliceSource<T>);[0m
[0m     [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[33m^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: use `dyn`: `dyn SliceSource<T>`[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(bare_trait_objects)]` on by default[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[33mwarning[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0msrc/traits.rs:1014:30[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1014[0m[0m [0m[0m[1m[38;5;12m| [0m[0m        F: for<'a> FnMut(&'a SliceSource<T>),[0m
[0m     [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[33m^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: use `dyn`: `dyn SliceSource<T>`[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[33mwarning[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0msrc/traits.rs:1029:30[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1029[0m[0m [0m[0m[1m[38;5;12m| [0m[0m        F: for<'a> FnMut(&'a SliceSource<T>),[0m
[0m     [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[33m^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: use `dyn`: `dyn SliceSource<T>`[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[33mwarning[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0msrc/traits.rs:1045:30[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1045[0m[0m [0m[0m[1m[38;5;12m| [0m[0m        F: for<'a> FnMut(&'a SliceSource<T>),[0m
[0m     [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[33m^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: use `dyn`: `dyn SliceSource<T>`[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[33mwarning[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0msrc/traits.rs:1061:30[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1061[0m[0m [0m[0m[1m[38;5;12m| [0m[0m        F: for<'a> FnMut(&'a SliceSource<T>),[0m
[0m     [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[33m^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: use `dyn`: `dyn SliceSource<T>`[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[33mwarning[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0msrc/traits.rs:1077:30[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1077[0m[0m [0m[0m[1m[38;5;12m| [0m[0m        F: for<'a> FnMut(&'a SliceSource<T>),[0m
[0m     [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[33m^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: use `dyn`: `dyn SliceSource<T>`[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[33mwarning[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0msrc/traits.rs:1093:30[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1093[0m[0m [0m[0m[1m[38;5;12m| [0m[0m        F: for<'a> FnMut(&'a SliceSource<T>),[0m
[0m     [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[33m^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: use `dyn`: `dyn SliceSource<T>`[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[33mwarning[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0msrc/traits.rs:1254:38[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1254[0m[0m [0m[0m[1m[38;5;12m| [0m[0m                F: for<'a> FnMut(&'a SliceSource<T>)[0m
[0m     [0m[0m[1m[38;5;12m| [0m[0m                                     [0m[0m[1m[33m^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: use `dyn`: `dyn SliceSource<T>`[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m1330[0m[0m [0m[0m[1m[38;5;12m| [0m[0mgenerate_tuple_trait_impls!(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,);[0m
[0m     [0m[0m[1m[38;5;12m| [0m[0m[1m[38;5;12m------------------------------------------------------------------------------[0m[0m [0m[0m[1m[38;5;12min this macro invocation[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: this warning originates in the macro `generate_tuple_trait_impls` (in Nightly builds, run with -Z macro-backtrace for more info)[0m

[0m[1m[33mwarning[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0msrc/traits.rs:1272:38[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1272[0m[0m [0m[0m[1m[38;5;12m| [0m[0m                F: for<'a> FnMut(&'a SliceSource<T>)[0m
[0m     [0m[0m[1m[38;5;12m| [0m[0m                                     [0m[0m[1m[33m^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: use `dyn`: `dyn SliceSource<T>`[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m1330[0m[0m [0m[0m[1m[38;5;12m| [0m[0mgenerate_tuple_trait_impls!(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,);[0m
[0m     [0m[0m[1m[38;5;12m| [0m[0m[1m[38;5;12m------------------------------------------------------------------------------[0m[0m [0m[0m[1m[38;5;12min this macro invocation[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m
[0m     [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: this warning originates in the macro `generate_tuple_trait_impls` (in Nightly builds, run with -Z macro-backtrace for more info)[0m

2024-06-21 16:14:22.404925 |INFO | [rudra-progress] Rudra started
2024-06-21 16:14:22.408877 |INFO | [rudra-progress] SendSyncVariance analysis started
2024-06-21 16:14:22.409191 |INFO | [rudra-progress] SendSyncVariance analysis finished
2024-06-21 16:14:22.409202 |INFO | [rudra-progress] UnsafeDataflow analysis started
2024-06-21 16:14:22.484713 |INFO | [rudra-progress] UnsafeDataflow analysis finished
2024-06-21 16:14:22.484741 |INFO | [rudra-progress] Rudra finished
Warning (UnsafeDataflow:/ReadFlow): Potential unsafe dataflow issue in `<U as traits::SliceMoveSourceCollection<T>>::move_all_elements`
-> src/traits.rs:1137:5: 1148:6
fn move_all_elements<F>(self, mut f: F)
    where
        F: FnMut(<T as SliceLike>::Element),
    {
        unsafe {
            for source in [0m[36mself.as_slice()[0m {
                [0m[31m[0m[36mptr::read(source)[0m[36m.move_elements(&mut f)[0m;
            }

            forget(self);
        }
    }
[0m
Warning (UnsafeDataflow:/ReadFlow): Potential unsafe dataflow issue in `<std::boxed::Box<[U]> as traits::SliceMoveSourceCollection<T>>::move_all_elements`
-> src/traits.rs:1175:5: 1186:6
fn move_all_elements<F>(self, mut f: F)
    where
        F: FnMut(<T as SliceLike>::Element),
    {
        unsafe {
            for source in &*self {
                [0m[31m[0m[36mptr::read(source)[0m[36m.move_elements(&mut f)[0m;
            }

            Box::from_raw(Box::into_raw(self) as *mut [ManuallyDrop<U>]);
        }
    }
[0m
Warning (UnsafeDataflow:/ReadFlow): Potential unsafe dataflow issue in `<T as traits::SliceMoveSource<[<T as traits::Array>::Item]>>::move_elements`
-> src/traits.rs:867:5: 878:6
fn move_elements<F>(self, mut f: F)
    where
        F: FnMut(<T as Array>::Item),
    {
        unsafe {
            for item in [0m[36mself.as_slice()[0m {
                [0m[36mf([0m[31mptr::read(item)[0m[36m)[0m
            }

            forget(self);
        }
    }
[0m
Warning (UnsafeDataflow:/ReadFlow): Potential unsafe dataflow issue in `<std::boxed::Box<T> as traits::SliceMoveSource<T>>::move_elements`
-> src/traits.rs:901:5: 914:6
fn move_elements<F>(self, mut f: F)
    where
        F: FnMut(<T as SliceLike>::Element),
    {
        unsafe {
            for item in [0m[36mself.as_element_slice()[0m {
                [0m[36mf([0m[31mptr::read(item)[0m[36m)[0m;
            }

            Box::from_raw([0m[36m(*Box::into_raw(self)).as_element_slice_mut()[0m
                as *mut [<T as SliceLike>::Element]
                as *mut [ManuallyDrop<<T as SliceLike>::Element>]);
        }
    }
[0m
2024-06-21 16:14:24.164492 |WARN | [cargo_rudra] Target custom-build:build-script-build is not supported
2024-06-21 16:14:24.164635 |INFO | [rudra-progress] cargo rudra finished
"
************************************
