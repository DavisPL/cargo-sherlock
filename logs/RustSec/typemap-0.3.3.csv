************************************
event,timestamp,label
RustSec,-,Critical
************************************
event,timestamp,organization,type,criteria,delta,version,notes
************************************
event,timestamp,name,username,url
Author,-,Jonathan Reem,reem,https://github.com/reem
************************************
event,timestamp,downloads
Downloads,-,4940144
************************************
event,timestamp,total,flagged
Side Effects,-,14,10
************************************
Rudra,timestamp
"2024-06-21 17:57:00.967684 |INFO | [rudra-progress] Running cargo rudra
2024-06-21 17:57:04.702234 |INFO | [rudra-progress] Running rudra for target lib:typemap
[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:27:32[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m27[0m[0m [0m[0m[1m[38;5;12m| [0m[0mpub struct TypeMap<A: ?Sized = UnsafeAny>[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                               [0m[0m[1m[38;5;9m^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: the lint level is defined here[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:1:23[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1[0m[0m  [0m[0m[1m[38;5;12m| [0m[0m#![deny(missing_docs, warnings)][0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                      [0m[0m[1m[38;5;10m^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[deny(bare_trait_objects)]` implied by `#[deny(warnings)]`[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:40:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m40[0m[0m [0m[0m[1m[38;5;12m| [0m[0mpub type SendMap = TypeMap<UnsafeAny + Send>;[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                           [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny + Send`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:43:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m43[0m[0m [0m[0m[1m[38;5;12m| [0m[0mpub type SyncMap = TypeMap<UnsafeAny + Sync>;[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                           [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:46:29[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m46[0m[0m [0m[0m[1m[38;5;12m| [0m[0mpub type ShareMap = TypeMap<UnsafeAny + Send + Sync>;[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                            [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny + Send + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:49:29[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m49[0m[0m [0m[0m[1m[38;5;12m| [0m[0mpub type CloneMap = TypeMap<CloneAny>;[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                            [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:52:34[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m52[0m[0m [0m[0m[1m[38;5;12m| [0m[0mpub type ShareCloneMap = TypeMap<CloneAny + Send + Sync>;[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                 [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:55:29[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m55[0m[0m [0m[0m[1m[38;5;12m| [0m[0mpub type DebugMap = TypeMap<DebugAny>;[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                            [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:58:34[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m58[0m[0m [0m[0m[1m[38;5;12m| [0m[0mpub type ShareDebugMap = TypeMap<DebugAny + Send + Sync>;[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                 [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny + Send + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:178:55[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m178[0m[0m [0m[0m[1m[38;5;12m| [0m[0mpub enum Entry<'a, K, A: ?Sized + UnsafeAnyExt + 'a = UnsafeAny> {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                                      [0m[0m[1m[38;5;9m^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:185:50[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m185[0m[0m [0m[0m[1m[38;5;12m| [0m[0mimpl<'a, K: Key, A: ?Sized + UnsafeAnyExt + 'a = UnsafeAny> Entry<'a, K, A> {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                                 [0m[0m[1m[38;5;9m^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:208:65[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m208[0m[0m [0m[0m[1m[38;5;12m| [0m[0mpub struct OccupiedEntry<'a, K, A: ?Sized + UnsafeAnyExt + 'a = UnsafeAny> {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                                                [0m[0m[1m[38;5;9m^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:214:63[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m214[0m[0m [0m[0m[1m[38;5;12m| [0m[0mpub struct VacantEntry<'a, K, A: ?Sized + UnsafeAnyExt + 'a = UnsafeAny> {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                                              [0m[0m[1m[38;5;9m^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:16:30[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl UnsafeAnyExt for DebugAny {}[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:17:30[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m17[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl UnsafeAnyExt for DebugAny + Send {}[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny + Send`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:18:30[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m18[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl UnsafeAnyExt for DebugAny + Sync {}[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:19:30[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m19[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl UnsafeAnyExt for DebugAny + Send + Sync {}[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny + Send + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:31:32[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m31[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone_any(&self) -> Box<CloneAny>;[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                               [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:33:37[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m33[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone_any_send(&self) -> Box<CloneAny + Send> where Self: Send;[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                    [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:35:37[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m35[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone_any_sync(&self) -> Box<CloneAny + Sync> where Self: Sync;[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                    [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:37:42[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m37[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone_any_send_sync(&self) -> Box<CloneAny + Send + Sync> where Self: Send + Sync;[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                         [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:41:32[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m41[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone_any(&self) -> Box<CloneAny> { Box::new(self.clone()) }[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                               [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:43:37[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m43[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone_any_send(&self) -> Box<CloneAny + Send> where Self: Send {[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                    [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:47:37[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m47[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone_any_sync(&self) -> Box<CloneAny + Sync> where Self: Sync {[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                    [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:51:42[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m51[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone_any_send_sync(&self) -> Box<CloneAny + Send + Sync>[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                         [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:57:20[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m57[0m[0m [0m[0m[1m[38;5;12m| [0m[0mimpl Clone for Box<CloneAny> {[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                   [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:58:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m58[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone(&self) -> Box<CloneAny> { (**self).clone_any() }[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                           [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:61:20[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m61[0m[0m [0m[0m[1m[38;5;12m| [0m[0mimpl Clone for Box<CloneAny + Send> {[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                   [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:62:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m62[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone(&self) -> Box<CloneAny + Send> { (**self).clone_any_send() }[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                           [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:65:20[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m65[0m[0m [0m[0m[1m[38;5;12m| [0m[0mimpl Clone for Box<CloneAny + Sync> {[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                   [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:66:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m66[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone(&self) -> Box<CloneAny + Sync> { (**self).clone_any_sync() }[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                           [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:69:20[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m69[0m[0m [0m[0m[1m[38;5;12m| [0m[0mimpl Clone for Box<CloneAny + Send + Sync> {[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                   [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:70:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m70[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn clone(&self) -> Box<CloneAny + Send + Sync> { (**self).clone_any_send_sync() }[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                           [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:73:30[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m73[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl UnsafeAnyExt for CloneAny {}[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:74:30[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m74[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl UnsafeAnyExt for CloneAny + Send {}[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:75:30[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m75[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl UnsafeAnyExt for CloneAny + Sync {}[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:76:30[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m76[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl UnsafeAnyExt for CloneAny + Send + Sync {}[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                             [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:83:38[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m83[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl<T: UnsafeAny> Implements<UnsafeAny> for T {[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                     [0m[0m[1m[38;5;9m^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:84:33[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m84[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn into_object(self) -> Box<UnsafeAny> { Box::new(self) }[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                [0m[0m[1m[38;5;9m^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:87:46[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m87[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl<T: UnsafeAny + Send> Implements<(UnsafeAny + Send)> for T {[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                             [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny + Send`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:88:33[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m88[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn into_object(self) -> Box<UnsafeAny + Send> { Box::new(self) }[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny + Send`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:91:46[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m91[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl<T: UnsafeAny + Sync> Implements<(UnsafeAny + Sync)> for T {[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                             [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:92:33[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m92[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn into_object(self) -> Box<UnsafeAny + Sync> { Box::new(self) }[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:95:53[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m95[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl<T: UnsafeAny + Send + Sync> Implements<(UnsafeAny + Send + Sync)> for T {[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                                    [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny + Send + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:96:33[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m96[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn into_object(self) -> Box<UnsafeAny + Send + Sync> { Box::new(self) }[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn UnsafeAny + Send + Sync`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:99:37[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m99[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl<T: CloneAny> Implements<CloneAny> for T {[0m
[0m   [0m[0m[1m[38;5;12m| [0m[0m                                    [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny`[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:100:33[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m100[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn into_object(self) -> Box<CloneAny> { Box::new(self) }[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:103:45[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m103[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl<T: CloneAny + Send> Implements<(CloneAny + Send)> for T {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                            [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:104:33[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m104[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn into_object(self) -> Box<CloneAny + Send> { Box::new(self) }[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:107:52[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m107[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl<T: CloneAny + Send + Sync> Implements<(CloneAny + Send + Sync)> for T {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                                   [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send + Sync`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:108:33[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m108[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn into_object(self) -> Box<CloneAny + Send + Sync> { Box::new(self) }[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn CloneAny + Send + Sync`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:111:37[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m111[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl<T: DebugAny> Implements<DebugAny> for T {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                    [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:112:33[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m112[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn into_object(self) -> Box<DebugAny> { Box::new(self) }[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                [0m[0m[1m[38;5;9m^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:115:44[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m115[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl<T: DebugAny + Send> Implements<DebugAny + Send> for T {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                           [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny + Send`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:116:33[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m116[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn into_object(self) -> Box<DebugAny + Send> { Box::new(self) }[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny + Send`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:119:44[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m119[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl<T: DebugAny + Sync> Implements<DebugAny + Sync> for T {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                           [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny + Sync`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:120:33[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m120[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn into_object(self) -> Box<DebugAny + Sync> { Box::new(self) }[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny + Sync`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:123:51[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m123[0m[0m [0m[0m[1m[38;5;12m| [0m[0munsafe impl<T: DebugAny + Send + Sync> Implements<DebugAny + Send + Sync> for T {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                                  [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny + Send + Sync`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: trait objects without an explicit `dyn` are deprecated[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/internals.rs:124:33[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m124[0m[0m [0m[0m[1m[38;5;12m| [0m[0m    fn into_object(self) -> Box<DebugAny + Send + Sync> { Box::new(self) }[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                                [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mhelp: use `dyn`: `dyn DebugAny + Send + Sync`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>[0m

[0m[1m[38;5;9merror[0m[0m[1m: defaults for type parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0msrc/lib.rs:185:18[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m185[0m[0m [0m[0m[1m[38;5;12m| [0m[0mimpl<'a, K: Key, A: ?Sized + UnsafeAnyExt + 'a = UnsafeAny> Entry<'a, K, A> {[0m
[0m    [0m[0m[1m[38;5;12m| [0m[0m                 [0m[0m[1m[38;5;9m^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[deny(invalid_type_param_default)]` on by default[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mwarning[0m[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release![0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: for more information, see issue #36887 <https://github.com/rust-lang/rust/issues/36887>[0m

[0m[0m[1m[31merror[0m[1m:[0m could not compile `typemap` due to 59 previous errors
2024-06-21 17:57:09.751156 |ERROR| [rudra-progress] Finished with non-zero exit code
"
************************************
