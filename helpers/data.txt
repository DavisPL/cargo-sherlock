
---
classification: HIGH
subtitle: phonenumber:  panic on parsing crafted phonenumber inputs
reported: July  7, 2024
issued: September  5, 2024
package: {'name': 'phonenumber(crates.io)', 'url': '/packages/phonenumber.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2024-39697', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697'}, {'text': 'GHSA-mjw4-jj88-v687', 'url': 'https://github.com/advisories/GHSA-mjw4-jj88-v687'}]
references: [{'text': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687', 'url': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.3.6
unaffected: ['The phonenumber parsing code may panic due to a reachableassert!guard on the phonenumber string.', 'In a typical deployment of rust-phonenumber, this may get triggered by feeding a maliciously crafted phonenumber, e.g. over the network, specifically strings of the form+dwPAA;phone-context=AA, where the "number" part potentially parses as a number larger than 2^56.', 'Since f69abee1/0.3.4/#52.', '0.2.x series is not affected.']
affected functions: Version
phonenumber::parse: *
description: 
References: ['Patches have been published as version0.3.6+8.13.36.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: phonenumber;;parse
version_of_Affected: *

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-index(crates.io)', 'url': '/packages/gix-index.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.33.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-worktree(crates.io)', 'url': '/packages/gix-worktree.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.34.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-fs(crates.io)', 'url': '/packages/gix-fs.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.11.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Slow loris vulnerability with default configuration
reported: March 15, 2024
issued: May 20, 2024(last modified: May 21, 2024)
package: {'name': 'tls-listener(crates.io)', 'url': '/packages/tls-listener.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2024-28854', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28854'}, {'text': 'GHSA-2qph-qpvm-2qf7', 'url': 'https://github.com/advisories/GHSA-2qph-qpvm-2qf7'}]
references: [{'text': 'https://github.com/tmccombs/tls-listener/security/advisories/GHSA-2qph-qpvm-2qf7', 'url': 'https://github.com/tmccombs/tls-listener/security/advisories/GHSA-2qph-qpvm-2qf7'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.10.0
affected functions: Version
tls_listener::tlslistener::new: <0.10.0
description: tls-listener is a rust lang wrapper around a connection listener to support TLS. With the default configuration of tls-listener, a malicious user can open 6.4TcpStreams a second, sending 0 bytes, and can trigger a DoS. The default configuration options make any public service usingTlsListener::new()vulnerable to a slow-loris DoS attack. This impacts any publicly accessible service using the default configuration of tls-listener in versions prior to 0.10.0. Users are advised to upgrade. Users unable to upgrade may mitigate this by passing a large value, such asusize::MAXas the parameter toBuilder::max_handshakes. Advisory available underCC0-1.0license.
affected_functions: tls_listener;;tlslistener;;new
version_of_Affected: <0.10.0

---
classification: HIGH
subtitle: rustls::ConnectionCommon::complete_iocould fall into an infinite loop based on network input
reported: April 19, 2024
issued: April 19, 2024
package: {'name': 'rustls(crates.io)', 'url': '/packages/rustls.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2024-32650', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32650'}, {'text': 'GHSA-6g7w-8wpp-frhj', 'url': 'https://github.com/advisories/GHSA-6g7w-8wpp-frhj'}]
references: [{'text': 'https://github.com/rustls/rustls/security/advisories/GHSA-6g7w-8wpp-frhj', 'url': 'https://github.com/rustls/rustls/security/advisories/GHSA-6g7w-8wpp-frhj'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.23.5>=0.22.4, <0.23.0>=0.21.11, <0.22.0
affected functions: Version
rustls::connectioncommon::complete_io: <=0.23.4<=0.22.3<=0.21.10^0.20
description: If aclose_notifyalert is received during a handshake,complete_iodoes not terminate. Callers which do not callcomplete_ioare not affected. rustls-tokioandrustls-ffido not callcomplete_ioand are not affected. rustls::Streamandrustls::StreamOwnedtypes usecomplete_ioand are affected. Advisory available underCC0-1.0license.
affected_functions: rustls;;connectioncommon;;complete_io
version_of_Affected: <=0.23.4<=0.22.3<=0.21.10^0.20

---
classification: HIGH
subtitle: blurhash: panic on parsing crafted blurhash inputs
reported: September 19, 2023
issued: March  2, 2024
package: {'name': 'blurhash(crates.io)', 'url': '/packages/blurhash.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-42447', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447'}]
references: [{'text': 'https://github.com/whisperfish/blurhash-rs/security/advisories/GHSA-cxvp-82cq-57h2', 'url': 'https://github.com/whisperfish/blurhash-rs/security/advisories/GHSA-cxvp-82cq-57h2'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.2.0
affected functions: Version
blurhash::decode: *
description: The blurhash parsing code may panic due to multiple panic-guarded out-of-bounds accesses on untrusted input. In a typical deployment, this may get triggered by feeding a maliciously crafted blurhashes over the network. These may include: The patches were released under version 0.2.0, which may require user intervention because of slight API churn. Advisory available underCC0-1.0license.
affected_functions: blurhash;;decode
version_of_Affected: *

---
classification: HIGH
subtitle: phonenumber:  panic on parsing crafted RF3966 phonenumber inputs
reported: September 19, 2023
issued: February 29, 2024
package: {'name': 'phonenumber(crates.io)', 'url': '/packages/phonenumber.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-42444', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444'}]
references: [{'text': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2', 'url': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.2.5, <0.3.0>=0.3.3
affected functions: Version
phonenumber::parse: *
description: 
unaffected: ['The phonenumber parsing code may panic due to a panic-guarded out-of-bounds access on the phonenumber string.', 'In a typical deployment ofrust-phonenumber, this may get triggered by feeding a maliciously crafted phonenumber over the network, specifically the string.;phone-context=.']
References: ['Patches will be published as version0.3.3+8.13.9and backported as0.2.5+8.11.3.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: phonenumber;;parse
version_of_Affected: *

---
classification: HIGH
subtitle: Memory corruption, denial of service, and arbitrary code execution in libgit2
reported: February  6, 2024
issued: February  9, 2024(last modified: February 14, 2024)
package: {'name': 'libgit2-sys(crates.io)', 'url': '/packages/libgit2-sys.html'}
type: Vulnerability
categories: ['denial-of-service', 'code-execution', 'memory-corruption']
aliases: [{'text': 'GHSA-22q8-ghmq-63vf', 'url': 'https://github.com/advisories/GHSA-22q8-ghmq-63vf'}]
references: [{'text': 'https://github.com/rust-lang/git2-rs/pull/1017', 'url': 'https://github.com/rust-lang/git2-rs/pull/1017'}, {'text': 'https://github.com/libgit2/libgit2/releases/tag/v1.7.2', 'url': 'https://github.com/libgit2/libgit2/releases/tag/v1.7.2'}]
related: CVE-2024-24575CVE-2024-24577GHSA-54mf-x2rh-hq9vGHSA-j2v7-4f6v-gpg8
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L
patched: >=0.16.2
affected functions: Version
libgit2_sys::git_index_add: <0.16.2
libgit2_sys::git_revparse_single: <0.16.2, >=0.13.0
description: Thelibgit2project fixed three security issues in the 1.7.2 release. These issues are: Thelibgit2-syscrate bundles libgit2, or optionally links to a system libgit2 library. In either case, versions of the libgit2 library less than 1.7.2 are vulnerable. The 0.16.2 release oflibgit2-sysbundles the fixed version of 1.7.2, and requires a system libgit2 version of at least 1.7.2. It is recommended that all users upgrade. Advisory available underCC0-1.0license.
affected_functions: libgit2_sys;;git_index_add
version_of_Affected: <0.16.2

---
classification: HIGH
subtitle: KyberSlash: division timings depending on secrets
reported: December  1, 2023
issued: February  9, 2024(last modified: April 12, 2024)
package: {'name': 'pqc_kyber(crates.io)', 'url': '/packages/pqc_kyber.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'GHSA-x5j2-g63m-f8g4', 'url': 'https://github.com/advisories/GHSA-x5j2-g63m-f8g4'}]
references: [{'text': 'https://github.com/Argyle-Software/kyber/issues/108', 'url': 'https://github.com/Argyle-Software/kyber/issues/108'}, {'text': 'https://kyberslash.cr.yp.to/faq.html', 'url': 'https://kyberslash.cr.yp.to/faq.html'}, {'text': 'https://kyberslash.cr.yp.to/libraries.html', 'url': 'https://kyberslash.cr.yp.to/libraries.html'}, {'text': 'https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6', 'url': 'https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: no patched versions
description: Various Kyber software libraries in various environments leak secret information into timing, specifically because The KyberSlash pages track which Kyberlibrarieshave this issue, and include aFAQabout the issue. The KyberSlash pages were written by Daniel J. Bernstein. The FAQ originally said "I", but some people seemed to have trouble finding this authorship statement, so the FAQ now says "Bernstein" instead. The permanent link for the KyberSlash pages ishttps://kyberslash.cr.yp.to. The issue has not been resolved in the upstreampqc_kybercrate. A third-party fork that mitigates this attack vector has been published assafe_pqc_kyber. Theml-kemcrate is a maintained
alternative pure Rust implementation of ML-KEM / Kyber. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Infinite decoding loop through specially crafted payload
reported: December  8, 2023
issued: December  9, 2023
package: {'name': 'candid(crates.io)', 'url': '/packages/candid.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-6245', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6245'}, {'text': 'GHSA-7787-p7x6-fq3j', 'url': 'https://github.com/advisories/GHSA-7787-p7x6-fq3j'}]
references: [{'text': 'https://github.com/dfinity/candid/pull/478', 'url': 'https://github.com/dfinity/candid/pull/478'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.9.10
unaffected: ['Rust canisters using candid< 0.9.0or>= 0.9.10', 'Rust canister interfaces of type other thanrecord { * }', 'Motoko based canisters', 'dfx (for asset canister)<= 0.14.3or>= 0.15.2']
affected functions: Version
candid::decode: >=0.9.0, <0.9.10
description: The Candid library causes a Denial of Service while parsing a specially crafted payload withemptydata type. For example, if the payload isrecord { * ; empty }and  the canister interface expectsrecord { * }then the rust candid decoder treatsemptyas an extra field required by the type.  The problem with typeemptyis that the candid rust library wrongly categorizesemptyas a recoverable error when skipping the field and thus causing an infinite decoding loop. Canisters using affected versions of candid are exposed to denial of service by causing the decoding to run indefinitely until the canister traps due to reaching maximum instruction limit per execution round. Repeated exposure to the payload will result in degraded performance of the canister. For asset canister users,dfxversions>= 0.14.4to<= 0.15.2-beta.0ships asset canister with an affected version of candid.
References: ['GitHub Security Advisory (GHSA-7787-p7x6-fq3j)', {'text': 'GitHub Security Advisory (GHSA-7787-p7x6-fq3j)', 'url': 'https://github.com/dfinity/candid/security/advisories/GHSA-7787-p7x6-fq3j'}, 'dfinity/candid/pull/478', {'text': 'dfinity/candid/pull/478', 'url': 'https://github.com/dfinity/candid/pull/478'}, 'Candid Library Reference', {'text': 'Candid Library Reference', 'url': 'https://internetcomputer.org/docs/current/references/candid-ref'}, 'Candid Specification', {'text': 'Candid Specification', 'url': 'https://github.com/dfinity/candid/blob/master/spec/Candid.md'}, 'Internet Computer Specification', {'text': 'Internet Computer Specification', 'url': 'https://internetcomputer.org/docs/current/references/ic-interface-spec'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: candid;;decode
version_of_Affected: >=0.9.0, <0.9.10

---
classification: HIGH
subtitle: Tungstenite allows remote attackers to cause a denial of service
reported: September 25, 2023
issued: September 29, 2023
package: {'name': 'tungstenite(crates.io)', 'url': '/packages/tungstenite.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2023-43669', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-43669'}, {'text': 'GHSA-9mcr-873m-xcxp', 'url': 'https://github.com/advisories/GHSA-9mcr-873m-xcxp'}]
references: [{'text': 'https://github.com/snapview/tungstenite-rs/issues/376', 'url': 'https://github.com/snapview/tungstenite-rs/issues/376'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.20.1
description: The Tungstenite crate through 0.20.0 for Rust allows remote attackers to cause
a denial of service (minutes of CPU consumption) via an excessive length of an
HTTP header in a client handshake. The length affects both how many times a parse
is attempted (e.g., thousands of times) and the average amount of data for each
parse attempt (e.g., millions of bytes). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service in Quinn servers
reported: September 21, 2023
issued: September 21, 2023(last modified: February 10, 2024)
package: {'name': 'quinn-proto(crates.io)', 'url': '/packages/quinn-proto.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-42805', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42805'}, {'text': 'GHSA-q8wc-j5m9-27w3', 'url': 'https://github.com/advisories/GHSA-q8wc-j5m9-27w3'}]
references: [{'text': 'https://github.com/quinn-rs/quinn/pull/1667', 'url': 'https://github.com/quinn-rs/quinn/pull/1667'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: ^0.9.5>=0.10.5
description: Receiving QUIC frames containing a frame with unknown frame type could lead to a panic.
Unfortunately this is issue was not found by our fuzzing infrastructure. Thanks to the QUIC Tester research group for reporting this issue. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: BER/CER/DER decoder panics on invalid input
reported: September 13, 2023
issued: September 13, 2023(last modified: February 10, 2024)
package: {'name': 'bcder(crates.io)', 'url': '/packages/bcder.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-39914', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-39914'}, {'text': 'GHSA-6jmw-6mxw-w4jc', 'url': 'https://github.com/advisories/GHSA-6jmw-6mxw-w4jc'}]
references: [{'text': 'https://nlnetlabs.nl/downloads/bcder/CVE-2023-39914.txt', 'url': 'https://nlnetlabs.nl/downloads/bcder/CVE-2023-39914.txt'}, {'text': 'https://github.com/NLnetLabs/bcder/pull/74', 'url': 'https://github.com/NLnetLabs/bcder/pull/74'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.7.3
description: Due to insufficient checking of input data, decoding certain data sequences
can lead tobcderpanicking rather than returning an error. This can affect
both the actual decoding stage as well as accessing content of types that
utilized delayed decoding. bcder 0.7.3 fixes these issues by more thoroughly checking inputs and
returning errors as expected. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: rustls-webpki: CPU denial of service in certificate path building
reported: August 22, 2023
issued: August 22, 2023(last modified: August 27, 2023)
package: {'name': 'rustls-webpki(crates.io)', 'url': '/packages/rustls-webpki.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'GHSA-fh2r-99q2-6mmg', 'url': 'https://github.com/advisories/GHSA-fh2r-99q2-6mmg'}]
related: CVE-2018-16875
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.100.2, <0.101.0>=0.101.4
description: When this crate is given a pathological certificate chain to validate, it will
spend CPU time exponential with the number of candidate certificates at each
step of path building. Both TLS clients and TLS servers that accept client certificate are affected. We now give each path building operation a budget of 100 signature verifications. The originalwebpkicrate is also affected. This was previously reported in the original cratehttps://github.com/briansmith/webpki/issues/69and re-reported to us
recently by Luke Malinowski. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: webpki: CPU denial of service in certificate path building
reported: August 22, 2023
issued: August 22, 2023(last modified: September 30, 2023)
package: {'name': 'webpki(crates.io)', 'url': '/packages/webpki.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'GHSA-8qv2-5vq6-g2g7', 'url': 'https://github.com/advisories/GHSA-8qv2-5vq6-g2g7'}]
related: CVE-2018-16875
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.22.2
description: When this crate is given a pathological certificate chain to validate, it will
spend CPU time exponential with the number of candidate certificates at each
step of path building. Both TLS clients and TLS servers that accept client certificate are affected. This was previously reported inhttps://github.com/briansmith/webpki/issues/69and re-reported recently
by Luke Malinowski. webpki 0.22.1 included a partial fix and webpki 0.22.2 added further fixes. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: libsqlite3-sysvia C SQLite CVE-2022-35737
reported: August  3, 2022
issued: February 14, 2023(last modified: June 13, 2023)
package: {'name': 'libsqlite3-sys(crates.io)', 'url': '/packages/libsqlite3-sys.html'}
type: Vulnerability
categories: ['denial-of-service', 'code-execution']
aliases: [{'text': 'CVE-2022-35737', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-35737'}, {'text': 'GHSA-jw36-hf63-69r9', 'url': 'https://github.com/advisories/GHSA-jw36-hf63-69r9'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2022-35737', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2022-35737'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.25.1
description: It was sometimes possible for SQLite versions >= 1.0.12, < 3.39.2 to allow an array-bounds overflow when large string were input into SQLite'sprintffunction. Aslibsqlite3-sysbundles SQLite, it is susceptible to the vulnerability.libsqlite3-syswas updated to bundle the patched version of SQLitehere. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: evm incorrect state transition
reported: October 25, 2022
issued: February  2, 2023
package: {'name': 'evm(crates.io)', 'url': '/packages/evm.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-39354', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39354'}, {'text': 'GHSA-hhc4-47rh-cr34', 'url': 'https://github.com/advisories/GHSA-hhc4-47rh-cr34'}]
references: [{'text': 'https://github.com/rust-blockchain/evm/pull/133', 'url': 'https://github.com/rust-blockchain/evm/pull/133'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.36.0
description: SputnikVM, also called evm, is a Rust implementation of Ethereum Virtual Machine. A custom stateful precompile can use theis_staticparameter to determine if
the call is executed in a static context (viaSTATICCALL), and thus decide
if stateful operations should be done. Prior to version 0.36.0, the passedis_staticparameter was incorrect -- it
was only set totrueif the call came from a directSTATICCALLopcode. However, once a static call context is entered, it should stay static. The issue
only impacts custom precompiles that actually usesis_static. For those affected, the issue can lead to possible incorrect state transitions. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Slack OAuth Secrets leak in debug logs
reported: July 22, 2022
issued: February  2, 2023
package: {'name': 'slack-morphism(crates.io)', 'url': '/packages/slack-morphism.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2022-31162', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-31162'}, {'text': 'GHSA-99j7-mhfh-w84p', 'url': 'https://github.com/advisories/GHSA-99j7-mhfh-w84p'}]
references: [{'text': 'https://github.com/abdolence/slack-morphism-rust/pull/133', 'url': 'https://github.com/abdolence/slack-morphism-rust/pull/133'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.41.0
description: Debug log formatting made it possible to leak OAuth secrets into debug logs. The patched version has introduced more strict checks to avoid this. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: matrix-sdk Impersonation of room keys
reported: September 29, 2022
issued: February  2, 2023
package: {'name': 'matrix-sdk-crypto(crates.io)', 'url': '/packages/matrix-sdk-crypto.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2022-39252', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39252'}, {'text': 'GHSA-vp68-2wrm-69qm', 'url': 'https://github.com/advisories/GHSA-vp68-2wrm-69qm'}]
references: [{'text': 'https://github.com/matrix-org/matrix-rust-sdk/commit/093fb5d0aa21c0b5eaea6ec96b477f1075271cbb', 'url': 'https://github.com/matrix-org/matrix-rust-sdk/commit/093fb5d0aa21c0b5eaea6ec96b477f1075271cbb'}, {'text': 'https://github.com/matrix-org/matrix-rust-sdk/commit/41449d2cc360e347f5d4e1c154ec1e3185f11acd', 'url': 'https://github.com/matrix-org/matrix-rust-sdk/commit/41449d2cc360e347f5d4e1c154ec1e3185f11acd'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.6.0
description: When the user receives a forwarded room key, the software accepts it without
checking who the room key came from. This allows homeservers to try to insert
room keys of questionable validity, potentially mounting an impersonation attack. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: libp2p Lack of resource management DoS
reported: July 12, 2022
issued: February  2, 2023
package: {'name': 'libp2p(crates.io)', 'url': '/packages/libp2p.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2022-23486', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23486'}, {'text': 'GHSA-jvgw-gccv-q5p8', 'url': 'https://github.com/advisories/GHSA-jvgw-gccv-q5p8'}]
references: [{'text': 'https://github.com/libp2p/rust-libp2p/security/advisories/GHSA-jvgw-gccv-q5p8', 'url': 'https://github.com/libp2p/rust-libp2p/security/advisories/GHSA-jvgw-gccv-q5p8'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.45.1
description: libp2p allows a potential attacker to cause victim p2p node to run out of memory The out of memory failure can cause crashes where libp2p is intended to be used
within large scale networks leading to potential Denial of Service (DoS) vector Users should upgrade or reference theDoS mitigation strategies. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Bug in Wasmtime implementation of pooling instance allocator
reported: November 10, 2022
issued: January 12, 2023(last modified: March 16, 2023)
package: {'name': 'wasmtime(crates.io)', 'url': '/packages/wasmtime.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2022-39392', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39392'}, {'text': 'GHSA-44mr-8vmm-wjhg', 'url': 'https://github.com/advisories/GHSA-44mr-8vmm-wjhg'}]
references: [{'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-44mr-8vmm-wjhg', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-44mr-8vmm-wjhg'}, {'text': 'https://github.com/bytecodealliance/wasmtime/commit/e60c3742904ccbb3e26da201c9221c38a4981d72', 'url': 'https://github.com/bytecodealliance/wasmtime/commit/e60c3742904ccbb3e26da201c9221c38a4981d72'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: >=1.0.2, <2.0.0>=2.0.2
affected functions: Version
wasmtime::config::allocation_strategy: <1.0.2
wasmtime::poolingallocationconfig::instance_memory_pages: >=2.0.0, <2.0.2
description: Bug in Wasmtime's implementation of its pooling instance allocator when the allocator is configured to give WebAssembly instances a maximum of zero pages of memory. In this configuration, the virtual memory mapping for WebAssembly memories did not meet the compiler-required configuration requirements for safely executing WebAssembly modules. Wasmtime's default settings require virtual memory page faults to indicate that wasm reads/writes are out-of-bounds, but the pooling allocator's configuration would not create an appropriate virtual memory mapping for this meaning out of bounds reads/writes can successfully read/write memory unrelated to the wasm sandbox within range of the base address of the memory mapping created by the pooling allocator. This bug is not applicable with the default settings of thewasmtimecrate. This bug can only be triggered by settingInstanceLimits::memory_pagesto zero. This is expected to be a very rare configuration since this means that wasm modules cannot allocate any pages of linear memory. All wasm modules produced by all current toolchains are highly likely to use linear memory, so it's expected to be unlikely that this configuration is set to zero by any production embedding of Wasmtime. Advisory available underCC0-1.0license.
affected_functions: wasmtime;;config;;allocation_strategy
version_of_Affected: <1.0.2

---
classification: HIGH
subtitle: Denial of Service from unchecked request length
reported: October 30, 2022
issued: November  3, 2022
package: {'name': 'conduit-hyper(crates.io)', 'url': '/packages/conduit-hyper.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'GHSA-9398-5ghf-7pr6', 'url': 'https://github.com/advisories/GHSA-9398-5ghf-7pr6'}, {'text': 'CVE-2022-39294', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39294'}]
references: [{'text': 'https://github.com/conduit-rust/conduit-hyper/security/advisories/GHSA-9398-5ghf-7pr6', 'url': 'https://github.com/conduit-rust/conduit-hyper/security/advisories/GHSA-9398-5ghf-7pr6'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.2
unaffected: <0.2.0-alpha.3
description: Prior to version 0.4.2,conduit-hyperdid not check any limit on a request's
length before callinghyper::body::to_bytes. An attacker could send a
malicious request with an abnormally largeContent-Length, which could lead
to a panic if memory allocation failed for that request. In version 0.4.2,conduit-hypersets an internal limit of 128 MiB per
request, otherwise returning status 400 ("Bad Request"). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Multiple vulnerabilities resulting in out-of-bounds writes
reported: September  7, 2022
issued: October 30, 2022(last modified: June 13, 2023)
package: {'name': 'linked_list_allocator(crates.io)', 'url': '/packages/linked_list_allocator.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2022-36086', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36086'}, {'text': 'GHSA-xg8p-34w2-j49j', 'url': 'https://github.com/advisories/GHSA-xg8p-34w2-j49j'}]
references: [{'text': 'https://github.com/advisories/GHSA-xg8p-34w2-j49j', 'url': 'https://github.com/advisories/GHSA-xg8p-34w2-j49j'}]
cvss score: 8.4HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.10.2
description: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service on deeply nested fragment requests
reported: July 21, 2022
issued: August  3, 2022(last modified: August  6, 2022)
package: {'name': 'async-graphql(crates.io)', 'url': '/packages/async-graphql.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'GHSA-xq3c-8gqm-v648', 'url': 'https://github.com/advisories/GHSA-xq3c-8gqm-v648'}]
references: [{'text': 'https://github.com/async-graphql/async-graphql/commit/521769b80039fc8043d1c9883e3d6e5b57359072', 'url': 'https://github.com/async-graphql/async-graphql/commit/521769b80039fc8043d1c9883e3d6e5b57359072'}]
related: GHSA-4rx6-g5vg-5f3j
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=4.0.6
description: Deeply nested fragments in a GraphQL request may cause a stack overflow in the server. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service on deeply nested fragment requests
reported: July 28, 2022
issued: August  3, 2022
package: {'name': 'juniper(crates.io)', 'url': '/packages/juniper.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'GHSA-4rx6-g5vg-5f3j', 'url': 'https://github.com/advisories/GHSA-4rx6-g5vg-5f3j'}, {'text': 'CVE-2022-31173', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-31173'}]
references: [{'text': 'https://github.com/graphql-rust/juniper/security/advisories/GHSA-4rx6-g5vg-5f3j', 'url': 'https://github.com/graphql-rust/juniper/security/advisories/GHSA-4rx6-g5vg-5f3j'}]
related: GHSA-xq3c-8gqm-v648
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.15.10
description: Deeply nested fragments in a GraphQL request may cause a stack overflow in the server. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Resource leakage when decoding certificates and keys
reported: May  3, 2022
issued: May 19, 2022(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2022-1473', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1473'}, {'text': 'GHSA-g323-fr93-4j3c', 'url': 'https://github.com/advisories/GHSA-g323-fr93-4j3c'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20220503.txt', 'url': 'https://www.openssl.org/news/secadv/20220503.txt'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=300.0.6
unaffected: <300.0
description: TheOPENSSL_LH_flush()function, which empties a hash table, contains
a bug that breaks reuse of the memory occupied by the removed hash
table entries. This function is used when decoding certificates or keys. If a long lived
process periodically decodes certificates or keys its memory usage will
expand without bounds and the process might be terminated by the operating
system causing a denial of service. Also traversing the empty hash table
entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers
configured to accept client certificate authentication. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Regexes with large repetitions on empty sub-expressions take a very long time to parse
reported: March  8, 2022
issued: March  8, 2022(last modified: June 13, 2023)
package: {'name': 'regex(crates.io)', 'url': '/packages/regex.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2022-24713', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24713'}, {'text': 'GHSA-m5pq-gvj9-9vr8', 'url': 'https://github.com/advisories/GHSA-m5pq-gvj9-9vr8'}]
references: [{'text': 'https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw', 'url': 'https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.5.5
description: The Rust Security Response WG was notified that theregexcrate did not
properly limit the complexity of the regular expressions (regex) it parses. An
attacker could use this security issue to perform a denial of service, by
sending a specially crafted regex to a service accepting untrusted regexes. No
known vulnerability is present when parsing untrusted input with trusted
regexes. This issue has been assigned CVE-2022-24713. The severity of this vulnerability
is "high" when theregexcrate is used to parse untrusted regexes. Other uses
of theregexcrate are not affected by this vulnerability. Theregexcrate features built-in mitigations to prevent denial of service
attacks caused by untrusted regexes, or untrusted input matched by trusted
regexes. Those (tunable) mitigations already provide sane defaults to prevent
attacks. This guarantee is documented and it's considered part of the crate's
API. Unfortunately a bug was discovered in the mitigations designed to prevent
untrusted regexes to take an arbitrary amount of time during parsing, and it's
possible to craft regexes that bypass such mitigations. This makes it possible
to perform denial of service attacks by sending specially crafted regexes to
services accepting user-controlled, untrusted regexes. All versions of theregexcrate before or equal to 1.5.4 are affected by this
issue. The fix is include starting fromregex1.5.5. We recommend everyone accepting user-controlled regexes to upgrade immediately
to the latest version of theregexcrate. Unfortunately there is no fixed set of problematic regexes, as there are
practically infinite regexes that could be crafted to exploit this
vulnerability. Because of this, we do not recommend denying known problematic
regexes. We want to thank Addison Crump for responsibly disclosing this to us according
to theRust security policy, and for helping review the fix. We also want to thank Andrew Gallant for developing the fix, and Pietro Albini
for coordinating the disclosure and writing this advisory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Time-of-check time-of-use race condition can allow attacker to delete files they do not have access to delete
reported: January 16, 2022
issued: January 21, 2022
package: {'name': 'std', 'url': '/packages/std.html'}
type: Vulnerability
categories: ['file-disclosure']
references: [{'text': 'https://blog.rust-lang.org/2022/01/20/cve-2022-21658.html', 'url': 'https://blog.rust-lang.org/2022/01/20/cve-2022-21658.html'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityHigh
privileges required: Low
user interaction: None
scope: Changed
confidentiality: None
integrity: Low
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:N/I:L/A:H
patched: >=1.58.1
affected functions: Version
std::fs::remove_dir_all: <1.58.1
description: In the standard library in Rust before 1.58.1, an attacker with unprivileged access to a system could trick a privileged program usingstd::fs::remove_dir_allinto deleting files they don't have access to delete by creating a symlink in a directory that would be removed by astd::fs::remove_dir_allcall due to a Time-of-check time-of-use race condition around this function's check for symbolic links. The function should remove the symbolic links rather than recursively deleting the linked file or directory. Advisory available underCC0-1.0license.
affected_functions: std;;fs;;remove_dir_all
version_of_Affected: <1.58.1

---
classification: HIGH
subtitle: Improper Synchronization and Race Condition in vm-memory
reported: June  2, 2020
issued: September 10, 2021
package: {'name': 'vm-memory(crates.io)', 'url': '/packages/vm-memory.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-13759', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-13759'}, {'text': 'GHSA-mm4m-qg48-f7wc', 'url': 'https://github.com/advisories/GHSA-mm4m-qg48-f7wc'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2020-13759', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2020-13759'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.1^0.1.1
description: rust-vmm vm-memory before 0.1.1 and 0.2.x before 0.2.1 allows attackers to cause a denial of service (loss of IP networking) because read_obj and write_obj do not properly access memory. This affects aarch64 (with musl or glibc) and x86_64 (with musl). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Permissions bypass in pleaser
reported: May 27, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2021-31155', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31155'}, {'text': 'GHSA-vc5p-j8vw-mc6x', 'url': 'https://github.com/advisories/GHSA-vc5p-j8vw-mc6x'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31155', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31155'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4
description: Failure to normalize the umask in pleaser before 0.4 allows a local attacker to gain full root privileges if they are allowed to execute at least one command. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Permissions bypass in pleaser
reported: May 27, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2021-31154', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31154'}, {'text': 'GHSA-pp74-39w2-v4w9', 'url': 'https://github.com/advisories/GHSA-pp74-39w2-v4w9'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31154', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31154'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4
description: pleaseedit in pleaser before 0.4 uses predictable temporary filenames in /tmp and the target directory. This allows a local attacker to gain full root privileges by staging a symlink attack. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Uncontrolled Search Path Element in sharkdp/bat
reported: July 15, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'bat(crates.io)', 'url': '/packages/bat.html'}
type: Vulnerability
categories: ['code-execution']
aliases: [{'text': 'CVE-2021-36753', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36753'}, {'text': 'GHSA-p24j-h477-76q3', 'url': 'https://github.com/advisories/GHSA-p24j-h477-76q3'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36753', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36753'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.18.2
affected oses: windows
description: bat on windows before 0.18.2 executes programs named less.exe from the current working directory. This can lead to unintended code execution. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Relative Path Traversal in git-delta
reported: July 12, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'git-delta(crates.io)', 'url': '/packages/git-delta.html'}
type: Vulnerability
categories: ['file-disclosure']
aliases: [{'text': 'CVE-2021-36376', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36376'}, {'text': 'GHSA-5xg3-j2j6-rcx4', 'url': 'https://github.com/advisories/GHSA-5xg3-j2j6-rcx4'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36376', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36376'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.8.3
affected oses: windows
description: git-delta before 0.8.3 on Windows resolves an executable's pathname as a relative path from the current directory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Read buffer overruns processing ASN.1 strings
reported: August 24, 2021
issued: August 24, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service', 'crypto-failure']
aliases: [{'text': 'CVE-2021-3712', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3712'}, {'text': 'GHSA-q9wj-f4qw-6vfj', 'url': 'https://github.com/advisories/GHSA-q9wj-f4qw-6vfj'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210824.txt', 'url': 'https://www.openssl.org/news/secadv/20210824.txt'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H
patched: >=111.16
description: ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING
structure which contains a buffer holding the string data and a field holding
the buffer length. This contrasts with normal C strings which are represented as
a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's
own "d2i" functions (and other similar parsing functions) as well as any string
whose value has been set with the ASN1_STRING_set() function will additionally
NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING
structures which do not NUL terminate the byte array by directly setting the
"data" and "length" fields in the ASN1_STRING array. This can also happen by
using theASN1_STRING_set0()function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that
the ASN1_STRING byte array will be NUL terminated, even though this is not
guaranteed for strings that have been directly constructed. Where an application
requests an ASN.1 structure to be printed, and where that ASN.1 structure
contains ASN1_STRINGs that have been directly constructed by the application
without NUL terminating the "data" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates
(for example if a certificate has been directly constructed by the application
instead of loading it via the OpenSSL parsing functions, and the certificate
contains non NUL terminated ASN1_STRING structures). It can also occur in theX509_get1_email(),X509_REQ_get1_email()andX509_get1_ocsp()functions. If a malicious actor can cause an application to directly construct an
ASN1_STRING and then process it through one of the affected OpenSSL functions
then this issue could be hit. This might result in a crash (causing a Denial of
Service attack). It could also result in the disclosure of private memory
contents (such as private keys, or sensitive plaintext). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Potential request smuggling capabilities due to lack of input validation
reported: June 16, 2021
issued: August 10, 2021(last modified: June 13, 2023)
package: {'name': 'actix-http(crates.io)', 'url': '/packages/actix-http.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-38512', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38512'}, {'text': 'GHSA-8928-2fgm-6x9x', 'url': 'https://github.com/advisories/GHSA-8928-2fgm-6x9x'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: ^2.2.1>=3.0.0-beta.9
description: Affected versions of this crate did not properly detect invalid requests that could allow HTTP/1 request smuggling (HRS) attacks when running alongside a vulnerable front-end proxy server. This can result in leaked internal and/or user data, including credentials, when the front-end proxy is also vulnerable. Popular front-end proxies and load balancers already mitigate HRS attacks so it is recommended that they are also kept up to date; check your specific set up. You should upgrade even if the front-end proxy receives exclusively HTTP/2 traffic and connects to the back-end using HTTP/1; several downgrade attacks are known that can also expose HRS vulnerabilities. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Links in archive can create arbitrary directories
reported: July 19, 2021
issued: August  8, 2021(last modified: June 13, 2023)
package: {'name': 'tar(crates.io)', 'url': '/packages/tar.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2021-38511', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38511'}, {'text': 'GHSA-62jx-8vmh-4mcw', 'url': 'https://github.com/advisories/GHSA-62jx-8vmh-4mcw'}]
references: [{'text': 'https://github.com/alexcrichton/tar-rs/issues/238', 'url': 'https://github.com/alexcrichton/tar-rs/issues/238'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.4.36
affected functions: Version
tar::archive::unpack: <0.4.36
description: When unpacking a tarball that contains a symlink thetarcrate may create
directories outside of the directory it's supposed to unpack into. The function errors when it's trying to create a file, but the folders are
already created at this point. This has been fixed in https://github.com/alexcrichton/tar-rs/pull/259 and is
published astar0.4.36. Thanks to Martin Michaelis (@mgjm) for discovering
and reporting this, and Nikhil Benesch (@benesch) for the fix! Advisory available underCC0-1.0license.
affected_functions: tar;;archive;;unpack
version_of_Affected: <0.4.36

---
classification: HIGH
subtitle: Memory access due to code generation flaw in Cranelift module
reported: May 21, 2021
issued: May 22, 2021(last modified: October 19, 2021)
package: {'name': 'cranelift-codegen(crates.io)', 'url': '/packages/cranelift-codegen.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2021-32629', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32629'}, {'text': 'GHSA-hpqh-2wqx-7qp5', 'url': 'https://github.com/advisories/GHSA-hpqh-2wqx-7qp5'}]
references: [{'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-hpqh-2wqx-7qp5', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-hpqh-2wqx-7qp5'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Changed
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H
patched: >=0.73.1
affected architectures: x86
description: There is a bug in 0.73.0 of the Cranelift x64 backend that can create a
scenario that could result in a potential sandbox escape in a WebAssembly
module. Users of versions 0.73.0 of Cranelift should upgrade to either 0.73.1
or 0.74 to remediate this vulnerability. Users of Cranelift prior to 0.73.0
should update to 0.73.1 or 0.74 if they were not using the old default backend. More details can be found in the GitHub Security Advisory at: https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-hpqh-2wqx-7qp5 Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Integer overflow in CipherUpdate
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2021-23840', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-23840'}, {'text': 'GHSA-qgm6-9472-pwq7', 'url': 'https://github.com/advisories/GHSA-qgm6-9472-pwq7'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210216.txt', 'url': 'https://www.openssl.org/news/secadv/20210216.txt'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.14
description: Calls toEVP_CipherUpdate,EVP_EncryptUpdateandEVP_DecryptUpdatemay overflow
the output length argument in some cases where the input length is close to the
maximum permissable length for an integer on the platform. In such cases the
return value from the function call will be 1 (indicating success), but the
output length value will be negative. This could cause applications to behave
incorrectly or crash. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: CA certificate check bypass with X509_V_FLAG_X509_STRICT
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2021-3450', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3450'}, {'text': 'GHSA-8hfj-xrj2-pm22', 'url': 'https://github.com/advisories/GHSA-8hfj-xrj2-pm22'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210325.txt', 'url': 'https://www.openssl.org/news/secadv/20210325.txt'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: >=111.15
unaffected: <111.11
description: The X509_V_FLAG_X509_STRICT flag enables additional security checks of the
certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in
the chain that have explicitly encoded elliptic curve parameters was added
as an additional strict check. An error in the implementation of this check meant that the result of a
previous check to confirm that certificates in the chain are valid CA
certificates was overwritten. This effectively bypasses the check
that non-CA certificates must not be able to issue other certificates. If a "purpose" has been configured then there is a subsequent opportunity
for checks that the certificate is a valid CA.  All of the named "purpose"
values implemented in libcrypto perform this check.  Therefore, where
a purpose is set the certificate chain will still be rejected even when the
strict flag has been used. A purpose is set by default in libssl client and
server certificate verification routines, but it can be overridden or
removed by an application. In order to be affected, an application must explicitly set the
X509_V_FLAG_X509_STRICT verification flag and either not set a purpose
for the certificate verification or, in the case of TLS client or server
applications, override the default purpose. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Archives may contain uninitialized memory
reported: April 28, 2021
issued: April 29, 2021(last modified: June 13, 2023)
package: {'name': 'rkyv(crates.io)', 'url': '/packages/rkyv.html'}
type: Vulnerability
categories: ['memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2021-31919', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31919'}, {'text': 'GHSA-w5cr-frph-hw7f', 'url': 'https://github.com/advisories/GHSA-w5cr-frph-hw7f'}]
references: [{'text': 'https://github.com/djkoloski/rkyv/issues/113', 'url': 'https://github.com/djkoloski/rkyv/issues/113'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.6.0
affected functions: Version
rkyv::archive::resolve: <0.6.0
description: rkyvis a serialization framework that writes struct-compatible memory to be stored or
transmitted. During serialization, struct padding bytes and unused enum bytes may not be
initialized. These bytes may be written to disk or sent over unsecured channels. Advisory available underCC0-1.0license.
affected_functions: rkyv;;archive;;resolve
version_of_Affected: <0.6.0

---
classification: HIGH
subtitle: swap_index can write out of bounds and return uninitialized memory
reported: February 24, 2021
issued: March 31, 2021(last modified: June 13, 2023)
package: {'name': 'reorder(crates.io)', 'url': '/packages/reorder.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-29941', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29941'}, {'text': 'CVE-2021-29942', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29942'}, {'text': 'GHSA-3h87-v52r-p9rg', 'url': 'https://github.com/advisories/GHSA-3h87-v52r-p9rg'}, {'text': 'GHSA-jpwg-6gf5-5vh9', 'url': 'https://github.com/advisories/GHSA-jpwg-6gf5-5vh9'}]
references: [{'text': 'https://github.com/tiby312/reorder/issues/1', 'url': 'https://github.com/tiby312/reorder/issues/1'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=1.1.0
description: swap_indextakes an iterator and swaps the items with their corresponding
indexes. It reserves capacity and sets the length of the vector based on the.len()method of the iterator. If thelen()returned by the iterator is larger than the actual number of
elements yielded, thenswap_indexcreates a vector containing uninitialized
members. If thelen()returned by the iterator is smaller than the actual
number of members yielded, thenswap_indexcan write out of bounds past
its allocated vector. As noted by the Rust documentation,len()andsize_hint()are primarily meant for optimization and incorrect values
from their implementations should not lead to memory safety violations. A new version crate was pushed that marks this function as unsafe. reorder = "1.1.0" Previous versions have also been yanked from crates.io. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SliceDeque::drain_filter can double drop an element if the predicate panics
reported: February 19, 2021
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29938', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29938'}, {'text': 'GHSA-p9gf-gmfv-398m', 'url': 'https://github.com/advisories/GHSA-p9gf-gmfv-398m'}]
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/90', 'url': 'https://github.com/gnzlbg/slice_deque/issues/90'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of the crate incremented the current index of the drain filter
iteratorbeforecalling the predicate functionself.pred. If the predicate function panics, it is possible for the last element in the
iterator to be dropped twice. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: StackVec::extend can write out of bounds when size_hint is incorrect
reported: February 19, 2021
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'stackvector(crates.io)', 'url': '/packages/stackvector.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-29939', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29939'}, {'text': 'GHSA-9frf-r7c7-j2vg', 'url': 'https://github.com/advisories/GHSA-9frf-r7c7-j2vg'}]
references: [{'text': 'https://github.com/Alexhuszagh/rust-stackvector/issues/2', 'url': 'https://github.com/Alexhuszagh/rust-stackvector/issues/2'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=1.0.9
description: StackVec::extendused the lower and upper bounds from an Iterator'ssize_hintto determine how many items to push into the stack based vector. If thesize_hintimplementation returned a lower bound that was larger than
the upper bound,StackVecwould write out of bounds and overwrite memory
on the stack. As mentioned by thesize_hintdocumentation,size_hintis mainly for optimization and incorrect
implementations should not lead to memory safety issues. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use after free possible inuri::Formatteron panic
reported: February  9, 2021
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'rocket(crates.io)', 'url': '/packages/rocket.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29935', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29935'}, {'text': 'GHSA-vcw4-8ph6-7vw8', 'url': 'https://github.com/advisories/GHSA-vcw4-8ph6-7vw8'}]
references: [{'text': 'https://github.com/SergioBenitez/Rocket/issues/1534', 'url': 'https://github.com/SergioBenitez/Rocket/issues/1534'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=0.4.7
description: Affected versions of this crate transmuted a&strto a&'static strbefore
pushing it into aStackVec, this value was then popped later in the same
function. This was assumed to be safe because the reference would be valid while the
method's stack was active. In between the push and the pop, however, a functionfwas called that could invoke a user provided function. If the user provided panicked, then the assumption used by the function was no
longer true and the transmute to&'staticwould create an illegal static
reference to the string. This could result in a freed string being used during
(such as in aDropimplementation) or after (e.g throughcatch_unwind) the
panic unwinding. This flaw was corrected in commite325e2fby using a guard object to ensure that the&'static strwas dropped inside
the function. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: PartialReader passes uninitialized memory to user-provided Read
reported: February 17, 2021
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'uu_od(crates.io)', 'url': '/packages/uu_od.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-29934', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29934'}, {'text': 'GHSA-w9vv-q986-vj7x', 'url': 'https://github.com/advisories/GHSA-w9vv-q986-vj7x'}]
references: [{'text': 'https://github.com/uutils/coreutils/issues/1729', 'url': 'https://github.com/uutils/coreutils/issues/1729'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=0.0.4
description: Affected versions of this crate passed an uniniitalized buffer to a
user-providedReadinstance inPartialReader::read. This can result in safeReadimplementations reading from the uninitialized
buffer leading to undefined behavior. The flaw was fixed in commit39d62c6by zero-initializing the passed buffer. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: insert_many can drop elements twice on panic
reported: January 26, 2021
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'insert_many(crates.io)', 'url': '/packages/insert_many.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29933', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29933'}, {'text': 'GHSA-29hg-r7c7-54fr', 'url': 'https://github.com/advisories/GHSA-29hg-r7c7-54fr'}]
references: [{'text': 'https://github.com/rphmeier/insert_many/issues/1', 'url': 'https://github.com/rphmeier/insert_many/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions ofinsert_manyusedptr::copyto move over items in a
vector to make space before inserting, duplicating their ownership. It then
iterated over a providedIteratorto insert the new items. If the iterator's.next()method panics then the vector would drop the same
elements twice. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service through parsing payloads with too big exponent
reported: March 18, 2021
issued: March 24, 2021(last modified: June 13, 2023)
package: {'name': 'parse_duration(crates.io)', 'url': '/packages/parse_duration.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2021-29932', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29932'}, {'text': 'GHSA-qpgv-g792-wh6x', 'url': 'https://github.com/advisories/GHSA-qpgv-g792-wh6x'}]
references: [{'text': 'https://github.com/zeta12ti/parse_duration/issues/21', 'url': 'https://github.com/zeta12ti/parse_duration/issues/21'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
affected functions: Version
parse_duration::parse: *
description: Theparse_duration::parsefunction allows for parsing duration strings with exponents like5e5swhere under the hood, theBigInttype along with thepowfunction are used for such payloads. Passing an arbitrarily big exponent makes theparse_duration::parsefunction to process the payload for a very long time taking up CPU and memory. This allows an attacker to cause a DoS if theparse_duration::parsefunction is used to process untrusted input. Advisory available underCC0-1.0license.
affected_functions: parse_duration;;parse
version_of_Affected: *

---
classification: HIGH
subtitle: panic in user-providedEndianimpl triggers double drop of T
reported: January  4, 2021
issued: March  7, 2021(last modified: June 13, 2023)
package: {'name': 'endian_trait(crates.io)', 'url': '/packages/endian_trait.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-29929', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29929'}, {'text': 'GHSA-vpw8-43wm-rxw5', 'url': 'https://github.com/advisories/GHSA-vpw8-43wm-rxw5'}]
references: [{'text': 'https://gitlab.com/myrrlyn/endian_trait/-/issues/1', 'url': 'https://gitlab.com/myrrlyn/endian_trait/-/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of the crate does not guard against panic from user-provided impl ofEndiantrait, which is a safe trait that users can implement.
If a user-provided implementation of theEndiantrait panics, double-drop is triggered due to the duplicated ownership ofTcreated byptr::read(). Double-drop (or double free) can cause memory corruption in the heap. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: panic safety: double drop or uninitialized drop of T upon panic
reported: January 12, 2021
issued: March  7, 2021(last modified: June 13, 2023)
package: {'name': 'arenavec(crates.io)', 'url': '/packages/arenavec.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-29930', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29930'}, {'text': 'CVE-2021-29931', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29931'}, {'text': 'GHSA-327x-39hh-65wf', 'url': 'https://github.com/advisories/GHSA-327x-39hh-65wf'}, {'text': 'GHSA-955p-rc5h-hg6h', 'url': 'https://github.com/advisories/GHSA-955p-rc5h-hg6h'}]
references: [{'text': 'https://github.com/ibabushkin/arenavec/issues/1', 'url': 'https://github.com/ibabushkin/arenavec/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate did not guard against potential panics that may happen from user-provided functionsT::default()andT::drop(). Panic withinT::default()leads to dropping uninitializedT, when it is invoked fromcommon::Slice::<T, H>::new().
Panic withinT::drop()leads to double drop ofT, when it is invoked either fromcommon::SliceVec::<T, H>::resize_with()orcommon::SliceVec::<T, H>::resize() Either case causes memory corruption in the heap memory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: quinninvalidly assumes the memory layout of std::net::SocketAddr
reported: March  4, 2021
issued: March  4, 2021(last modified: June 13, 2023)
package: {'name': 'quinn(crates.io)', 'url': '/packages/quinn.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2021-28036', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28036'}, {'text': 'GHSA-fhv4-fx3v-77w6', 'url': 'https://github.com/advisories/GHSA-fhv4-fx3v-77w6'}]
references: [{'text': 'https://github.com/quinn-rs/quinn/issues/968', 'url': 'https://github.com/quinn-rs/quinn/issues/968'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: ^0.5.4^0.6.2>=0.7.0
description: Thequinncrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Tape::take_bytes exposes uninitialized memory to a user-provided Read
reported: February 17, 2021
issued: March  1, 2021(last modified: June 13, 2023)
package: {'name': 'truetype(crates.io)', 'url': '/packages/truetype.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-28030', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28030'}, {'text': 'GHSA-v7q4-97x4-4qw2', 'url': 'https://github.com/advisories/GHSA-v7q4-97x4-4qw2'}]
references: [{'text': 'https://github.com/bodoni/truetype/issues/11', 'url': 'https://github.com/bodoni/truetype/issues/11'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.30.1
description: Affected versions of this crate passed an unininitialized buffer to a
user-providedReadinstance inTape::take_bytes. This can result in safeReadimplementations reading from the uninitialized
buffer leading to undefined behavior. The flaw was corrected in commit1f2dc7f37ddby removing the unsafe block
and zero-initializing the buffer. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: arr! macro erases lifetimes
reported: April  9, 2020
issued: March  1, 2021(last modified: June 13, 2023)
package: {'name': 'generic-array(crates.io)', 'url': '/packages/generic-array.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36465', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36465'}, {'text': 'GHSA-3358-4f7f-p4j4', 'url': 'https://github.com/advisories/GHSA-3358-4f7f-p4j4'}]
references: [{'text': 'https://github.com/fizyk20/generic-array/issues/98', 'url': 'https://github.com/fizyk20/generic-array/issues/98'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.8.4, <0.9.0>=0.9.1, <0.10.0>=0.10.1, <0.11.0>=0.11.2, <0.12.0>=0.12.4, <0.13.0>=0.13.3
unaffected: <0.8.0
description: Affected versions of this crate allowed unsoundly extending
lifetimes usingarr!macro. This may result in a variety of
memory corruption scenarios, most likely use-after-free. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use-after-free when cloning a partially consumedVeciterator
reported: November  2, 2020
issued: February 27, 2021(last modified: June 13, 2023)
package: {'name': 'heapless(crates.io)', 'url': '/packages/heapless.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2020-36464', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36464'}, {'text': 'GHSA-qgwf-r2jj-2ccv', 'url': 'https://github.com/advisories/GHSA-qgwf-r2jj-2ccv'}]
references: [{'text': 'https://github.com/japaric/heapless/issues/181', 'url': 'https://github.com/japaric/heapless/issues/181'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.1
affected functions: Version
heapless::vec::intoiter::clone: <=0.6
description: TheIntoIterCloneimplementation clones the whole underlyingVec.
If the iterator is partially consumed the consumed items will be copied, thus creating a use-after-free access. A proof of concept is available in the original bug report. Advisory available underCC0-1.0license.
affected_functions: heapless;;vec;;intoiter;;clone
version_of_Affected: <=0.6

---
classification: HIGH
subtitle: Multiple Transfer-Encoding headers misinterprets request payload
reported: February  5, 2021
issued: February  5, 2021(last modified: October 19, 2021)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
categories: ['format-injection']
keywords: []
aliases: [{'text': 'CVE-2021-21299', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21299'}, {'text': 'GHSA-6hfq-h8hq-87mf', 'url': 'https://github.com/advisories/GHSA-6hfq-h8hq-87mf'}]
references: [{'text': 'https://github.com/hyperium/hyper/security/advisories/GHSA-6hfq-h8hq-87mf', 'url': 'https://github.com/hyperium/hyper/security/advisories/GHSA-6hfq-h8hq-87mf'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.14.3^0.13.10^0.12.36
unaffected: <0.12.0
description: hyper's HTTP server code had a flaw that incorrectly understands some requests
with multiple transfer-encoding headers to have a chunked payload, when it
should have been rejected as illegal. This combined with an upstream HTTP proxy
that understands the request payload boundary differently can result in
"request smuggling" or "desync attacks". Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Queues allow non-Send types to be sent to other threads, allowing data races
reported: December 25, 2020
issued: February  4, 2021(last modified: June 13, 2023)
package: {'name': 'multiqueue(crates.io)', 'url': '/packages/multiqueue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36463', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36463'}, {'text': 'GHSA-jf43-3v8j-qwwr', 'url': 'https://github.com/advisories/GHSA-jf43-3v8j-qwwr'}, {'text': 'GHSA-r2x6-vrxx-jgv4', 'url': 'https://github.com/advisories/GHSA-r2x6-vrxx-jgv4'}]
references: [{'text': 'https://github.com/schets/multiqueue/issues/31', 'url': 'https://github.com/schets/multiqueue/issues/31'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implementedSendfor types used in queue implementations (InnerSend<RW, T>,InnerRecv<RW, T>,FutInnerSend<RW, T>,FutInnerRecv<RW, T>). This allows users to send non-Send types to other threads, which can lead to data race bugs or other undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Send bound needed on T (for Send impl ofBucket2)
reported: November 29, 2020
issued: February  2, 2021(last modified: June 13, 2023)
package: {'name': 'syncpool(crates.io)', 'url': '/packages/syncpool.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36462', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36462'}, {'text': 'GHSA-r88h-6987-g79f', 'url': 'https://github.com/advisories/GHSA-r88h-6987-g79f'}, {'text': 'GHSA-vp6r-mrq9-8f4h', 'url': 'https://github.com/advisories/GHSA-vp6r-mrq9-8f4h'}]
references: [{'text': 'https://github.com/Chopinsky/byte_buffer/issues/2', 'url': 'https://github.com/Chopinsky/byte_buffer/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.6
description: Affected versions of this crate unconditionally implementsSendforBucket2. This allows sending non-Send types to other threads. This can lead to data races when non Send types likeCell<T>orRc<T>are contained insideBucket2and sent across thread boundaries. The data races can potentially lead to memory corruption (as demonstrated in the PoC from the original report issue). The flaw was corrected in commit 15b2828 by adding aT: Sendbound to theSendimpl ofBucket2<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: MvccRwLock allows data races & aliasing violations
reported: December 10, 2020
issued: February  1, 2021(last modified: June 13, 2023)
package: {'name': 'noise_search(crates.io)', 'url': '/packages/noise_search.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36461', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36461'}, {'text': 'GHSA-wxjf-9f4g-3v44', 'url': 'https://github.com/advisories/GHSA-wxjf-9f4g-3v44'}]
references: [{'text': 'https://github.com/pipedown/noise/issues/72', 'url': 'https://github.com/pipedown/noise/issues/72'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forMvccRwLock.
This can lead to data races when types that are either!Sendor!Sync(e.g.Rc<T>,Arc<Cell<_>>) are contained insideMvccRwLockand sent across thread boundaries. The data races can potentially lead to memory corruption (as demonstrated in the PoC from the original report issue). Also, safe APIs ofMvccRwLockallow aliasing violations by allowing&TandLockResult<MutexGuard<Box<T>>>to co-exist in conflicting lifetime regions. The APIs ofMvccRwLockshould either be marked asunsafeorMbccRwLockshould be changed to private or pub(crate). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: IoReader::read(): user-providedReadon uninitialized buffer may cause UB
reported: January 26, 2021
issued: January 31, 2021(last modified: June 13, 2023)
package: {'name': 'ms3d(crates.io)', 'url': '/packages/ms3d.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26952', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26952'}, {'text': 'GHSA-9f5r-vqm5-m342', 'url': 'https://github.com/advisories/GHSA-9f5r-vqm5-m342'}]
references: [{'text': 'https://github.com/andrewhickman/ms3d/issues/1', 'url': 'https://github.com/andrewhickman/ms3d/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.1.3
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. The flaw was fixed in commit 599313b by zero-initializing the buffer (viaself.buf.resize(len, 0)) before passing it toRead. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Readon uninitialized buffer may cause UB (impl Walue for Vec<u8>)
reported: January 30, 2021
issued: January 31, 2021(last modified: June 13, 2023)
package: {'name': 'postscript(crates.io)', 'url': '/packages/postscript.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26953', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26953'}, {'text': 'GHSA-fhvc-gp6c-h2wx', 'url': 'https://github.com/advisories/GHSA-fhvc-gp6c-h2wx'}]
references: [{'text': 'https://github.com/bodoni/postscript/issues/1', 'url': 'https://github.com/bodoni/postscript/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.14.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. This flaw was fixed in commit 8026286 by zero-initializing the buffer before handing to a user-providedRead. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ArcGuard's Send and Sync should have bounds on RC
reported: December  8, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'async-coap(crates.io)', 'url': '/packages/async-coap.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36444', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36444'}, {'text': 'GHSA-9j8q-m9x5-9g6j', 'url': 'https://github.com/advisories/GHSA-9j8q-m9x5-9g6j'}]
references: [{'text': 'https://github.com/google/rust-async-coap/issues/33', 'url': 'https://github.com/google/rust-async-coap/issues/33'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate implement Send/Sync forArcGuard<RC, T>with no trait bounds onRC. This allows users to sendRC: !Sendto other threads and also allows users to concurrently accessRc: !Syncfrom multiple threads. This can result in memory corruption from data race or other undefined behavior caused by sendingT: !Sendto other threads (e.g. droppingMutexGuard<T>in another thread that didn't lock its mutex). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: convec::ConVecunconditionally implements Send/Sync
reported: November 24, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'convec(crates.io)', 'url': '/packages/convec.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36445', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36445'}, {'text': 'GHSA-rpxm-vmr7-5f5f', 'url': 'https://github.com/advisories/GHSA-rpxm-vmr7-5f5f'}]
references: [{'text': 'https://github.com/krl/convec/issues/2', 'url': 'https://github.com/krl/convec/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forConVec<T>.
This allows users to insertTthat is not Send or not Sync. This allows users to create data races by using non-Send types likeArc<Cell<_>>orRc<_>asTinConVec<T>. It is also possible to create data races by using types likeCell<_>orRefCell<_>asT(types that areSendbut notSync).
Such data races can lead to memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: LockWeak<T>allows to create data race toT.
reported: November 14, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'parc(crates.io)', 'url': '/packages/parc.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36454', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36454'}, {'text': 'GHSA-29v7-3v4c-gf38', 'url': 'https://github.com/advisories/GHSA-29v7-3v4c-gf38'}, {'text': 'GHSA-xwxc-j97j-84gf', 'url': 'https://github.com/advisories/GHSA-xwxc-j97j-84gf'}]
references: [{'text': 'https://github.com/hyyking/rustracts/pull/6', 'url': 'https://github.com/hyyking/rustracts/pull/6'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: In the affected versions of this crate,LockWeak<T>unconditionally implementedSendwith no trait bounds onT.LockWeak<T>doesn't ownTand only provides&T. This allows concurrent access to a non-SyncT, which can cause undefined behavior like data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Sharedcan cause a data race
reported: November 10, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'model(crates.io)', 'url': '/packages/model.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-36460', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36460'}, {'text': 'GHSA-mxv6-q98x-h958', 'url': 'https://github.com/advisories/GHSA-mxv6-q98x-h958'}]
references: [{'text': 'https://github.com/spacejam/model/issues/3', 'url': 'https://github.com/spacejam/model/issues/3'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Shareddata structure inmodelcrate implementsSendandSynctraits regardless of the inner type.
This allows safe Rust code to trigger a data race, which is undefined behavior in Rust. Users are advised to treatSharedas an unsafe type.
It should not be used outside of the testing context,
and care must be taken so that the testing code does not have a data race
besides a race condition that is expected to be caught by the test. Checkthe Rustonomiconfor the difference between
a data race and a general race condition. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: dces' World type can cause data races
reported: December  9, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'dces(crates.io)', 'url': '/packages/dces.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36459', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36459'}, {'text': 'GHSA-hxw9-jxqw-jc8j', 'url': 'https://github.com/advisories/GHSA-hxw9-jxqw-jc8j'}]
references: [{'text': 'https://gitlab.redox-os.org/redox-os/dces-rust/-/issues/8', 'url': 'https://gitlab.redox-os.org/redox-os/dces-rust/-/issues/8'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: TheWorldtype indcesis marked asSendwithout bounds on itsEntityStoreandComponentStore. This allows non-thread safeEntityStoreandComponentStores to be sent
across threads and cause data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SyncChannelcan move 'T: !Send' to other threads
reported: November 15, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'signal-simple(crates.io)', 'url': '/packages/signal-simple.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36446', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36446'}, {'text': 'GHSA-36cg-4jff-5863', 'url': 'https://github.com/advisories/GHSA-36cg-4jff-5863'}, {'text': 'GHSA-8892-84wf-cg8f', 'url': 'https://github.com/advisories/GHSA-8892-84wf-cg8f'}]
references: [{'text': 'https://github.com/kitsuneninetails/signal-rust/issues/2', 'url': 'https://github.com/kitsuneninetails/signal-rust/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forSyncChannel<T>.SyncChannel<T>doesn't provide access to&Tbut merely serves as a channel that consumes and returns ownedT. Users can create UB in safe Rust by sendingT: !Sendto other threads withSyncChannel::send/recvAPIs. UsingT = Arc<Cell<_>allows to create data races (which can lead to memory corruption), and usingT = MutexGuard<T>allows to unlock a mutex from a thread that didn't lock the mutex. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Bunchunconditionally implements Send/Sync
reported: November 12, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'bunch(crates.io)', 'url': '/packages/bunch.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36450', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36450'}, {'text': 'GHSA-jwph-qp5h-f9wj', 'url': 'https://github.com/advisories/GHSA-jwph-qp5h-f9wj'}]
references: [{'text': 'https://github.com/krl/bunch/issues/1', 'url': 'https://github.com/krl/bunch/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implementsSend/SyncforBunch<T>.
This allows users to insertT: !SynctoBunch<T>. It is possible to create a data race to aT: !Syncby invoking theBunch::get()API (which returns&T) from multiple threads. It is also possible to sendT: !Sendto other threads by insertingTinsideBunch<T>and sendingBunch<T>to another thread, allowing to create a data race by inserting types likeT = Rc<_>. Such data races can lead to memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: CopyCell lacks bounds on its Send trait allowing for data races
reported: November 15, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'toolshed(crates.io)', 'url': '/packages/toolshed.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36456', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36456'}, {'text': 'GHSA-2r6q-6c8c-g762', 'url': 'https://github.com/advisories/GHSA-2r6q-6c8c-g762'}]
references: [{'text': 'https://github.com/ratel-rust/toolshed/issues/12', 'url': 'https://github.com/ratel-rust/toolshed/issues/12'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: CopyCell<T>is aCell-like type that is implemented for any typeTthat
isCopyable. It'sSendtrait has no bounds on the contained type. As not allCopyable types are thread safe, for example non-mutable references
implement theCopytrait, it is possible to send references to types with
interior mutability such asCellacross threads and cause data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Queueshould have a Send bound on its Send/Sync traits
reported: November 15, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'scottqueue(crates.io)', 'url': '/packages/scottqueue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36453', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36453'}, {'text': 'GHSA-gvvv-w559-2hg6', 'url': 'https://github.com/advisories/GHSA-gvvv-w559-2hg6'}]
references: [{'text': 'https://github.com/rossdylan/rust-scottqueue/issues/1', 'url': 'https://github.com/rossdylan/rust-scottqueue/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implementsSend/SyncforQueue<T>. This allows (1) creating data races to aT: !Syncand (2) sendingT: !Sendto other threads, resulting in memory corruption or other undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Cache: Send/Sync impls needs trait bounds onK
reported: November 24, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'cache(crates.io)', 'url': '/packages/cache.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36448', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36448'}, {'text': 'GHSA-g78p-g85h-q6ww', 'url': 'https://github.com/advisories/GHSA-g78p-g85h-q6ww'}]
references: [{'text': 'https://github.com/krl/cache/issues/1', 'url': 'https://github.com/krl/cache/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forCache<K>.
This allows users to insertKthat is not Send or not Sync. This allows users to create data races by using non-Send types likeArc<Cell<T>>orRc<T>asKinCache<K>. It is also possible to create data races by using types likeCell<T>orRefCell<T>(types that areSendbut notSync).
Such data races can lead to memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Send/Sync bound needed on T  for Send/Sync impl of RcuCell
reported: November 14, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'rcu_cell(crates.io)', 'url': '/packages/rcu_cell.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36451', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36451'}, {'text': 'GHSA-686h-j8r8-wmfm', 'url': 'https://github.com/advisories/GHSA-686h-j8r8-wmfm'}]
references: [{'text': 'https://github.com/Xudong-Huang/rcu_cell/issues/3', 'url': 'https://github.com/Xudong-Huang/rcu_cell/issues/3'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forRcuCell<T>.
This allows users to sendT: !Sendto other threads (whileTenclosed withinRcuCell<T>), and allows users to concurrently accessT: !Syncby using the APIs ofRcuCell<T>that provide access to&T. This can result in memory corruption caused by data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ReaderResult should be bounded by Sync
reported: November 10, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'lexer(crates.io)', 'url': '/packages/lexer.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36458', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36458'}, {'text': 'GHSA-f997-8gxg-r354', 'url': 'https://github.com/advisories/GHSA-f997-8gxg-r354'}]
references: [{'text': 'https://gitlab.com/nathanfaucett/rs-lexer/-/issues/2', 'url': 'https://gitlab.com/nathanfaucett/rs-lexer/-/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate implementsSyncforReaderResult<T, E>with the trait boundT: Send, E: Send. Since matching on the public enumReaderResult<T, E>provides access to&T&&E,
allowing data race to a non-Sync typeTorE.
This can result in a memory corruption when multiple threads concurrently access&Tor&E. Suggested fix for the bug is change the trait bounds imposed onT&Eto beT: Sync, E: Sync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SyncRef's clone() and debug() allow data races
reported: December 18, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'v9(crates.io)', 'url': '/packages/v9.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36447', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36447'}, {'text': 'GHSA-3837-87vh-xq3w', 'url': 'https://github.com/advisories/GHSA-3837-87vh-xq3w'}, {'text': 'GHSA-pfjq-935c-4895', 'url': 'https://github.com/advisories/GHSA-pfjq-935c-4895'}]
references: [{'text': 'https://github.com/purpleposeidon/v9/issues/1', 'url': 'https://github.com/purpleposeidon/v9/issues/1'}, {'text': 'https://github.com/purpleposeidon/v9/commit/18847c50e5d36561cc91c996c3539ddb1eacf6c7', 'url': 'https://github.com/purpleposeidon/v9/commit/18847c50e5d36561cc91c996c3539ddb1eacf6c7'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.43
description: Affected versions of this crate unconditionally implementSyncforSyncRef<T>.
This definition allows data races if&Tis accessible through&SyncRef. SyncRef<T>derivesCloneandDebug, and the default implementations of those traits access&Tby invokingT::clone()&T::fmt(). It is possible to create data races & undefined behavior by concurrently invokingSyncRef<T>::clone()orSyncRef<T>::fmt()from multiple threads withT: !Sync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ShmWriter allows sending non-Send type across threads
reported: December 18, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'kekbit(crates.io)', 'url': '/packages/kekbit.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36449', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36449'}, {'text': 'GHSA-g83m-67wh-whpw', 'url': 'https://github.com/advisories/GHSA-g83m-67wh-whpw'}]
references: [{'text': 'https://github.com/motoras/kekbit/issues/34', 'url': 'https://github.com/motoras/kekbit/issues/34'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.4
description: Affected versions of this crate implementSendforShmWriter<H>without requiringH: Send. This allows users to sendH: !Sendto other threads, which can potentially lead to data races and undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Slockallows sending non-Send types across thread boundaries
reported: November 17, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'slock(crates.io)', 'url': '/packages/slock.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36455', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36455'}, {'text': 'GHSA-83r8-p8v6-6gfm', 'url': 'https://github.com/advisories/GHSA-83r8-p8v6-6gfm'}, {'text': 'GHSA-mc36-5m36-hjh5', 'url': 'https://github.com/advisories/GHSA-mc36-5m36-hjh5'}]
references: [{'text': 'https://github.com/BrokenLamp/slock-rs/issues/2', 'url': 'https://github.com/BrokenLamp/slock-rs/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.0
description: Slock<T>unconditionally implementsSend/Sync. Affected versions of this crate allows sending non-Send types to other threads,
which can lead to data races and memory corruption due to the data race. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: AtomicBoxlacks bound on its Send and Sync traits allowing data races
reported: November 10, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'lever(crates.io)', 'url': '/packages/lever.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36457', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36457'}, {'text': 'GHSA-9pp4-8p8v-g78w', 'url': 'https://github.com/advisories/GHSA-9pp4-8p8v-g78w'}]
references: [{'text': 'https://github.com/vertexclique/lever/issues/15', 'url': 'https://github.com/vertexclique/lever/issues/15'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.1
description: AtomicBox<T>is aBoxtype designed to be used across threads, however, it
implements theSendandSynctraits for all typesT. This allows non-Send types such asRcand non-Sync types such asCellto
be used across thread boundaries which can trigger undefined behavior and
memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Record::read : CustomReadon uninitialized buffer may cause UB
reported: January 26, 2021
issued: January 27, 2021(last modified: June 13, 2023)
package: {'name': 'marc(crates.io)', 'url': '/packages/marc.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26308', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26308'}, {'text': 'GHSA-3mf3-2gv9-h39j', 'url': 'https://github.com/advisories/GHSA-3mf3-2gv9-h39j'}]
references: [{'text': 'https://github.com/blackbeam/rust-marc/issues/7', 'url': 'https://github.com/blackbeam/rust-marc/issues/7'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=2.0.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. (Record::read()) ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. This flaw was fixed in commit 6299af0 by zero-initializing the newly allocated memory (viadata.resize(len, 0)) instead of exposing uninitialized memory (unsafe { data.set_len(len) }). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: beef::Cow lacks a Sync bound on its Send trait allowing for data races
reported: October 28, 2020
issued: January 26, 2021(last modified: June 13, 2023)
package: {'name': 'beef(crates.io)', 'url': '/packages/beef.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36442', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36442'}, {'text': 'GHSA-m7w4-8wp8-m2xq', 'url': 'https://github.com/advisories/GHSA-m7w4-8wp8-m2xq'}]
references: [{'text': 'https://github.com/maciejhirsz/beef/issues/37', 'url': 'https://github.com/maciejhirsz/beef/issues/37'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.0
description: Affected versions of this crate did not have aT: Syncbound in theSendimpl forCow<'_, T, U>. This allows users to create data races by makingCowcontain types that are (Send && !Sync) likeCell<_>orRefCell<_>. Such data races can lead to memory corruption. The flaw was corrected in commit d1c7658 by adding trait boundsT: SyncandT::Owned: Sendto theSendimpl forCow<'_, T, U>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: AtomicBoximplements Send/Sync for anyT: Sized
reported: November 10, 2020
issued: January 25, 2021(last modified: June 13, 2023)
package: {'name': 'abox(crates.io)', 'url': '/packages/abox.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36441', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36441'}, {'text': 'GHSA-r626-fc64-3q28', 'url': 'https://github.com/advisories/GHSA-r626-fc64-3q28'}]
references: [{'text': 'https://github.com/SonicFrog/abox/issues/1', 'url': 'https://github.com/SonicFrog/abox/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.1
description: Affected versions of this crate implementsSend/SyncforAtomicBox<T>without requiringT: Send/T: Sync. This allows to create data races toT: !Syncand sendT: !Sendto another thread. Such behavior breaks the compile-time thread safety guarantees of Rust, and allows users to incur undefined behavior using safe Rust (e.g. memory corruption from data race). The flaw was corrected in commit 34c2b9e by adding trait boundT: SendtoSendimpl forAtomicBox<T>and trait boundT: SynctoSyncimpl forAtomicBox<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ReadTicket and WriteTicket should only be sendable when T is Send
reported: November 17, 2020
issued: January 25, 2021(last modified: June 13, 2023)
package: {'name': 'ticketed_lock(crates.io)', 'url': '/packages/ticketed_lock.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36439', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36439'}, {'text': 'GHSA-77m6-x95j-75r5', 'url': 'https://github.com/advisories/GHSA-77m6-x95j-75r5'}, {'text': 'GHSA-gq4h-f254-7cw9', 'url': 'https://github.com/advisories/GHSA-gq4h-f254-7cw9'}]
references: [{'text': 'https://github.com/kvark/ticketed_lock/issues/7', 'url': 'https://github.com/kvark/ticketed_lock/issues/7'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.0
description: Affected versions of this crate unconditionally implementedSendforReadTicket<T>&WriteTicket<T>.
This allows to send non-SendTto other threads. This can allows creating data races by cloning types with internal mutability and sending them to other threads (asTofReadTicket<T>/WriteTicket<T>). Such data races can cause memory corruption or other undefined behavior. The flaw was corrected in commit a986a93 by addingT: Sendbounds toSendimpls ofReadTicket<T>/WriteTicket<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Decoder<R>can carryR: !Sendto other threads
reported: November 10, 2020
issued: January 25, 2021(last modified: June 13, 2023)
package: {'name': 'libsbc(crates.io)', 'url': '/packages/libsbc.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36440', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36440'}, {'text': 'GHSA-f6g6-54hm-fhxv', 'url': 'https://github.com/advisories/GHSA-f6g6-54hm-fhxv'}]
references: [{'text': 'https://github.com/mvertescher/libsbc-rs/issues/4', 'url': 'https://github.com/mvertescher/libsbc-rs/issues/4'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.5
description: Affected versions of this crate implementsSendforDecoder<R>for anyR: Read. This allowsDecoder<R>to containR: !Sendand carry (move) it to another thread. This can result in undefined behavior such as memory corruption from data race onR, or droppingR = MutexGuard<_>from a thread that didn't lock the mutex. The flaw was corrected in commit a34d6e1 by adding trait boundR: Sendto theSendimpl forDecoder<R>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Futurelacks bounds on Send and Sync.
reported: December  8, 2020
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'tiny_future(crates.io)', 'url': '/packages/tiny_future.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36438', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36438'}, {'text': 'GHSA-fg42-vwxx-xx5j', 'url': 'https://github.com/advisories/GHSA-fg42-vwxx-xx5j'}, {'text': 'GHSA-m296-j53x-xv95', 'url': 'https://github.com/advisories/GHSA-m296-j53x-xv95'}]
references: [{'text': 'https://github.com/KizzyCode/tiny_future/issues/1', 'url': 'https://github.com/KizzyCode/tiny_future/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
description: tiny_futurecontains a light-weight implementation ofFutures. TheFuturetype it has lacked bound on itsSendandSynctraits. This allows for a bug where non-thread safe types such asCellcan be used inFutures and cause data races in concurrent programs. The flaw was corrected in commitc791919by adding trait bounds toFuture'sSendandSync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: PinSlaband Unordered<T, S> need bounds on their Send/Sync traits
reported: November 15, 2020
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'unicycle(crates.io)', 'url': '/packages/unicycle.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36436', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36436'}, {'text': 'GHSA-686f-ch3r-xwmh', 'url': 'https://github.com/advisories/GHSA-686f-ch3r-xwmh'}]
references: [{'text': 'https://github.com/udoprog/unicycle/issues/8', 'url': 'https://github.com/udoprog/unicycle/issues/8'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.7.1
description: Affected versions of this crate unconditionally implementedSend&Syncfor typesPinSlab<T>&Unordered<T, S>. This allows sending non-Send types to other threads and concurrently accessing non-Sync types from multiple threads. This can result in a data race & memory corruption when types that provide internal mutability without synchronization are contained withinPinSlab<T>orUnordered<T, S>and accessed concurrently from multiple threads. The flaw was corrected in commits 92f40b4 & 6a6c367 by adding trait boundT: SendtoSendimpls forPinSlab<T>&Unordered<T, S>and addingT: SynctoSyncimpls forPinSlab<T>&Unordered<T, S>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: QueueSender/QueueReceiver: Send/Sync impls needT: Send
reported: November 24, 2020
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'conqueue(crates.io)', 'url': '/packages/conqueue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36437', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36437'}, {'text': 'GHSA-368f-29c3-4f2r', 'url': 'https://github.com/advisories/GHSA-368f-29c3-4f2r'}]
references: [{'text': 'https://github.com/longshorej/conqueue/issues/9', 'url': 'https://github.com/longshorej/conqueue/issues/9'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
description: Affected versions of this crate unconditionally implementedSend/SyncforQueueSender<T>,
allowing to send non-SendTto other threads by invoking(&QueueSender<T>).send(). This fails to prevent users from creating data races by sending types likeRc<T>orArc<Cell<T>>to other threads, which can lead to memory corruption. The flaw was corrected in commit 1e462c3 by imposingT: Sendto bothSend/Syncimpls forQueueSender<T>/QueueReceiver<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Singleton lacks bounds on Send and Sync.
reported: November 16, 2020
issued: January 22, 2021(last modified: June 13, 2023)
package: {'name': 'ruspiro-singleton(crates.io)', 'url': '/packages/ruspiro-singleton.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36435', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36435'}, {'text': 'GHSA-fqq2-xp7m-xvm8', 'url': 'https://github.com/advisories/GHSA-fqq2-xp7m-xvm8'}]
references: [{'text': 'https://github.com/RusPiRo/ruspiro-singleton/issues/10', 'url': 'https://github.com/RusPiRo/ruspiro-singleton/issues/10'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.1
description: Singleton<T>is meant to be a static object that can be initialized lazily. In
order to satisfy the requirement thatstaticitems must implementSync,Singletonimplemented bothSyncandSendunconditionally. This allows for a bug where non-Synctypes such asCellcan be used in
singletons and cause data races in concurrent programs. The flaw was corrected in commitb0d2bd20eby adding trait bounds, requiring
the contaiend type to implementSync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: LateStatic has incorrect Sync bound
reported: November 10, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'late-static(crates.io)', 'url': '/packages/late-static.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36209', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36209'}, {'text': 'GHSA-wr55-mf5c-hhwm', 'url': 'https://github.com/advisories/GHSA-wr55-mf5c-hhwm'}]
references: [{'text': 'https://github.com/Richard-W/late-static/issues/1', 'url': 'https://github.com/Richard-W/late-static/issues/1'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
description: Affected versions of this crate implementedSyncforLateStaticwithT: Send, so that it is possible to create a data race to a typeT: Send + !Sync(e.g.Cell<T>). This can result in a memory corruption or other kinds of undefined behavior. The flaw was corrected in commit 11f396c by replacing theT: Sendbound toT: Syncbound in theSyncimpl forLateStatic<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: panic safety issue inimpl TransformContent<S, D> for [S; (2|3|4)]
reported: January 10, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'basic_dsp_matrix(crates.io)', 'url': '/packages/basic_dsp_matrix.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25906', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25906'}, {'text': 'GHSA-fjr6-hm39-4cf9', 'url': 'https://github.com/advisories/GHSA-fjr6-hm39-4cf9'}]
references: [{'text': 'https://github.com/liebharc/basic_dsp/issues/47', 'url': 'https://github.com/liebharc/basic_dsp/issues/47'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.9.2
description: Affected versions of this crate did not guard against double drop while temporarily duplicating objects' ownership usingptr::read(). Upon panic in a user-provided functionconversion, objects that are copied byptr::read()are dropped twice, leading to memory corruption. The flaw was corrected in v0.9.2 by usingManuallyDrop<T>to enclose objects that are to be temporarily duplicated. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: EventList's Fromconversions can double drop on panic.
reported: January  4, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'fil-ocl(crates.io)', 'url': '/packages/fil-ocl.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-25908', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25908'}, {'text': 'GHSA-x3v2-fgr6-3wmm', 'url': 'https://github.com/advisories/GHSA-x3v2-fgr6-3wmm'}]
references: [{'text': 'https://github.com/cogciprocate/ocl/issues/194', 'url': 'https://github.com/cogciprocate/ocl/issues/194'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
unaffected: <0.12.0
description: Affected versions of this crate read from a container usingptr::readinFrom<EventList>, and then call a user specifiedInto<Event>function. This issue can result in a double-free if the user provided function panics. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: conquer-once's OnceCell lacks Send bound for its Sync trait.
reported: December 22, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'conquer-once(crates.io)', 'url': '/packages/conquer-once.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36208', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36208'}, {'text': 'GHSA-3jc5-5hc5-33gj', 'url': 'https://github.com/advisories/GHSA-3jc5-5hc5-33gj'}]
references: [{'text': 'https://github.com/oliver-giersch/conquer-once/issues/3', 'url': 'https://github.com/oliver-giersch/conquer-once/issues/3'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.2
description: Affected versions ofconquer-onceimplementsSyncfor itsOnceCelltype
without restricting it toSendable types. This allows non-SendbutSynctypes such asMutexGuardto be sent across
threads leading to undefined behavior and memory corruption in concurrent
programs. The issue was fixed by adding aSendconstraint toOnceCell. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Update unsound DrainFilter and RString::retain
reported: December 21, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'abi_stable(crates.io)', 'url': '/packages/abi_stable.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36212', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36212'}, {'text': 'CVE-2020-36213', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36213'}, {'text': 'GHSA-vq23-5h4f-vwpv', 'url': 'https://github.com/advisories/GHSA-vq23-5h4f-vwpv'}, {'text': 'GHSA-wqxc-qrq4-w5v4', 'url': 'https://github.com/advisories/GHSA-wqxc-qrq4-w5v4'}]
references: [{'text': 'https://github.com/rodrimati1992/abi_stable_crates/issues/44', 'url': 'https://github.com/rodrimati1992/abi_stable_crates/issues/44'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.9.1
description: Affected versions of this crate contained code from the Rust standard library that contained soundness bugs rust-lang/rust#60977 (double drop) & rust-lang/rust#78498 (create invalid utf-8 string). The flaw was corrected in v0.9.1 by making a similar fix to the one made in the Rust standard library. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: impl Randomon arrays can lead to dropping uninitialized memory
reported: December 31, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'autorand(crates.io)', 'url': '/packages/autorand.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36210', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36210'}, {'text': 'GHSA-cgmg-2v6m-fjg7', 'url': 'https://github.com/advisories/GHSA-cgmg-2v6m-fjg7'}]
references: [{'text': 'https://github.com/mersinvald/autorand-rs/issues/5', 'url': 'https://github.com/mersinvald/autorand-rs/issues/5'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.3
description: Affected versions of this crate had a panic safety issue to drop partially uninitialized array ofTupon panic in a user provided functionT::random(). Dropping uninitializedTcan potentially cause memory corruption or undefined behavior. The flaw was corrected in commit 565d508 by usingMaybeUninit<T>to avoid possible dropping of uninitialized memory upon panic. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: hashconsing's HConsed lacks Send/Sync bound for its Send/Sync trait.
reported: November 10, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'hashconsing(crates.io)', 'url': '/packages/hashconsing.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36215', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36215'}, {'text': 'GHSA-rw2c-c256-3r53', 'url': 'https://github.com/advisories/GHSA-rw2c-c256-3r53'}]
references: [{'text': 'https://github.com/AdrienChampion/hashconsing/issues/1', 'url': 'https://github.com/AdrienChampion/hashconsing/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.1.0
description: Affected versions ofhashconsingimplementsSend/Syncfor itsHConsedtype without restricting it toSendable types andSyncable types. This allows non-Synctypes such asCellto be shared across threads leading to undefined behavior and memory corruption in concurrent programs. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ImageChunkMut needs bounds on its Send and Sync traits
reported: December  8, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'gfwx(crates.io)', 'url': '/packages/gfwx.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36211', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36211'}, {'text': 'GHSA-xp6v-qx65-4pp7', 'url': 'https://github.com/advisories/GHSA-xp6v-qx65-4pp7'}]
references: [{'text': 'https://github.com/Devolutions/gfwx-rs/issues/7', 'url': 'https://github.com/Devolutions/gfwx-rs/issues/7'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.0
description: In the affected versions of this crate,ImageChunkMut<'_, T>unconditionally implementsSendandSync, allowing to create data races. This can result in a memory corruption or undefined behavior when non thread-safe types are moved and referenced across thread boundaries. The flaw was corrected in commit e7fb2f5 by addingT: Sendbound to theSendimpl and addingT: Syncbound to theSyncimpl. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Aoveclacks bound on its Send and Sync traits allowing data races
reported: December 10, 2020
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'aovec(crates.io)', 'url': '/packages/aovec.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36207', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36207'}, {'text': 'GHSA-g489-xrw3-3v8w', 'url': 'https://github.com/advisories/GHSA-g489-xrw3-3v8w'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: aovec::Aovec<T>is a vector type that implementsSendandSyncfor all
typesT. This allows non-Send types such asRcand non-Sync types such asCellto
be used across thread boundaries which can trigger undefined behavior and
memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Exposes internally used raw pointer
reported: January  1, 2021
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'cache(crates.io)', 'url': '/packages/cache.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-25903', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25903'}, {'text': 'GHSA-gh87-6jr3-8q47', 'url': 'https://github.com/advisories/GHSA-gh87-6jr3-8q47'}]
references: [{'text': 'https://github.com/krl/cache/issues/2', 'url': 'https://github.com/krl/cache/issues/2'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate dereference a raw pointer that can be modified
without usingunsafecode. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Frame::copy_from_raw_partscan lead to segfault withoutunsafe
reported: January  7, 2021
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'av-data(crates.io)', 'url': '/packages/av-data.html'}
type: Vulnerability
categories: ['memory-exposure', 'privilege-escalation']
aliases: [{'text': 'CVE-2021-25904', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25904'}, {'text': 'GHSA-352p-rhvq-7g78', 'url': 'https://github.com/advisories/GHSA-352p-rhvq-7g78'}]
references: [{'text': 'https://github.com/rust-av/rust-av/issues/136', 'url': 'https://github.com/rust-av/rust-av/issues/136'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.0
description: fn Frame::copy_from_raw_parts()is a safe API that can take a
raw pointer and dereference it. It is possible to read arbitrary memory address
with an arbitrarily fed pointer. This allows the safe API to access & read
arbitrary address in memory. Feeding an invalid memory address pointer to
the API may also cause the program to segfault. The flaw was corrected in https://github.com/rust-av/rust-av/pull/137,
by removing the APIfn Frame::copy_from_raw_parts(). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Double drop upon panic in 'fn map_array()'
reported: January 10, 2021
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'glsl-layout(crates.io)', 'url': '/packages/glsl-layout.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25902', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25902'}, {'text': 'GHSA-cx4j-fxr7-jxg8', 'url': 'https://github.com/advisories/GHSA-cx4j-fxr7-jxg8'}]
references: [{'text': 'https://github.com/rustgd/glsl-layout/pull/10', 'url': 'https://github.com/rustgd/glsl-layout/pull/10'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.0
description: Affected versions of this crate did not guard against panic within the user-provided functionf(2nd parameter offn map_array), and thus panic withinfcauses double drop of a single object. The flaw was corrected in the 0.4.0 release by wrapping the object vulnerable
to a double drop withinManuallyDrop<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: UsbContext trait did not require implementers to be Send and Sync.
reported: December 18, 2020
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'rusb(crates.io)', 'url': '/packages/rusb.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36206', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36206'}, {'text': 'GHSA-9mxw-4856-9cm5', 'url': 'https://github.com/advisories/GHSA-9mxw-4856-9cm5'}]
references: [{'text': 'https://github.com/a1ien/rusb/issues/44', 'url': 'https://github.com/a1ien/rusb/issues/44'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.7.0
description: Affected versions ofrusbdid not requireUsbContextto implementSendandSync. However, throughDeviceandDeviceHandleit is possible to useUsbContexts across threads. This issue allows non-thread safeUsbContexttypes to be used concurrently
leading to data races and memory corruption. The issue was fixed by addingSendandSyncbounds toUsbContext. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Dangling reference inaccess::Mapwith Constant
reported: December 10, 2020
issued: December 11, 2020(last modified: June 13, 2023)
package: {'name': 'arc-swap(crates.io)', 'url': '/packages/arc-swap.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-35711', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35711'}, {'text': 'GHSA-9pqx-g3jh-qpqq', 'url': 'https://github.com/advisories/GHSA-9pqx-g3jh-qpqq'}]
references: [{'text': 'https://github.com/vorner/arc-swap/issues/45', 'url': 'https://github.com/vorner/arc-swap/issues/45'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.8, <1.0.0-0>=1.1.0
unaffected: <0.4.2
affected functions: Version
arc_swap::access::mapguard::deref: <1.1.0
description: Using thearc_swap::access::Mapwith theConstanttest helper (or with
user-provided implementation of theAccesstrait) could sometimes lead to the
map returning dangling references. Replaced by implementation withoutunsafe, at the cost of addedClonebound
on the closure and small penalty on performance. Advisory available underCC0-1.0license.
affected_functions: arc_swap;;access;;mapguard;;deref
version_of_Affected: <1.1.0

---
classification: HIGH
subtitle: Unexpected panic in multihashfrom_sliceparsing code
reported: November  8, 2020
issued: November  9, 2020(last modified: June 13, 2023)
package: {'name': 'multihash(crates.io)', 'url': '/packages/multihash.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35909', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35909'}, {'text': 'GHSA-h7qh-3h6f-w79p', 'url': 'https://github.com/advisories/GHSA-h7qh-3h6f-w79p'}]
references: [{'text': 'https://github.com/multiformats/rust-multihash/pull/72', 'url': 'https://github.com/multiformats/rust-multihash/pull/72'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.11.3
affected functions: Version
multihash::digests::multihashgeneric::from_bytes: <0.11.3
multihash::digests::multihashrefgeneric::from_slice: <0.11.3
description: In versions prior 0.11.3 it's possible to makefrom_slicepanic by feeding it certain malformed input.
It's never documented thatfrom_slice(andfrom_byteswhich wraps it) can panic, and its' return type (Result<Self, DecodeError>) suggests otherwise. In practice,from_slice/from_bytesis frequently used in networking code (for examplein rust-libp2p) and is being called with unsanitized data from untrusted sources.
This can allow attackers to cause DoS by causing an unexpectedpanicin the network client's code. Advisory available underCC0-1.0license.
affected_functions: multihash;;digests;;multihashgeneric;;from_bytes
version_of_Affected: <0.11.3

---
classification: HIGH
subtitle: futures_task::waker may cause a use-after-free if used on a type that isn't 'static
reported: September  4, 2020
issued: October 31, 2020(last modified: June 13, 2023)
package: {'name': 'futures-task(crates.io)', 'url': '/packages/futures-task.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-35906', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35906'}, {'text': 'GHSA-r93v-9p5q-vhpf', 'url': 'https://github.com/advisories/GHSA-r93v-9p5q-vhpf'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/pull/2206', 'url': 'https://github.com/rust-lang/futures-rs/pull/2206'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.6
unaffected: <=0.2.1
affected functions: Version
futures_task::waker: >=0.3.0
description: Affected versions of the crate did not properly implement a'staticlifetime bound on thewakerfunction.
This resulted in a use-after-free ifWaker::wake()is called after original data had been dropped. The flaw was corrected by adding'staticlifetime bound to the datawakertakes. Advisory available underCC0-1.0license.
affected_functions: futures_task;;waker
version_of_Affected: >=0.3.0

---
classification: HIGH
subtitle: Obstack generates unaligned references
reported: September  3, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'obstack(crates.io)', 'url': '/packages/obstack.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35894', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35894'}, {'text': 'GHSA-85j6-f8j6-q26x', 'url': 'https://github.com/advisories/GHSA-85j6-f8j6-q26x'}]
references: [{'text': 'https://github.com/petertodd/rust-obstack/issues/4', 'url': 'https://github.com/petertodd/rust-obstack/issues/4'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.1.4
description: Obstack generates unaligned references for types that require a large alignment. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: LocalRequest::clonecreates multiple mutable references to the same object
reported: May 27, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rocket(crates.io)', 'url': '/packages/rocket.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35882', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35882'}, {'text': 'GHSA-8q2v-67v7-6vc6', 'url': 'https://github.com/advisories/GHSA-8q2v-67v7-6vc6'}]
references: [{'text': 'https://github.com/SergioBenitez/Rocket/issues/1312', 'url': 'https://github.com/SergioBenitez/Rocket/issues/1312'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.5
unaffected: <0.4.0
affected functions: Version
rocket::local::localrequest::clone: <0.4.5, >=0.4.0
description: The affected version ofrocketcontains aClonetrait implementation ofLocalRequestthat reuses the pointer to innerRequestobject.
This causes data race in rare combinations of APIs if the original and the
cloned objects are modified at the same time. Advisory available underCC0-1.0license.
affected_functions: rocket;;local;;localrequest;;clone
version_of_Affected: <0.4.5, >=0.4.0

---
classification: HIGH
subtitle: Out of Memory in stream::read_raw_bytes_into()
reported: June  8, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'protobuf(crates.io)', 'url': '/packages/protobuf.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2019-15544', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15544'}, {'text': 'GHSA-mh6h-f25p-98f8', 'url': 'https://github.com/advisories/GHSA-mh6h-f25p-98f8'}]
references: [{'text': 'https://github.com/stepancheg/rust-protobuf/issues/411', 'url': 'https://github.com/stepancheg/rust-protobuf/issues/411'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: ^1.7.5>=2.6.0
affected functions: Version
protobuf::stream::read_raw_bytes_into: <2.6.0
description: Affected versions of this crate called Vec::reserve() on user-supplied input. This allows an attacker to cause an Out of Memory condition while calling the
vulnerable method on untrusted data. Advisory available underCC0-1.0license.
affected_functions: protobuf;;stream;;read_raw_bytes_into
version_of_Affected: <2.6.0

---
classification: HIGH
subtitle: Uncontrolled recursion leads to abort in HTML serialization
reported: April 27, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ammonia(crates.io)', 'url': '/packages/ammonia.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15542', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15542'}, {'text': 'GHSA-5hp8-35wj-m525', 'url': 'https://github.com/advisories/GHSA-5hp8-35wj-m525'}]
references: [{'text': 'https://github.com/rust-ammonia/ammonia/blob/master/CHANGELOG.md#210', 'url': 'https://github.com/rust-ammonia/ammonia/blob/master/CHANGELOG.md#210'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.1.0
affected functions: Version
ammonia::document::to_string: <2.1.0
ammonia::document::write_to: <2.1.0
ammonia::clean: <2.1.0
description: Affected versions of this crate did use recursion for serialization of HTML
DOM trees. This allows an attacker to cause abort due to stack overflow by providing
a pathologically nested input. The flaw was corrected by serializing the DOM tree iteratively instead. Advisory available underCC0-1.0license.
affected_functions: ammonia;;document;;to_string
version_of_Affected: <2.1.0

---
classification: HIGH
subtitle: tokio-rustls reads may cause excessive memory usage
reported: May 19, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'tokio-rustls(crates.io)', 'url': '/packages/tokio-rustls.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35875', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35875'}, {'text': 'GHSA-2jfv-g3fh-xq3v', 'url': 'https://github.com/advisories/GHSA-2jfv-g3fh-xq3v'}]
references: [{'text': 'https://github.com/tokio-rs/tls/pull/14', 'url': 'https://github.com/tokio-rs/tls/pull/14'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.12.3, <0.13.0>=0.13.1
unaffected: <0.12
description: tokio-rustlsdoes not callprocess_new_packetsimmediately afterread,
so the expected termination conditionwants_readalways returns true.
As long as new incoming data arrives faster than it is processed
and the reader does not return pending, data will be buffered. This may cause DoS. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Cloned interners may read already dropped strings
reported: August 24, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'string-interner(crates.io)', 'url': '/packages/string-interner.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16882', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16882'}, {'text': 'GHSA-49fq-pw77-6qxj', 'url': 'https://github.com/advisories/GHSA-49fq-pw77-6qxj'}]
references: [{'text': 'https://github.com/Robbepop/string-interner/issues/9', 'url': 'https://github.com/Robbepop/string-interner/issues/9'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: ^0.6.4>=0.7.1
description: Affected versions of this crate did not clone contained strings when an interner is cloned.
Interners have raw pointers to the contained strings, and they keep pointing the strings which the old interner owns, after the interner is cloned.
If a new cloned interner is alive and the old original interner is dead, the new interner has dangling pointers to the old interner's storage, which is already dropped. This allows an attacker to read the already freed memory.
The dangling pointers are used by the interners to check a string is already interned.
An attacker can do brute force attack to get the data pointed by the dangling pointer. The flaw was corrected byhttps://github.com/Robbepop/string-interner/pull/10.
This patch implementsClonemanually to the interner type, so that the internal raw pointers always point the strings owned by the same interner. PR #10 was also backported to the 0.6 release line inhttps://github.com/Robbepop/string-interner/pull/14and was released in 0.6.4. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Processing of maliciously crafted length fields causes memory allocation SIGABRTs
reported: June 13, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'asn1_der(crates.io)', 'url': '/packages/asn1_der.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15549', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15549'}, {'text': 'GHSA-v5r6-6r3c-wqxc', 'url': 'https://github.com/advisories/GHSA-v5r6-6r3c-wqxc'}]
references: [{'text': 'https://github.com/KizzyCode/asn1_der/issues/1', 'url': 'https://github.com/KizzyCode/asn1_der/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.2
description: Affected versions of this crate tried to preallocate a vector for an arbitrary amount of bytes announced by the ASN.1-DER length field without further checks. This allows an attacker to trigger a SIGABRT by creating length fields that announce more bytes than the allocator can provide. The flaw was corrected by not preallocating memory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in Scalar::check_overflow allows side-channel timing attack
reported: October 14, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'libsecp256k1(crates.io)', 'url': '/packages/libsecp256k1.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2019-25003', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25003'}, {'text': 'GHSA-hrjm-c879-pp86', 'url': 'https://github.com/advisories/GHSA-hrjm-c879-pp86'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.3.1
affected functions: Version
libsecp256k1::scalar::check_overflow: <0.3.1
description: Versions oflibsecp256k1prior to0.3.1did not execute
Scalar::check_overflow in constant time. This allows an attacker to potentially leak information via a timing attack. The flaw was corrected by modifying Scalar::check_overflow to execute in
constant time. Advisory available underCC0-1.0license.
affected_functions: libsecp256k1;;scalar;;check_overflow
version_of_Affected: <0.3.1

---
classification: HIGH
subtitle: Integer Overflow in HeaderMap::reserve() can cause Denial of Service
reported: November 16, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'http(crates.io)', 'url': '/packages/http.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2019-25008', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25008'}, {'text': 'CVE-2020-25574', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25574'}, {'text': 'GHSA-x7vr-c387-8w57', 'url': 'https://github.com/advisories/GHSA-x7vr-c387-8w57'}, {'text': 'GHSA-xvc9-xwgj-4cq9', 'url': 'https://github.com/advisories/GHSA-xvc9-xwgj-4cq9'}]
references: [{'text': 'https://github.com/hyperium/http/issues/352', 'url': 'https://github.com/hyperium/http/issues/352'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.1.20
affected functions: Version
http::header::headermap::reserve: <0.1.20
description: HeaderMap::reserve()usedusize::next_power_of_two()to calculate the increased capacity.
However,next_power_of_two()silently overflows to 0 if given a sufficiently large number
in release mode. If the map was not empty when the overflow happens,
the library will invokeself.grow(0)and start infinite probing.
This allows an attacker who controls the argument toreserve()to cause a potential denial of service (DoS). The flaw was corrected in 0.1.20 release ofhttpcrate. Advisory available underCC0-1.0license.
affected_functions: http;;header;;headermap;;reserve
version_of_Affected: <0.1.20

---
classification: HIGH
subtitle: Memory safety issues incompact::Vec
reported: September  3, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ordnung(crates.io)', 'url': '/packages/ordnung.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35890', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35890'}, {'text': 'CVE-2020-35891', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35891'}, {'text': 'GHSA-4wj3-p7hj-cvx8', 'url': 'https://github.com/advisories/GHSA-4wj3-p7hj-cvx8'}, {'text': 'GHSA-qrwc-jxf5-g8x6', 'url': 'https://github.com/advisories/GHSA-qrwc-jxf5-g8x6'}]
references: [{'text': 'https://github.com/maciejhirsz/ordnung/issues/8', 'url': 'https://github.com/maciejhirsz/ordnung/issues/8'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: compact::Veccontains multiple memory safety issues. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: fix unsound APIs that could lead to UB
reported: September  6, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'generator(crates.io)', 'url': '/packages/generator.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16144', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16144'}, {'text': 'GHSA-6c65-xcf5-299x', 'url': 'https://github.com/advisories/GHSA-6c65-xcf5-299x'}]
references: [{'text': 'https://github.com/Xudong-Huang/generator-rs/issues/9', 'url': 'https://github.com/Xudong-Huang/generator-rs/issues/9'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.18
description: Affected versions of this crate API could use uninitialized memory with some APIs in special
cases, like use the API in none generator context. This could lead to UB.
The flaw was corrected byhttps://github.com/Xudong-Huang/generator-rs/issues/9https://github.com/Xudong-Huang/generator-rs/issues/11https://github.com/Xudong-Huang/generator-rs/issues/13https://github.com/Xudong-Huang/generator-rs/issues/14This patch fixes all those issues above. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in offset_of and span_of causes SIGILL, drops uninitialized memory of arbitrary type on panic in client code
reported: July 16, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'memoffset(crates.io)', 'url': '/packages/memoffset.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2019-15553', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15553'}, {'text': 'GHSA-rh89-x75f-rh3c', 'url': 'https://github.com/advisories/GHSA-rh89-x75f-rh3c'}]
references: [{'text': 'https://github.com/Gilnaa/memoffset/issues/9#issuecomment-505461490', 'url': 'https://github.com/Gilnaa/memoffset/issues/9#issuecomment-505461490'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.5.0
description: Affected versions of this crate caused traps and/or memory unsafety by zero-initializing references.
They also could lead to uninitialized memory being dropped if the field for which the offset is requested was behind a deref coercion, and that deref coercion caused a panic. The flaw was corrected by usingMaybeUninit. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw inreallocallows reading unknown memory
reported: March 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'bumpalo(crates.io)', 'url': '/packages/bumpalo.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-35861', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35861'}, {'text': 'GHSA-vqx7-pw4r-29rr', 'url': 'https://github.com/advisories/GHSA-vqx7-pw4r-29rr'}]
references: [{'text': 'https://github.com/fitzgen/bumpalo/issues/69', 'url': 'https://github.com/fitzgen/bumpalo/issues/69'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=3.2.1
unaffected: <3.0.0
description: Whenreallocing, if we allocate new space, we need to copy the old
allocation's bytes into the new space. There areold_sizenumber of bytes in
the old allocation, but we were accidentally copyingnew_sizenumber of bytes,
which could lead to copying bytes into the realloc'd space from past the chunk
that we're bump allocating out of, from unknown memory. If an attacker can causereallocs, and can read therealoced data back,
this could allow them to read things from other regions of memory that they
shouldn't be able to. For example, if some crypto keys happened to live in
memory right after a chunk we were bump allocating out of, this could allow
the attacker to read the crypto keys. Beyond just fixing the bug and adding a regression test, I've also taken two
additional steps: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: read_scalarandread_scalar_atallow transmuting values withoutunsafeblocks
reported: April 11, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'flatbuffers(crates.io)', 'url': '/packages/flatbuffers.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35864', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35864'}, {'text': 'GHSA-c9h5-hf8r-m97x', 'url': 'https://github.com/advisories/GHSA-c9h5-hf8r-m97x'}]
references: [{'text': 'https://github.com/google/flatbuffers/issues/5825', 'url': 'https://github.com/google/flatbuffers/issues/5825'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.0
unaffected: <0.4.0
affected functions: Version
flatbuffers::read_scalar: >=0.4.0
flatbuffers::read_scalar_at: >=0.4.0
description: Theread_scalarandread_scalar_atfunctions are unsound
because they allow transmuting values withoutunsafeblocks. The following example shows how to create a dangling reference: Advisory available underCC0-1.0license.
affected_functions: flatbuffers;;read_scalar
version_of_Affected: >=0.4.0

---
classification: HIGH
subtitle: Format string vulnerabilities inpancurses
reported: June 15, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'pancurses(crates.io)', 'url': '/packages/pancurses.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2019-15546', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15546'}, {'text': 'GHSA-m57c-4vvx-gjgq', 'url': 'https://github.com/advisories/GHSA-m57c-4vvx-gjgq'}]
references: [{'text': 'https://github.com/RustSec/advisory-db/issues/106', 'url': 'https://github.com/RustSec/advisory-db/issues/106'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: no patched versions
affected functions: Version
pancurses::mvprintw: >=0
pancurses::printw: >=0
description: pancurses::mvprintwandpancurses::printwpasses a pointer from a rust&strto C,
allowing hostile input to execute a format string attack, which trivially allows writing
arbitrary data to stack memory. Advisory available underCC0-1.0license.
affected_functions: pancurses;;mvprintw
version_of_Affected: >=0

---
classification: HIGH
subtitle: Wrong memory orderings in RwLock potentially violates mutual exclusion
reported: August 27, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'spin(crates.io)', 'url': '/packages/spin.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16137', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16137'}, {'text': 'GHSA-hv7x-f3pv-gpwr', 'url': 'https://github.com/advisories/GHSA-hv7x-f3pv-gpwr'}]
references: [{'text': 'https://github.com/mvdnes/spin-rs/issues/65', 'url': 'https://github.com/mvdnes/spin-rs/issues/65'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.5.2
affected functions: Version
spin::rwlock::new: <0.5.2
description: Wrong memory orderings inside the RwLock implementation allow for two writers to acquire the lock at the same time. The drop implementation used Ordering::Relaxed, which allows the compiler or CPU to reorder a mutable access on the locked data after the lock has been yielded. Only users of the RwLock implementation are affected. Users of Once (including users of lazy_static with thespin_no_stdfeature enabled) are NOT affected. On strongly ordered CPU architectures like x86, the only real way that this would lead to a memory corruption is if the compiler reorders an access after the lock is yielded, which is possible but in practice unlikely. It is a more serious issue on weakly ordered architectures such as ARM which, except in the presence of certain instructions, allow the hardware to decide which accesses are seen at what times. Therefore on an ARM system it is likely that using the wrong memory ordering would result in a memory corruption, even if the compiler itself doesn't reorder the memory accesses in a buggy way. The flaw was corrected by https://github.com/mvdnes/spin-rs/pull/66. Advisory available underCC0-1.0license.
affected_functions: spin;;rwlock;;new
version_of_Affected: <0.5.2

---
classification: HIGH
subtitle: Insufficient size checks in outgoing buffer in ws allows remote attacker to run the process out of memory
reported: September 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ws(crates.io)', 'url': '/packages/ws.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35896', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35896'}, {'text': 'GHSA-rh7x-ppxx-p34c', 'url': 'https://github.com/advisories/GHSA-rh7x-ppxx-p34c'}]
references: [{'text': 'https://github.com/housleyjk/ws-rs/issues/291', 'url': 'https://github.com/housleyjk/ws-rs/issues/291'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate did not properly check and cap the growth of the outgoing buffer. This allows a remote attacker to take down the process by growing the buffer of their (single) connection until the process runs out of memory it can allocate and is killed. The flaw was corrected in theparity-wsfork(>=0.10.0) bydisconnecting a client when the buffer runs full. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ChaCha20 counter overflow can expose repetitions in the keystream
reported: October 22, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'chacha20(crates.io)', 'url': '/packages/chacha20.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2019-25005', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25005'}, {'text': 'GHSA-j2r6-2m5c-vgh5', 'url': 'https://github.com/advisories/GHSA-j2r6-2m5c-vgh5'}]
references: [{'text': 'https://github.com/RustCrypto/stream-ciphers/pull/64', 'url': 'https://github.com/RustCrypto/stream-ciphers/pull/64'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.2.3
description: The ChaCha20 stream cipher can produce a maximum of 2^32 blocks (~256GB)
before the 32-bit counter overflows. Releases of thechacha20crate prior
to v0.2.3 allow generating keystreams larger than this, including seeking
past the limit. When this occurs, the keystream is duplicated, with failure
modes similar to nonce reuse (i.e. exposure of the XOR of two plaintexts). The v0.2.3 release now panics in this event, rather than exposing the
duplicated keystream. Note this is a "hot fix" solution to the problem
and future releases will pursue returning an error in this case. Users of thechacha20poly1305crate are unaffected by this as this crate
properly asserts the length of the plaintext is less than the maximum allowed
(P_MAXas described in RFC 8439 Section 2.8). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Stack overflow when parsing malicious DNS packet
reported: October  9, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'trust-dns-proto(crates.io)', 'url': '/packages/trust-dns-proto.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20994', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20994'}, {'text': 'GHSA-369h-pjr2-6wrh', 'url': 'https://github.com/advisories/GHSA-369h-pjr2-6wrh'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.3
description: There's a stack overflow leading to a crash when Trust-DNS's parses a
malicious DNS packet. Affected versions of this crate did not properly handle parsing of DNS message
compression (RFC1035 section 4.1.4). The parser could be tricked into infinite
loop when a compression offset pointed back to the same domain name to be
parsed. This allows an attacker to craft a malicious DNS packet which when consumed
with Trust-DNS could cause stack overflow and crash the affected software. The flaw was corrected by trust-dns-proto 0.4.3 and upcoming 0.5.0 release. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SSL/TLS MitM vulnerability due to insecure defaults
reported: November  5, 2016
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'openssl(crates.io)', 'url': '/packages/openssl.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2016-10931', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10931'}, {'text': 'GHSA-34p9-f4q3-c4r7', 'url': 'https://github.com/advisories/GHSA-34p9-f4q3-c4r7'}]
references: [{'text': 'https://github.com/sfackler/rust-openssl/releases/tag/v0.9.0', 'url': 'https://github.com/sfackler/rust-openssl/releases/tag/v0.9.0'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.9.0
description: All versions of rust-openssl prior to 0.9.0 contained numerous insecure defaults
including off-by-default certificate verification and no API to perform hostname
verification. Unless configured correctly by a developer, these defaults could allow an attacker
to perform man-in-the-middle attacks. The problem was addressed in newer versions by enabling certificate verification
by default and exposing APIs to perform hostname verification. Use theSslConnectorandSslAcceptortypes to take advantage of these new features
(as opposed to the lower-levelSslContexttype). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in string parsing can lead to crashes due to invalid memory access.
reported: June 24, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'simd-json(crates.io)', 'url': '/packages/simd-json.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15550', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15550'}, {'text': 'GHSA-gwfj-pw2x-h6c2', 'url': 'https://github.com/advisories/GHSA-gwfj-pw2x-h6c2'}]
references: [{'text': 'https://github.com/Licenser/simdjson-rs/pull/27', 'url': 'https://github.com/Licenser/simdjson-rs/pull/27'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.1.15
unaffected: <=0.1.13
affected architectures: x86x86_64
description: The affected version of this crate did not guard against accessing memory
beyond the range of its input data. A pointer cast to read the data into
a 256-bit register could lead to a segmentation fault when the end plus
the 32 bytes (256 bit) read would overlap into the next page during string
parsing. This allows an attacker to eventually crash a service. The flaw was corrected by using a padding buffer for the last read from the
input. So that we are we never read over the boundary of the input data. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Panic during initialization of Lazymight trigger undefined behavior
reported: September  1, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'once_cell(crates.io)', 'url': '/packages/once_cell.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16141', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16141'}, {'text': 'GHSA-7j44-fv4x-79g9', 'url': 'https://github.com/advisories/GHSA-7j44-fv4x-79g9'}]
references: [{'text': 'https://github.com/matklad/once_cell/issues/46', 'url': 'https://github.com/matklad/once_cell/issues/46'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0.1
unaffected: <0.2.5
affected functions: Version
once_cell::sync::lazy::deref: <1.0.1, >=0.2.5
once_cell::sync::lazy::force: <1.0.1, >=0.2.5
once_cell::unsync::lazy::deref: <1.0.1, >=0.2.5
once_cell::unsync::lazy::force: <1.0.1, >=0.2.5
description: If during the first dereference of Lazythe initialization function panics,
subsequent dereferences will executestd::hints::unreachable_unchecked. Applications withpanic = "abort"are not affected, as there will be no
subsequent dereferences. Advisory available underCC0-1.0license.
affected_functions: once_cell;;sync;;lazy;;deref
version_of_Affected: <1.0.1, >=0.2.5

---
classification: HIGH
subtitle: Flaw in streaming state reset() functions can create incorrect results.
reported: December 20, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'orion(crates.io)', 'url': '/packages/orion.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2018-20999', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20999'}, {'text': 'GHSA-gffv-5hr2-f9gj', 'url': 'https://github.com/advisories/GHSA-gffv-5hr2-f9gj'}]
references: [{'text': 'https://github.com/brycx/orion/issues/46', 'url': 'https://github.com/brycx/orion/issues/46'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.11.2
description: Affected versions of this crate did not properly reset a streaming state. Resetting a streaming state, without finalising it first, creates incorrect results. The flaw was corrected by not first checking if the state had already been reset, when calling reset(). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Stack overflow when resolving additional records from MX or SRV null targets
reported: January  6, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'trust-dns-server(crates.io)', 'url': '/packages/trust-dns-server.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35857', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35857'}, {'text': 'GHSA-4cww-f7w5-x525', 'url': 'https://github.com/advisories/GHSA-4cww-f7w5-x525'}]
references: [{'text': 'https://github.com/bluejekyll/trust-dns/issues/980', 'url': 'https://github.com/bluejekyll/trust-dns/issues/980'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.18.1
unaffected: <0.16.0
description: There's a stack overflow leading to a crash and potential DOS when processing
additional records for return of MX or SRV record types from the server. This is only possible when a zone is configured with a null target for MX or SRV records, i.e. '.'. Example effected zone record: Prior to 0.16.0 the additional record processing was not supported by trust-dns-server. There
Are no known issues with upgrading from 0.16 or 0.17 to 0.18.1. The remidy should be to upgrade to
0.18.1. If unable to do so, MX, SRV or other record types with a target to the null type, should be avoided. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Failure to properly verify ed25519 signatures makes any signature valid
reported: May 15, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'libp2p-core(crates.io)', 'url': '/packages/libp2p-core.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2019-15545', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15545'}, {'text': 'GHSA-4q4x-67hx-5mpg', 'url': 'https://github.com/advisories/GHSA-4q4x-67hx-5mpg'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: ^0.7.1>=0.8.1
unaffected: <0.3
description: Affected versions of this crate did not properly verify ed25519 signatures.
Any signature with a correct length was considered valid. This allows an attacker to impersonate any node identity. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Chunk API does not respect align requirement
reported: August 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'chunky(crates.io)', 'url': '/packages/chunky.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-36433', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36433'}, {'text': 'GHSA-qg24-8xj4-gj2h', 'url': 'https://github.com/advisories/GHSA-qg24-8xj4-gj2h'}]
references: [{'text': 'https://github.com/aeplay/chunky/issues/2', 'url': 'https://github.com/aeplay/chunky/issues/2'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: no patched versions
description: Chunk API does not respect the align requirement of types. Unaligned reference can be created with the API, which is an undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use-after-free in BodyStream due to lack of pinning
reported: January 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-http(crates.io)', 'url': '/packages/actix-http.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35901', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35901'}, {'text': 'GHSA-v3j6-xf77-8r9c', 'url': 'https://github.com/advisories/GHSA-v3j6-xf77-8r9c'}]
references: [{'text': 'https://github.com/actix/actix-web/issues/1321', 'url': 'https://github.com/actix/actix-web/issues/1321'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.0-alpha.1
description: Affected versions of this crate did not require the buffer wrapped inBodyStreamto be pinned,
but treated it as if it had a fixed location in memory. This may result in a use-after-free. The flaw was corrected by making the traitMessageBodyrequireUnpinand makingpoll_next()function acceptPin<&mut Self>instead of&mut self. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Links in archives can overwrite any existing file
reported: June 29, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'tar(crates.io)', 'url': '/packages/tar.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20990', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20990'}, {'text': 'GHSA-2367-c296-3mp2', 'url': 'https://github.com/advisories/GHSA-2367-c296-3mp2'}]
references: [{'text': 'https://github.com/alexcrichton/tar-rs/pull/156', 'url': 'https://github.com/alexcrichton/tar-rs/pull/156'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.4.16
description: When unpacking a tarball with theunpack_in-family of functions it's intended
that only files within the specified directory are able to be written. Tarballs
with hard links or symlinks, however, can be used to overwrite any file on the
filesystem. Tarballs can contain multiple entries for the same file. A tarball which first
contains an entry for a hard link or symlink pointing to any file on the
filesystem will have the link created, and then afterwards if the same file is
listed in the tarball the hard link will be rewritten and any file can be
rewritten on the filesystem. This has been fixed in https://github.com/alexcrichton/tar-rs/pull/156 and is
published astar0.4.16. Thanks to Max Justicz for discovering this and
emailing about the issue! Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: MisbehavingHandleLikeimplementation can lead to memory safety violation
reported: August 31, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'crayon(crates.io)', 'url': '/packages/crayon.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35889', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35889'}, {'text': 'GHSA-m833-jv95-mfjh', 'url': 'https://github.com/advisories/GHSA-m833-jv95-mfjh'}]
references: [{'text': 'https://github.com/shawnscode/crayon/issues/87', 'url': 'https://github.com/shawnscode/crayon/issues/87'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Unsafe code inObjectPoolhas time-of-check to time-of-use (TOCTOU) bug that
can eventually lead to a memory safety violation.ObjectPoolandHandlePoolimplicitly assumes thatHandleLiketrait methods are pure, i.e., they always
return the same value. However, this assumption is unsound sinceHandleLikeis a safe, public trait that allows a custom implementation. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: An integer underflow could lead to panic
reported: June 21, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'untrusted(crates.io)', 'url': '/packages/untrusted.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20989', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20989'}, {'text': 'GHSA-wq8f-46ww-6c2h', 'url': 'https://github.com/advisories/GHSA-wq8f-46ww-6c2h'}]
references: [{'text': 'https://github.com/briansmith/untrusted/pull/20', 'url': 'https://github.com/briansmith/untrusted/pull/20'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.2
description: A mistake in error handling in untrusted before 0.6.2 could lead to an integer
underflow and panic if a user of the crate didn't properly check for errors
returned by untrusted. Combination of these two programming errors (one in untrusted and another by
user of this crate) could lead to a panic and maybe a denial of service of
affected software. The error in untrusted is fixed in release 0.6.2 released 2018-06-21. It's also
advisable that users of untrusted check for their sources for cases where errors
returned by untrusted are not handled correctly. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Uncontrolled recursion leads to abort in deserialization
reported: September 17, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'yaml-rust(crates.io)', 'url': '/packages/yaml-rust.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20993', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20993'}, {'text': 'GHSA-hv87-47h9-jcvq', 'url': 'https://github.com/advisories/GHSA-hv87-47h9-jcvq'}]
references: [{'text': 'https://github.com/chyh1990/yaml-rust/pull/109', 'url': 'https://github.com/chyh1990/yaml-rust/pull/109'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.1
description: Affected versions of this crate did not prevent deep recursion while
deserializing data structures. This allows an attacker to make a YAML file with deeply nested structures
that causes an abort while deserializing it. The flaw was corrected by checking the recursion depth. Note:clap 2.33is not affected by this because it usesyaml-rustin a way that doesn't trigger the vulnerability. More specifically: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Improper uniqueness verification of signature threshold
reported: July  9, 2020
issued: October  1, 2020(last modified: October 19, 2021)
package: {'name': 'tough(crates.io)', 'url': '/packages/tough.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-15093', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15093'}, {'text': 'GHSA-5q2r-92f9-4m49', 'url': 'https://github.com/advisories/GHSA-5q2r-92f9-4m49'}]
references: [{'text': 'https://github.com/awslabs/tough/security/advisories/GHSA-5q2r-92f9-4m49', 'url': 'https://github.com/awslabs/tough/security/advisories/GHSA-5q2r-92f9-4m49'}]
related: CVE-2020-6174
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N
patched: >=0.7.1
description: The tough library, prior to 0.7.1, does not properly verify the uniqueness of
keys in the signatures provided to meet the threshold of cryptographic
signatures. It allows someone with access to a valid signing key to create
multiple valid signatures in order to circumvent TUF requiring a minimum
threshold of unique keys before the metadata is considered valid. AWS would like to thank Erick Tryzelaar of the Google Fuchsia Team for
reporting this issue. A fix is available in version 0.7.1. CVE-2020-6174 is assigned to the same issue in the TUF reference
implementation. If you have any questions or comments about this advisory, contact AWS Security
at aws-security@amazon.com. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in CBOR deserializer allows stack overflow
reported: October  3, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'serde_cbor(crates.io)', 'url': '/packages/serde_cbor.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2019-25001', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25001'}, {'text': 'GHSA-xr7r-88qv-q7hm', 'url': 'https://github.com/advisories/GHSA-xr7r-88qv-q7hm'}]
references: [{'text': 'https://github.com/pyfisch/cbor/releases/tag/v0.10.2', 'url': 'https://github.com/pyfisch/cbor/releases/tag/v0.10.2'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.10.2
description: Affected versions of this crate did not properly check if semantic tags were nested excessively during deserialization. This allows an attacker to craft small (< 1 kB) CBOR documents that cause a stack overflow. The flaw was corrected by limiting the allowed number of nested tags. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Crash causing Denial of Service attack
reported: April 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2020-1967', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1967'}, {'text': 'GHSA-jq65-29v4-4x35', 'url': 'https://github.com/advisories/GHSA-jq65-29v4-4x35'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20200421.txt', 'url': 'https://www.openssl.org/news/secadv/20200421.txt'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.9
unaffected: <111.6
description: Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3
handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the
"signature_algorithms_cert" TLS extension. The crash occurs if an invalid or unrecognised signature
algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of
Service attack. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Relies on undefined behavior ofchar::from_u32_unchecked
reported: April 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'os_str_bytes(crates.io)', 'url': '/packages/os_str_bytes.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35865', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35865'}, {'text': 'GHSA-q948-x8rf-888m', 'url': 'https://github.com/advisories/GHSA-q948-x8rf-888m'}]
references: [{'text': 'https://github.com/dylni/os_str_bytes/pull/1', 'url': 'https://github.com/dylni/os_str_bytes/pull/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.0
affected oses: windows
description: The Windows implementation of this crate relied on the behavior ofstd::char::from_u32_uncheckedwhen its safety clause is violated.
Even though this worked with Rust versions up to 1.42 (at least),
that behavior could change with any new Rust version, possibly leading
a security issue. The flaw was corrected in version 2.0.0. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use after free in ArcIntern::drop
reported: May 28, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'internment(crates.io)', 'url': '/packages/internment.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35874', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35874'}, {'text': 'GHSA-96w3-p368-4h8c', 'url': 'https://github.com/advisories/GHSA-96w3-p368-4h8c'}]
references: [{'text': 'https://github.com/droundy/internment/issues/11', 'url': 'https://github.com/droundy/internment/issues/11'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
unaffected: <0.3.12
affected functions: Version
internment::arcintern::drop: >=0.3.12
description: ArcIntern::drophas a race condition where it can release memory
which is about to get another user. The new user will get a reference
to freed memory. This was fixed by serializing access to an interned object while it
is being deallocated. Versions prior to 0.3.12 used stronger locking which avoided the problem. Advisory available underCC0-1.0license.
affected_functions: internment;;arcintern;;drop
version_of_Affected: >=0.3.12

---
classification: HIGH
subtitle: Multiple soundness issues in Chunk and InlineArray
reported: September  6, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'sized-chunks(crates.io)', 'url': '/packages/sized-chunks.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-25791', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25791'}, {'text': 'CVE-2020-25792', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25792'}, {'text': 'CVE-2020-25793', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25793'}, {'text': 'CVE-2020-25794', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25794'}, {'text': 'CVE-2020-25795', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25795'}, {'text': 'CVE-2020-25796', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25796'}, {'text': 'GHSA-64gv-qg2v-vxv6', 'url': 'https://github.com/advisories/GHSA-64gv-qg2v-vxv6'}, {'text': 'GHSA-9p9m-9xww-qjcx', 'url': 'https://github.com/advisories/GHSA-9p9m-9xww-qjcx'}, {'text': 'GHSA-fqpx-cq8x-9wp4', 'url': 'https://github.com/advisories/GHSA-fqpx-cq8x-9wp4'}, {'text': 'GHSA-mp6f-p9gp-vpj9', 'url': 'https://github.com/advisories/GHSA-mp6f-p9gp-vpj9'}, {'text': 'GHSA-rfgg-vccr-m46m', 'url': 'https://github.com/advisories/GHSA-rfgg-vccr-m46m'}, {'text': 'GHSA-x54v-qxxr-93qc', 'url': 'https://github.com/advisories/GHSA-x54v-qxxr-93qc'}]
references: [{'text': 'https://github.com/bodil/sized-chunks/issues/11', 'url': 'https://github.com/bodil/sized-chunks/issues/11'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.3
description: Chunk: InlineArray: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Large cookie Max-Age values can cause a denial of service
reported: May  6, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'cookie(crates.io)', 'url': '/packages/cookie.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-18589', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18589'}, {'text': 'GHSA-vjrq-cg9x-rfjp', 'url': 'https://github.com/advisories/GHSA-vjrq-cg9x-rfjp'}]
references: [{'text': 'https://github.com/alexcrichton/cookie-rs/pull/86', 'url': 'https://github.com/alexcrichton/cookie-rs/pull/86'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: <0.6.0^0.6.2>=0.7.6
description: Affected versions of this crate use thetimecrate and the methodDuration::secondsto parse theMax-Ageduration cookie setting. This method
will panic if the value is greater than 2^64/1000 and less than or equal to
2^64, which can result in denial of service for a client or server. This flaw was corrected by explicitly checking for theMax-Agebeing in this
integer range and clamping the value to the maximum duration value. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Uncontrolled search path element vulnerability in rustdoc plugins
reported: July  5, 2018
issued: October  1, 2020
package: {'name': 'rustdoc', 'url': '/packages/rustdoc.html'}
type: Vulnerability
categories: ['code-execution']
references: [{'text': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/4ybxYLTtXuM', 'url': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/4ybxYLTtXuM'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >1.27.0
description: Rustdoc, if not passed the--plugin-pathargument, defaults to/tmp/rustdoc/plugins./tmpis world-writable on many systems, and so an
attacker could craft a malicious plugin, place it in that directory, and the
victim would end up executing their code. This only occurs when the--pluginargument is also passed. If you're not using that argument, then
the loading, and therefore the bug, will not happen. Because this feature is very difficult to use, and has been deprecated for
almost a year2with no comments on its usage, we don't expect this to
affect many users. For more details, read on. Rustdoc has a "plugins" feature that lets you extend rustdoc. To write a
plugin, you create a library with a specific exposed symbol. You instruct
rustdoc to use this plugin, and it will load it, and execute the function as
a callback to modify rustdoc's AST. This feature is quite hard to use, because the function needs to take as
input and return as output Rustdoc's AST type. The Rust project does not ship
a copy oflibrustdocto end users, and so they would have to synthesize
this type on their own. Furthermore, Rust's ABI is unstable, and so
dynamically loading a plugin is only guaranteed to work if the plugin is
compiled with the same compiler revision as the rustdoc that you're using.
Beyond that, the feature and how to use it are completely undocumented. Given all of this, we're not aware of any usage of plugins in the wild,
though the functionality still exists in the codebase. If you pass the--pluginsparameter, let's say with "foo", anddo notpass the--plugin-pathparameter, rustdoc will look for the "foo" plugin
in /tmp/rustdoc/plugins. Given that /tmp is world-writable on many systems,
an attacker with access to your machine could place a maliciously crafted
plugin into /tmp/rustdoc/plugins, and rustdoc would then load the plugin,
and execute the attacker's callback, running arbitrary Rust code as your
user instead of theirs. This functionality was introduced into rustdoc on December 31, 2013, in commit
14f59e890207f3b7a70bcfffaea7ad88656041113. That change was to rename/tmp/rustdoc_ng/pluginsto/tmp/rustdoc/plugins; The addition of this
search path generally came with the first commit to this iteration of rustdoc,
on September 22, 2013, in commit 7b24efd6f333620ed2559d70b32da8f6f99573854. To prevent this bug from happening on any version of Rust, you can always
pass the--plugin-pathflag to control the path. This only applies if
you use the--pluginflag in the first place. For Rust 1.27, we'll be releasing a 1.27.1 on Tuesday with the fix, which
consists of requiring--plugin-pathto be passed whenever--pluginis passed. We will not be releasing our own fixes for previous versions of Rust, given
the low severity and impact of this bug. The patch to fix 1.27 should be
trivially applicable to previous versions, as this code has not changed in
a very long time. The patch is included at the end of this email. If you
need assistance patching an older version of Rust on your own, please reach
out to Steve Klabnik, st...@steveklabnik.com, and he'll be happy to help. On beta and nightly we will be removing plugins entirely. Thanks to Red Hat Product Security, which found this bug. And specifically to
Josh Stone, who took their findings and reported it to us in accordance with
our security policy https://www.rust-lang.org/security.html, as well as providing
feedback on the patch itself. You can find their bug at5. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: proc-macro-error is unmaintained
reported: September  1, 2024
issued: September  5, 2024
package: {'name': 'proc-macro-error(crates.io)', 'url': '/packages/proc-macro-error.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20', 'url': 'https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20'}]
patched: no patched versions
description: proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email. proc-macro-error also depends onsyn 1.x, which may be bringing duplicate dependencies into dependant build trees. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: XmpFile::closecan trigger UB
reported: July 26, 2024
issued: July 26, 2024
package: {'name': 'xmp_toolkit(crates.io)', 'url': '/packages/xmp_toolkit.html'}
type: INFOUnsound
keywords: []
references: [{'text': 'https://github.com/adobe/xmp-toolkit-rs/issues/233', 'url': 'https://github.com/adobe/xmp-toolkit-rs/issues/233'}]
patched: >=1.9.0
affected functions: Version
xmp_toolkit::xmpfile::close: <1.9.0
description: Affected versions of the crate failed to catch C++ exceptions raised within theXmpFile::closefunction. If such an exception occured, it would trigger undefined behavior, typically a process abort. This is best demonstrated inissue #230, where a race condition causes theclosecall to fail due to file I/O errors. This was fixed inPR #232(released as crate version 1.9.0), which now safely handles the exception. For backward compatibility, the existing API ignores the error. A new APIXmpFile::try_closewas added to allow callers to receive and process the error result. Users of all prior versions ofxmp_toolkitare encouraged to update to version 1.9.0 to avoid undefined behavior. Advisory available underCC0-1.0license.
affected_functions: xmp_toolkit;;xmpfile;;close
version_of_Affected: <1.9.0

---
classification: INFO
subtitle: The kstring integration in gix-attributes is unsound
reported: July 24, 2024
issued: July 25, 2024
package: {'name': 'gix-attributes(crates.io)', 'url': '/packages/gix-attributes.html'}
type: INFOUnsound
references: [{'text': 'https://github.com/Byron/gitoxide/issues/1460', 'url': 'https://github.com/Byron/gitoxide/issues/1460'}]
patched: >=0.22.3
description: gix-attributes(instate::ValueRef) unsafely creates a&strfrom a&[u8]containing non-UTF8 data, with the justification that so long as nothing reads the&strand relies on it being UTF-8 in the&str, there is no UB: The problem is that the non-UTF8strisexposed to outside code: first to thekstringcrate itself, which requires UTF-8 in its documentation and may have UB as a consequence of this, but also toserde, where it propagates to e.g.serde_json,serde_yaml, etc., where the same problems occur. This is not sound, and it could cause further UB down the line in these places that can view the&str. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: The cratezip_nexthas been renamed tozip.
reported: April 20, 2024
issued: April 24, 2024
package: {'name': 'zip_next(crates.io)', 'url': '/packages/zip_next.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/zip-rs/zip/issues/446', 'url': 'https://github.com/zip-rs/zip/issues/446'}]
patched: no patched versions
description: Please switch to the new name.zip_nextwill receive no further releases. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rsa-exportis unmaintained
reported: April  6, 2024
issued: April 12, 2024
package: {'name': 'rsa-export(crates.io)', 'url': '/packages/rsa-export.html'}
type: INFOUnmaintained
references: [{'text': 'https://crates.io/crates/rsa-export/0.3.3', 'url': 'https://crates.io/crates/rsa-export/0.3.3'}, {'text': 'https://gitlab.com/smallglitch/rsa-export/-/commit/e29f17170d655a6f62eca8bf1f64ef0ce5807058', 'url': 'https://gitlab.com/smallglitch/rsa-export/-/commit/e29f17170d655a6f62eca8bf1f64ef0ce5807058'}]
patched: no patched versions
description: This crate has been deprecated in favour of using the native support for exporting RSA keys into the standard PEM format.Seedocs.rs documentation. In addition to that, the operations in this crate (arithmetic and Base64 encoding) are not done in constant-time,
potentiallyexposing the user to sidechannel attacks. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: libp2p-tokio-socks5is unmaintained
reported: April  5, 2024
issued: April 12, 2024
package: {'name': 'libp2p-tokio-socks5(crates.io)', 'url': '/packages/libp2p-tokio-socks5.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/comit-network/rust-libp2p-tokio-socks5/commit/e1fdc92ca69ffd254824ab80fbad5660f4aac911', 'url': 'https://github.com/comit-network/rust-libp2p-tokio-socks5/commit/e1fdc92ca69ffd254824ab80fbad5660f4aac911'}]
patched: no patched versions
description: Note the repository was archived without an issue so we link directly
to the commit that marked the repository as unmaintained. To the best of the original authors knowledge the crate has no
vulnerabilities as of the last release, it is just unmaintained due to
laziness - new maintainer welcome. Advisory available underCC-BY-4.0license.

    
      
      
          Source:https://github.com/comit-network/rust-libp2p-tokio-socks5/commit/e1fdc92ca69ffd254824ab80fbad5660f4aac911

---
classification: INFO
subtitle: Puccinier is unmainted.
reported: March 31, 2024
issued: March 31, 2024
package: {'name': 'puccinier(crates.io)', 'url': '/packages/puccinier.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/catppuccin/toolbox/issues/66', 'url': 'https://github.com/catppuccin/toolbox/issues/66'}]
patched: no patched versions
description: The tool has been deprecated in favor of Catppuccin's new tool,whiskers(crates.io). Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: yaml-rust is unmaintained.
reported: March 20, 2024
issued: March 25, 2024
package: {'name': 'yaml-rust(crates.io)', 'url': '/packages/yaml-rust.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rustsec/advisory-db/issues/1921', 'url': 'https://github.com/rustsec/advisory-db/issues/1921'}]
patched: no patched versions
description: The maintainer seemsunreachable. Many issues and pull requests have been submitted over the years
without anyresponse. Consider switching to the actively maintainedyaml-rust2fork of the original project: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: hpackis unmaintained
reported: September 15, 2023
issued: March  6, 2024
package: {'name': 'hpack(crates.io)', 'url': '/packages/hpack.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/mlalic/hpack-rs/issues/8', 'url': 'https://github.com/mlalic/hpack-rs/issues/8'}]
patched: no patched versions
description: Thehpackcrate is no longer maintained. Consider usingfluke-hpackorhttlib-huffman. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Non-idiomatic use of iterators leads to use after free
reported: February 28, 2024
issued: February 28, 2024(last modified: April 11, 2024)
package: {'name': 'cassandra-cpp(crates.io)', 'url': '/packages/cassandra-cpp.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2024-27284', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27284'}, {'text': 'GHSA-x9xc-63hg-vcfq', 'url': 'https://github.com/advisories/GHSA-x9xc-63hg-vcfq'}]
references: [{'text': 'https://github.com/Metaswitch/cassandra-rs/security/advisories/GHSA-x9xc-63hg-vcfq', 'url': 'https://github.com/Metaswitch/cassandra-rs/security/advisories/GHSA-x9xc-63hg-vcfq'}]
patched: >=3.0.0
description: Code that attempts to use an item (e.g., a row) returned by an iterator after the iterator has advanced to the next item will be accessing freed memory and experience undefined behaviour. Code that uses the item and then advances the iterator is unaffected. This problem has always existed. This is a use-after-free bug, so it's rated high severity. If your code uses a pre-3.0.0 version of cassandra-rs, and uses an item returned by a cassandra-rs iterator after callingnext()on that iterator, then it is vulnerable. However, such code will almost always fail immediately - so we believe it is unlikely that any code using this pattern would have reached production. For peace of mind, we recommend you upgrade anyway. The problem has been fixed in version 3.0.0 (commit 299e6ac50f87eb2823a373baec37b590a74994ee). Users should upgrade to ensure their code cannot use the problematic pattern. There is an upgrade guide in the project README. Ensure all usage fits the expected pattern. For example, useget_first_row()rather than an iterator, or completely process an item before advancing the iterator withnext(). Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: safemem is unmaintained
reported: February 14, 2023
issued: February 22, 2024(last modified: March  4, 2024)
package: {'name': 'safemem(crates.io)', 'url': '/packages/safemem.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/abonander/safemem', 'url': 'https://github.com/abonander/safemem'}]
patched: no patched versions
description: The latest crates.io release was in 2019. The repository has been archived by the author. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: filesystem-rs may be implicitly unmaintained
reported: January 25, 2024
issued: February 18, 2024
package: {'name': 'filesystem(crates.io)', 'url': '/packages/filesystem.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/iredelmeier/filesystem-rs/pull/29', 'url': 'https://github.com/iredelmeier/filesystem-rs/pull/29'}]
patched: no patched versions
description: The last release was over 5 years ago, and the last commit was over 4 years ago. The maintainer(s) have not responded to a pull request to update dependencies that are themselves unmaintained, and which poses the question of maintenance. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: generational-arenais unmaintained
reported: February 11, 2024
issued: February 18, 2024
package: {'name': 'generational-arena(crates.io)', 'url': '/packages/generational-arena.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/fitzgen/generational-arena/issues/55', 'url': 'https://github.com/fitzgen/generational-arena/issues/55'}]
patched: no patched versions
description: Thegenerational-arenacrate's repository has been archived and is no longer maintained. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Use-after-free when setting the locale
reported: January 19, 2024
issued: January 23, 2024(last modified: February 10, 2024)
package: {'name': 'rust-i18n-support(crates.io)', 'url': '/packages/rust-i18n-support.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-c8v3-jhv9-4ppc', 'url': 'https://github.com/advisories/GHSA-c8v3-jhv9-4ppc'}]
references: [{'text': 'https://github.com/longbridgeapp/rust-i18n/issues/71', 'url': 'https://github.com/longbridgeapp/rust-i18n/issues/71'}, {'text': 'https://github.com/longbridgeapp/rust-i18n/pull/72', 'url': 'https://github.com/longbridgeapp/rust-i18n/pull/72'}, {'text': 'https://github.com/longbridgeapp/rust-i18n/releases/tag/v3.0.1', 'url': 'https://github.com/longbridgeapp/rust-i18n/releases/tag/v3.0.1'}]
patched: >=3.0.1
unaffected: <3.0.0
affected functions: Version
rust_i18n_support::atomicstr::as_str: <3.0.1, >=3.0.0
description: Version 3.0.0 introduced anAtomicStrtype, that is used to store the current locale.
It stores the locale as a raw pointer to anArc<String>.
The locale can be read withAtomicStr::as_str().AtomicStr::as_str()does not increment the usage counter of theArc. If the locale is changed in one thread, another thread can have a stale -- possibly already freed --
reference to the stored string. Advisory available underCC0-1.0license.
affected_functions: rust_i18n_support;;atomicstr;;as_str
version_of_Affected: <3.0.1, >=3.0.0

---
classification: INFO
subtitle: Unsound sending of non-Send types across threads
reported: January  7, 2024
issued: January 22, 2024(last modified: February 10, 2024)
package: {'name': 'threadalone(crates.io)', 'url': '/packages/threadalone.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-w59h-378f-2frm', 'url': 'https://github.com/advisories/GHSA-w59h-378f-2frm'}]
references: [{'text': 'https://github.com/cr0sh/threadalone/issues/1', 'url': 'https://github.com/cr0sh/threadalone/issues/1'}]
patched: >=0.2.1
description: Affected versions can run theDropimpl of a non-Send type on a different
thread than it was created on. The flaw occurs when a stderr write performed by thethreadalonecrate fails,
for example because stderr is redirected to a location on a filesystem that is
full, or because stderr is a pipe that has been closed by the reader. Dropping a non-Send type on the wrong thread is unsound. If used with a type
such as a pthread-basedMutexGuard,the consequence is undefined
behavior. If used withRc, there would be a data race on the
reference count, which is likewise undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cosmwasmis unmaintained
reported: January 20, 2024
issued: January 21, 2024
package: {'name': 'cosmwasm(crates.io)', 'url': '/packages/cosmwasm.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/CosmWasm/cosmwasm/issues/1430', 'url': 'https://github.com/CosmWasm/cosmwasm/issues/1430'}]
patched: no patched versions
description: The cratecosmwasmisnot used anymoresince spring 2020.
The functionality was split in multiple different crates, such as the standard librarycosmwasm-stdand the virtual machinecosmwasm-vm. An overview can be found in thecosmwasm repository. If you have this crate in your dependency tree, this is very likely by mistake and should be corrected. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Potential stack use-after-free inInstrumented::into_inner
reported: October 19, 2023
issued: January 13, 2024(last modified: February 10, 2024)
package: {'name': 'tracing(crates.io)', 'url': '/packages/tracing.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-8f24-6m29-wm2r', 'url': 'https://github.com/advisories/GHSA-8f24-6m29-wm2r'}]
references: [{'text': 'https://github.com/tokio-rs/tracing/pull/2765', 'url': 'https://github.com/tokio-rs/tracing/pull/2765'}]
patched: >=0.1.40
unaffected: <=0.1.37
affected functions: Version
tracing::instrument::instrumented::into_inner: >=0.1.38<0.1.40
description: The implementation of theInstrumented::into_innermethod in affected
versions of this crate contains undefined behavior due to incorrect use ofstd::mem::forgetThe function creates*constpointers toself, callsmem::forget(self), and then moves values out of those
pointers usingstd::ptr::read. However, themem::forgetdocumentationstates: This means that these pointers are no longer valid. This could result in a stack
use-after-free if LLVM chooses to reuseself's stack slot for a rebinding
after the call tostd::mem::forget. This undefined behavior has not been observed to cause miscompilation as of Rust
1.73.0. However, any use of this method with the affected versions oftracingare unsound. The flaw was corrected in commit20a1762(PR #2765) by replacing the use ofstd::mem::forgetwithstd::mem::ManuallyDrop, ensuring that the stack slot
is not reused and the pointers remain valid when they are read. The fix is
published intracingv0.1.40. Affected versions have been yanked from
crates.io. Thanks toTaylor CramerandManish Goregaokarfor finding and correcting
this issue! Advisory available underCC0-1.0license.
affected_functions: tracing;;instrument;;instrumented;;into_inner
version_of_Affected: >=0.1.38<0.1.40

---
classification: INFO
subtitle: Unsound use of str::from_utf8_unchecked on bytes which are not UTF-8
reported: January 13, 2024
issued: January 13, 2024(last modified: February 10, 2024)
package: {'name': 'ferris-says(crates.io)', 'url': '/packages/ferris-says.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-v363-rrf2-5fmj', 'url': 'https://github.com/advisories/GHSA-v363-rrf2-5fmj'}]
references: [{'text': 'https://github.com/rust-lang/ferris-says/pull/21', 'url': 'https://github.com/rust-lang/ferris-says/pull/21'}]
patched: >=0.3.1
unaffected: <=0.1.2
description: Affected versions receive a&[u8]from the caller through a safe API, and pass
it directly to the unsafestr::from_utf8_uncheckedfunction. The behavior offerris_says::sayis undefined if the bytes from the caller
don't happen to be valid UTF-8. The flaw was corrected inferris-says#21by using the safestr::from_utf8instead, and returning an error on invalid input. However this fix has not yet
been published to crates.io as a patch version for 0.2. Separately,ferris-says#32has introduced a different API for version 0.3
which accepts input as&strrather than&[u8], so is unaffected by this bug. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cpythonis unmaintained
reported: November 14, 2023
issued: December 20, 2023
package: {'name': 'cpython(crates.io)', 'url': '/packages/cpython.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dgrunwald/rust-cpython/commit/e815555', 'url': 'https://github.com/dgrunwald/rust-cpython/commit/e815555'}, {'text': 'https://github.com/dgrunwald/rust-cpython/issues/265', 'url': 'https://github.com/dgrunwald/rust-cpython/issues/265'}, {'text': 'https://github.com/dgrunwald/rust-cpython/issues/294', 'url': 'https://github.com/dgrunwald/rust-cpython/issues/294'}]
patched: no patched versions
description: Thecpythoncrate and the underlyingpython3-sysandpython27-syscrates have been marked asno longer actively maintainedby the developer. There are also open issues for unsound code that is currently in these crates: Thepyo3crate is actively maintained. Preliminary support for Python 3.12 was added in version 0.19.2, and version 0.20.0 was released with full support for Python 3.12. Both versions implement string functions correctly on big-endian architectures. The endianness issue affecting thecpythoncrate was fixed in recent versions ofpyo3. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unaligned write of u64 on 32-bit and 16-bit platforms
reported: December 20, 2023
issued: December 20, 2023(last modified: February 10, 2024)
package: {'name': 'unsafe-libyaml(crates.io)', 'url': '/packages/unsafe-libyaml.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-r24f-hg58-vfrw', 'url': 'https://github.com/advisories/GHSA-r24f-hg58-vfrw'}]
references: [{'text': 'https://github.com/dtolnay/unsafe-libyaml/issues/21', 'url': 'https://github.com/dtolnay/unsafe-libyaml/issues/21'}]
patched: >=0.2.10
description: Affected versions allocate memory using the alignment ofusizeand write data
to it of typeu64, without usingcore::ptr::write_unaligned. In platforms
with sub-64bit alignment forusize(including wasm32 and x86) these writes
are insufficiently aligned some of the time. If using an ordinary optimized standard library, the bug exhibits Undefined
Behavior so may or may not behave in any sensible way, depending on
optimization settings and hardware and other things. If using a Rust standard
library built with debug assertions enabled, the bug manifests deterministically
in a crash (non-unwinding panic) saying"ptr::write requires that the pointer
argument is aligned and non-null". No 64-bit platform is impacted by the bug. The flaw was corrected by allocating with adequately high alignment on all
platforms. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: opensslX509StoreRef::objectsis unsound
reported: November 23, 2023
issued: November 28, 2023(last modified: February 10, 2024)
package: {'name': 'openssl(crates.io)', 'url': '/packages/openssl.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-xphf-cx8h-7q9g', 'url': 'https://github.com/advisories/GHSA-xphf-cx8h-7q9g'}]
references: [{'text': 'https://github.com/sfackler/rust-openssl/issues/2096', 'url': 'https://github.com/sfackler/rust-openssl/issues/2096'}]
patched: >=0.10.60
affected functions: Version
openssl::x509::store::x509storeref::objects: <0.10.60, >=0.10.29
description: This function returned a shared reference into an OpenSSL datastructure but did not account for interior mutability. OpenSSL may modify the data behind this reference, meaning accesses can race and the reference is unsound. Use of this function should be replaced withX509StoreRef::all_certificates. Advisory available underCC0-1.0license.
affected_functions: openssl;;x509;;store;;x509storeref;;objects
version_of_Affected: <0.10.60, >=0.10.29

---
classification: INFO
subtitle: fehleris unmaintained; useculpainstead
reported: October 12, 2023
issued: October 14, 2023
package: {'name': 'fehler(crates.io)', 'url': '/packages/fehler.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/withoutboats/fehler/issues/66', 'url': 'https://github.com/withoutboats/fehler/issues/66'}]
patched: no patched versions
description: Thefehlercrate is no longer maintained.
Consider usingculpainstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unaligned read of*const *const c_charpointer
reported: September 10, 2023
issued: September 10, 2023(last modified: February 10, 2024)
package: {'name': 'users(crates.io)', 'url': '/packages/users.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-jcr6-4frq-9gjj', 'url': 'https://github.com/advisories/GHSA-jcr6-4frq-9gjj'}]
references: [{'text': 'https://github.com/ogham/rust-users/issues/55', 'url': 'https://github.com/ogham/rust-users/issues/55'}]
patched: no patched versions
description: Affected versions dereference a potentially unaligned pointer. The pointer is
commonly unaligned in practice, resulting in undefined behavior. In some build modes, this is observable as a panic followed by abort. In other
build modes the UB may manifest in some other way, including the possibility of
working correctly in some architectures. The crate is not currently maintained, so a patched version is not available. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Fails to prohibit standard library access prior to initialization of Rust standard library runtime
reported: September 10, 2023
issued: September 10, 2023(last modified: February 10, 2024)
package: {'name': 'inventory(crates.io)', 'url': '/packages/inventory.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-ghc8-5cgm-5rpf', 'url': 'https://github.com/advisories/GHSA-ghc8-5cgm-5rpf'}]
references: [{'text': 'https://github.com/dtolnay/inventory/pull/43', 'url': 'https://github.com/dtolnay/inventory/pull/43'}]
patched: >=0.2.0
description: Affected versions allow arbitrary caller-provided code to execute before the
lifetime ofmain. If the caller-provided code accesses particular pieces of the standard library
that require an initialized Rust runtime, such asstd::ioorstd::thread,
these may not behave as documented. Panics are likely; UB is possible. The flaw was corrected by enforcing that only code written within theinventorycrate, which is guaranteed not to access runtime-dependent parts of
the standard library, runs beforemain. Caller-provided code is restricted to
running at compile time. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Exposes reference to non-Sync data to an arbitrary thread
reported: September 10, 2023
issued: September 10, 2023(last modified: February 10, 2024)
package: {'name': 'inventory(crates.io)', 'url': '/packages/inventory.html'}
type: INFOUnsound
categories: ['thread-safety']
keywords: []
aliases: [{'text': 'GHSA-36xm-35qq-795w', 'url': 'https://github.com/advisories/GHSA-36xm-35qq-795w'}]
references: [{'text': 'https://github.com/dtolnay/inventory/pull/42', 'url': 'https://github.com/dtolnay/inventory/pull/42'}]
patched: >=0.2.0
description: Affected versions do not enforce aSyncbound on the type of caller-provided
value held in the plugin registry. References to these values are made
accessible to arbitrary threads other than the one that constructed them. A caller could use this flaw to submit thread-unsafe data into inventory, then
access it as a reference simultaneously from multiple threads. The flaw was corrected by enforcing that data submitted by the caller into
inventory isSync. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Multiple soundness issues
reported: September  3, 2023
issued: September  3, 2023(last modified: July  2, 2024)
package: {'name': 'lexical(crates.io)', 'url': '/packages/lexical.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-c2hm-mjxv-89r4', 'url': 'https://github.com/advisories/GHSA-c2hm-mjxv-89r4'}]
references: [{'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/102', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/102'}, {'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/101', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/101'}, {'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/95', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/95'}, {'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/104', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/104'}]
patched: no patched versions
description: lexicalcontains multiple soundness issues: The crate also has some correctness issues and appears to be unmaintained. For quickly parsing floating-point numbers third-party crates are no longer needed. A fast float parsing algorithm by the author oflexicalhas beenmergedinto libcore. For quickly parsing integers, consideratoiandbtoicrates (100% safe code).atoi_radix10provides even faster parsing, but only with-C target-cpu=native, and at the cost of someunsafe. For formatting integers in a#[no_std]context consider thenumtoacrate. For working with big numbers considernum-bigintandnum-traits. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: dlopen_deriveis unmaintained
reported: July 30, 2023
issued: August 19, 2023
package: {'name': 'dlopen_derive(crates.io)', 'url': '/packages/dlopen_derive.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/szymonwieloch/rust-dlopen/issues/47', 'url': 'https://github.com/szymonwieloch/rust-dlopen/issues/47'}]
patched: no patched versions
description: dlopen_derivehasn't been updated since June 9, 2019. dlopen_derivedepends onquote = "0.6.12"andsyn = "0.15.34". Versions1.0.0of these dependencies were published on August 13, 2019. The0.*versions haven't received updates since. Note thatdlopenis an unmaintained crate from the same repository asdlopen_derive. However, migrating away fromdlopen_deriveimplies migrating away fromdlopen, as well. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: multipart is Unmaintained
reported: April 11, 2023
issued: August 18, 2023
package: {'name': 'multipart(crates.io)', 'url': '/packages/multipart.html'}
type: INFOUnmaintained
patched: no patched versions
description: Themultipartcrate is unmaintained. The author has archived the github
repository. Alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tuiis unmaintained; useratatuiinstead
reported: August  7, 2023
issued: August  7, 2023
package: {'name': 'tui(crates.io)', 'url': '/packages/tui.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/fdehau/tui-rs/issues/654', 'url': 'https://github.com/fdehau/tui-rs/issues/654'}]
patched: no patched versions
description: Thetuicrate is no longer maintained. Consider using theratatuicrate instead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsoundness ininternmethods onintagliosymbol interners
reported: July 26, 2023
issued: July 27, 2023(last modified: July 29, 2023)
package: {'name': 'intaglio(crates.io)', 'url': '/packages/intaglio.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-gch5-hwqf-mxhp', 'url': 'https://github.com/advisories/GHSA-gch5-hwqf-mxhp'}]
references: [{'text': 'https://github.com/artichoke/intaglio/pull/236', 'url': 'https://github.com/artichoke/intaglio/pull/236'}, {'text': 'https://github.com/artichoke/intaglio/issues/235', 'url': 'https://github.com/artichoke/intaglio/issues/235'}, {'text': 'https://github.com/artichoke/intaglio/pull/236', 'url': 'https://github.com/artichoke/intaglio/pull/236'}, {'text': 'https://github.com/artichoke/intaglio/releases/tag/v1.9.0', 'url': 'https://github.com/artichoke/intaglio/releases/tag/v1.9.0'}]
patched: >=1.9.0
affected functions: Version
intaglio::symboltable::intern: <1.9.0
intaglio::bytes::symboltable::intern: <1.9.0
intaglio::cstr::symboltable::intern: <1.9.0, >=1.5.0
intaglio::osstr::symboltable::intern: <1.9.0, >=1.5.0
intaglio::path::symboltable::intern: <1.9.0, >=1.5.0
description: Affected versions of this crate have a stacked borrows violation when creating
references to interned contents. All interner types are affected. The flaw was corrected in version 1.9.0 by reordering move and borrowing
operations and storing interned contents by raw pointer instead of as aBox. Advisory available underCC0-1.0license.
affected_functions: intaglio;;symboltable;;intern
version_of_Affected: <1.9.0

---
classification: INFO
subtitle: implFromMdbValuefor bool is unsound
reported: June 26, 2023
issued: July 18, 2023(last modified: July 29, 2023)
package: {'name': 'lmdb-rs(crates.io)', 'url': '/packages/lmdb-rs.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-f9g6-fp84-fv92', 'url': 'https://github.com/advisories/GHSA-f9g6-fp84-fv92'}]
references: [{'text': 'https://github.com/vhbit/lmdb-rs/issues/67', 'url': 'https://github.com/vhbit/lmdb-rs/issues/67'}]
patched: no patched versions
description: The implementation ofFromMdbValuehave several unsoundness issues. First of all, it allows to reinterpret arbitrary bytes as a bool and could make undefined behavior happen with safe function. Secondly, it allows transmuting pointer without taking memory layout into consideration. The details of reproducing the bug were included in url above. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Misaligned pointer dereference inChunkId::new
reported: June 15, 2023
issued: June 22, 2023(last modified: July  8, 2023)
package: {'name': 'cyfs-base(crates.io)', 'url': '/packages/cyfs-base.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-g753-ghr7-q33w', 'url': 'https://github.com/advisories/GHSA-g753-ghr7-q33w'}]
references: [{'text': 'https://github.com/buckyos/CYFS/issues/275', 'url': 'https://github.com/buckyos/CYFS/issues/275'}]
patched: no patched versions
description: The functionChunkId::newcreates a misaligned pointer by casting mutable pointer ofu8slice which has alignment 1 to the mutable pointer ofu32which has alignment 4, and dereference the misaligned pointer leading UB, which should not be allowed in safe function. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: memoffset allows reading uninitialized memory
reported: June 21, 2023
issued: June 21, 2023(last modified: July  8, 2023)
package: {'name': 'memoffset(crates.io)', 'url': '/packages/memoffset.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-wfg4-322g-9vqv', 'url': 'https://github.com/advisories/GHSA-wfg4-322g-9vqv'}]
references: [{'text': 'https://github.com/Gilnaa/memoffset/issues/24', 'url': 'https://github.com/Gilnaa/memoffset/issues/24'}]
patched: >=0.6.2
affected functions: Version
memoffset::offset_of: <0.6.2
description: memoffset allows attempt of reading data from address0with arbitrary type. This behavior is an undefined behavior because address0tostd::mem::size_of<T>may not have valid bit-pattern withT. Old implementation dereferences uninitialized memory obtained fromstd::mem::align_of. Older implementation prior to it allows using uninitialized data obtained fromstd::mem::uninitializedwith arbitrary type then compute offset by taking the address of field-projection. This may also result in an undefined behavior for "father" that includes (directly or transitively) type thatdoes not allow to be uninitialized. This flaw was corrected by usingstd::ptr::addr_ofinhttps://github.com/Gilnaa/memoffset/pull/50. Advisory available underCC0-1.0license.
affected_functions: memoffset;;offset_of
version_of_Affected: <0.6.2

---
classification: INFO
subtitle: ftp is unmaintained, use suppaftp instead
reported: February 20, 2023
issued: June 14, 2023
package: {'name': 'ftp(crates.io)', 'url': '/packages/ftp.html'}
type: INFOUnmaintained
keywords: []
references: [{'text': 'https://github.com/mattnenterprise/rust-ftp/pull/92', 'url': 'https://github.com/mattnenterprise/rust-ftp/pull/92'}, {'text': 'https://github.com/mattnenterprise/rust-ftp/issues/91', 'url': 'https://github.com/mattnenterprise/rust-ftp/issues/91'}, {'text': 'https://github.com/mattnenterprise/rust-ftp/issues/84', 'url': 'https://github.com/mattnenterprise/rust-ftp/issues/84'}]
patched: no patched versions
description: Theftpcrate is not maintained any more;
usesuppaftpinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Ouroboros is Unsound
reported: June 11, 2023
issued: June 12, 2023(last modified: July  8, 2023)
package: {'name': 'ouroboros(crates.io)', 'url': '/packages/ouroboros.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-87mf-9wg6-ppf8', 'url': 'https://github.com/advisories/GHSA-87mf-9wg6-ppf8'}]
references: [{'text': 'https://github.com/joshua-maros/ouroboros/issues/88', 'url': 'https://github.com/joshua-maros/ouroboros/issues/88'}]
patched: >=0.16.0
description: Ouroboros has a soundness problem, but a fix has been implemented in 0.16.0. In 0.15.0, Ouroboros works internally by creating a struct where all
uses of 'this are replaced by 'static. However, a recent addition to
Miri checks that references passed to functions are valid during the
entire execution of the function, even when those references are
passed inside a struct. This poses an issue for dropping
self-referencing values, as the reference becomes invalid during the
dropping process. Effectively, since self-referencing structs are
not allowed in vanilla Rust, there is no allowance for dropping data
during a function that has also been given a reference to that data.
There's usually no way to pass a and &a to the same function. A fix was attempted, where the struct would be turned in to a raw
byte array and only transformed back into the underlying data type
inside each function. This is allowable as a reference can be
created and die over the body of a function, as long as the
reference was created inside the function. However, this is also
not sound if the original struct contains padding. There is no
way to initialize padding bytes to a known value that Miri will
accept, so when it is cast to an array some of the bytes contain
uninitialized values. This is not acceptable (despite the fact
that these bytes are never read) due to the potential for
optimizations that may read from the uninitialized bytes. Besides
which, this fix does not allow for template or constant parameters
as there is no way to check the size of a templated type without
giving specific, concrete values for the template parameters. The final solution was to use this fix while wrapping the raw byte
array inMaybeUninit<>. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: userscrate is unmaintained
reported: June  1, 2023
issued: June  1, 2023(last modified: August 21, 2023)
package: {'name': 'users(crates.io)', 'url': '/packages/users.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/ogham/rust-users/issues/54', 'url': 'https://github.com/ogham/rust-users/issues/54'}]
patched: no patched versions
description: Theuserscrate hasn't seen any action since 2020-10-08. The developer seemsMIAsince. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tocrypto_secretbox
reported: May 16, 2023
issued: May 16, 2023
package: {'name': 'xsalsa20poly1305(crates.io)', 'url': '/packages/xsalsa20poly1305.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/AEADs/pull/525', 'url': 'https://github.com/RustCrypto/AEADs/pull/525'}]
patched: no patched versions
description: This crate has been forked/renamed fromxsalsa20poly1305tocrypto_secretbox. The new repository location is at: https://github.com/RustCrypto/nacl-compat/tree/master/crypto_secretbox Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tree_magic is Unmaintained
reported: April 11, 2023
issued: April 24, 2023
package: {'name': 'tree_magic(crates.io)', 'url': '/packages/tree_magic.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/aahancoc/tree_magic/issues/16', 'url': 'https://github.com/aahancoc/tree_magic/issues/16'}]
patched: no patched versions
description: Thetree_magiccrate is unmaintained. The author has archived the github
repository. Alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Adverserial use ofmake_bitflags!macro can cause undefined behavior
reported: April 17, 2023
issued: April 23, 2023(last modified: June 13, 2023)
package: {'name': 'enumflags2(crates.io)', 'url': '/packages/enumflags2.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-qvc4-78gw-pv8p', 'url': 'https://github.com/advisories/GHSA-qvc4-78gw-pv8p'}]
references: [{'text': 'https://github.com/meithecatte/enumflags2/releases/tag/v0.7.7', 'url': 'https://github.com/meithecatte/enumflags2/releases/tag/v0.7.7'}]
patched: >=0.7.7
unaffected: <0.7.0
description: The macro relied on an expression of the formEnum::Variantalways being a
variant of the enum. However, it may also be an associated integer constant, in
which case there's no guarantee that the value of said constant consists only of
bits valid for this bitflag type. Thus, code like this could create an invalidBitFlags<Test>, which would cause
iterating over it to trigger undefined behavior. As the debug formatter
internally iterates over the value, it is also affected. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Parsing borsh messages with ZST which are not-copy/clone is unsound
reported: April 12, 2023
issued: April 13, 2023(last modified: September 28, 2023)
package: {'name': 'borsh(crates.io)', 'url': '/packages/borsh.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-fjx5-qpf4-xjf2', 'url': 'https://github.com/advisories/GHSA-fjx5-qpf4-xjf2'}]
references: [{'text': 'https://github.com/near/borsh-rs/issues/19', 'url': 'https://github.com/near/borsh-rs/issues/19'}, {'text': 'https://github.com/near/borsh-rs/pull/136', 'url': 'https://github.com/near/borsh-rs/pull/136'}]
patched: >=1.0.0-alpha.1
description: Affected versions of borsh cause undefined behavior when zero-sized-types (ZST)
are parsed and the Copy/Clone traits are not implemented/derived.
For instance if 1000 instances of a ZST are deserialized, and the ZST is not copy
(this can be achieved through a singleton), then accessing/writing to deserialized
data will cause a segmentation fault. There is currently no way for borsh to read data without also providing a Rust type.
Therefore, if not ZST are used for serialization, then you are not affected by this issue. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsound FFI: Wrong API usage causes write past allocated area
reported: March 22, 2023
issued: April  6, 2023(last modified: June 13, 2023)
package: {'name': 'ntru(crates.io)', 'url': '/packages/ntru.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-fq33-vmhv-48xh', 'url': 'https://github.com/advisories/GHSA-fq33-vmhv-48xh'}]
references: [{'text': 'https://github.com/FrinkGlobal/ntru-rs/issues/8', 'url': 'https://github.com/FrinkGlobal/ntru-rs/issues/8'}]
patched: no patched versions
affected functions: Version
ntru::types::privatekey::export: >=0.4.3
ntru::types::publickey::export: >=0.4.3
description: The following usage causes undefined behavior. When compiled with debug assertions, the code above will trigger aattempt to subtract with overflowpanic before UB occurs.
Other mistakes (e.g. usingEncParamsfrom a different key) may always trigger UB. Likely, older versions of this crate are also affected, but have not been tested. Advisory available underCC0-1.0license.
affected_functions: ntru;;types;;privatekey;;export
version_of_Affected: >=0.4.3

---
classification: INFO
subtitle: Initialisation failure inOnce::try_call_oncecan lead to undefined behaviour for other initialisers
reported: March 31, 2023
issued: April  4, 2023(last modified: June 13, 2023)
package: {'name': 'spin(crates.io)', 'url': '/packages/spin.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-2qv5-7mw5-j3cg', 'url': 'https://github.com/advisories/GHSA-2qv5-7mw5-j3cg'}]
references: [{'text': 'https://github.com/mvdnes/spin-rs/issues/148', 'url': 'https://github.com/mvdnes/spin-rs/issues/148'}]
patched: >=0.9.8
unaffected: <0.9.3
description: Once::try_call_onceis unsound if invoked more than once concurrently and any call fails to initialise successfully. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Gitoxide has renamed its crates.
reported: March 14, 2023
issued: March 25, 2023
package: {'name': 'git-path(crates.io)', 'url': '/packages/git-path.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Byron/gitoxide/pull/741', 'url': 'https://github.com/Byron/gitoxide/pull/741'}]
patched: no patched versions
description: All crates in the gitoxide project have been renamed from git-to
gix-. The git- prefixed crates are no longer being updated. Switch
to using gix-path to continue receiving updates. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Gitoxide has renamed its crates.
reported: March 14, 2023
issued: March 25, 2023
package: {'name': 'git-hash(crates.io)', 'url': '/packages/git-hash.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Byron/gitoxide/pull/741', 'url': 'https://github.com/Byron/gitoxide/pull/741'}]
patched: no patched versions
description: All crates in the gitoxide project have been renamed from git-to
gix-. The git- prefixed crates are no longer being updated. Switch
to using gix-hash to continue receiving updates. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: buf_redux is Unmaintained
reported: January 24, 2023
issued: March 25, 2023
package: {'name': 'buf_redux(crates.io)', 'url': '/packages/buf_redux.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/abonander/buf_redux/issues', 'url': 'https://github.com/abonander/buf_redux/issues'}]
patched: no patched versions
description: Last release was over three years ago. The maintainer(s) have been unreachable to respond to any issues that may or may not include security issues. The repository is now archived and there is no security policy in place to contact the maintainer(s) otherwise. The safety-undocumented unsafe in the crate may or may not be safe to use. The crate also has a current future incompatibility warningbuf_redux/23. The below may or may not provide alternative(s) Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rmp-serdeRawandRawRefunsound
reported: April 13, 2022
issued: March 22, 2023(last modified: June 13, 2023)
package: {'name': 'rmp-serde(crates.io)', 'url': '/packages/rmp-serde.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-255r-3prx-mf99', 'url': 'https://github.com/advisories/GHSA-255r-3prx-mf99'}]
references: [{'text': 'https://github.com/3Hren/msgpack-rust/issues/305', 'url': 'https://github.com/3Hren/msgpack-rust/issues/305'}]
patched: >=1.1.1
description: It was found thatRaw::from_utf8expects valid UTF-8. If invalid UTF-8 is received it can cause the process to crash. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: const-cstr is Unmaintained
reported: March 12, 2023
issued: March 13, 2023
package: {'name': 'const-cstr(crates.io)', 'url': '/packages/const-cstr.html'}
type: INFOUnsound
references: [{'text': 'https://github.com/abonander/const-cstr', 'url': 'https://github.com/abonander/const-cstr'}]
patched: no patched versions
description: Last release was about five years ago. The maintainer(s) have been unreachable to respond to any issues that may or may not include security issues. The repository is now archived and there is no security policy in place to contact the maintainer(s) otherwise. No direct fork exist. The crate violates the safety contract offfi::CStr::from_bytes_with_nul_uncheckedused inConstCStr::as_cstr No interior nul bytes checking is done either by the constructor or the canonical macro to create theConstCStr Additionally the crate may cause runtime panics if statically compiled and ran with any untrusted data that is not nul-terminated. This is however unlikely but the the crate should not be used for untrusted data in context where panic may create a DoS vector. The below may or may not provide alternative(s) Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: encodingis unmaintained
reported: December  5, 2021
issued: March 12, 2023
package: {'name': 'encoding(crates.io)', 'url': '/packages/encoding.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/lifthrasiir/rust-encoding/issues/127', 'url': 'https://github.com/lifthrasiir/rust-encoding/issues/127'}]
patched: no patched versions
description: Last release was on 2016-08-28. Theissueinquiring as to the status of the crate has gone unanswered by the maintainer. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: boxfnonceobsolete with release of Rust 1.35.0
reported: June 20, 2019
issued: March 12, 2023
package: {'name': 'boxfnonce(crates.io)', 'url': '/packages/boxfnonce.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/stbuehler/rust-boxfnonce/commit/058ac7e1a7d732076da9d8a37baa66bcb67758d8', 'url': 'https://github.com/stbuehler/rust-boxfnonce/commit/058ac7e1a7d732076da9d8a37baa66bcb67758d8'}]
patched: no patched versions
description: Thiscommit marks theboxfnoncecrate as obsolete and the GitHub repo has since been archived. The functionality ofboxfnoncehas been added to Rust since 1.35.0. UseBox<dyn FnOnce(...) -> ...>. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: nphysics2d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'nphysics2d(crates.io)', 'url': '/packages/nphysics2d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/nphysics', 'url': 'https://github.com/dimforge/nphysics'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theRapierproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mach is unmaintained
reported: July 14, 2020
issued: March 12, 2023
package: {'name': 'mach(crates.io)', 'url': '/packages/mach.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/fitzgen/mach/issues/63', 'url': 'https://github.com/fitzgen/mach/issues/63'}]
patched: no patched versions
description: Last release was almost 4 years ago. Maintainer(s) seem to be completely unreachable. These may or may not be suitable alternatives and have not been vetted in any way; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: ncollide2d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'ncollide2d(crates.io)', 'url': '/packages/ncollide2d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/ncollide', 'url': 'https://github.com/dimforge/ncollide'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theParryproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: out_reference::Out::from_rawshould beunsafe
reported: January 20, 2021
issued: March 12, 2023(last modified: June 13, 2023)
package: {'name': 'out-reference(crates.io)', 'url': '/packages/out-reference.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-p7mj-xvxg-grff', 'url': 'https://github.com/advisories/GHSA-p7mj-xvxg-grff'}]
references: [{'text': 'https://github.com/RustyYato/out-ref/issues/1', 'url': 'https://github.com/RustyYato/out-ref/issues/1'}]
patched: >=0.2.0
unaffected: <0.1.0
affected functions: Version
out_reference::out::from_raw: >=0.1.0, <0.2.0
description: Out::from_rawin affected versions allows writing a value to invalid memory address without requiringunsafe. The soundness issue has been addressed by makingOut::from_rawan unsafe function. Advisory available underCC0-1.0license.
affected_functions: out_reference;;out;;from_raw
version_of_Affected: >=0.1.0, <0.2.0

---
classification: INFO
subtitle: nphysics3d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'nphysics3d(crates.io)', 'url': '/packages/nphysics3d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/nphysics', 'url': 'https://github.com/dimforge/nphysics'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theRapierproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: ncollide3d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'ncollide3d(crates.io)', 'url': '/packages/ncollide3d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/ncollide', 'url': 'https://github.com/dimforge/ncollide'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theParryproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: kuchikiis unmaintained
reported: January 21, 2023
issued: March  7, 2023(last modified: May 23, 2023)
package: {'name': 'kuchiki(crates.io)', 'url': '/packages/kuchiki.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/kuchiki-rs/kuchiki/commit/f92e4c047fdc30619555da282ac7ccce1d313aa6', 'url': 'https://github.com/kuchiki-rs/kuchiki/commit/f92e4c047fdc30619555da282ac7ccce1d313aa6'}]
patched: no patched versions
description: Thekuchikirepo was marked as archived inthiscommit. Possible alternatives may include: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: maligned::align_firstcauses incorrect deallocation
reported: March  4, 2023
issued: March  4, 2023(last modified: June 13, 2023)
package: {'name': 'maligned(crates.io)', 'url': '/packages/maligned.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-wm8x-php5-hvq6', 'url': 'https://github.com/advisories/GHSA-wm8x-php5-hvq6'}]
references: [{'text': 'https://github.com/tylerhawkes/maligned/issues/5', 'url': 'https://github.com/tylerhawkes/maligned/issues/5'}]
patched: no patched versions
affected functions: Version
maligned::align_first: *
maligned::align_first_boxed: *
maligned::align_first_boxed_cloned: *
maligned::align_first_boxed_default: *
description: maligned::align_firstmanually allocates with an alignment larger than T, and then usesVec::from_raw_partson that allocation to get aVec<T>. GlobalAlloc::deallocrequires that thelayoutargument must be the same layout that was used to allocate that block of memory. When deallocating,BoxandVecmay not respect the specified alignment and can cause undefined behavior. Advisory available underCC0-1.0license.
affected_functions: maligned;;align_first
version_of_Affected: *

---
classification: INFO
subtitle: Ascii allows out-of-bounds array indexing in safe code
reported: February 25, 2023
issued: February 25, 2023(last modified: June 13, 2023)
package: {'name': 'ascii(crates.io)', 'url': '/packages/ascii.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-mrrw-grhq-86gf', 'url': 'https://github.com/advisories/GHSA-mrrw-grhq-86gf'}]
references: [{'text': 'https://github.com/tomprogrammer/rust-ascii/issues/64', 'url': 'https://github.com/tomprogrammer/rust-ascii/issues/64'}]
patched: >=0.9.3
unaffected: <=0.6.0
description: Affected version of this crate had implementation ofFrom<&mut AsciiStr>for&mut [u8]and&mut str. This can result in out-of-bounds array indexing in safe code. The flaw was corrected in commit8a6c779by removing those impls. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Possible out-of-bounds read in release mode
reported: February 20, 2023
issued: February 25, 2023(last modified: June 13, 2023)
package: {'name': 'partial_sort(crates.io)', 'url': '/packages/partial_sort.html'}
type: INFOUnsound
categories: ['memory-exposure']
keywords: []
aliases: [{'text': 'GHSA-5x36-7567-3cw6', 'url': 'https://github.com/advisories/GHSA-5x36-7567-3cw6'}]
references: [{'text': 'https://github.com/sundy-li/partial_sort/issues/7', 'url': 'https://github.com/sundy-li/partial_sort/issues/7'}]
patched: >=0.2.0
description: Affected versions of this crate were using a debug assertion to validate thelastparameter ofpartial_sort(). This would allow invalid inputs to cause
an out-of-bounds read instead of immediately panicking, when compiled without
debug assertions. All writes are bounds-checked, so the out-of-bounds memory access is read-only.
This also means that the first attempted out-of-bounds write will panic,
limiting the possible reads. The accessible region is further limited by an initial bounds-checked read
at(last / 2) - 1, i.e., it is proportional to the size of the vector. This bug has been fixed in v0.2.0. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Miscompilation in cortex-m-rt 0.7.1 and 0.7.2
reported: February 13, 2023
issued: February 14, 2023(last modified: June 13, 2023)
package: {'name': 'cortex-m-rt(crates.io)', 'url': '/packages/cortex-m-rt.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-xw5j-gv2g-mjm2', 'url': 'https://github.com/advisories/GHSA-xw5j-gv2g-mjm2'}]
references: [{'text': 'https://github.com/rust-embedded/cortex-m/discussions/469', 'url': 'https://github.com/rust-embedded/cortex-m/discussions/469'}]
patched: >=0.7.3
unaffected: <=0.7.0
description: Version 0.7.1 of thecortex-m-rtcrate introduced a regression causing the stack to NOT be eight-byte aligned prior to callingmain(or any other specified entrypoint), violating thestack ABI of AAPCS32, the default ABI used by all Cortex-M targets. This regression is also present in version 0.7.2 of thecortex-m-rtcrate. This regression can cause certain compiler optimizations (which assume the eight-byte alignment) to produce incorrect behavior at runtime. This incorrect behavior has beenobserved in real-world applications. It is advised that ALL users ofv0.7.1andv0.7.2of thecortex-m-rtcrate update to the latest version (v0.7.3), AS SOON AS POSSIBLE.Users ofv0.7.0and prior versions ofcortex-m-rtare not affected by this regression. It will be necessary to rebuild all affected firmware binaries, and flash or deploy the new firmware binaries to affected devices. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tokio::io::ReadHalf<T>::unsplitis Unsound
reported: January 11, 2023
issued: February  3, 2023(last modified: June 13, 2023)
package: {'name': 'tokio(crates.io)', 'url': '/packages/tokio.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-4q83-7cq4-p6wg', 'url': 'https://github.com/advisories/GHSA-4q83-7cq4-p6wg'}]
references: [{'text': 'https://github.com/tokio-rs/tokio/issues/5372', 'url': 'https://github.com/tokio-rs/tokio/issues/5372'}]
patched: >=1.18.5, <1.19.0>=1.20.4, <1.21.0>=1.24.2
unaffected: <0.2.0
description: tokio::io::ReadHalf<T>::unsplitcan violate thePincontract The soundness issue is described in thetokio/issues#5372 Specific set of conditions needed to trigger an issue (a !Unpin type in ReadHalf)
is unusual, combined with the difficulty of making any arbitrary use-after-free
exploitable in Rust without doing a lot of careful alignment of data types in
the surrounding code. Thetokiofeatureio-utilis also required to be enabled to trigger this
soundness issue. Thanks to zachs18 reporting the issue to Tokio team responsibly and taiki-e
and carllerche appropriately responding and fixing the soundness bug. Tokio before 0.2.0 usedfutures0.1 that did not havePin, so it is not
affected by this issue. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: personnummer Input validation error
reported: September  4, 2020
issued: February  2, 2023
package: {'name': 'personnummer(crates.io)', 'url': '/packages/personnummer.html'}
type: INFONotice
aliases: [{'text': 'GHSA-28r9-pq4c-wp3c', 'url': 'https://github.com/advisories/GHSA-28r9-pq4c-wp3c'}]
references: [{'text': 'https://github.com/personnummer/rust/pull/4', 'url': 'https://github.com/personnummer/rust/pull/4'}]
patched: >=3.0.1
description: Swedish personal identity is in the form of YYMMDD-XXXX An issue arises from the regular expression allowing the first three digits in
the last four digits of the personnummer to be 000, which is invalid. To mitigate this without upgrading, a check on the last four digits can be made
to make sure it's not 000x. The affected version should not be relied on without the mitigation to check
that the swedish personal identity number is valid. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: json is unmaintained
reported: February  1, 2022
issued: January 19, 2023(last modified: August 25, 2023)
package: {'name': 'json(crates.io)', 'url': '/packages/json.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maciejhirsz/json-rust/issues/205', 'url': 'https://github.com/maciejhirsz/json-rust/issues/205'}, {'text': 'https://github.com/maciejhirsz/json-rust/issues/196', 'url': 'https://github.com/maciejhirsz/json-rust/issues/196'}]
patched: no patched versions
description: Last release was almost 3 years ago. The maintainer is unresponsive with outstanding issues. One of the outstanding issues includea possible soundness issue. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: parity-util-mem Unmaintained
reported: November 30, 2022
issued: January 16, 2023
package: {'name': 'parity-util-mem(crates.io)', 'url': '/packages/parity-util-mem.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/paritytech/parity-common/pull/696', 'url': 'https://github.com/paritytech/parity-common/pull/696'}, {'text': 'https://github.com/paritytech/parity-common/issues/607', 'url': 'https://github.com/paritytech/parity-common/issues/607'}, {'text': 'https://github.com/paritytech/parity-common/pull/697', 'url': 'https://github.com/paritytech/parity-common/pull/697'}]
patched: no patched versions
description: The crate has been deprecated and will receive no updates with no repository source. The crate hasa warningsurrounding it's use related to global allocator use that may lead to UB. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Cratetwowaydeprecated by the author
reported: May 20, 2021
issued: January 15, 2023(last modified: February  9, 2023)
package: {'name': 'twoway(crates.io)', 'url': '/packages/twoway.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/bluss/twoway', 'url': 'https://github.com/bluss/twoway'}, {'text': 'https://github.com/bluss/twoway/commit/e99b3c718df1117ad7f54c33f6540c8f46cc17dd', 'url': 'https://github.com/bluss/twoway/commit/e99b3c718df1117ad7f54c33f6540c8f46cc17dd'}]
patched: no patched versions
description: The commite99b3c7releasing version 0.2.2 explicitly deprecatestwowayin favour ofmemchrcrate. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Use-after-free due to a lifetime error inVec::into_iter()
reported: January 14, 2022
issued: January 14, 2023(last modified: June 13, 2023)
package: {'name': 'bumpalo(crates.io)', 'url': '/packages/bumpalo.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'GHSA-f85w-wvc7-crwc', 'url': 'https://github.com/advisories/GHSA-f85w-wvc7-crwc'}]
references: [{'text': 'https://github.com/fitzgen/bumpalo/blob/main/CHANGELOG.md#3111', 'url': 'https://github.com/fitzgen/bumpalo/blob/main/CHANGELOG.md#3111'}]
patched: >=3.11.1
unaffected: <1.1.0
affected functions: Version
bumpalo::collections::vec::vec::into_iter: <3.11.1
description: In affected versions of this crate, the lifetime of the iterator produced byVec::into_iter()is not constrained to the lifetime of theBumpthat
allocated the vector's memory. Using the iterator after theBumpis dropped
causes use-after-free accesses. The following example demonstrates memory corruption arising from a misuse of
this unsoundness. The issue was corrected in version 3.11.1 by adding a lifetime to theIntoItertype, and updating the signature ofVec::into_iter()to constrain this
lifetime. Advisory available underCC0-1.0license.
affected_functions: bumpalo;;collections;;vec;;vec;;into_iter
version_of_Affected: <3.11.1

---
classification: INFO
subtitle: claimis Unmaintained
reported: December  4, 2022
issued: January 14, 2023(last modified: February  4, 2023)
package: {'name': 'claim(crates.io)', 'url': '/packages/claim.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/svartalf/rust-claim/issues/12', 'url': 'https://github.com/svartalf/rust-claim/issues/12'}]
patched: no patched versions
description: The last release was in February 2021, almost two years ago. The maintainer has been unresponsive regarding this crate for over a year. A pending issue withclaim's dependencies has made the cratedifficult to use. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Force cast a &Vecto &[T]
reported: December  2, 2022
issued: December 27, 2022(last modified: June 13, 2023)
package: {'name': 'prettytable-rs(crates.io)', 'url': '/packages/prettytable-rs.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-gfgm-chr3-x6px', 'url': 'https://github.com/advisories/GHSA-gfgm-chr3-x6px'}]
references: [{'text': 'https://github.com/phsym/prettytable-rs/issues/145', 'url': 'https://github.com/phsym/prettytable-rs/issues/145'}]
patched: >=0.10.0
description: In functionTable::as_ref, a reference of vector is force cast to slice. There are multiple problems here: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toembedded-alloc
reported: December 21, 2022
issued: December 23, 2022
package: {'name': 'alloc-cortex-m(crates.io)', 'url': '/packages/alloc-cortex-m.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rust-embedded/embedded-alloc/pull/56', 'url': 'https://github.com/rust-embedded/embedded-alloc/pull/56'}]
patched: no patched versions
description: This crate has been renamed fromalloc-cortex-mtoembedded-alloc. The new repository location is: https://github.com/rust-embedded/embedded-alloc Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Rusoto is unmaintained
reported: April 24, 2022
issued: December 18, 2022
package: {'name': 'rusoto_credential(crates.io)', 'url': '/packages/rusoto_credential.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rusoto/rusoto/issues/1651', 'url': 'https://github.com/rusoto/rusoto/issues/1651'}]
patched: no patched versions
description: The maintainers of Rusoto advise that all its crates are deprecated. This includes the common cratesrusoto_core,rusoto_signature,rusoto_credential, and service crates such asrusoto_s3andrusoto_ec2. Users should migrate to theAWS SDK for Rust, which is maintained by AWS. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsound API insecp256k1allows use-after-free and invalid deallocation from safe code
reported: November 30, 2022
issued: December  7, 2022(last modified: June 13, 2023)
package: {'name': 'secp256k1(crates.io)', 'url': '/packages/secp256k1.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-969w-q74q-9j8v', 'url': 'https://github.com/advisories/GHSA-969w-q74q-9j8v'}]
references: [{'text': 'https://github.com/rust-bitcoin/rust-secp256k1/issues/543', 'url': 'https://github.com/rust-bitcoin/rust-secp256k1/issues/543'}, {'text': 'https://github.com/rust-bitcoin/rust-secp256k1/pull/548', 'url': 'https://github.com/rust-bitcoin/rust-secp256k1/pull/548'}]
patched: >=0.22.2, <0.23.0>=0.23.5, <0.24.0>=0.24.2
unaffected: <0.14.0
affected functions: Version
secp256k1::secp256k1::preallocated_gen_new: <0.22.2>=0.23.0, <0.23.5>=0.24.0, <0.24.2
description: Because of incorrect bounds on methodSecp256k1::preallocated_gen_newit was possible to cause use-after-free from safe consumer code. It was also possible to "free" memory not allocated by the appropriate allocator. The method takes a place for storing the context as a mutable reference and returns context containing that reference. Because the code internally usesunsafeand the bounds were incorrect it was possible to create a context that outlived the passed reference (e.g.'static). Because the context can alternatively carry heap-allocated pointer freed on drop it was possible to "deallocate" a pointer that wasn't returned from appropriate allocator. The code decides whether to free the memory based on type parameter but because of missing bound it was possible to construct the context with invalid parameter. You are unaffected if you either The patched version uses correct bounds which means it is API-breaking. This effectively means adopting the policy of Rust lang itself allowing API-breaking changes to fix soundness bugs. Note however that valid straightforward usage of the code will continue to compile. Only unsound code or code that propagates the bound in custom generics will fail to compile. If the code is sound fixing the bounds should be sufficient to make the code compile. See theGitHub issuefor example "exploit" code and further discussion. Advisory available underCC0-1.0license.
affected_functions: secp256k1;;secp256k1;;preallocated_gen_new
version_of_Affected: <0.22.2>=0.23.0, <0.23.5>=0.24.0, <0.24.2

---
classification: INFO
subtitle: Potential unaligned read
reported: July  4, 2021
issued: November 22, 2022(last modified: July  8, 2023)
package: {'name': 'atty(crates.io)', 'url': '/packages/atty.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-g98v-hv3f-hcfr', 'url': 'https://github.com/advisories/GHSA-g98v-hv3f-hcfr'}]
references: [{'text': 'https://github.com/softprops/atty/issues/50', 'url': 'https://github.com/softprops/atty/issues/50'}, {'text': 'https://github.com/softprops/atty/pull/51', 'url': 'https://github.com/softprops/atty/pull/51'}, {'text': 'https://github.com/softprops/atty/issues/57', 'url': 'https://github.com/softprops/atty/issues/57'}]
patched: no patched versions
affected oses: windows
description: On windows,attydereferences a potentially unaligned pointer. In practice however, the pointer won't be unaligned unless a custom global allocator is used. In particular, theSystemallocator on windows usesHeapAlloc, which guarantees a large enough alignment. A Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable. Last release ofattywas almost 3 years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Invalid use ofmem::uninitializedcausesuse-of-uninitialized-value
reported: October 22, 2022
issued: November  7, 2022(last modified: June 13, 2023)
package: {'name': 'lzf(crates.io)', 'url': '/packages/lzf.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-5m39-wx2q-mxg3', 'url': 'https://github.com/advisories/GHSA-5m39-wx2q-mxg3'}]
references: [{'text': 'https://github.com/badboy/lzf-rs/issues/9', 'url': 'https://github.com/badboy/lzf-rs/issues/9'}]
patched: >=0.3.2
affected functions: Version
lzf::compress: <0.3.2
lzf::decompress: <0.3.2
description: The compression and decompression function usedmem:uninitializedto create an array of uninitialized values, to later write values into it.
This later leads to reads from uninitialized memory. The flaw was corrected in commit b633bf265e41c60dfce3be7eac4e4dd5e18d06cf
by using a heap-allocatedVecand removing out use ofmem::uninitialized.
The fix was released in v0.3.2 and v1.0.0 Subsequently the crate was deprecated and its use is discouraged. Advisory available underCC0-1.0license.
affected_functions: lzf;;compress
version_of_Affected: <0.3.2

---
classification: INFO
subtitle: Crateparity-wasmdeprecated by the author
reported: October  1, 2022
issued: October 23, 2022
package: {'name': 'parity-wasm(crates.io)', 'url': '/packages/parity-wasm.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/paritytech/parity-wasm/pull/334', 'url': 'https://github.com/paritytech/parity-wasm/pull/334'}]
patched: no patched versions
description: This PRexplicitly deprecatesparity-wasm.
The author recommends switching towasm-tools. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: orbtk is Unmaintained
reported: October 13, 2022
issued: October 19, 2022
package: {'name': 'orbtk(crates.io)', 'url': '/packages/orbtk.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/redox-os/orbtk/blob/eba9e77821551076bbf1d9f7ab44d788150e3446/README.md#orbtk-is-sunsetting', 'url': 'https://github.com/redox-os/orbtk/blob/eba9e77821551076bbf1d9f7ab44d788150e3446/README.md#orbtk-is-sunsetting'}]
patched: no patched versions
description: Theorbtkcrate is no longer maintained. Alternatives proposed by the authors: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Library exclusively intended to inject UB into safe Rust.
reported: September 28, 2022
issued: October 11, 2022
package: {'name': 'inconceivable(crates.io)', 'url': '/packages/inconceivable.html'}
type: INFONotice
references: [{'text': 'https://crates.io/crates/inconceivable', 'url': 'https://crates.io/crates/inconceivable'}]
patched: no patched versions
description: Quoting from the crate description: Specifically, theinconceivable!macro is insta-UB if theub_inconceivablefeature is enabled byanyreverse dependency.
The value this adds is questionable, and hidesunsafecode from naive analysis. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: badge is Unmaintained
reported: August 31, 2022
issued: October  4, 2022(last modified: February  9, 2023)
package: {'name': 'badge(crates.io)', 'url': '/packages/badge.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rust-lang/docs.rs/issues/1813#issuecomment-1232875809', 'url': 'https://github.com/rust-lang/docs.rs/issues/1813#issuecomment-1232875809'}]
patched: no patched versions
description: The maintainer has advised this crate is deprecated and will not receive any maintenance. The crate depends on the deprecatedrusttypecrate and won't receive updates
anymore. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: clipboard is Unmaintained
reported: June 25, 2022
issued: September 24, 2022
package: {'name': 'clipboard(crates.io)', 'url': '/packages/clipboard.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/aweinstock314/rust-clipboard/issues/91', 'url': 'https://github.com/aweinstock314/rust-clipboard/issues/91'}, {'text': 'https://github.com/aweinstock314/rust-clipboard/issues/90', 'url': 'https://github.com/aweinstock314/rust-clipboard/issues/90'}]
patched: no patched versions
description: Last release was almost 4 years ago and the repository with outstanding issues and pull requests seems to be abandoned by the maintainer. In addition the sole maintainer account may be abandoned that may represent account takeover risk. Current outstanding issues include vulnerable dependencies that all together may mean that security issues may not be addressed now or in the future. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: traitobject is Unmaintained
reported: October  4, 2021
issued: September  8, 2022(last modified: June 13, 2023)
package: {'name': 'traitobject(crates.io)', 'url': '/packages/traitobject.html'}
type: INFOUnmaintained
aliases: [{'text': 'GHSA-pp8r-vv2j-9j5v', 'url': 'https://github.com/advisories/GHSA-pp8r-vv2j-9j5v'}]
references: [{'text': 'https://github.com/reem/rust-traitobject/issues/7', 'url': 'https://github.com/reem/rust-traitobject/issues/7'}, {'text': 'https://rustsec.org/advisories/RUSTSEC-2020-0027', 'url': 'https://rustsec.org/advisories/RUSTSEC-2020-0027'}]
patched: no patched versions
description: Cratetraitobjecthas not had a release for over five years. In addition there is an existing security advisory that has not been addressed: The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: wee_alloc is Unmaintained
reported: May 11, 2022
issued: September  8, 2022(last modified: June 13, 2023)
package: {'name': 'wee_alloc(crates.io)', 'url': '/packages/wee_alloc.html'}
type: INFOUnmaintained
aliases: [{'text': 'GHSA-rc23-xxgq-x27g', 'url': 'https://github.com/advisories/GHSA-rc23-xxgq-x27g'}]
references: [{'text': 'https://github.com/rustwasm/wee_alloc/issues/107', 'url': 'https://github.com/rustwasm/wee_alloc/issues/107'}, {'text': 'https://www.reddit.com/r/rust/comments/x1cle0/dont_use_wee_alloc_in_production_code_targeting/', 'url': 'https://www.reddit.com/r/rust/comments/x1cle0/dont_use_wee_alloc_in_production_code_targeting/'}, {'text': 'https://github.com/rustwasm/wee_alloc/issues/85', 'url': 'https://github.com/rustwasm/wee_alloc/issues/85'}, {'text': 'https://github.com/rustwasm/wee_alloc/issues/106', 'url': 'https://github.com/rustwasm/wee_alloc/issues/106'}]
patched: no patched versions
description: Two of the maintainers have indicated that the crate may not be maintained. The crate has open issues including memory leaks and may not be suitable for production use. It may be best to switch to the default Rust standard allocator on wasm32 targets. Last release seems to have been three years ago. The below list has not been vetted in any way and may or may not contain alternatives; The below may serve to educate on potential future alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: typemap is Unmaintained
reported: April  6, 2019
issued: September  8, 2022(last modified: June 13, 2023)
package: {'name': 'typemap(crates.io)', 'url': '/packages/typemap.html'}
type: INFOUnmaintained
aliases: [{'text': 'GHSA-vfv3-9w6v-23jp', 'url': 'https://github.com/advisories/GHSA-vfv3-9w6v-23jp'}]
references: [{'text': 'https://github.com/reem/rust-typemap/issues/45', 'url': 'https://github.com/reem/rust-typemap/issues/45'}, {'text': 'https://github.com/rustsec/advisory-db/issues/1088', 'url': 'https://github.com/rustsec/advisory-db/issues/1088'}]
patched: no patched versions
description: The maintainer seems unreachable. The crate may or may not be usable as-is despite no maintenance and may not work in future versions of Rust. The last release seems to have been seven years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: dotenv is Unmaintained
reported: December 24, 2021
issued: August 31, 2022
package: {'name': 'dotenv(crates.io)', 'url': '/packages/dotenv.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dotenv-rs/dotenv/issues/74', 'url': 'https://github.com/dotenv-rs/dotenv/issues/74'}]
patched: no patched versions
description: dotenv by description is meant to be used in development or testing only. Using this in production may or may not be advisable. The below may or may not be feasible alternative(s): Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mozjpeg DecompressScanlines::read_scanlines is Unsound
reported: July  4, 2020
issued: August 31, 2022(last modified: June 13, 2023)
package: {'name': 'mozjpeg(crates.io)', 'url': '/packages/mozjpeg.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-v8gq-5grq-9728', 'url': 'https://github.com/advisories/GHSA-v8gq-5grq-9728'}]
references: [{'text': 'https://github.com/ImageOptim/mozjpeg-rust/issues/10', 'url': 'https://github.com/ImageOptim/mozjpeg-rust/issues/10'}, {'text': 'https://github.com/kornelski/rust-rgb/issues/35', 'url': 'https://github.com/kornelski/rust-rgb/issues/35'}, {'text': 'https://rustsec.org/advisories/RUSTSEC-2020-0029.html', 'url': 'https://rustsec.org/advisories/RUSTSEC-2020-0029.html'}]
patched: >=0.8.19
affected functions: Version
mozjpeg::decompressscanlines::read_scanlines: <0.8.19
description: This issue and vector is similar toRUSTSEC-2020-0029ofrgbcrate whichmozjpegdepends on. Affected versions ofmozjpegcrate allow creating instances of any typeTfrom bytes,
and do not correctly constrainTto the types for which it is safe to do so. Examples of safety violation possible for a typeT: The issue was fixed in 0.8.19 by using safer types and involvingrgbdependency bump. Advisory available underCC0-1.0license.
affected_functions: mozjpeg;;decompressscanlines;;read_scanlines
version_of_Affected: <0.8.19

---
classification: INFO
subtitle: rusttype is Unmaintained
reported: April  1, 2021
issued: August 31, 2022(last modified: February  9, 2023)
package: {'name': 'rusttype(crates.io)', 'url': '/packages/rusttype.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.redox-os.org/redox-os/rusttype/-/issues/148', 'url': 'https://gitlab.redox-os.org/redox-os/rusttype/-/issues/148'}]
patched: no patched versions
description: The maintainer has advised this crate is deprecated and will not
receive any maintenance. The maintainer has further advised to migrate over toab_glyph. Last release seems to have been over two years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cell-projectused incorrect variance when projecting through&Cell<T>
reported: August 27, 2020
issued: August 31, 2022(last modified: June 13, 2023)
package: {'name': 'cell-project(crates.io)', 'url': '/packages/cell-project.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-p75v-367r-2v23', 'url': 'https://github.com/advisories/GHSA-p75v-367r-2v23'}]
references: [{'text': 'https://github.com/RustyYato/cell-project/issues/3', 'url': 'https://github.com/RustyYato/cell-project/issues/3'}, {'text': 'https://github.com/RustyYato/cell-project/issues/3', 'url': 'https://github.com/RustyYato/cell-project/issues/3'}, {'text': 'https://github.com/RustyYato/cell-project/issues/4', 'url': 'https://github.com/RustyYato/cell-project/issues/4'}]
patched: >=0.1.4
affected functions: Version
cell_project::cell_project: <0.1.4
cell_project::nightly_cell_project: <0.1.4
description: The issue lies in the implementation of thecell_projectmacro which usedfield as *const _instead offield as *mut _.
The problem being that*const Tis covariant inTwhile*mut Tis invariant inT. Keep in mind that&Cell<T>is invariant inT,
so casting to*const Trelaxed the variance, and lead to unsoundness, as shown in the example below.
unaffected: ['All versions of the cell-project crate before0.1.4are affected.', 'This was fixed inIssues/4, and released as version0.1.4.\nSo just updating to the latest version will include the fix (which may result in a compile error on unsound usage).', {'text': 'Issues/4', 'url': 'https://github.com/RustyYato/cell-project/issues/4'}, 'This was discovered and fixed by @SoniEx2 in cell-project:Issues/3andIssues/4', {'text': 'Issues/3', 'url': 'https://github.com/RustyYato/cell-project/issues/3'}, {'text': 'Issues/4', 'url': 'https://github.com/RustyYato/cell-project/issues/4'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: cell_project;;cell_project
version_of_Affected: <0.1.4

---
classification: INFO
subtitle: dotenv is Unmaintained
reported: December 24, 2021
issued: August 31, 2022
package: {'name': 'dotenv_codegen(crates.io)', 'url': '/packages/dotenv_codegen.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dotenv-rs/dotenv/issues/74', 'url': 'https://github.com/dotenv-rs/dotenv/issues/74'}]
patched: no patched versions
description: dotenv by description is meant to be used in development or testing only. Using this in production may or may not be advisable. The below may or may not be feasible alternative(s): Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mapr is Unmaintained
reported: August 24, 2022
issued: August 27, 2022(last modified: February  9, 2023)
package: {'name': 'mapr(crates.io)', 'url': '/packages/mapr.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rustsec/advisory-db/pull/1381', 'url': 'https://github.com/rustsec/advisory-db/pull/1381'}]
patched: no patched versions
description: Themaprfork has been merged back into upstream forkmemmap2. The maintainer(s) have advisedmapris deprecated and will not
receive any maintenance in favor of usingmemmap2. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: os_socketaddrinvalidly assumes the memory layout of std::net::SocketAddr
reported: August 26, 2022
issued: August 27, 2022(last modified: June 13, 2023)
package: {'name': 'os_socketaddr(crates.io)', 'url': '/packages/os_socketaddr.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-c439-chv8-8g2j', 'url': 'https://github.com/advisories/GHSA-c439-chv8-8g2j'}]
references: [{'text': 'https://github.com/a-ba/os_socketaddr/issues/3', 'url': 'https://github.com/a-ba/os_socketaddr/issues/3'}]
patched: >=0.2.2
description: Theos_socketaddrcrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C
representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. These layout werechanged into idiomatic rust typesin nightlystd. Starting from rustc 1.64 the affected versions of this crate will have undefined
behaviour. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Interledger is Unmaintained
reported: August  4, 2022
issued: August 19, 2022
package: {'name': 'interledger-packet(crates.io)', 'url': '/packages/interledger-packet.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/interledger-rs/interledger-rs/issues/745', 'url': 'https://github.com/interledger-rs/interledger-rs/issues/745'}, {'text': 'https://github.com/interledger-rs/interledger-rs/pull/744', 'url': 'https://github.com/interledger-rs/interledger-rs/pull/744'}]
patched: no patched versions
description: Interledger family of crates is not being actively maintained anymore. The owner of the published crate does not appear to be responsive. There is an outstanding concern around username comparison. This concern may or may not be resolved by bumping up the dependencies of the project. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: ansi_term is Unmaintained
reported: August 18, 2021
issued: August 19, 2022(last modified: September  7, 2023)
package: {'name': 'ansi_term(crates.io)', 'url': '/packages/ansi_term.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/ogham/rust-ansi-term/issues/72', 'url': 'https://github.com/ogham/rust-ansi-term/issues/72'}]
patched: no patched versions
description: The maintainer has advised that this crate is deprecated and will not receive any maintenance. The crate does not seem to have much dependencies and may or may not be ok to use as-is. Last release seems to have been three years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Use after free in MacOS / iOS implementation
reported: August 15, 2022
issued: August 17, 2022(last modified: June 13, 2023)
package: {'name': 'iana-time-zone(crates.io)', 'url': '/packages/iana-time-zone.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-3fg9-hcq5-vxrc', 'url': 'https://github.com/advisories/GHSA-3fg9-hcq5-vxrc'}]
references: [{'text': 'https://github.com/strawlab/iana-time-zone/pull/54', 'url': 'https://github.com/strawlab/iana-time-zone/pull/54'}, {'text': 'https://github.com/strawlab/iana-time-zone/pull/50#discussion_r945353515', 'url': 'https://github.com/strawlab/iana-time-zone/pull/50#discussion_r945353515'}]
patched: >=0.1.45
unaffected: <0.1.43
affected oses: iosmacos
affected functions: Version
iana_time_zone::get_timezone: >0.1.42, <0.1.45
description: In iana-time-zone v0.1.43 a use-after-free bug in the MacOS / iOS implementation was introduced. The copied system time zone was released before its name was copied.
If the system time zone was changed between the call ofCFReleaseandstr::to_owned(),
random memory would be copied. Advisory available underCC0-1.0license.
affected_functions: iana_time_zone;;get_timezone
version_of_Affected: >0.1.42, <0.1.45

---
classification: INFO
subtitle: Incorrect use ofset_lenallows for un-initialized memory
reported: October 14, 2021
issued: August 13, 2022(last modified: June 13, 2023)
package: {'name': 'mz-avro(crates.io)', 'url': '/packages/mz-avro.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-jwh2-vrr9-vcp2', 'url': 'https://github.com/advisories/GHSA-jwh2-vrr9-vcp2'}]
references: [{'text': 'https://github.com/MaterializeInc/materialize/issues/8669', 'url': 'https://github.com/MaterializeInc/materialize/issues/8669'}]
patched: >=0.7.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure)
and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke
undefined behavior. Note: there is only UB in the case where a user provides a struct whoseReadimplementation inspects the buffer passed toread_exactbefore writing to it.
This is an unidiomatic (albeit possible)Readimplementation. See https://github.com/MaterializeInc/materialize/issues/8669 for details. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: sodiumoxide is deprecated
reported: October 22, 2021
issued: August 10, 2022
package: {'name': 'sodiumoxide(crates.io)', 'url': '/packages/sodiumoxide.html'}
type: INFOUnmaintained
keywords: []
references: [{'text': 'https://github.com/sodiumoxide/sodiumoxide/commit/5bb1dfd2578539b89ffb0cbea25f21f00cfb963e', 'url': 'https://github.com/sodiumoxide/sodiumoxide/commit/5bb1dfd2578539b89ffb0cbea25f21f00cfb963e'}]
patched: no patched versions
description: Alternatives may be found - not in any specific order: Recommendations can be also found from: No direct maintained fork exists. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: markdown(1.0.0 and higher) is maintained
reported: January 17, 2022
issued: August  8, 2022(last modified: January 22, 2023)
package: {'name': 'markdown(crates.io)', 'url': '/packages/markdown.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/johannhof/markdown.rs/issues/48', 'url': 'https://github.com/johannhof/markdown.rs/issues/48'}]
patched: >=1.0.0-alpha.1
description: A newmarkdowncrate has been brought over by a new maintainer replacing the old crate. As of time of writing only pre-releases seem to be available for the 1.0.0 version of the crate. The crate GitHub repository is nowwooorm/markdown-rs The oldmarkdowncrate was no longer actively maintained. The crate GitHub repository wasjohannhof/markdown.rs Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsoundness of AtomicCell<64> arithmetics on 32-bit targets that support Atomic64
reported: February  5, 2022
issued: August  4, 2022
package: {'name': 'crossbeam-utils(crates.io)', 'url': '/packages/crossbeam-utils.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-qc84-gqf4-9926', 'url': 'https://github.com/advisories/GHSA-qc84-gqf4-9926'}, {'text': 'CVE-2022-23639', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23639'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/781', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/781'}]
patched: >=0.8.7
description: Affected versions of this crate incorrectly assumed that the alignment of {i,u}64 was always the same as Atomic{I,U}64. However, the alignment of {i,u}64 on a 32-bit target can be smaller than Atomic{I,U}64. This can cause the following problems: Crates using fetch_* methods with AtomicCell<{i,u}64> are affected by this issue. 32-bit targets without Atomic{I,U}64 and 64-bit targets are not affected by this issue. 32-bit targets with Atomic{I,U}64 and {i,u}64 have the same alignment are also not affected by this issue. The following is a complete list of the builtin targets that may be affected. (last update: nightly-2022-02-11) (script to get list) This has been fixed in crossbeam-utils 0.8.7. Affected 0.8.x releases have been yanked. Thanks to @taiki-e Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: project abandoned
reported: January 17, 2022
issued: August  3, 2022
package: {'name': 'r2d2_odbc(crates.io)', 'url': '/packages/r2d2_odbc.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Koka/r2d2-odbc/issues/128#issuecomment-958629171', 'url': 'https://github.com/Koka/r2d2-odbc/issues/128#issuecomment-958629171'}]
patched: no patched versions
description: Ther2d2-odbc-apicrate might be an alternative. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: term_sizeis unmaintained; useterminal_sizeinstead
reported: November  3, 2020
issued: August  3, 2022
package: {'name': 'term_size(crates.io)', 'url': '/packages/term_size.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/clap-rs/term_size-rs/pull/31', 'url': 'https://github.com/clap-rs/term_size-rs/pull/31'}]
patched: no patched versions
description: Theterm_sizecrate is no longer maintained. Consider usingterminal_sizeinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: project abandoned
reported: January 17, 2022
issued: August  3, 2022
package: {'name': 'odbc(crates.io)', 'url': '/packages/odbc.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Koka/odbc-rs/commit/f9e5f77fac0a6328f9759e6e0f9e10c16509aebb', 'url': 'https://github.com/Koka/odbc-rs/commit/f9e5f77fac0a6328f9759e6e0f9e10c16509aebb'}]
patched: no patched versions
description: Alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: sass-rshas been deprecated
reported: April  7, 2021
issued: August  3, 2022(last modified: February  9, 2023)
package: {'name': 'sass-rs(crates.io)', 'url': '/packages/sass-rs.html'}
type: INFOUnmaintained
keywords: []
references: [{'text': 'https://github.com/compass-rs/sass-rs/issues/83', 'url': 'https://github.com/compass-rs/sass-rs/issues/83'}]
patched: no patched versions
description: Thesass-rscrate is not maintained anymore as libsass is deprecated.
Consider using https://github.com/connorskees/grass or https://github.com/kaj/rsass instead.
(Author's recommendation.) Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Safety issues inpkcs11
reported: July 22, 2022
issued: July 25, 2022
package: {'name': 'pkcs11(crates.io)', 'url': '/packages/pkcs11.html'}
type: INFOUnsound
categories: ['code-execution', 'memory-corruption', 'crypto-failure']
keywords: []
references: [{'text': 'https://github.com/mheese/rust-pkcs11/issues/57', 'url': 'https://github.com/mheese/rust-pkcs11/issues/57'}]
patched: no patched versions
description: 
unaffected: ['The interface ofpkcs11is subject to a number of safety issues, mainly related to handling of raw pointers. Despite presenting a safe interface, many of the functions and methods that rely on inputs which contain pointers (attributes and mechanisms in particular) can lead to segmentation faults and undefined behaviour when those pointers get dereferenced. For more details see the issues referenced below.', 'Other problems that have been identified by the community include use-after-free (mheese/rust-pkcs11#53) and unsound uses oftransmute_copy(mheese/rust-pkcs11#55).', {'text': 'mheese/rust-pkcs11#53', 'url': 'https://github.com/mheese/rust-pkcs11/pull/53'}, {'text': 'mheese/rust-pkcs11#55', 'url': 'https://github.com/mheese/rust-pkcs11/issues/55'}]
References: ['mheese/rust-pkcs11#38', {'text': 'mheese/rust-pkcs11#38', 'url': 'https://github.com/mheese/rust-pkcs11/issues/38'}, 'mheese/rust-pkcs11#53', {'text': 'mheese/rust-pkcs11#53', 'url': 'https://github.com/mheese/rust-pkcs11/pull/53'}, 'mheese/rust-pkcs11#55', {'text': 'mheese/rust-pkcs11#55', 'url': 'https://github.com/mheese/rust-pkcs11/issues/55'}, 'mheese/rust-pkcs11#54', {'text': 'mheese/rust-pkcs11#54', 'url': 'https://github.com/mheese/rust-pkcs11/issues/54'}, 'mheese/rust-pkcs11#50', {'text': 'mheese/rust-pkcs11#50', 'url': 'https://github.com/mheese/rust-pkcs11/issues/50'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: INFO
subtitle: static_type_maphas been renamed toerased_set
reported: May 11, 2022
issued: May 11, 2022
package: {'name': 'static_type_map(crates.io)', 'url': '/packages/static_type_map.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/malobre/erased_set/issues/6', 'url': 'https://github.com/malobre/erased_set/issues/6'}]
patched: no patched versions
description: Please use theerased_setcrate going forward: https://github.com/malobre/erased_set There will be no further releases ofstatic_type_map. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: double-checked-cell is unmaintained
reported: May 11, 2022
issued: May 11, 2022
package: {'name': 'double-checked-cell(crates.io)', 'url': '/packages/double-checked-cell.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/niklasf/double-checked-cell/commit/9cf94d75316ef441033ce4c80def7c1a8c7643fe', 'url': 'https://github.com/niklasf/double-checked-cell/commit/9cf94d75316ef441033ce4c80def7c1a8c7643fe'}]
patched: no patched versions
description: The author recommends switching toonce_cell, which offers a superset
of the functionality. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: SegQueuecreates zero value of any type
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'crossbeam-queue(crates.io)', 'url': '/packages/crossbeam-queue.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-6888-wf7j-34jq', 'url': 'https://github.com/advisories/GHSA-6888-wf7j-34jq'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/458', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/458'}]
patched: >=0.2.3
description: Affected versions of this crate calledmem::zeroed()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null). The flaw was corrected by avoiding the use ofmem::zeroed(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Channel creates zero value of any type
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'crossbeam-channel(crates.io)', 'url': '/packages/crossbeam-channel.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-9g55-pg62-m8hh', 'url': 'https://github.com/advisories/GHSA-9g55-pg62-m8hh'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/458', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/458'}]
patched: >=0.4.3
description: Affected versions of this crate calledmem::zeroed()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null). The flaw was corrected by avoiding the use ofmem::zeroed(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: SegQueuecreates zero value of any type
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'crossbeam(crates.io)', 'url': '/packages/crossbeam.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-8gj8-hv75-gp94', 'url': 'https://github.com/advisories/GHSA-8gj8-hv75-gp94'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/458', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/458'}]
patched: >=0.7.0
description: Affected versions of this crate calledmem::zeroed()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null). The flaw was corrected by avoiding the use ofmem::zeroed(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Parser creates invalid uninitialized value
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-f67m-9j94-qv9j', 'url': 'https://github.com/advisories/GHSA-f67m-9j94-qv9j'}]
references: [{'text': 'https://github.com/hyperium/hyper/pull/2545', 'url': 'https://github.com/hyperium/hyper/pull/2545'}]
patched: >=0.14.12
description: Affected versions of this crate calledmem::uninitialized()in the HTTP1 parser to create values of typehttparse::Header(from thehttparsecrate).
This is unsound, sinceHeadercontains references and thus must be non-null. The flaw was corrected by avoiding the use ofmem::uninitialized(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: array!macro is unsound when its length is impure constant
reported: April 27, 2022
issued: April 27, 2022(last modified: June 13, 2023)
package: {'name': 'array-macro(crates.io)', 'url': '/packages/array-macro.html'}
type: INFOUnsound
categories: ['code-execution', 'memory-corruption', 'memory-exposure']
aliases: [{'text': 'GHSA-7v4j-8wvr-v55r', 'url': 'https://github.com/advisories/GHSA-7v4j-8wvr-v55r'}]
references: [{'text': 'https://gitlab.com/KonradBorowski/array-macro/-/issues/5', 'url': 'https://gitlab.com/KonradBorowski/array-macro/-/issues/5'}]
patched: >=2.1.2
unaffected: <2.1.0
description: Affected versions of this crate did substitute the array length provided by an user at compile-time multiple times. When an impure constant expression is passed as an array length (such as a result of an impure procedural macro), this can result in the initialization of an array with uninitialized types, which in turn can allow an attacker to execute arbitrary code. The flaw was corrected in commitd5b63f72by making sure that array length is substituted just once. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: pty is unmaintained
reported: March 22, 2022
issued: March 22, 2022
package: {'name': 'pty(crates.io)', 'url': '/packages/pty.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/hibariya/pty-rs/issues/19', 'url': 'https://github.com/hibariya/pty-rs/issues/19'}]
patched: no patched versions
description: The repository hasn't received any updates since Jun 25, 2017 and the author is unresponsive. Maintained alternatives include: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: enum_map macro can cause UB whenEnumtrait is incorrectly implemented
reported: February 17, 2022
issued: February 18, 2022(last modified: June 13, 2023)
package: {'name': 'enum-map(crates.io)', 'url': '/packages/enum-map.html'}
type: INFOUnsound
categories: ['code-execution', 'memory-corruption', 'memory-exposure']
aliases: [{'text': 'GHSA-rxhx-9fj6-6h2m', 'url': 'https://github.com/advisories/GHSA-rxhx-9fj6-6h2m'}]
references: [{'text': 'https://gitlab.com/KonradBorowski/enum-map/-/blob/master/CHANGELOG.md#version-202', 'url': 'https://gitlab.com/KonradBorowski/enum-map/-/blob/master/CHANGELOG.md#version-202'}]
patched: >=2.0.2
unaffected: <2.0.0-2
description: Affected versions of this crate did not properly check the length of an enum when usingenum_map!macro, trusting user-provided length. When theLENGTHin theEnumtrait does not match the array length in theEnumArraytrait, this can result in the initialization of the enum map with uninitialized types, which in turn can allow an attacker to execute arbitrary code. This problem can only occur with a manual implementation of the Enum trait, it will never occur for enums that use#[derive(Enum)]. Example code that triggers this vulnerability looks like this: The flaw was corrected in commitb824e23by puttingLENGTHproperty on sealed trait for macro to read. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tokio-protois deprecated/unmaintained
reported: February  6, 2020
issued: February  7, 2022
package: {'name': 'tokio-proto(crates.io)', 'url': '/packages/tokio-proto.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/tokio-rs/tokio-proto/commit/56c720ea3c74efa8f39e36c24e609628222b16a1', 'url': 'https://github.com/tokio-rs/tokio-proto/commit/56c720ea3c74efa8f39e36c24e609628222b16a1'}]
patched: no patched versions
description: Thetokio-protocrate has been deprecated, andits GitHub repositoryhas been archived.
Users may be interested intokio-towerinstead, per https://github.com/tokio-rs/tokio/issues/118#issuecomment-452969665 Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Delegate functions are missingSendbound
reported: January  2, 2022
issued: February  4, 2022(last modified: June 13, 2023)
package: {'name': 'windows(crates.io)', 'url': '/packages/windows.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'GHSA-x4mq-m75f-mx8m', 'url': 'https://github.com/advisories/GHSA-x4mq-m75f-mx8m'}]
references: [{'text': 'https://github.com/microsoft/windows-rs/issues/1409', 'url': 'https://github.com/microsoft/windows-rs/issues/1409'}]
patched: >=0.32.0
unaffected: <0.1.2
affected oses: windows
description: Affected versions of this crate did not require event handlers to haveSendbound despite there being no guarantee of them being called on any particular thread, which can potentially lead to data races and undefined behavior. The flaw was corrected in commitafe3252by addingSendbounds. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: A malicious coder can get unsound access to TCell or TLCell memory
reported: January 24, 2022
issued: January 24, 2022(last modified: June 13, 2023)
package: {'name': 'qcell(crates.io)', 'url': '/packages/qcell.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-9c9f-7x9p-4wqp', 'url': 'https://github.com/advisories/GHSA-9c9f-7x9p-4wqp'}]
references: [{'text': 'https://github.com/uazu/qcell/issues/20', 'url': 'https://github.com/uazu/qcell/issues/20'}]
patched: >=0.4.3
description: This is impossible to do by accident, but by carefully constructing
marker types to be covariant, a malicious coder can cheat the
singleton check inTCellOwnerandTLCellOwner, giving unsound
access to cell memory.  This could take the form of getting two
mutable references to the same memory, or a mutable reference and an
immutable reference. The fix is for the crate to internally force the marker type to be
invariant.  This blocks the conversion between covariant types which
Rust normally allows. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toftdi-embedded-hal
reported: January 22, 2022
issued: January 22, 2022
package: {'name': 'ftd2xx-embedded-hal(crates.io)', 'url': '/packages/ftd2xx-embedded-hal.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/newAM/ftd2xx-embedded-hal/pull/40', 'url': 'https://github.com/newAM/ftd2xx-embedded-hal/pull/40'}]
patched: no patched versions
description: This crate has been renamed fromftd2xx-embedded-haltoftdi-embedded-hal. The new repository location is: https://github.com/ftdi-rs/ftdi-embedded-hal Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: array!macro is unsound in presence of traits that implement methods it calls internally
reported: May  7, 2020
issued: January 21, 2022(last modified: June 13, 2023)
package: {'name': 'array-macro(crates.io)', 'url': '/packages/array-macro.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-83gg-pwxf-jr89', 'url': 'https://github.com/advisories/GHSA-83gg-pwxf-jr89'}]
references: [{'text': 'https://gitlab.com/KonradBorowski/array-macro/-/commit/01940637dd8f3bfeeee3faf9639fa9ae52f19f4d', 'url': 'https://gitlab.com/KonradBorowski/array-macro/-/commit/01940637dd8f3bfeeee3faf9639fa9ae52f19f4d'}]
patched: >=1.0.5
unaffected: <0.1.2
description: Affected versions of this crate called some methods using auto-ref. The affected code looked like this. In this case, the problem is thatas_mut_ptris a method of&mut MaybeUninit, notMaybeUninit. This made it possible for traits to hijack the method calls in order to cause unsoundness. The flaw was corrected by explicitly referencing variables in macro body in order to avoid auto-ref. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: lmdb is unmaintained, use lmdb-rkv instead
reported: January  5, 2022
issued: January  5, 2022
package: {'name': 'lmdb(crates.io)', 'url': '/packages/lmdb.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/danburkert/lmdb-rs', 'url': 'https://github.com/danburkert/lmdb-rs'}]
patched: no patched versions
description: The lmdb crate hasn't had any updates since August 2018. Mozilla'slmdb-rkvfork of the crate has received additional maintenance work beyond that and is the best available replacement. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rental is unmaintained, author has moved on
reported: December 27, 2021
issued: December 27, 2021(last modified: March  6, 2022)
package: {'name': 'rental(crates.io)', 'url': '/packages/rental.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/jpernst/rental/commit/213671ab3aab3452efd7e2290c6bb714ee327014', 'url': 'https://github.com/jpernst/rental/commit/213671ab3aab3452efd7e2290c6bb714ee327014'}]
patched: no patched versions
description: The author encourages users to explore other solutions, or maintain a fork. Maintained alternatives include: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cargo-download is unmaintained
reported: December 25, 2021
issued: December 25, 2021
package: {'name': 'cargo-download(crates.io)', 'url': '/packages/cargo-download.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Xion/cargo-download', 'url': 'https://github.com/Xion/cargo-download'}]
patched: no patched versions
description: The cargo download subcommand (via cargo-download crate) is broken and maintainer has disappeared from GitHub and hasn't had any commits for a year. Using this downloader will result to corrupted crates. Maintainer has not responded to maintenance takeover. Just use wget / curl directly. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: serde_cbor is unmaintained
reported: August 15, 2021
issued: November 30, 2021(last modified: December  1, 2021)
package: {'name': 'serde_cbor(crates.io)', 'url': '/packages/serde_cbor.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/pyfisch/cbor', 'url': 'https://github.com/pyfisch/cbor'}]
patched: no patched versions
description: Theserde_cborcrate is unmaintained. The author has archived the github repository. Alternatives proposed by the author: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Non-aligned u32 read in Chacha20 encryption and decryption
reported: October  8, 2021
issued: October 18, 2021(last modified: June 13, 2023)
package: {'name': 'crypto2(crates.io)', 'url': '/packages/crypto2.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2021-45709', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45709'}, {'text': 'GHSA-9hfg-pxr6-q4vp', 'url': 'https://github.com/advisories/GHSA-9hfg-pxr6-q4vp'}, {'text': 'GHSA-pmcv-mgcf-rvxg', 'url': 'https://github.com/advisories/GHSA-pmcv-mgcf-rvxg'}]
references: [{'text': 'https://github.com/shadowsocks/crypto2/issues/27', 'url': 'https://github.com/shadowsocks/crypto2/issues/27'}]
patched: no patched versions
affected functions: Version
crypto2::streamcipher::chacha20::decrypt_slice: *
crypto2::streamcipher::chacha20::encrypt_slice: *
crypto2::streamcipher::xor_si512_inplace: *
description: The implementation does not enforce alignment requirements on input slices while incorrectly assuming 4-byte alignment through an unsafe call tostd::slice::from_raw_parts_mut, which breaks the contract and introduces undefined behavior. This affects Chacha20 encryption and decryption in crypto2. Advisory available underCC0-1.0license.
affected_functions: crypto2;;streamcipher;;chacha20;;decrypt_slice
version_of_Affected: *

---
classification: INFO
subtitle: abomonation transmutes &T to and from &[u8] without sufficient constraints
reported: October 17, 2021
issued: October 17, 2021(last modified: June 13, 2023)
package: {'name': 'abomonation(crates.io)', 'url': '/packages/abomonation.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2021-45708', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45708'}, {'text': 'GHSA-5vwc-r48g-wj6c', 'url': 'https://github.com/advisories/GHSA-5vwc-r48g-wj6c'}, {'text': 'GHSA-hfxp-p695-629x', 'url': 'https://github.com/advisories/GHSA-hfxp-p695-629x'}]
references: [{'text': 'https://github.com/TimelyDataflow/abomonation/issues/23', 'url': 'https://github.com/TimelyDataflow/abomonation/issues/23'}]
patched: no patched versions
description: This transmute is at the core of the abomonation crates. It's so easy to use it to violate alignment requirements that no test in the crate's test suite passes under miri.
The use of this transmute in serialization/deserialization also incorrectly assumes that the layout of a repr(Rust) type is stable.
This transmute can also disclose both the contents of padding bytes which may be an information leak and the contents of pointers, which may be used to defeat ASLR. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: slice-deque is unmaintained
reported: February 10, 2020
issued: October  7, 2021(last modified: November 18, 2021)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/94', 'url': 'https://github.com/gnzlbg/slice_deque/issues/94'}]
patched: no patched versions
description: The author of theslice-dequecrate is unresponsive and is not receiving security patches. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer may cause UB ('tectonic_xdv' crate)
reported: February 17, 2021
issued: September 18, 2021(last modified: June 13, 2023)
package: {'name': 'tectonic_xdv(crates.io)', 'url': '/packages/tectonic_xdv.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45703', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45703'}, {'text': 'GHSA-6692-8qqf-79jc', 'url': 'https://github.com/advisories/GHSA-6692-8qqf-79jc'}, {'text': 'GHSA-qwvx-c8j7-5g75', 'url': 'https://github.com/advisories/GHSA-qwvx-c8j7-5g75'}]
references: [{'text': 'https://github.com/tectonic-typesetting/tectonic/issues/752', 'url': 'https://github.com/tectonic-typesetting/tectonic/issues/752'}]
patched: >=0.1.12
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer. Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. The problem was fixed in commitcdff034by zero-initializing the buffer before passing it to a user-providedReadimplementation. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Crate has been renamed tocosmrs
reported: August 25, 2021
issued: August 25, 2021
package: {'name': 'cosmos_sdk(crates.io)', 'url': '/packages/cosmos_sdk.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/cosmos/cosmos-rust/issues/113', 'url': 'https://github.com/cosmos/cosmos-rust/issues/113'}]
patched: no patched versions
description: Thecosmos_sdkcrate, which provides a basic Rust SDK for the Cosmos ecosystem,
has rebranded to “CosmRS” in the spirit of other projects like CosmJS and CosmWasm. You can find the new home here: https://github.com/cosmos/cosmos-rust/tree/main/cosmrs The new crate name iscosmrs: https://crates.io/crates/cosmrs Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: spirv_headers is unmaintained, use spirv instead
reported: August 16, 2021
issued: August 23, 2021
package: {'name': 'spirv_headers(crates.io)', 'url': '/packages/spirv_headers.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/gfx-rs/rspirv/issues/197', 'url': 'https://github.com/gfx-rs/rspirv/issues/197'}]
patched: no patched versions
description: Because of versioning issues; thespirv_headerscrate is unmaintained. Usespirvfor parsing spirv files. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Reading on uninitialized memory may cause UB (util::read_spv())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'ash(crates.io)', 'url': '/packages/ash.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45688', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45688'}, {'text': 'GHSA-64wv-8vwp-xgw2', 'url': 'https://github.com/advisories/GHSA-64wv-8vwp-xgw2'}, {'text': 'GHSA-qj69-c89v-jwq2', 'url': 'https://github.com/advisories/GHSA-qj69-c89v-jwq2'}]
references: [{'text': 'https://github.com/MaikKlein/ash/issues/354', 'url': 'https://github.com/MaikKlein/ash/issues/354'}]
patched: >=0.33.1
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mopais technically unsound
reported: June  1, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'mopa(crates.io)', 'url': '/packages/mopa.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure', 'code-execution']
keywords: []
aliases: [{'text': 'CVE-2021-45695', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45695'}, {'text': 'GHSA-2gxj-qrp2-53jv', 'url': 'https://github.com/advisories/GHSA-2gxj-qrp2-53jv'}, {'text': 'GHSA-8mv5-7x95-7wcf', 'url': 'https://github.com/advisories/GHSA-8mv5-7x95-7wcf'}]
references: [{'text': 'https://github.com/chris-morgan/mopa/issues/13', 'url': 'https://github.com/chris-morgan/mopa/issues/13'}]
patched: no patched versions
description: Themopacrate redefines the deprecatedTraitObjectstruct fromcore::rawlike so: This is done to then transmute a reference to a trait object (&dyn Traitfor any traitTrait) into this struct and retrieve thedatafield for the purpose of downcasting. This is used to implementdowncast_ref_unchecked(), in terms of whichdowncast_ref()is also implemented. Same goes for mutable reference downcasting andBoxdowncasting. The Rust compiler explicitly reserves the right to change the memory layout of&dyn Traitfor any traitTrait. The worst case scenario is that it swapsdataandvtable, making an executable location breach and compromisation of ASLR possible, since reads fromdatawould readvtableinstead. Likewise, arbitrary code execution is also theoretically possible if reads ofvtablegenerated by the compiler readdatainstead. While, as of Rust 1.52, this unsound assumption still holds true, updating the compiler may silently create UB in a crate which previously compiled and run without issues, compromising the security of builds which are believed to be reproducible. A potential strategy to resolve this has already been suggested in an issue on the GitHub repository of the crate. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer infill_buf()andread_up_to()
reported: December 27, 2020
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'acc_reader(crates.io)', 'url': '/packages/acc_reader.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36513', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36513'}, {'text': 'CVE-2020-36514', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36514'}, {'text': 'GHSA-799f-r78p-gq9c', 'url': 'https://github.com/advisories/GHSA-799f-r78p-gq9c'}, {'text': 'GHSA-hv9v-7w3v-rj6f', 'url': 'https://github.com/advisories/GHSA-hv9v-7w3v-rj6f'}, {'text': 'GHSA-p4cr-64x4-f92f', 'url': 'https://github.com/advisories/GHSA-p4cr-64x4-f92f'}]
references: [{'text': 'https://github.com/netvl/acc_reader/issues/1', 'url': 'https://github.com/netvl/acc_reader/issues/1'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer may cause UB (read_entry())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'flumedb(crates.io)', 'url': '/packages/flumedb.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45684', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45684'}, {'text': 'GHSA-p46c-w9m3-7qr2', 'url': 'https://github.com/advisories/GHSA-p46c-w9m3-7qr2'}, {'text': 'GHSA-p56p-gq3f-whg8', 'url': 'https://github.com/advisories/GHSA-p56p-gq3f-whg8'}]
references: [{'text': 'https://github.com/sunrise-choir/flumedb-rs/issues/10', 'url': 'https://github.com/sunrise-choir/flumedb-rs/issues/10'}, {'text': 'https://github.com/sunrise-choir/flumedb-rs/pull/12', 'url': 'https://github.com/sunrise-choir/flumedb-rs/pull/12'}]
patched: >=0.1.6
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation.
There are two of such cases (go_offset_log::read_entry()&offset_log::read_entry()). ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: readon uninitialized buffer may cause UB (bite::read::BiteReadExpandedExt::read_framed_max)
reported: December 31, 2020
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'bite(crates.io)', 'url': '/packages/bite.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36511', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36511'}, {'text': 'GHSA-72r2-rg28-47v9', 'url': 'https://github.com/advisories/GHSA-72r2-rg28-47v9'}, {'text': 'GHSA-v2ch-fc8f-qm33', 'url': 'https://github.com/advisories/GHSA-v2ch-fc8f-qm33'}]
references: [{'text': 'https://github.com/hinaria/bite/issues/1', 'url': 'https://github.com/hinaria/bite/issues/1'}]
patched: no patched versions
description: Affected versions of this crate calls a user providedReadimplementation on an uninitialized buffer. Readon uninitialized buffer is defined as undefined behavior in Rust. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: 'Read' on uninitialized memory may cause UB
reported: January  3, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'binjs_io(crates.io)', 'url': '/packages/binjs_io.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45683', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45683'}, {'text': 'GHSA-c6px-4grw-hrjr', 'url': 'https://github.com/advisories/GHSA-c6px-4grw-hrjr'}, {'text': 'GHSA-cw4j-cf6c-mmfv', 'url': 'https://github.com/advisories/GHSA-cw4j-cf6c-mmfv'}]
references: [{'text': 'https://github.com/binast/binjs-ref/issues/460', 'url': 'https://github.com/binast/binjs-ref/issues/460'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. The crate currently contains 4 occurrences of such cases. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: columnar:Readon uninitialized buffer may cause UB (ColumnarReadExt::read_typed_vec())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'columnar(crates.io)', 'url': '/packages/columnar.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45685', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45685'}, {'text': 'GHSA-9mp7-45qh-r8j8', 'url': 'https://github.com/advisories/GHSA-9mp7-45qh-r8j8'}, {'text': 'GHSA-cxcc-q839-2cw9', 'url': 'https://github.com/advisories/GHSA-cxcc-q839-2cw9'}]
references: [{'text': 'https://github.com/frankmcsherry/columnar/issues/6', 'url': 'https://github.com/frankmcsherry/columnar/issues/6'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation (ColumnarReadExt::read_typed_vec()). ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Window can read out of bounds if Read instance returns more bytes than buffer size
reported: February  3, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'rdiff(crates.io)', 'url': '/packages/rdiff.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45694', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45694'}, {'text': 'GHSA-2rxc-8f9w-fjq8', 'url': 'https://github.com/advisories/GHSA-2rxc-8f9w-fjq8'}, {'text': 'GHSA-q579-9wp9-gfp2', 'url': 'https://github.com/advisories/GHSA-q579-9wp9-gfp2'}]
references: [{'text': 'https://github.com/dyule/rdiff/issues/3', 'url': 'https://github.com/dyule/rdiff/issues/3'}]
patched: no patched versions
description: rdiffperforms a diff of two provided strings or files. As part of its reading
code it uses the return value of aReadinstance to set the length of
its internal character vector. If theReadimplementation claims that it has read more bytes than the length
of the provided buffer, the length of the vector will be set to longer than its
capacity. This causesrdiffAPIs to return uninitialized memory in its API
methods. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: InputStream::read_exact :Readon uninitialized buffer causes UB
reported: December 31, 2020
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'buffoon(crates.io)', 'url': '/packages/buffoon.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36512', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36512'}, {'text': 'GHSA-hmx9-jm3v-33hv', 'url': 'https://github.com/advisories/GHSA-hmx9-jm3v-33hv'}, {'text': 'GHSA-v938-qcc9-rwv8', 'url': 'https://github.com/advisories/GHSA-v938-qcc9-rwv8'}]
references: [{'text': 'https://github.com/carllerche/buffoon/issues/2', 'url': 'https://github.com/carllerche/buffoon/issues/2'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized memory may cause UB (fn preamble_skipcount())
reported: January  5, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'csv-sniffer(crates.io)', 'url': '/packages/csv-sniffer.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45686', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45686'}, {'text': 'GHSA-9783-42pm-x5jq', 'url': 'https://github.com/advisories/GHSA-9783-42pm-x5jq'}, {'text': 'GHSA-r67p-m7g9-gxw6', 'url': 'https://github.com/advisories/GHSA-r67p-m7g9-gxw6'}]
references: [{'text': 'https://github.com/jblondin/csv-sniffer/issues/1', 'url': 'https://github.com/jblondin/csv-sniffer/issues/1'}, {'text': 'https://github.com/jblondin/csv-sniffer/pull/2', 'url': 'https://github.com/jblondin/csv-sniffer/pull/2'}]
patched: >=0.2.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation (withinfn preamble_skipcount()). ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer can cause UB (impl ofReadKVExt)
reported: January  3, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'bronzedb-protocol(crates.io)', 'url': '/packages/bronzedb-protocol.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45682', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45682'}, {'text': 'GHSA-5phc-849h-vcxg', 'url': 'https://github.com/advisories/GHSA-5phc-849h-vcxg'}, {'text': 'GHSA-jv2r-jx6q-89jg', 'url': 'https://github.com/advisories/GHSA-jv2r-jx6q-89jg'}]
references: [{'text': 'https://github.com/Hexilee/BronzeDB/issues/1', 'url': 'https://github.com/Hexilee/BronzeDB/issues/1'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Reading on uninitialized buffer may cause UB (gfx_auxil::read_spirv())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'gfx-auxil(crates.io)', 'url': '/packages/gfx-auxil.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45689', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45689'}, {'text': 'GHSA-28p5-7rg4-8v99', 'url': 'https://github.com/advisories/GHSA-28p5-7rg4-8v99'}, {'text': 'GHSA-ff2r-xpwq-6whj', 'url': 'https://github.com/advisories/GHSA-ff2r-xpwq-6whj'}]
references: [{'text': 'https://github.com/gfx-rs/gfx/issues/3567', 'url': 'https://github.com/gfx-rs/gfx/issues/3567'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: vec-const attempts to construct a Vec from a pointer to a const slice
reported: August 14, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'vec-const(crates.io)', 'url': '/packages/vec-const.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-45680', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45680'}, {'text': 'GHSA-jmwx-r3gq-qq3p', 'url': 'https://github.com/advisories/GHSA-jmwx-r3gq-qq3p'}, {'text': 'GHSA-x76r-966h-5qv9', 'url': 'https://github.com/advisories/GHSA-x76r-966h-5qv9'}]
references: [{'text': 'https://github.com/Eolu/vec-const/issues/1#issuecomment-898908241', 'url': 'https://github.com/Eolu/vec-const/issues/1#issuecomment-898908241'}]
patched: >=2.0.0
description: Affected versions of this crate claimed to construct a constVecwith nonzero length and capacity, but that cannot be done because such aVecrequires a pointer from an allocator. The implementation was later changed to just construct astd::borrow::Cow. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: anymap is unmaintained.
reported: May  7, 2021
issued: May  7, 2021(last modified: June 13, 2023)
package: {'name': 'anymap(crates.io)', 'url': '/packages/anymap.html'}
type: INFOUnmaintained
aliases: [{'text': 'CVE-2021-38187', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38187'}, {'text': 'GHSA-hc92-9h3m-c39j', 'url': 'https://github.com/advisories/GHSA-hc92-9h3m-c39j'}]
references: [{'text': 'https://github.com/chris-morgan/anymap/issues/37', 'url': 'https://github.com/chris-morgan/anymap/issues/37'}]
patched: no patched versions
description: Theanymapcrate does not appear to be maintained, and the most recent
published version 0.12.1 includes a soundness bug. This has beenfixeda few years ago, but
was never released. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cpuid-boolhas been renamed tocpufeatures
reported: May  6, 2021
issued: May  6, 2021
package: {'name': 'cpuid-bool(crates.io)', 'url': '/packages/cpuid-bool.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/utils/pull/381', 'url': 'https://github.com/RustCrypto/utils/pull/381'}]
patched: no patched versions
description: Please use the `cpufeatures`` crate going forward: https://github.com/RustCrypto/utils/tree/master/cpufeatures There will be no further releases ofcpuid-bool. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: aes-ctrhas been merged into theaescrate
reported: April 29, 2021
issued: May  3, 2021
package: {'name': 'aes-ctr(crates.io)', 'url': '/packages/aes-ctr.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/block-ciphers/pull/200', 'url': 'https://github.com/RustCrypto/block-ciphers/pull/200'}]
patched: no patched versions
description: Please use theaescrate going forward. The new repository location is at: https://github.com/RustCrypto/block-ciphers/tree/master/aes Theaescrate now has an optionalctrfeature which autodetects SIMD
features oni686/x86-64targets and uses them if available, or otherwise
falls back to the implementation in thectrcrate. If you would prefer not to have this autodetection performed, use theaescrate directly with thectrcrate. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: project abandoned; migrate to theaes-sivcrate
reported: February 28, 2021
issued: May  3, 2021
package: {'name': 'miscreant(crates.io)', 'url': '/packages/miscreant.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/miscreant/miscreant.rs/commit/5d921f579e0c2b9960d472cf377b8487d97fbcec', 'url': 'https://github.com/miscreant/miscreant.rs/commit/5d921f579e0c2b9960d472cf377b8487d97fbcec'}]
patched: no patched versions
description: The Miscreant project has been abandoned and archived. The Rust implementation has been adapted into the newaes-sivcrate which
implements both the AES-CMAC-SIV and AES-PMAC-SIV constructions: https://github.com/RustCrypto/AEADs/tree/master/aes-siv Please migrate to theaes-sivcrate. Alternatively see theaes-gcm-sivcrate for a newer, faster construction
which provides similar properties: https://github.com/RustCrypto/AEADs/tree/master/aes-gcm-siv Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: aesnihas been merged into theaescrate
reported: April 29, 2021
issued: May  3, 2021
package: {'name': 'aesni(crates.io)', 'url': '/packages/aesni.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/block-ciphers/pull/200', 'url': 'https://github.com/RustCrypto/block-ciphers/pull/200'}]
patched: no patched versions
description: Please use theaescrate going forward. The new repository location is at: https://github.com/RustCrypto/block-ciphers/tree/master/aes AES-NI is now autodetected at runtime oni686/x86-64platforms.
If AES-NI is not present, theaescrate will fallback to a constant-time
portable software implementation. To prevent this fallback (and have absence of AES-NI result in an illegal
instruction crash instead), continue to pass the same RUSTFLAGS which were
previously required for theaesnicrate to compile: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: aes-softhas been merged into theaescrate
reported: April 29, 2021
issued: May  3, 2021
package: {'name': 'aes-soft(crates.io)', 'url': '/packages/aes-soft.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/block-ciphers/pull/200', 'url': 'https://github.com/RustCrypto/block-ciphers/pull/200'}]
patched: no patched versions
description: Please use theaescrate going forward. The new repository location is at: https://github.com/RustCrypto/block-ciphers/tree/master/aes AES-NI is now autodetected at runtime oni686/x86-64platforms.
If AES-NI is not present, theaescrate will fallback to a constant-time
portable software implementation. To force the use of a constant-time portable implementation on these platforms,
even if AES-NI is available, use the newforce-softfeature of theaescrate to disable autodetection. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rulinalg is unmaintained, use nalgebra instead
reported: February 11, 2020
issued: March  4, 2021
package: {'name': 'rulinalg(crates.io)', 'url': '/packages/rulinalg.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/AtheMathmo/rulinalg/issues/201#issuecomment-584749313', 'url': 'https://github.com/AtheMathmo/rulinalg/issues/201#issuecomment-584749313'}]
patched: no patched versions
description: Therulinalgcrate is no longer maintained, usenalgebrainstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: office is unmaintained, use calamine instead
reported: February  4, 2021
issued: March  3, 2021
package: {'name': 'office(crates.io)', 'url': '/packages/office.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustSec/advisory-db/issues/742#issuecomment-773313783', 'url': 'https://github.com/RustSec/advisory-db/issues/742#issuecomment-773313783'}]
patched: no patched versions
description: Theofficecrate is unmaintained. Usecalaminefor reading excel files. Contact theofficeauthor for ownership of the package name. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toqjsonrpc
reported: February 15, 2021
issued: February 15, 2021
package: {'name': 'jsonrpc-quic(crates.io)', 'url': '/packages/jsonrpc-quic.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_api/pull/623', 'url': 'https://github.com/maidsafe/sn_api/pull/623'}]
patched: no patched versions
description: This crate has been renamed fromjsonrpc-quictoqjsonrpc. The new repository location is: https://github.com/maidsafe/sn_api Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_api
reported: February 15, 2021
issued: February 15, 2021
package: {'name': 'safe-api(crates.io)', 'url': '/packages/safe-api.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_api/pull/619', 'url': 'https://github.com/maidsafe/sn_api/pull/619'}]
patched: no patched versions
description: This crate has been renamed fromsafe-apitosn_api. The new repository location is: https://github.com/maidsafe/sn_api Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: lzw is unmaintained
reported: February 10, 2020
issued: February 10, 2021
package: {'name': 'lzw(crates.io)', 'url': '/packages/lzw.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/nwin/lzw/issues/2', 'url': 'https://github.com/nwin/lzw/issues/2'}]
patched: no patched versions
unaffected: >0.10.0
description: The author of thelzwcrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: stderr is unmaintained; use eprintln instead
reported: December 22, 2020
issued: January 20, 2021
package: {'name': 'stderr(crates.io)', 'url': '/packages/stderr.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/biluohc/stderr/issues/5', 'url': 'https://github.com/biluohc/stderr/issues/5'}]
patched: no patched versions
description: Thestderrcrate is no longer maintained by its current owner. The author recommends using theeprintlnmacro from the standard library as a
replacement. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: difference is unmaintained
reported: December 20, 2020
issued: January  6, 2021(last modified: January 24, 2021)
package: {'name': 'difference(crates.io)', 'url': '/packages/difference.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/johannhof/difference.rs/issues/45', 'url': 'https://github.com/johannhof/difference.rs/issues/45'}]
patched: no patched versions
unaffected: >2.0.0
description: The author of thedifferencecrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: interfaces2 is unmaintained, use interfaces instead
reported: January  4, 2021
issued: January  6, 2021
package: {'name': 'interfaces2(crates.io)', 'url': '/packages/interfaces2.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/aep/interfaces-rs', 'url': 'https://github.com/aep/interfaces-rs'}]
patched: no patched versions
description: Theinterfaces2crate is not maintained any more;
useinterfacesinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been superseded bysn_client
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_authenticator(crates.io)', 'url': '/packages/safe_authenticator.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_client/pull/1267', 'url': 'https://github.com/maidsafe/sn_client/pull/1267'}]
patched: no patched versions
description: This crate has been superseded bysn_client. The new repository location is: https://github.com/maidsafe/sn_client Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_node
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_vault(crates.io)', 'url': '/packages/safe_vault.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_node/pull/1116', 'url': 'https://github.com/maidsafe/sn_node/pull/1116'}]
patched: no patched versions
description: This crate has been renamed fromsafe_vaulttosn_node. The new repository location is: https://github.com/maidsafe/sn_node Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been superseded bysn_client
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_app(crates.io)', 'url': '/packages/safe_app.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_client/pull/1267', 'url': 'https://github.com/maidsafe/sn_client/pull/1267'}]
patched: no patched versions
description: This crate has been superseded bysn_client. The new repository location is: https://github.com/maidsafe/sn_client Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_client
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_core(crates.io)', 'url': '/packages/safe_core.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_client/pull/1267', 'url': 'https://github.com/maidsafe/sn_client/pull/1267'}]
patched: no patched versions
description: This crate has been renamed fromsafe_coretosn_client. The new repository location is: https://github.com/maidsafe/sn_client Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_routing
reported: November  2, 2020
issued: December  2, 2020
package: {'name': 'routing(crates.io)', 'url': '/packages/routing.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_routing/pull/2190', 'url': 'https://github.com/maidsafe/sn_routing/pull/2190'}]
patched: no patched versions
description: This crate has been renamed fromroutingtosn_routing. The new repository location is: https://github.com/maidsafe/sn_routing Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: memmap is unmaintained
reported: December  2, 2020
issued: December  2, 2020(last modified: August 25, 2022)
package: {'name': 'memmap(crates.io)', 'url': '/packages/memmap.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/danburkert/memmap-rs/issues/90', 'url': 'https://github.com/danburkert/memmap-rs/issues/90'}]
patched: no patched versions
unaffected: >0.7.0
description: The author of thememmapcrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Some lock_api lock guard objects can cause data races
reported: November  8, 2020
issued: November 18, 2020(last modified: June 13, 2023)
package: {'name': 'lock_api(crates.io)', 'url': '/packages/lock_api.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35910', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35910'}, {'text': 'CVE-2020-35911', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35911'}, {'text': 'CVE-2020-35912', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35912'}, {'text': 'CVE-2020-35913', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35913'}, {'text': 'CVE-2020-35914', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35914'}, {'text': 'GHSA-5wg8-7c9q-794v', 'url': 'https://github.com/advisories/GHSA-5wg8-7c9q-794v'}, {'text': 'GHSA-gmv4-vmx3-x9f3', 'url': 'https://github.com/advisories/GHSA-gmv4-vmx3-x9f3'}, {'text': 'GHSA-hj9h-wrgg-hgmx', 'url': 'https://github.com/advisories/GHSA-hj9h-wrgg-hgmx'}, {'text': 'GHSA-ppj3-7jw3-8vc4', 'url': 'https://github.com/advisories/GHSA-ppj3-7jw3-8vc4'}, {'text': 'GHSA-vh4p-6j7g-f4j9', 'url': 'https://github.com/advisories/GHSA-vh4p-6j7g-f4j9'}]
references: [{'text': 'https://github.com/Amanieu/parking_lot/pull/262', 'url': 'https://github.com/Amanieu/parking_lot/pull/262'}]
patched: >=0.4.2
affected functions: Version
lock_api::mappedmutexguard: >=0.1.0
lock_api::mappedrwlockreadguard: >=0.1.0
lock_api::mappedrwlockwriteguard: >=0.1.0
lock_api::rwlockreadguard: >=0.1.0
lock_api::rwlockwriteguard: >=0.1.0
description: Affected versions of lock_api had unsound implementations of theSendorSynctraits for some guard objects, namely: These guards could allow data races through types that are not safe toSendacross thread boundaries in safe Rust code. This issue was fixed by changing the trait bounds on theMappedguard types
and removing theSynctrait for theRwLockguards. Advisory available underCC0-1.0license.
affected_functions: lock_api;;mappedmutexguard
version_of_Affected: >=0.1.0

---
classification: INFO
subtitle: crate has been renamed toqp2p
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'quic-p2p(crates.io)', 'url': '/packages/quic-p2p.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/qp2p/pull/141', 'url': 'https://github.com/maidsafe/qp2p/pull/141'}]
patched: no patched versions
description: This crate has been renamed fromquic-p2ptoqp2p. The new repository location is: https://github.com/maidsafe/qp2p Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosafe-nd
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'safe-nd(crates.io)', 'url': '/packages/safe-nd.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_data_types/pull/218', 'url': 'https://github.com/maidsafe/sn_data_types/pull/218'}]
patched: no patched versions
description: This crate has been renamed fromsafe-ndtosn_data_types. The new repository location is: https://github.com/maidsafe/sn_data_types Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_fake_clock
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'fake_clock(crates.io)', 'url': '/packages/fake_clock.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_fake_clock/pull/38', 'url': 'https://github.com/maidsafe/sn_fake_clock/pull/38'}]
patched: no patched versions
description: This crate has been renamed fromfake_clocktosn_fake_clock. The new repository location is: https://github.com/maidsafe/sn_fake_clock Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_bindgen
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'safe_bindgen(crates.io)', 'url': '/packages/safe_bindgen.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_bindgen/pull/67', 'url': 'https://github.com/maidsafe/sn_bindgen/pull/67'}]
patched: no patched versions
description: This crate has been renamed fromsafe_bindgentosn_bindgen. The new repository location is: https://github.com/maidsafe/sn_bindgen Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_ffi_utils
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'ffi_utils(crates.io)', 'url': '/packages/ffi_utils.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_ffi_utils/pull/45', 'url': 'https://github.com/maidsafe/sn_ffi_utils/pull/45'}]
patched: no patched versions
description: This crate has been renamed fromffi_utilstosn_ffi_utils. The new repository location is: https://github.com/maidsafe/sn_ffi_utils Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: stdweb is unmaintained
reported: May  4, 2020
issued: October 25, 2020
package: {'name': 'stdweb(crates.io)', 'url': '/packages/stdweb.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/koute/stdweb/issues/403', 'url': 'https://github.com/koute/stdweb/issues/403'}]
patched: no patched versions
unaffected: >0.4.20
description: The author of thestdwebcrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Fix for UB in failure to catch panics crossing FFI boundaries
reported: March 10, 2019
issued: October 25, 2020(last modified: June 13, 2023)
package: {'name': 'libpulse-binding(crates.io)', 'url': '/packages/libpulse-binding.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2019-25055', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25055'}, {'text': 'GHSA-wcxc-jf6c-8rx9', 'url': 'https://github.com/advisories/GHSA-wcxc-jf6c-8rx9'}, {'text': 'GHSA-xvcg-2q82-r87j', 'url': 'https://github.com/advisories/GHSA-xvcg-2q82-r87j'}]
references: [{'text': 'https://github.com/jnqnfe/pulse-binding-rust/commit/7fd282aef7787577c385aed88cb25d004b85f494', 'url': 'https://github.com/jnqnfe/pulse-binding-rust/commit/7fd282aef7787577c385aed88cb25d004b85f494'}]
patched: >=2.6.0
description: Affected versions of this crate failed to catch panics crossing FFI boundaries via callbacks, which
is a form of UB. This flaw was corrected bythis commitwhich was included in version 2.6.0. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tocipher
reported: October 15, 2020
issued: October 25, 2020
package: {'name': 'block-cipher(crates.io)', 'url': '/packages/block-cipher.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/traits/pull/337', 'url': 'https://github.com/RustCrypto/traits/pull/337'}]
patched: no patched versions
description: This crate has been renamed fromblock-ciphertocipher. The new repository location is at: https://github.com/RustCrypto/traits/tree/master/cipher Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tocipher
reported: October 15, 2020
issued: October 25, 2020
package: {'name': 'stream-cipher(crates.io)', 'url': '/packages/stream-cipher.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/traits/pull/337', 'url': 'https://github.com/RustCrypto/traits/pull/337'}]
patched: no patched versions
description: This crate has been renamed fromstream-ciphertocipher. The new repository location is at: https://github.com/RustCrypto/traits/tree/master/cipher Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toblock-cipher
reported: May 26, 2020
issued: October  1, 2020
package: {'name': 'block-cipher-trait(crates.io)', 'url': '/packages/block-cipher-trait.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/traits/pull/139', 'url': 'https://github.com/RustCrypto/traits/pull/139'}]
patched: no patched versions
description: This crate has been renamed fromblock-cipher-traittoblock-cipher. The new repository location is at: https://github.com/RustCrypto/traits/tree/master/block-cipher Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tempdircrate has been deprecated; usetempfileinstead
reported: February 13, 2018
issued: October  1, 2020
package: {'name': 'tempdir(crates.io)', 'url': '/packages/tempdir.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rust-lang-deprecated/tempdir/pull/46', 'url': 'https://github.com/rust-lang-deprecated/tempdir/pull/46'}]
patched: no patched versions
description: Thetempdircrate has been deprecated
and the functionality is merged intotempfile. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: term is looking for a new maintainer
reported: November 19, 2018
issued: October  1, 2020
package: {'name': 'term(crates.io)', 'url': '/packages/term.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Stebalien/term/issues/93', 'url': 'https://github.com/Stebalien/term/issues/93'}]
patched: no patched versions
unaffected: >0.6.1
description: The author of thetermcrate does not have time to maintain it and is looking
for a new maintainer. Some maintained alternatives you can potentially switch to instead, depending
on your needs: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: net2crate has been deprecated; usesocket2instead
reported: May  1, 2020
issued: October  1, 2020
package: {'name': 'net2(crates.io)', 'url': '/packages/net2.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/deprecrated/net2-rs/commit/3350e3819adf151709047e93f25583a5df681091', 'url': 'https://github.com/deprecrated/net2-rs/commit/3350e3819adf151709047e93f25583a5df681091'}]
patched: no patched versions
description: Thenet2crate has been deprecated
and users are encouraged to consideredsocket2instead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: stb_truetypecrate has been deprecated; usettf-parserinstead
reported: April 18, 2020
issued: October  1, 2020
package: {'name': 'stb_truetype(crates.io)', 'url': '/packages/stb_truetype.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.redox-os.org/redox-os/stb_truetype-rs/-/commit/f1f5be4794e87bfc80a4255bc3f23ed75dd77645', 'url': 'https://gitlab.redox-os.org/redox-os/stb_truetype-rs/-/commit/f1f5be4794e87bfc80a4255bc3f23ed75dd77645'}]
patched: no patched versions
description: This crate was maintained for use in rusttype which has switched to usettf-parser Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Library exclusively intended to obfuscate code.
reported: April 23, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'plutonium(crates.io)', 'url': '/packages/plutonium.html'}
type: INFONotice
aliases: [{'text': 'GHSA-gfg9-x6px-r7gr', 'url': 'https://github.com/advisories/GHSA-gfg9-x6px-r7gr'}]
references: [{'text': 'https://docs.rs/plutonium', 'url': 'https://docs.rs/plutonium'}]
patched: no patched versions
description: This crate allows you to write safe functions with unsafe bodies without theunsafekeyword. The value this adds is questionable, and hidesunsafeusages from naive analysis. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cassandracrate is unmaintained; usecassandra-cppinstead
reported: December 15, 2016
issued: October  1, 2020
package: {'name': 'cassandra(crates.io)', 'url': '/packages/cassandra.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/tupshin/cassandra-rs/issues/52', 'url': 'https://github.com/tupshin/cassandra-rs/issues/52'}]
patched: no patched versions
unaffected: >0.8.1
description: Thecassandracrate has not seen a release since December 2016, and its author
is unresponsive. Thecassandra-cppcrate is a maintained fork: https://github.com/Metaswitch/cassandra-rs Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: libusb is unmaintained; use rusb instead
reported: September 10, 2016
issued: October  1, 2020
package: {'name': 'libusb(crates.io)', 'url': '/packages/libusb.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dcuddeback/libusb-rs/issues/33', 'url': 'https://github.com/dcuddeback/libusb-rs/issues/33'}]
patched: no patched versions
unaffected: >0.3.0
description: Thelibusbcrate has not seen a release since September 2016, and its author
is unresponsive. Therusbcrate is a maintained fork: https://github.com/a1ien/rusb Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rust_sodium is unmaintained; switch to a modern alternative
reported: January 20, 2020
issued: October  1, 2020
package: {'name': 'rust_sodium(crates.io)', 'url': '/packages/rust_sodium.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/rust_sodium/pull/117', 'url': 'https://github.com/maidsafe/rust_sodium/pull/117'}]
patched: no patched versions
unaffected: >0.10.2
description: Therust_sodiumcrate is no longer maintained by its current owner, who
advise in the repository readme that they are looking for
someone else to take ownership of it. We recommend you switch to an alternative crate such as: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rust-crypto is unmaintained; switch to a modern alternative
reported: September  6, 2016
issued: October  1, 2020(last modified: January  9, 2022)
package: {'name': 'rust-crypto(crates.io)', 'url': '/packages/rust-crypto.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/DaGenix/rust-crypto/issues/440', 'url': 'https://github.com/DaGenix/rust-crypto/issues/440'}]
patched: no patched versions
unaffected: >0.2.36
description: Therust-cryptocrate has not seen a release or GitHub commit since 2016,
and its author is unresponsive. NOTE: The (old)rust-cryptocrate (with hyphen) should not be confused with
similarly named (new)RustCrypto GitHub Org(without hyphen). The GitHub Org
is actively maintained. We recommend you switch to one of the following crates instead, depending on
which algorithms you need: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tiberius is unmaintained
reported: February 28, 2020
issued: October  1, 2020
package: {'name': 'tiberius(crates.io)', 'url': '/packages/tiberius.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustSec/advisory-db/issues/261', 'url': 'https://github.com/RustSec/advisory-db/issues/261'}]
patched: no patched versions
unaffected: >0.3.2
description: The author oftiberiushas archived the GitHub repository and left the
following note: Suggested alternatives are: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: smallvec creates uninitialized value of any type
reported: September 25, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2018-25023', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-25023'}, {'text': 'GHSA-55m5-whcv-c49c', 'url': 'https://github.com/advisories/GHSA-55m5-whcv-c49c'}, {'text': 'GHSA-66p5-j55p-32r9', 'url': 'https://github.com/advisories/GHSA-66p5-j55p-32r9'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/126', 'url': 'https://github.com/servo/rust-smallvec/issues/126'}]
patched: >=0.6.13
description: Affected versions of this crate calledmem::uninitialized()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null and thus may not remain uninitialized). The flaw was corrected by avoiding the use ofmem::uninitialized(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: chan is end-of-life; use crossbeam-channel instead
reported: July 31, 2018
issued: October  1, 2020
package: {'name': 'chan(crates.io)', 'url': '/packages/chan.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/BurntSushi/chan/commit/0a5c0d4ad4adc90a54ee04a427389acf2e157275', 'url': 'https://github.com/BurntSushi/chan/commit/0a5c0d4ad4adc90a54ee04a427389acf2e157275'}]
patched: no patched versions
unaffected: >0.1.23
description: chanhas reached its end-of-life and is now deprecated. The intended successor of this crate iscrossbeam-channel.
Its API is strikingly similar, but comes with a much betterselect!macro,
better performance, a better test suite and an all-around better
implementation. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: lz4-compress is unmaintained
reported: April 17, 2017
issued: October  1, 2020
package: {'name': 'lz4-compress(crates.io)', 'url': '/packages/lz4-compress.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.redox-os.org/redox-os/tfs/issues/89', 'url': 'https://gitlab.redox-os.org/redox-os/tfs/issues/89'}]
patched: no patched versions
description: According to the developersthis crate is no longer maintained. The suggested alternative islz4-compression, a maintained fork oflz4-compress. See alsolz-fearwhich is compatible with the reference LZ4 implementation in C, but not with lz4-compress. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crust repo has been archived; use libp2p instead
reported: November 21, 2019
issued: October  1, 2020
package: {'name': 'crust(crates.io)', 'url': '/packages/crust.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/crust', 'url': 'https://github.com/maidsafe/crust'}]
patched: no patched versions
unaffected: >0.32.1
description: ** Thecrustcrate repo was archived with no warning or explanation.** Given that it was archived with no warning or successor, there's not an
official replacement butrust-libp2plooks like it's got a similar feature set and is actively maintained. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: quickersort is deprecated and unmaintained
reported: June 30, 2018
issued: October  1, 2020
package: {'name': 'quickersort(crates.io)', 'url': '/packages/quickersort.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/notriddle/quickersort/commit/0bc164366315801f0c6b31f4081b7df9fc894076', 'url': 'https://github.com/notriddle/quickersort/commit/0bc164366315801f0c6b31f4081b7df9fc894076'}]
patched: no patched versions
unaffected: >3.0.1
description: The author of thequickersortcrate has deprecated it and does not recommend using it anymore. Everything in it has been incorporated intostd::sort_unstablein the standard library as of Rust 1.20. Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: gix-path uses local config across repos when it is the highest scope
reported: August 31, 2024
issued: September  1, 2024(last modified: September  3, 2024)
package: {'name': 'gix-path(crates.io)', 'url': '/packages/gix-path.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2024-45305', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45305'}, {'text': 'GHSA-v26r-4c9c-h3j6', 'url': 'https://github.com/advisories/GHSA-v26r-4c9c-h3j6'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-v26r-4c9c-h3j6', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-v26r-4c9c-h3j6'}, {'text': 'https://github.com/advisories/GHSA-v26r-4c9c-h3j6', 'url': 'https://github.com/advisories/GHSA-v26r-4c9c-h3j6'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-45305', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-45305'}]
cvss score: 2.5LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N
patched: >=0.10.10
affected functions: Version
gix_path::env::installation_config: *
gix_path::env::installation_config_prefix: *
description: 
unaffected: ["gix-pathexecutesgitto find the path of a configuration file that belongs to thegitinstallation itself, but mistakenly treats the local repository's configuration as system-wide if no higher scoped configuration is found. In rare cases, this causes a less trusted repository to be treated as more trusted, or leaks sensitive information from one repository to another, such as sending credentials to another repository's remote."]
References: ['It is believed to be very difficult to exploit this vulnerability deliberately, due to the need either to anticipate a situation in which higher-scoped configuration variables would be absent, or to arrange for this to happen. Although any operating system may be affected, users running Apple Git on macOS are much less likely to be affected.', "In the example shown above, more secure general practices would avoid it: using a credential manager, or even usinghttp.<url>.extraHeaderwith as specific a<url>as possible, rather than the more generalhttp.extraHeader. Many scenarios are analogous: if each repository's configuration is as secure as possible for how the repository is used, and secrets are stored securely and separately, then the circumstances under which an unacceptably unsecure configuration is used, or under which a leak of credentials would occur, become unlikely.", 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: gix_path;;env;;installation_config
version_of_Affected: *

---
classification: LOW
subtitle: gitoxide-core does not neutralize special characters for terminals
reported: August 22, 2024
issued: August 23, 2024
package: {'name': 'gitoxide-core(crates.io)', 'url': '/packages/gitoxide-core.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2024-43785', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-43785'}, {'text': 'GHSA-88g2-r9rw-g55h', 'url': 'https://github.com/advisories/GHSA-88g2-r9rw-g55h'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-88g2-r9rw-g55h', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-88g2-r9rw-g55h'}, {'text': 'https://github.com/advisories/GHSA-88g2-r9rw-g55h', 'url': 'https://github.com/advisories/GHSA-88g2-r9rw-g55h'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-43785', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-43785'}, {'text': 'https://github.com/Byron/gitoxide/issues/1534', 'url': 'https://github.com/Byron/gitoxide/issues/1534'}]
cvss score: 2.5LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N
patched: no patched versions
description: 
unaffected: ['Thegixandeincommands write pathnames and other metadata literally to terminals, even if they contain characters terminals treat specially, including ANSI escape sequences. This sometimes allows an untrusted repository to misrepresent its contents and to alter or concoct error messages.']
References: ['For users who do not clone or operate in clones of untrusted repositories, there is no impact.', 'Windows is much less affected than Unix-like systems due to limitations on what characters can appear in filenames, and because traditionally Windows terminals do not support as many ANSI escape sequences.', 'Because differentgixandeincommands display different data in different formats, the author of a malicious repository must guess how it will be used, which complicates crafting truly convincing output, though it may be possible to craft a repository wheregix clonefails to clone it but produces a misleading message.', 'Although this is mainly exploitable on systemsotherthan Windows, in the ability to produce misleading output this superficially resemblesCVE-2024-35197. But this is much more limited, because:', {'text': 'CVE-2024-35197', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, 'The misleading output can only be made to go where the application is already sending output. Redirection is not defeated, and devices to access cannot be chosen by the attacker.', 'The misleading output can only be take placewhenthe application is already producing output. This limitation complicates the production of believable messages.', 'Only terminals are affected. Even if a standard stream is redirected to another file or device, these special characters would not have a special effect, unless echoed later without sanitization.', 'Reading and blocking cannot be performed.', 'Applications other than the gitoxidegixandeinexecutables are unaffected. The exception is if another application usesgitoxide-core. But this is explicitly discouraged in thegitoxide-coredocumentation and is believed to be rare.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: LOW
subtitle: Apache Arrow Rust Object Store: AWS WebIdentityToken exposure in log files
reported: July 23, 2024
issued: July 23, 2024
package: {'name': 'object_store(crates.io)', 'url': '/packages/object_store.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2024-41178', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-41178'}]
references: [{'text': 'https://github.com/apache/arrow-rs/pull/6074', 'url': 'https://github.com/apache/arrow-rs/pull/6074'}, {'text': 'https://www.openwall.com/lists/oss-security/2024/07/23/3', 'url': 'https://www.openwall.com/lists/oss-security/2024/07/23/3'}]
cvss score: 3.8LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: Low
user interaction: None
scope: Changed
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N
patched: >=0.10.2
unaffected: <0.5.0
description: Exposure of temporary credentials in logs in Apache Arrow Rust Object Store,
version 0.10.1 and earlier on all platforms using AWS WebIdentityTokens. On certain error conditions, the logs may contain the OIDC token passed toAssumeRoleWithWebIdentity.
This allows someone with access to the logs to impersonate that identity,
including performing their own calls to AssumeRoleWithWebIdentity, until the
OIDC token expires. Typically OIDC tokens are valid for up to an hour, although
this will vary depending on the issuer. Users are recommended to use a different AWS authentication mechanism, disable
logging or upgrade to version 0.10.2, which fixes this issue. When using AWS WebIdentityTokens with theobject_storecrate, in the event of
a failure and automatic retry, the underlyingreqwesterror, including the
full URL with the credentials, potentially in the parameters, is written to the
logs. Thanks to Paul Hatcherian for reporting this vulnerability Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: sudo-rs: Path Traversal vulnerability
reported: November  1, 2023
issued: November  6, 2023
package: {'name': 'sudo-rs(crates.io)', 'url': '/packages/sudo-rs.html'}
type: Vulnerability
categories: ['file-disclosure']
keywords: []
aliases: [{'text': 'CVE-2023-42456', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42456'}, {'text': 'GHSA-2r3c-m6v7-9354', 'url': 'https://github.com/advisories/GHSA-2r3c-m6v7-9354'}]
references: [{'text': 'https://github.com/advisories/GHSA-2r3c-m6v7-9354', 'url': 'https://github.com/advisories/GHSA-2r3c-m6v7-9354'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42456', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42456'}]
cvss score: 3.1LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: High
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:N/I:L/A:L
patched: >=0.2.1
description: An issue was discovered where usernames containing the . and / characters could result in the corruption of specific files on the filesystem. As usernames are generally not limited by the characters they can contain, a username appearing to be a relative path can be constructed. For example we could add a user to the system containing the username ../../../../bin/cp. When logged in as a user with that name, that user could run sudo -K to clear their session record file. The session code then constructs the path to the session file by concatenating the username to the session file storage directory, resulting in a resolved path of /bin/cp. The code then clears that file, resulting in the cp binary effectively being removed from the system. An attacker needs to be able to login as a user with a constructed username. Given that such a username is unlikely to exist on an existing system, they will also need to be able to create the users with the constructed usernames. The bug is fixed in version 0.2.1 of sudo-rs. Sudo-rs now uses the uid for the user instead of their username for determining the filename. Note that an upgrade to this version will result in existing session files being ignored and users will be forced to re-authenticate. It also fully eliminates any possibility of path traversal, given that uids are always integer values. The issue was corrected in commitbfdbda22968e3de43fa8246cab1681cfd5d5493d. Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: Default functions in VolatileMemory trait lack bounds checks, potentially leading to out-of-bounds memory accesses
reported: September  1, 2023
issued: September  6, 2023
package: {'name': 'vm-memory(crates.io)', 'url': '/packages/vm-memory.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2023-41051', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-41051'}, {'text': 'GHSA-49hh-fprx-m68g', 'url': 'https://github.com/advisories/GHSA-49hh-fprx-m68g'}]
references: [{'text': 'https://github.com/rust-vmm/vm-memory/issues/250', 'url': 'https://github.com/rust-vmm/vm-memory/issues/250'}, {'text': 'https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8', 'url': 'https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8'}]
cvss score: 2.5LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'Low'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: None
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L
patched: >=0.12.2
affected functions: Version
vm_memory::volatile_memory::volatilememory::aligned_as_mut: <0.12.2
vm_memory::volatile_memory::volatilememory::aligned_as_ref: <0.12.2
vm_memory::volatile_memory::volatilememory::get_array_ref: <0.12.2
vm_memory::volatile_memory::volatilememory::get_atomic_ref: <0.12.2
vm_memory::volatile_memory::volatilememory::get_ref: <0.12.2
description: An issue was discovered in the default implementations of theVolatileMemory::{get_atomic_ref, aligned_as_ref, aligned_as_mut, get_ref, get_array_ref}trait functions, which allows out-of-bounds memory access if theVolatileMemory::get_slicefunction returns aVolatileSlicewhose length is less than the function’scountargument. No implementations ofget_sliceprovided invm_memoryare affected. Users of customVolatileMemoryimplementations may be impacted if the custom implementation does not adhere toget_slice's documentation. The issue started in version 0.1.0 but was fixed in version 0.12.2 by inserting a check that verifies that theVolatileSlicereturned byget_sliceis of the correct length. Advisory available underCC0-1.0license.
affected_functions: vm_memory;;volatile_memory;;volatilememory;;aligned_as_mut
version_of_Affected: <0.12.2

---
classification: LOW
subtitle: taurifilesystem scope partial bypass
reported: September 19, 2022
issued: February 25, 2023
package: {'name': 'tauri(crates.io)', 'url': '/packages/tauri.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2022-41874', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41874'}, {'text': 'GHSA-q9wv-22m9-vhqh', 'url': 'https://github.com/advisories/GHSA-q9wv-22m9-vhqh'}]
references: [{'text': 'https://github.com/tauri-apps/tauri/issues/5234', 'url': 'https://github.com/tauri-apps/tauri/issues/5234'}]
cvss score: 2.3LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: High
user interaction: Required
scope: Changed
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:H/UI:R/S:C/C:L/I:N/A:N
patched: >=1.0.7, <1.1.0>=1.1.2
unaffected: <1.0.0
description: A bug identified inthisissue allows a partial filesystem scope bypass if glob characters are used within file dialog or drag-and-drop functionalities. ThisPR fixes the issue by escaping glob characters. Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: File exposure in pleaser
reported: May 27, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['file-disclosure']
aliases: [{'text': 'CVE-2021-31153', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31153'}, {'text': 'GHSA-f3fg-5j9p-vchc', 'url': 'https://github.com/advisories/GHSA-f3fg-5j9p-vchc'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31153', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31153'}]
cvss score: 3.3LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N
patched: >=0.4
description: pleaser before 0.4 allows a local unprivileged attacker to gain knowledge about the existence of files or directories in privileged locations via the search_path function, the --check option, or the -d option. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: gix-path can use a fake program files location
reported: July 18, 2024
issued: July 18, 2024
package: {'name': 'gix-path(crates.io)', 'url': '/packages/gix-path.html'}
type: Vulnerability
categories: ['code-execution', 'privilege-escalation']
keywords: []
aliases: [{'text': 'CVE-2024-40644', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40644'}, {'text': 'GHSA-mgvv-9p9g-3jv4', 'url': 'https://github.com/advisories/GHSA-mgvv-9p9g-3jv4'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-mgvv-9p9g-3jv4', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-mgvv-9p9g-3jv4'}, {'text': 'https://github.com/advisories/GHSA-mgvv-9p9g-3jv4', 'url': 'https://github.com/advisories/GHSA-mgvv-9p9g-3jv4'}]
cvss score: 6.8MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow', 'Privileges required': 'Low', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow
privileges required: Low
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:L
patched: >=0.10.9
unaffected: ['When looking for Git for Windows so it can run it to report its paths,gix-pathcan be tricked into running anothergit.exeplaced in an untrusted location by a limited user account.']
affected oses: windows
affected functions: Version
gix_path::env::exe_invocation: *
gix_path::env::installation_config: *
gix_path::env::installation_config_prefix: *
gix_path::env::system_prefix: *
description: 
References: ['Only Windows is affected. Exploitation is unlikely except on a 32-bit system. In particular, running a 32-bit build on a 64-bit system is not a risk factor. Furthermore, the attacker must have a user account on the system, though it may be a relatively unprivileged account. Such a user can perform privilege escalation and execute code as another user, though it may be difficult to do so reliably because the targeted user account must run an application or service that usesgix-pathand must not havegitin itsPATH.', 'The main exploitable configuration is one where Git for Windows has been installed but not added toPATH. This is one of the options in its installer, though not the default option. Alternatively, an affected program that sanitizes itsPATHto remove seemingly nonessential directories could allow exploitation. But for the most part, if the target user has configured aPATHin which the realgit.execan be found, then this cannot be exploited.', 'This vulnerability is comparable toCVE-2022-24765, in which an uncontrolled path likeC:\\.git\\config, which a limited user can create, could supply configuration used by other users. However, in this case, exploitation is slightly simpler because, rather than using configuration, an executable is directly run.', {'text': 'CVE-2022-24765', 'url': 'https://github.com/git-for-windows/git/security/advisories/GHSA-vw2c-22j4-2fh2'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: gix_path;;env;;exe_invocation
version_of_Affected: *

---
classification: MEDIUM
subtitle: Refs and paths with reserved Windows device names access the devices
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-index(crates.io)', 'url': '/packages/gix-index.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2024-35197', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35197'}, {'text': 'GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://github.com/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197'}]
cvss score: 5.4MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L
patched: >=0.33.0
affected oses: windows
description: 
unaffected: ['On Windows, fetching refs that clash with legacy device names reads from the devices, and checking out paths that clash with such names writes arbitrary data to the devices. This allows a repository, when cloned, to cause indefinite blocking or the production of arbitrary message that appear to have come from the application, and potentially other harmful effects under limited circumstances.']
References: ['If Windows is not used, or untrusted repositories are not cloned or otherwise used, then there is no impact.', 'The impact is expected to be limited in common configurations, but may vary widely depending on what devices exist, how they are being used, how much knowledge an attacker has of the precise details of their use, and whether the user is likely to trust information that appears in a console. Accessing devices through refs is expected to be less dangerous than accessing them through filenames, since it is trivial to attempt to write arbitrary data using filenames.', "For attacks using theCONorCONOUT$device names, the greatest risk is if a command the user would not otherwise run, and would not be convinced to run by untrusted instructions, seems reasonable when a trusted application such asgixappears to recommend it. The user may then be misled into running an attacker's command.", 'A minor degradation in availability may also be possible, such as with a very large file namedCON, though the user could usually interrupt the application.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: Refs and paths with reserved Windows device names access the devices
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-worktree(crates.io)', 'url': '/packages/gix-worktree.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2024-35197', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35197'}, {'text': 'GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://github.com/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197'}]
cvss score: 5.4MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L
patched: >=0.34.0
affected oses: windows
description: 
unaffected: ['On Windows, fetching refs that clash with legacy device names reads from the devices, and checking out paths that clash with such names writes arbitrary data to the devices. This allows a repository, when cloned, to cause indefinite blocking or the production of arbitrary message that appear to have come from the application, and potentially other harmful effects under limited circumstances.']
References: ['If Windows is not used, or untrusted repositories are not cloned or otherwise used, then there is no impact.', 'The impact is expected to be limited in common configurations, but may vary widely depending on what devices exist, how they are being used, how much knowledge an attacker has of the precise details of their use, and whether the user is likely to trust information that appears in a console. Accessing devices through refs is expected to be less dangerous than accessing them through filenames, since it is trivial to attempt to write arbitrary data using filenames.', "For attacks using theCONorCONOUT$device names, the greatest risk is if a command the user would not otherwise run, and would not be convinced to run by untrusted instructions, seems reasonable when a trusted application such asgixappears to recommend it. The user may then be misled into running an attacker's command.", 'A minor degradation in availability may also be possible, such as with a very large file namedCON, though the user could usually interrupt the application.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: Refs and paths with reserved Windows device names access the devices
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-ref(crates.io)', 'url': '/packages/gix-ref.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2024-35197', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35197'}, {'text': 'GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://github.com/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197'}]
cvss score: 5.4MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L
patched: >=0.44.0
affected oses: windows
description: 
unaffected: ['On Windows, fetching refs that clash with legacy device names reads from the devices, and checking out paths that clash with such names writes arbitrary data to the devices. This allows a repository, when cloned, to cause indefinite blocking or the production of arbitrary message that appear to have come from the application, and potentially other harmful effects under limited circumstances.']
References: ['If Windows is not used, or untrusted repositories are not cloned or otherwise used, then there is no impact.', 'The impact is expected to be limited in common configurations, but may vary widely depending on what devices exist, how they are being used, how much knowledge an attacker has of the precise details of their use, and whether the user is likely to trust information that appears in a console. Accessing devices through refs is expected to be less dangerous than accessing them through filenames, since it is trivial to attempt to write arbitrary data using filenames.', "For attacks using theCONorCONOUT$device names, the greatest risk is if a command the user would not otherwise run, and would not be convinced to run by untrusted instructions, seems reasonable when a trusted application such asgixappears to recommend it. The user may then be misled into running an attacker's command.", 'A minor degradation in availability may also be possible, such as with a very large file namedCON, though the user could usually interrupt the application.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: serdedeserialization forFamStructWrapperlacks bound checks that could potentially lead to out-of-bounds memory access
reported: January  2, 2024
issued: January 13, 2024
package: {'name': 'vmm-sys-util(crates.io)', 'url': '/packages/vmm-sys-util.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2023-50711', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-50711'}, {'text': 'GHSA-875g-mfp6-g7f9', 'url': 'https://github.com/advisories/GHSA-875g-mfp6-g7f9'}]
references: [{'text': 'https://github.com/advisories/GHSA-875g-mfp6-g7f9', 'url': 'https://github.com/advisories/GHSA-875g-mfp6-g7f9'}]
cvss score: 5.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:L
patched: >=0.12.0
unaffected: <0.5.0
affected functions: Version
vmm_sys_util::fam::famstructwrapper::deserialize: <0.12.0, >=0.5.0
description: An issue was discovered in theFamStructWrapper::deserializeimplementation
provided by the crate forvmm_sys_util::fam::FamStructWrapper, which can lead
to out of bounds memory accesses. The deserialization does not check that the
length stored in the header matches the flexible array length. Mismatch in the
lengths might allow out of bounds memory access through Rust-safe methods. Impacted versions: >= 0.5.0 The issue was corrected in version 0.12.0 by inserting a check that verifies
the lengths of compared flexible arrays are equal for any deserialized header
and aborting deserialization otherwise. Moreover, the API was changed so that
header length can only be modified through Rust-unsafe code. This ensures that
users cannot trigger out-of-bounds memory access from Rust-safe code. Advisory available underCC0-1.0license.
affected_functions: vmm_sys_util;;fam;;famstructwrapper;;deserialize
version_of_Affected: <0.12.0, >=0.5.0

---
classification: MEDIUM
subtitle: Marvin Attack: potential key recovery through timing sidechannels
reported: November 22, 2023
issued: November 28, 2023(last modified: December 15, 2023)
package: {'name': 'rsa(crates.io)', 'url': '/packages/rsa.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2023-49092', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-49092'}, {'text': 'GHSA-c38w-74pg-36hr', 'url': 'https://github.com/advisories/GHSA-c38w-74pg-36hr'}, {'text': 'GHSA-4grx-2x9w-596c', 'url': 'https://github.com/advisories/GHSA-4grx-2x9w-596c'}]
references: [{'text': 'https://github.com/RustCrypto/RSA/issues/19#issuecomment-1822995643', 'url': 'https://github.com/RustCrypto/RSA/issues/19#issuecomment-1822995643'}, {'text': 'https://people.redhat.com/~hkario/marvin/', 'url': 'https://people.redhat.com/~hkario/marvin/'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: no patched versions
description: 
unaffected: ['Due to a non-constant-time implementation, information about the private key is leaked through timing information which is observable over the network. An attacker may be able to use that information to recover the key.']
References: ['This vulnerability was discovered as part of the "Marvin Attack", which revealed several implementations of RSA including OpenSSL had not properly mitigated timing sidechannel attacks.', {'text': 'Marvin Attack', 'url': 'https://people.redhat.com/~hkario/marvin/'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: Sequential calls of encryption API (encrypt,wrap, anddump) result in nonce reuse
reported: October 15, 2023
issued: October 23, 2023(last modified: February 10, 2024)
package: {'name': 'cocoon(crates.io)', 'url': '/packages/cocoon.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'GHSA-6878-6wc2-pf5h', 'url': 'https://github.com/advisories/GHSA-6878-6wc2-pf5h'}]
references: [{'text': 'https://github.com/fadeevab/cocoon/issues/22', 'url': 'https://github.com/fadeevab/cocoon/issues/22'}]
cvss score: 4.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:N
patched: >=0.4.0
affected functions: Version
cocoon::cocoon::dump: <=0.3.3
cocoon::cocoon::encrypt: <=0.3.3
cocoon::cocoon::wrap: <=0.3.3
cocoon::minicocoon::dump: <=0.3.3
cocoon::minicocoon::encrypt: <=0.3.3
cocoon::minicocoon::wrap: <=0.3.3
description: Problem: Trying to create a new encrypted message with the same cocoon
object generates the same ciphertext. It mostly affectsMiniCocoonandCocoonobjects with custom seeds and RNGs (whereStdRngis used under
the hood). Note: The issue doesNOTaffect objects created withCocoon::newwhich utilizesThreadRng. Cause:StdRngproduces the same nonce becauseStdRng::cloneresets its
state. Measure: Make encryption API mutable (encrypt,wrap, anddump). Workaround: Create a new cocoon object with a newseedper each
encryption. Forcocoon <= 0.3.3, create a new cocoon with a differentseedper eachencrypt/wrap/dumpcall. Advisory available underCC0-1.0license.
affected_functions: cocoon;;cocoon;;dump
version_of_Affected: <=0.3.3

---
classification: MEDIUM
subtitle: Vulnerable to privilege escalation using ioctls TIOCSTI and TIOCLINUX
reported: April 29, 2023
issued: October  3, 2023(last modified: February 10, 2024)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2023-46277', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-46277'}, {'text': 'GHSA-cgf8-h3fp-h956', 'url': 'https://github.com/advisories/GHSA-cgf8-h3fp-h956'}]
references: [{'text': 'https://gitlab.com/edneville/please/-/issues/13', 'url': 'https://gitlab.com/edneville/please/-/issues/13'}]
cvss score: 4.6MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: Low
user interaction: Required
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N
patched: no patched versions
description: please is vulnerable to privilege escalation using ioctls TIOCSTI
and TIOCLINUX on systems where they are not disabled. Here is how to see it in action: Please note that: This affects both the case where root wants to drop privileges as well when non-root wants to gain other privileges. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Versionize::deserializeimplementation forFamStructWrapper<T>is lacking bound checks, potentially leading to out of bounds memory accesses
reported: March 24, 2023
issued: March 25, 2023(last modified: June 13, 2023)
package: {'name': 'versionize(crates.io)', 'url': '/packages/versionize.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2023-28448', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-28448'}, {'text': 'GHSA-8vxc-r5wp-vgvc', 'url': 'https://github.com/advisories/GHSA-8vxc-r5wp-vgvc'}]
references: [{'text': 'https://github.com/firecracker-microvm/versionize/pull/53', 'url': 'https://github.com/firecracker-microvm/versionize/pull/53'}]
cvss score: 5.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:L
patched: >=0.1.10
affected oses: linux
description: An issue was discovered in theVersionize::deserializeimplementation provided by theversionizecrate forvmm_sys_util::fam::FamStructWrapper, which can lead to out of bounds memory accesses. The impact started with version 0.1.1. The issue was corrected in version 0.1.10 by inserting a check that verifies, for any deserialized header, the lengths of compared flexible arrays are equal and aborting deserialization otherwise. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: pnet_packetbuffer overrun inset_payloadsetters
reported: June 19, 2020
issued: February  9, 2023(last modified: June 13, 2023)
package: {'name': 'pnet_packet(crates.io)', 'url': '/packages/pnet_packet.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-cf4g-fcf8-3cr9', 'url': 'https://github.com/advisories/GHSA-cf4g-fcf8-3cr9'}]
references: [{'text': 'https://github.com/libpnet/libpnet/issues/449', 'url': 'https://github.com/libpnet/libpnet/issues/449'}]
cvss score: 6MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'High', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: High
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H
patched: >=0.27.2
description: As indicated by thisissue, a buffer overrun is possible in theset_payloadsetter of the various mutable "Packet" struct setters. The offendingset_payloadfunctions were defined within the structimplblocks in earlier versions of the package, and later by thepacketmacro. Fixed in thepacketmacro bythisPR. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: aliyun-oss-clientsecret exposure
reported: November 19, 2022
issued: February  7, 2023
package: {'name': 'aliyun-oss-client(crates.io)', 'url': '/packages/aliyun-oss-client.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-39397', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39397'}, {'text': 'GHSA-3w3h-7xgx-grwc', 'url': 'https://github.com/advisories/GHSA-3w3h-7xgx-grwc'}]
references: [{'text': 'https://github.com/advisories/GHSA-3w3h-7xgx-grwc', 'url': 'https://github.com/advisories/GHSA-3w3h-7xgx-grwc'}]
cvss score: 5.6MEDIUM
cvss details: {'Attack vector': 'Physical', 'Attack complexity': 'LowPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityHighIntegrityLowAvailabilityNone', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'High', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Physical
attack complexity: LowPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityHighIntegrityLowAvailabilityNone
privileges required: High
user interaction: Required
scope: Changed
confidentiality: High
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:P/AC:L/PR:H/UI:R/S:C/C:H/I:L/A:N
patched: >=0.8.1
description: Thealiyun-oss-clientunintentionally divulges the authentication secret. This bug was fixed inthiscommit by limiting the concerned traits to bepubonly within the crate. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: tauri'sreadDirendpoint allows possible enumeration outside of filesystem scope
reported: August  7, 2022
issued: February  5, 2023
package: {'name': 'tauri(crates.io)', 'url': '/packages/tauri.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2022-39215', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39215'}, {'text': 'GHSA-28m8-9j7v-x499', 'url': 'https://github.com/advisories/GHSA-28m8-9j7v-x499'}]
references: [{'text': 'https://github.com/tauri-apps/tauri/issues/4882', 'url': 'https://github.com/tauri-apps/tauri/issues/4882'}]
cvss score: 5.8MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Changed
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:N
patched: >=1.0.6
description: It is possible forreadDirto incorrectly enumerate files from a symlinked directory if called recursively when specifying an empty string for the dir parameter as outlined inthisissue. This is corrected inthisPR by checking if a directory is a symlink before reading from it. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: kamadak-exif DoS with untrusted PNG data
reported: January  4, 2021
issued: September  8, 2022
package: {'name': 'kamadak-exif(crates.io)', 'url': '/packages/kamadak-exif.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2021-21235', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21235'}, {'text': 'GHSA-px9g-8hgv-jvg2', 'url': 'https://github.com/advisories/GHSA-px9g-8hgv-jvg2'}]
references: [{'text': 'https://github.com/kamadak/exif-rs/commit/1b05eab57e484cd7d576d4357b9cda7fdc57df8c', 'url': 'https://github.com/kamadak/exif-rs/commit/1b05eab57e484cd7d576d4357b9cda7fdc57df8c'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H
patched: >=0.5.3
unaffected: <0.5.2
affected functions: Version
kamadak_exif::reader::read_from_container: >=0.5.2, <0.5.3
description: Attacker crafted data can cause a infinite loop leading to DoS if used with untrusted data. Advisory available underCC0-1.0license.
affected_functions: kamadak_exif;;reader;;read_from_container
version_of_Affected: >=0.5.2, <0.5.3

---
classification: MEDIUM
subtitle: OCSP_basic_verifymay incorrectly verify the response signing certificate
reported: May  3, 2022
issued: May 19, 2022(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-1343', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1343'}, {'text': 'GHSA-mfm6-r9g2-q4r7', 'url': 'https://github.com/advisories/GHSA-mfm6-r9g2-q4r7'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20220503.txt', 'url': 'https://www.openssl.org/news/secadv/20220503.txt'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=300.0.6
unaffected: <300.0
description: The functionOCSP_basic_verifyverifies the signer certificate on an OCSP
response. In the case where the (non-default) flag OCSP_NOCHECKS is used then
the response will be positive (meaning a successful verification) even in the
case where the response signing certificate fails to verify. It is anticipated that most users ofOCSP_basic_verifywill not use the
OCSP_NOCHECKS flag. In this case theOCSP_basic_verifyfunction will return
a negative value (indicating a fatal error) in the case of a certificate
verification failure. The normal expected return value in this case would be 0. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Incorrect MAC key used in the RC4-MD5 ciphersuite
reported: May  3, 2022
issued: May 19, 2022(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-1434', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1434'}, {'text': 'GHSA-638m-m8mh-7gw2', 'url': 'https://github.com/advisories/GHSA-638m-m8mh-7gw2'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20220503.txt', 'url': 'https://www.openssl.org/news/secadv/20220503.txt'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=300.0.6
unaffected: <300.0
description: The OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the
AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to
modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that
the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint
will always be rejected by the recipient and the connection will fail at that
point. Many application protocols require data to be sent from the client to the
server first. Therefore, in such a case, only an OpenSSL 3.0 server would be
impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being
sent in both directions. In this case both clients and servers could be
affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0
endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the
handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker
cannot decrypt data that has been encrypted using this ciphersuite - they can
only modify it. In order for this attack to work both endpoints must legitimately negotiate the
RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0,
and is not available within the default provider or the default ciphersuite
list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In
order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must
have occurred: Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Timing attack
reported: May  9, 2022
issued: May  9, 2022(last modified: June 13, 2023)
package: {'name': 'totp-rs(crates.io)', 'url': '/packages/totp-rs.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2022-29185', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-29185'}, {'text': 'GHSA-8vxv-2g8p-2249', 'url': 'https://github.com/advisories/GHSA-8vxv-2g8p-2249'}]
references: [{'text': 'https://github.com/constantoine/totp-rs/security/advisories/GHSA-8vxv-2g8p-2249', 'url': 'https://github.com/constantoine/totp-rs/security/advisories/GHSA-8vxv-2g8p-2249'}]
cvss score: 4.2MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: High
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:H/I:N/A:N
patched: >=1.1.0
affected functions: Version
totp_rs::totp::check: <1.1.0
description: Affecting versions did not compare tokens in constant time, which could make it possible for an attacker to guess the 2fa token of a user. This has been fixed by using using the crate constant_time_eq for comparison. Advisory available underCC0-1.0license.
affected_functions: totp_rs;;totp;;check
version_of_Affected: <1.1.0

---
classification: MEDIUM
subtitle: Multiple Vulnerabilities in Wasmtime
reported: September 17, 2021
issued: September 17, 2021(last modified: June 13, 2023)
package: {'name': 'wasmtime(crates.io)', 'url': '/packages/wasmtime.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2021-39216', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39216'}, {'text': 'CVE-2021-39218', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39218'}, {'text': 'CVE-2021-39219', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39219'}, {'text': 'GHSA-4873-36h9-wv49', 'url': 'https://github.com/advisories/GHSA-4873-36h9-wv49'}, {'text': 'GHSA-q879-9g95-56mx', 'url': 'https://github.com/advisories/GHSA-q879-9g95-56mx'}, {'text': 'GHSA-v4cp-h94r-m7xf', 'url': 'https://github.com/advisories/GHSA-v4cp-h94r-m7xf'}]
references: [{'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-v4cp-h94r-m7xf', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-v4cp-h94r-m7xf'}, {'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49'}, {'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-q879-9g95-56mx', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-q879-9g95-56mx'}]
cvss score: 6.3MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H
patched: >=0.30.0
affected functions: Version
wasmtime::linker::func_new: <0.30.0
wasmtime::linker::func_wrap: <0.30.0
wasmtime::store::gc: <0.30.0
description: Advisory available underCC0-1.0license.
affected_functions: wasmtime;;linker;;func_new
version_of_Affected: <0.30.0

---
classification: MEDIUM
subtitle: Observable Discrepancy in libsecp256k1-rs
reported: January 22, 2020
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'libsecp256k1-rs(crates.io)', 'url': '/packages/libsecp256k1-rs.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2019-20399', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20399'}, {'text': 'GHSA-7cqg-8449-rmfv', 'url': 'https://github.com/advisories/GHSA-7cqg-8449-rmfv'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2019-20399', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2019-20399'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.3.1
description: A timing vulnerability in the Scalar::check_overflow function in Parity libsecp256k1-rs before 0.3.1 potentially allows an attacker to leak information via a side-channel attack. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Lenienthyperheader parsing ofContent-Lengthcould allow request smuggling
reported: July  7, 2021
issued: August  8, 2021(last modified: October 19, 2021)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-32715', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32715'}, {'text': 'GHSA-f3pg-qwvg-p99c', 'url': 'https://github.com/advisories/GHSA-f3pg-qwvg-p99c'}]
references: [{'text': 'https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c', 'url': 'https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.14.10
description: hyper's HTTP header parser accepted, according to RFC 7230, illegal contents insideContent-Lengthheaders.
Due to this, upstream HTTP proxies that ignore the header may still forward them along if it chooses to ignore the error. To be vulnerable,hypermust be used as an HTTP/1 server and using an HTTP proxy upstream that ignores the header's contents
but still forwards it. Due to all the factors that must line up, an attack exploiting this vulnerability is unlikely. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Null pointer deref inX509_issuer_and_serial_hash()
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2021-23841', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-23841'}, {'text': 'GHSA-84rm-qf37-fgc2', 'url': 'https://github.com/advisories/GHSA-84rm-qf37-fgc2'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210216.txt', 'url': 'https://www.openssl.org/news/secadv/20210216.txt'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.14
description: The OpenSSL public API functionX509_issuer_and_serial_hash()attempts to
create a unique hash value based on the issuer and serial number data contained
within an X509 certificate. However it fails to correctly handle any errors
that may occur while parsing the issuer field (which might occur if the issuer
field is maliciously constructed). This may subsequently result in a NULL
pointer deref and a crash leading to a potential denial of service attack. The functionX509_issuer_and_serial_hash()is never directly called by OpenSSL
itself so applications are only vulnerable if they use this function directly
and they use it on certificates that may have been obtained from untrusted
sources. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: NULL pointer deref in signature_algorithms processing
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2021-3449', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3449'}, {'text': 'GHSA-83mx-573x-5rw9', 'url': 'https://github.com/advisories/GHSA-83mx-573x-5rw9'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210325.txt', 'url': 'https://www.openssl.org/news/secadv/20210325.txt'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.15
description: An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation
ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits
the signature_algorithms extension (where it was present in the initial
ClientHello), but includes a signature_algorithms_cert extension then a NULL
pointer dereference will result, leading to a crash and a denial of service
attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which
is the default configuration). OpenSSL TLS clients are not impacted by this
issue. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Generators can cause data races if non-Send types are used in their generator functions
reported: November 16, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'generator(crates.io)', 'url': '/packages/generator.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36471', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36471'}, {'text': 'GHSA-w3g5-2848-2v8r', 'url': 'https://github.com/advisories/GHSA-w3g5-2848-2v8r'}]
references: [{'text': 'https://github.com/Xudong-Huang/generator-rs/issues/27', 'url': 'https://github.com/Xudong-Huang/generator-rs/issues/27'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.7.0
description: TheGeneratortype is an iterable which uses a generator function that yields
values. In affected versions of the crate, the provided function yielding values
had noSendbounds despite theGeneratoritself implementingSend. The generator function lacking aSendbound means that types that are
dangerous to send across threads such asRccould be sent as part of a
generator, potentially leading to data races. This flaw was fixed in commitf7d120a3bby enforcing that the generator function be bound bySend. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: ImmediateIO and TransactionalIO can cause data races
reported: December 18, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'max7301(crates.io)', 'url': '/packages/max7301.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36472', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36472'}, {'text': 'GHSA-rmff-f8w9-c9rm', 'url': 'https://github.com/advisories/GHSA-rmff-f8w9-c9rm'}]
references: [{'text': 'https://github.com/edarc/max7301/issues/1', 'url': 'https://github.com/edarc/max7301/issues/1'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.0
description: TheImmediateIOandTransactionalIOtypes implementSyncfor all containedExpander<EI>types regardless of if theExpanderitself is safe to use
across threads. As theIOtypes allow retrieving theExpander, this can lead to non-thread
safe types being sent across threads as part of theExpanderleading to data
races. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: RingBuffer can create multiple mutable references and cause data races
reported: December 17, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'disrustor(crates.io)', 'url': '/packages/disrustor.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36470', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36470'}, {'text': 'GHSA-w9r2-qrpm-4rmj', 'url': 'https://github.com/advisories/GHSA-w9r2-qrpm-4rmj'}]
references: [{'text': 'https://github.com/sklose/disrustor/issues/1', 'url': 'https://github.com/sklose/disrustor/issues/1'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3
description: TheRingBuffertype retrieves mutable references from theDataProviderin a
non-atomic manner, potentially allowing the creation of multiple mutable
references.RingBufferalso implements theSendandSynctraits for all
typesT. This allows undefined behavior from the aliased mutable references as well
as data races. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Data race and memory safety issue inIndex
reported: November 15, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'appendix(crates.io)', 'url': '/packages/appendix.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36469', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36469'}, {'text': 'GHSA-fvhr-7j8m-3cvc', 'url': 'https://github.com/advisories/GHSA-fvhr-7j8m-3cvc'}]
references: [{'text': 'https://github.com/krl/appendix/issues/6', 'url': 'https://github.com/krl/appendix/issues/6'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Theappendixcrate implements a key-value mapping data structure calledIndex<K, V>that is stored on disk. The crate allows for any type to inhabit
the genericKandVtype parameters and implements Send and Sync for them
unconditionally. Using a type that is not marked asSendorSyncwithIndexcan allow it
to be used across multiple threads leading to data races. Additionally using
reference types for the keys or values will lead to the segmentation faults
in the crate's code. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Multiple soundness issues inPtr
reported: December 10, 2020
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'cgc(crates.io)', 'url': '/packages/cgc.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36466', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36466'}, {'text': 'CVE-2020-36467', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36467'}, {'text': 'CVE-2020-36468', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36468'}, {'text': 'GHSA-f3mq-99jr-ww4r', 'url': 'https://github.com/advisories/GHSA-f3mq-99jr-ww4r'}, {'text': 'GHSA-f9xr-3m55-5q2v', 'url': 'https://github.com/advisories/GHSA-f9xr-3m55-5q2v'}, {'text': 'GHSA-pwhf-7427-9vv2', 'url': 'https://github.com/advisories/GHSA-pwhf-7427-9vv2'}]
references: [{'text': 'https://github.com/playXE/cgc/issues/5', 'url': 'https://github.com/playXE/cgc/issues/5'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate have the following issues: Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: XSS incomrak
reported: February 21, 2021
issued: February 21, 2021(last modified: June 13, 2023)
package: {'name': 'comrak(crates.io)', 'url': '/packages/comrak.html'}
type: Vulnerability
categories: ['format-injection']
keywords: []
aliases: [{'text': 'CVE-2021-27671', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27671'}, {'text': 'GHSA-xmr7-v725-2jjr', 'url': 'https://github.com/advisories/GHSA-xmr7-v725-2jjr'}]
references: [{'text': 'https://github.com/kivikakk/comrak/releases/tag/0.9.1', 'url': 'https://github.com/kivikakk/comrak/releases/tag/0.9.1'}]
cvss score: 6.1MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: Required
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
patched: >=0.9.1
description: Thecomrakwe were matching unsafe URL prefixes, such asdata:orjavascript:, in a case-sensitive manner. This meant prefixes likeData:were untouched. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: insert_slice_clone can double drop if Clone panics.
reported: February  3, 2021
issued: February  4, 2021(last modified: June 13, 2023)
package: {'name': 'qwutils(crates.io)', 'url': '/packages/qwutils.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-26954', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26954'}, {'text': 'GHSA-68p4-pjpf-xwcq', 'url': 'https://github.com/advisories/GHSA-68p4-pjpf-xwcq'}]
references: [{'text': 'https://github.com/qwertz19281/rust_utils/issues/3', 'url': 'https://github.com/qwertz19281/rust_utils/issues/3'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L
patched: >=0.3.1
affected functions: Version
qwutils::imp::vec::vecext::insert_slice_clone: <0.3.1
description: Affected versions of this crate usedptr::copywhen inserting into the middle
of aVec. When ownership was temporarily duplicated during this copy, it calls
the clone method of a user provided element. This issue can result in an element being double-freed if the clone call panics. Commit20cb73dfixed this issue by adding aset_len(0)call before
operating on the vector to avoid dropping the elements during a panic. Advisory available underCC0-1.0license.
affected_functions: qwutils;;imp;;vec;;vecext;;insert_slice_clone
version_of_Affected: <0.3.1

---
classification: MEDIUM
subtitle: Demuxercan carry non-Send types across thread boundaries
reported: December 22, 2020
issued: January 21, 2021(last modified: June 13, 2023)
package: {'name': 'va-ts(crates.io)', 'url': '/packages/va-ts.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36220', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36220'}, {'text': 'GHSA-3hj2-hh36-hv9v', 'url': 'https://github.com/advisories/GHSA-3hj2-hh36-hv9v'}]
references: [{'text': 'https://github.com/video-audio/va-ts/issues/4', 'url': 'https://github.com/video-audio/va-ts/issues/4'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.0.4
description: In the affected versions of this crate,Demuxer<T>unconditionally implementedSendwith no trait bounds onT. This allows sending a non-Send typeTacross thread boundaries, which can cause undefined behavior like unlocking a mutex from a thread that didn't lock the mutex, or memory corruption from data race. The flaw was corrected in commit 0562cbf by adding aT: Sendbound to theSendimpl forDemuxer<T>. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: may_queue's Queue lacks Send/Sync bound for its Send/Sync trait.
reported: November 10, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'may_queue(crates.io)', 'url': '/packages/may_queue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36217', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36217'}, {'text': 'GHSA-pphf-f93w-gc84', 'url': 'https://github.com/advisories/GHSA-pphf-f93w-gc84'}]
references: [{'text': 'https://github.com/Xudong-Huang/may/issues/88', 'url': 'https://github.com/Xudong-Huang/may/issues/88'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions ofmay_queueimplementsSend/Syncfor itsQueuetype without restricting it toSendable types andSyncable types. This allows non-Synctypes such asCellto be shared across threads leading to undefined behavior and memory corruption in concurrent programs. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: ButtplugFutureStateShared allows data race to (!Send|!Sync) objects
reported: December 18, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'buttplug(crates.io)', 'url': '/packages/buttplug.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36218', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36218'}, {'text': 'GHSA-r7rv-2rph-hvhj', 'url': 'https://github.com/advisories/GHSA-r7rv-2rph-hvhj'}]
references: [{'text': 'https://github.com/buttplugio/buttplug-rs/issues/225', 'url': 'https://github.com/buttplugio/buttplug-rs/issues/225'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0.4
description: ButtplugFutureStateShared<T>implementsSend&Syncregardless ofT. IfT: !SendforButtplugFutureStateShared<T>, it is possible to move non-Send types across thread boundaries (e.g.T=Rc<T>) and lead to undefined behavior.
IfT: !SyncforButtplugFutureStateShared<T>, it is possible to cause data race toT(e.g.T=Arc<Cell<_>>) and lead to undefined behavior. The flaw was corrected in version 1.0.4 by removing manual implementations ofSend/SyncforButtplugFutureStateShared<T>to let rustc generate auto trait implementations with correct trait bounds onT. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: AtomicOption should have Send + Sync bound on its type argument.
reported: October 31, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'atomic-option(crates.io)', 'url': '/packages/atomic-option.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36219', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36219'}, {'text': 'GHSA-8gf5-q9p9-wvmc', 'url': 'https://github.com/advisories/GHSA-8gf5-q9p9-wvmc'}]
references: [{'text': 'https://github.com/reem/rust-atomic-option/issues/4', 'url': 'https://github.com/reem/rust-atomic-option/issues/4'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: In the affected versions of this crate,AtomicOption<T>unconditionally implementsSync. This allows programmers to move non-Sync types across thread boundaries (e.g.Rc<T>,Arc<Cell<T>>), which can lead to data races and undefined behavior.
It is also possible to send non-Send types likestd::sync::MutexGuardto other threads, which can lead to undefined behavior. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Queues allow non-Send types to be sent to other threads, allowing data races
reported: December 19, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'multiqueue2(crates.io)', 'url': '/packages/multiqueue2.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36214', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36214'}, {'text': 'GHSA-jphw-p3m6-pj3c', 'url': 'https://github.com/advisories/GHSA-jphw-p3m6-pj3c'}]
references: [{'text': 'https://github.com/abbychau/multiqueue2/issues/10', 'url': 'https://github.com/abbychau/multiqueue2/issues/10'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.1.7
description: Affected versions of this crate unconditionally implementedSendfor types used in queue implementations (InnerSend<RW, T>,InnerRecv<RW, T>,FutInnerSend<RW, T>,FutInnerRecv<RW, T>). This allows users to send non-Send types to other threads, which can lead to data race bugs or other undefined behavior. The flaw was corrected in v0.1.7 by addingT: Sendbound to to theSendimpl of four data types explained above. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Soundness issue: Inputcan be misused to create data race to an object
reported: December 20, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'eventio(crates.io)', 'url': '/packages/eventio.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36216', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36216'}, {'text': 'GHSA-69vj-xx27-g45w', 'url': 'https://github.com/advisories/GHSA-69vj-xx27-g45w'}]
references: [{'text': 'https://github.com/petabi/eventio/issues/33', 'url': 'https://github.com/petabi/eventio/issues/33'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.5.1
description: Input<R>implementsSendwithout requiringR: Send. Affected versions of this crate allows users to send non-Send types to other threads,
which can lead to undefined behavior such as data race and memory corruption. The flaw was corrected in version 0.5.1 by addingR: Sendbound to theSendimpl ofInput<R>. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: TreeFocus lacks bounds on its Send and Sync traits
reported: November  9, 2020
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'im(crates.io)', 'url': '/packages/im.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-36204', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36204'}, {'text': 'GHSA-q9h2-4xhf-23xx', 'url': 'https://github.com/advisories/GHSA-q9h2-4xhf-23xx'}]
references: [{'text': 'https://github.com/bodil/im-rs/issues/157', 'url': 'https://github.com/bodil/im-rs/issues/157'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=15.1.0
unaffected: <12.0.0
description: Affected versions ofimcontainsTreeFocusthat unconditionally implementsSendandSync. This allows a data race in safe Rust code ifTreeFocusis extracted fromFocustype.
Typical users that only useFocustype are not affected. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Missing Send bound for Lazy
reported: January 17, 2021
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'lazy-init(crates.io)', 'url': '/packages/lazy-init.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25901', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25901'}, {'text': 'GHSA-w47j-hqpf-qw9w', 'url': 'https://github.com/advisories/GHSA-w47j-hqpf-qw9w'}]
references: [{'text': 'https://github.com/khuey/lazy-init/issues/9', 'url': 'https://github.com/khuey/lazy-init/issues/9'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L
patched: >0.4.0
description: All current versions of this crate allow causing data races in safe code. The flaw will be fixed in the next release. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Soundness issue with base::Error
reported: December 10, 2020
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'xcb(crates.io)', 'url': '/packages/xcb.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36205', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36205'}, {'text': 'GHSA-c8hq-x4mm-p6q6', 'url': 'https://github.com/advisories/GHSA-c8hq-x4mm-p6q6'}]
references: [{'text': 'https://github.com/rust-x-bindings/rust-xcb/issues/93', 'url': 'https://github.com/rust-x-bindings/rust-xcb/issues/93'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0
description: base::Errortype contains public field namedptr.
With this definition, it is possible to create abase::Errorwith an invalid pointer and trigger memory safety errors
such as use-after-free or double-free with safe Rust. The users ofxcbcrate are advised not to manipulate the field. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Unsound: can makeARefsscontain a !Send, !Sync object.
reported: December  1, 2020
issued: January  6, 2021(last modified: June 13, 2023)
package: {'name': 'reffers(crates.io)', 'url': '/packages/reffers.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36203', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36203'}, {'text': 'GHSA-39xg-8p43-h76x', 'url': 'https://github.com/advisories/GHSA-39xg-8p43-h76x'}]
references: [{'text': 'https://github.com/diwic/reffers-rs/issues/7', 'url': 'https://github.com/diwic/reffers-rs/issues/7'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.1
description: ARefss<'a, V>is a type that is assumed to contain objects that areSend + Sync. In the affected versions of this crate,Send/Synctraits are unconditionally implemented forARefss<'a, V>. By using theARefss::map()API, we can insert a!Sendor!Syncobject intoARefss<'a, V>. After that, it is possible to create a data race to the inner object ofARefss<'a, V>, which can lead to undefined behavior & memory corruption. The flaw was corrected in commit 6dd7ca0 (https://github.com/diwic/reffers-rs/commit/6dd7ca0d50f2464df708975cdafcfaeeb6d41c66) by adding trait boundV: Send + SynctoARefss::map()API. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: XSS in mdBook's search page
reported: January  4, 2021
issued: January  4, 2021(last modified: October 19, 2021)
package: {'name': 'mdbook(crates.io)', 'url': '/packages/mdbook.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2020-26297', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26297'}]
references: [{'text': 'https://groups.google.com/g/rustlang-security-announcements/c/3-sO6of29O0', 'url': 'https://groups.google.com/g/rustlang-security-announcements/c/3-sO6of29O0'}]
cvss score: 6.1MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: Required
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
patched: >=0.4.5
unaffected: <=0.1.3
description: The Rust Security Response Working Group was recently notified of a security
issue affecting the search feature of mdBook, which could allow an attacker to
execute arbitrary JavaScript code on the page. The CVE for this vulnerability isCVE-2020-26297. The search feature of mdBook (introduced in version 0.1.4) was affected by a
cross site scripting vulnerability that allowed an attacker to execute
arbitrary JavaScript code on an user's browser by tricking the user into typing
a malicious search query, or tricking the user into clicking a link to the
search page with the malicious search query prefilled. mdBook 0.4.5 fixes the vulnerability by properly escaping the search query. Owners of websites built with mdBook have to upgrade to mdBook 0.4.5 or greater
and rebuild their website contents with it. It's possible to install mdBook
0.4.5 on the local system with: Thanks to Kamil Vavra for responsibly disclosing the vulnerability to us
according toour security policy. All times are listed in UTC. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Send/Sync bound needed on V inimpl Send/Sync for ARCache<K, V>
reported: November 13, 2020
issued: December 17, 2020(last modified: June 13, 2023)
package: {'name': 'concread(crates.io)', 'url': '/packages/concread.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35928', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35928'}, {'text': 'GHSA-4xj5-vv9x-63jp', 'url': 'https://github.com/advisories/GHSA-4xj5-vv9x-63jp'}]
references: [{'text': 'https://github.com/kanidm/concread/issues/48', 'url': 'https://github.com/kanidm/concread/issues/48'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.6
description: Affected versions of this crate unconditionally implementedSend/Synctraits forARCache<K, V>type. This allows users to send/access types that do not implementSend/Sync, which can cause a data race. The flaw was corrected in the 0.2.6 release by adding boundsK: Send + Sync&V: Send + Syncto affectedSend/Synctrait implementations. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: nanorand 0.5.0 - RNGs failed to generate properly for non-64-bit numbers
reported: December  9, 2020
issued: December  9, 2020(last modified: June 13, 2023)
package: {'name': 'nanorand(crates.io)', 'url': '/packages/nanorand.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2020-35926', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35926'}, {'text': 'GHSA-m9m5-cg5h-r582', 'url': 'https://github.com/advisories/GHSA-m9m5-cg5h-r582'}]
references: [{'text': 'https://twitter.com/aspenluxxxy/status/1336684692284772352', 'url': 'https://twitter.com/aspenluxxxy/status/1336684692284772352'}]
cvss score: 5.1MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N
patched: >=0.5.1
description: In versions ofnanorandprior to 0.5.1,RandomGenimplementations for standard unsigned integers could
fail to properly generate numbers, due to using bit-shifting to truncate a 64-bit number, rather than just
anasconversion. This often manifested as RNGs returning nothing but 0, including the cryptographically secureChaCharandom
number generator.. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Thexallows data races of non-Send types across threads
reported: December  8, 2020
issued: December  9, 2020(last modified: June 13, 2023)
package: {'name': 'thex(crates.io)', 'url': '/packages/thex.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35927', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35927'}, {'text': 'GHSA-j42v-6wpm-r847', 'url': 'https://github.com/advisories/GHSA-j42v-6wpm-r847'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: thex::Thex<T>implementsSyncfor all typesT. However, it is missing a
bound forT: Send. This allows non-Send types such asRcto be sent across thread boundaries
which can trigger undefined behavior and memory corruption. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: TryMutexallows sending non-Send type across threads
reported: November 17, 2020
issued: December  7, 2020(last modified: June 13, 2023)
package: {'name': 'try-mutex(crates.io)', 'url': '/packages/try-mutex.html'}
type: Vulnerability
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35924', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35924'}, {'text': 'GHSA-64j8-7gp2-xjx5', 'url': 'https://github.com/advisories/GHSA-64j8-7gp2-xjx5'}]
references: [{'text': 'https://github.com/mpdn/try-mutex/issues/2', 'url': 'https://github.com/mpdn/try-mutex/issues/2'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.0
description: Affected versions of this crate unconditionally implemented Sync trait forTryMutex<T>type. This allows users to put non-SendTtype inTryMutexand send it to another thread, which can cause a data race. The flaw was corrected in the 0.3.0 release by addingT: Sendbound for the Sync trait implementation. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: MPMCConsumer/Producer allows sending non-Send type across threads
reported: November 29, 2020
issued: December  7, 2020(last modified: June 13, 2023)
package: {'name': 'magnetic(crates.io)', 'url': '/packages/magnetic.html'}
type: Vulnerability
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35925', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35925'}, {'text': 'GHSA-wv4p-jp67-jr97', 'url': 'https://github.com/advisories/GHSA-wv4p-jp67-jr97'}]
references: [{'text': 'https://github.com/johnshaw/magnetic/issues/9', 'url': 'https://github.com/johnshaw/magnetic/issues/9'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.1
description: Affected versions of this crate unconditionally implementedSyncandSendtraits forMPMCConsumerandMPMCProducertypes. This allows users to send types that do not implementSendtrait across thread boundaries, which can cause a data race. The flaw was corrected in the 2.0.1 release by addingT: Sendbound to affected Sync/Send trait implementations. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: ordered_float:NotNan may contain NaN after panic in assignment operators
reported: December  6, 2020
issued: December  6, 2020(last modified: June 13, 2023)
package: {'name': 'ordered-float(crates.io)', 'url': '/packages/ordered-float.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35923', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35923'}, {'text': 'GHSA-566x-hhrf-qf8m', 'url': 'https://github.com/advisories/GHSA-566x-hhrf-qf8m'}]
references: [{'text': 'https://github.com/reem/rust-ordered-float/pull/71', 'url': 'https://github.com/reem/rust-ordered-float/pull/71'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: ^1.1.1>=2.0.1
unaffected: <0.2.2
description: After using an assignment operators such asNotNan::add_assign,NotNan::mul_assign, etc., it was possible for the resultingNotNanvalue to contain aNaN.  This could cause undefined behavior in safe code, because the safeNotNan::cmpmethod contains internal unsafe code that assumes the value is neverNaN.  (It could also cause undefined behavior in third-party unsafe code that makes the same assumption, as well as logic errors in safe code.) This was mitigated starting in version 0.4.0, by panicking if the assigned value is NaN.  However, in affected versions from 0.4.0 onward, code that uses theNotNanvalue during unwinding, or that continues after catching the panic, could still observe the invalid value and trigger undefined behavior. The flaw is fully corrected in versions 1.1.1 and 2.0.1, by ensuring that the assignment operators panic without modifying the operand, if the result would beNaN. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: miowinvalidly assumes the memory layout of std::net::SocketAddr
reported: November 13, 2020
issued: December  2, 2020(last modified: June 13, 2023)
package: {'name': 'miow(crates.io)', 'url': '/packages/miow.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35921', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35921'}, {'text': 'GHSA-jrcf-4jp8-m28v', 'url': 'https://github.com/advisories/GHSA-jrcf-4jp8-m28v'}]
references: [{'text': 'https://github.com/yoshuawuyts/miow/issues/38', 'url': 'https://github.com/yoshuawuyts/miow/issues/38'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: ^0.2.2>=0.3.6
description: Themiowcrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: net2invalidly assumes the memory layout of std::net::SocketAddr
reported: November  7, 2020
issued: December  2, 2020(last modified: July  8, 2023)
package: {'name': 'net2(crates.io)', 'url': '/packages/net2.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35919', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35919'}, {'text': 'CVE-2020-35920', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35920'}, {'text': 'GHSA-458v-4hrf-g3m4', 'url': 'https://github.com/advisories/GHSA-458v-4hrf-g3m4'}, {'text': 'GHSA-c79c-gwph-gqfm', 'url': 'https://github.com/advisories/GHSA-c79c-gwph-gqfm'}]
references: [{'text': 'https://github.com/deprecrated/net2-rs/issues/105', 'url': 'https://github.com/deprecrated/net2-rs/issues/105'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.36
description: Thenet2crate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: socket2invalidly assumes the memory layout of std::net::SocketAddr
reported: November  6, 2020
issued: December  2, 2020(last modified: February 10, 2024)
package: {'name': 'socket2(crates.io)', 'url': '/packages/socket2.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35919', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35919'}, {'text': 'CVE-2020-35920', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35920'}, {'text': 'GHSA-458v-4hrf-g3m4', 'url': 'https://github.com/advisories/GHSA-458v-4hrf-g3m4'}, {'text': 'GHSA-c79c-gwph-gqfm', 'url': 'https://github.com/advisories/GHSA-c79c-gwph-gqfm'}]
references: [{'text': 'https://github.com/rust-lang/socket2-rs/issues/119', 'url': 'https://github.com/rust-lang/socket2-rs/issues/119'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.16
description: Thesocket2crate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: mioinvalidly assumes the memory layout of std::net::SocketAddr
reported: November  2, 2020
issued: December  2, 2020(last modified: June 13, 2023)
package: {'name': 'mio(crates.io)', 'url': '/packages/mio.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35922', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35922'}, {'text': 'GHSA-pf3p-x6qj-6j7q', 'url': 'https://github.com/advisories/GHSA-pf3p-x6qj-6j7q'}]
references: [{'text': 'https://github.com/tokio-rs/mio/issues/1386', 'url': 'https://github.com/tokio-rs/mio/issues/1386'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.7.6
unaffected: <0.7.0
description: Themiocrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Unexpected panic when decoding tokens
reported: November 29, 2020
issued: November 29, 2020(last modified: June 13, 2023)
package: {'name': 'branca(crates.io)', 'url': '/packages/branca.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35918', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35918'}, {'text': 'GHSA-c9rv-3jmq-527w', 'url': 'https://github.com/advisories/GHSA-c9rv-3jmq-527w'}]
references: [{'text': 'https://github.com/return/branca/issues/24', 'url': 'https://github.com/return/branca/issues/24'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.10.0
affected functions: Version
branca::branca::decode: <0.10.0
branca::decode: <0.10.0
description: Prior to0.10.0it was possible to have both decoding functions panic unexpectedly,
by supplying tokens with an incorrect base62 encoding. The documentation stated that an error should have been reported instead. Advisory available underCC0-1.0license.
affected_functions: branca;;branca;;decode
version_of_Affected: <0.10.0

---
classification: MEDIUM
subtitle: Reference counting error inFrom<Py<T>>
reported: November 28, 2020
issued: November 28, 2020(last modified: June 13, 2023)
package: {'name': 'pyo3(crates.io)', 'url': '/packages/pyo3.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35917', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35917'}, {'text': 'GHSA-2vx6-fcw6-hpr6', 'url': 'https://github.com/advisories/GHSA-2vx6-fcw6-hpr6'}]
references: [{'text': 'https://github.com/PyO3/pyo3/pull/1297', 'url': 'https://github.com/PyO3/pyo3/pull/1297'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.12.4
unaffected: <0.12.0
description: A bug inFrom<Py<T>>would lead to an extra reference count decrement, often
leading to use-after-free issues. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Mutable reference with immutable provenance
reported: November 12, 2020
issued: November 20, 2020(last modified: June 13, 2023)
package: {'name': 'image(crates.io)', 'url': '/packages/image.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35916', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35916'}, {'text': 'GHSA-9wgh-vjj7-7433', 'url': 'https://github.com/advisories/GHSA-9wgh-vjj7-7433'}]
references: [{'text': 'https://github.com/image-rs/image/issues/1357', 'url': 'https://github.com/image-rs/image/issues/1357'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.23.12
affected functions: Version
image::bgr::from_slice_mut: <0.23.12
image::bgra::from_slice_mut: <0.23.12
image::luma::from_slice_mut: <0.23.12
image::lumaa::from_slice_mut: <0.23.12
image::rgb::from_slice_mut: <0.23.12
image::rgba::from_slice_mut: <0.23.12
description: A mutable reference to a struct was constructed by dereferencing a pointer
obtained fromslice::as_ptr. Instead,slice::as_mut_ptrshould have been
called on the mutable slice argument. The former performs an implicit reborrow
as an immutable shared reference which does not allow writing through the
derived pointer. There is no evidence for miscompilation, exploitable or otherwise, caused by
this bug.Further investigation on Zulipsuggests that the unoptimized
generated LLVM IR does not contain any UB itself, effectively mitigating
further effects. Advisory available underCC0-1.0license.
affected_functions: image;;bgr;;from_slice_mut
version_of_Affected: <0.23.12

---
classification: MEDIUM
subtitle: Potential segfault in the time crate
reported: November 18, 2020
issued: November 18, 2020(last modified: June  5, 2024)
package: {'name': 'time(crates.io)', 'url': '/packages/time.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-26235', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26235'}, {'text': 'GHSA-wcg3-cvx6-7396', 'url': 'https://github.com/advisories/GHSA-wcg3-cvx6-7396'}]
references: [{'text': 'https://github.com/time-rs/time/issues/293', 'url': 'https://github.com/time-rs/time/issues/293'}]
cvss score: 6.2MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.23
unaffected: ["The affected functions set environment variables without synchronization. On Unix-like operating systems, this can crash in multithreaded programs. Programs may segfault due to dereferencing a dangling pointer if an environment variable is read in a different thread than the affected functions. This may occur without the user's knowledge, notably in the Rust standard library or third-party libraries.", 'The affected functions from time 0.2.7 through 0.2.22 are:', 'time::UtcOffset::local_offset_at', 'time::UtcOffset::try_local_offset_at', 'time::UtcOffset::current_local_offset', 'time::UtcOffset::try_current_local_offset', 'time::OffsetDateTime::now_local', 'time::OffsetDateTime::try_now_local', 'The affected functions in time 0.1 (all versions) are:', 'time::at_utc', 'time::at', 'time::now', 'time::tzset', 'Non-Unix targets (including Windows and wasm) are unaffected.']
affected oses: linuxredoxsolarisandroidiosmacosnetbsdopenbsdfreebsd
affected functions: Version
time::offsetdatetime::now_local: <0.2.23
time::offsetdatetime::try_now_local: <0.2.23
time::utcoffset::current_local_offset: <0.2.23
time::utcoffset::local_offset_at: <0.2.23
time::utcoffset::try_current_local_offset: <0.2.23
time::utcoffset::try_local_offset_at: <0.2.23
time::at: ^0.1
time::at_utc: ^0.1
time::now: ^0.1
description: 
References: ['A possible workaround for crates affected through the transitive dependency inchrono, is to avoid using the defaultoldtimefeature dependency of thechronocrate by disabling itsdefault-featuresand manually specifying the required features instead.', 'Cargo.toml:', 'Commandline:', 'Sources:', 'chronotope/chrono#602 (comment)', {'text': 'chronotope/chrono#602 (comment)', 'url': 'https://github.com/chronotope/chrono/issues/602#issuecomment-1242149249'}, 'vityafx/serde-aux#21', {'text': 'vityafx/serde-aux#21', 'url': 'https://github.com/vityafx/serde-aux/issues/21'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: time;;offsetdatetime;;now_local
version_of_Affected: <0.2.23

---
classification: MEDIUM
subtitle: GenericMutexGuard allows data races of non-Sync types across threads
reported: October 31, 2020
issued: November 18, 2020(last modified: June 13, 2023)
package: {'name': 'futures-intrusive(crates.io)', 'url': '/packages/futures-intrusive.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35915', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35915'}, {'text': 'GHSA-4hjg-cx88-g9f9', 'url': 'https://github.com/advisories/GHSA-4hjg-cx88-g9f9'}]
references: [{'text': 'https://github.com/Matthias247/futures-intrusive/issues/53', 'url': 'https://github.com/Matthias247/futures-intrusive/issues/53'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.0
description: GenericMutexGuard<T>was given theSyncauto trait as long asTisSenddue to its contained members. However, since the guard is supposed to represent
anacquired lockand allows concurrent access to the underlying data from
different threads, it should only beSyncwhen the underlying data is. This is a soundness issue and allows data races, potentially leading to crashes
and segfaults from safe Rust code. The flaw was corrected by adding aT: Send + Syncbound forGenericMutexGuard'sSynctrait. This bug issimilar to oneinstd::sync::Mutex. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Argument injection in sendmail transport
reported: November 11, 2020
issued: November 11, 2020(last modified: June 13, 2023)
package: {'name': 'lettre(crates.io)', 'url': '/packages/lettre.html'}
type: Vulnerability
categories: ['code-execution', 'file-disclosure']
keywords: []
aliases: [{'text': 'CVE-2020-28247', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-28247'}, {'text': 'GHSA-vc2p-r46x-m3vx', 'url': 'https://github.com/advisories/GHSA-vc2p-r46x-m3vx'}]
references: [{'text': 'https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b', 'url': 'https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.10.0-alpha.4<0.10.0-alpha.1, >=0.9.5<0.9.0, >=0.8.4<0.8.0, >=0.7.1
unaffected: <0.7.0
affected functions: Version
lettre::sendmail::sendmailtransport::send: <0.10.0-alpha.1
lettre::transport::sendmail::sendmailtransport::send: >=0.10.0-alpha.1, <=0.10.0-alpha.3
lettre::transport::sendmail::sendmailtransport::send_raw: >=0.10.0-alpha.1, <=0.10.0-alpha.3
description: Affected versions of lettre allowed argument injection
to the sendmail command. It was possible, using forgedtoaddresses,
to pass arbitrary arguments to the sendmail executable. Depending on the implementation (original sendmail, postfix, exim, etc.)
it could be possible in some cases to write email data into arbitrary files (using sendmail's
logging features). The flaw is corrected by modifying the executed command to stop parsing arguments
before passing the destination addresses. NOTE: This vulnerability only affects thesendmailtransport. Others, includingsmtp, are not
affected. This vulnerability was reported by vin01. Advisory available underCC0-1.0license.
affected_functions: lettre;;sendmail;;sendmailtransport;;send
version_of_Affected: <0.10.0-alpha.1

---
classification: MEDIUM
subtitle: futures_task::noop_waker_ref can segfault due to dereferencing a NULL pointer
reported: May  3, 2020
issued: October 31, 2020(last modified: June 13, 2023)
package: {'name': 'futures-task(crates.io)', 'url': '/packages/futures-task.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35907', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35907'}, {'text': 'GHSA-p9m5-3hj7-cp5r', 'url': 'https://github.com/advisories/GHSA-p9m5-3hj7-cp5r'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/issues/2091', 'url': 'https://github.com/rust-lang/futures-rs/issues/2091'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.5
affected functions: Version
futures_task::noop_waker_ref: >=0.3.0
description: Affected versions of the crate used aUnsafeCellin thread-local storage to return a noop waker reference,
assuming that the reference would never be returned from another thread. This resulted in a segmentation fault crash ifWaker::wake_by_ref()was called on a waker returned from another thread due to
it attempting to dereference a pointer that wasn't accessible from the main thread. Reproduction Example (from issue): The flaw was corrected by using aOnceCell::Lazy<>wrapper around the noop waker instead of thread-local storage. Advisory available underCC0-1.0license.
affected_functions: futures_task;;noop_waker_ref
version_of_Affected: >=0.3.0

---
classification: MEDIUM
subtitle: ImproperSyncimplementation onFuturesUnorderedin futures-utils can cause data corruption
reported: January 24, 2020
issued: October 31, 2020(last modified: June 13, 2023)
package: {'name': 'futures-util(crates.io)', 'url': '/packages/futures-util.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35908', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35908'}, {'text': 'GHSA-5r9g-j7jj-hw6c', 'url': 'https://github.com/advisories/GHSA-5r9g-j7jj-hw6c'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/issues/2050', 'url': 'https://github.com/rust-lang/futures-rs/issues/2050'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.2
unaffected: <0.3.0
affected functions: Version
futures_util::stream::futuresunordered: >=0.3.0
description: Affected versions of the crate had an unsoundSyncimplementation on theFuturesUnorderedstructure, which used aCellfor
interior mutability without any code to handle synchronized access to the underlying task list's length and head safely. This could of lead to data corruption since two threads modifying the list at once could see incorrect values due to the lack
of access synchronization. The issue was fixed by adding access synchronization code around insertion of tasks into the list. Advisory available underCC0-1.0license.
affected_functions: futures_util;;stream;;futuresunordered
version_of_Affected: >=0.3.0

---
classification: MEDIUM
subtitle: MutexGuard::map can cause a data race in safe code
reported: October 22, 2020
issued: October 30, 2020(last modified: June 13, 2023)
package: {'name': 'futures-util(crates.io)', 'url': '/packages/futures-util.html'}
type: Vulnerability
categories: ['thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35905', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35905'}, {'text': 'GHSA-rh4w-94hh-9943', 'url': 'https://github.com/advisories/GHSA-rh4w-94hh-9943'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/issues/2239', 'url': 'https://github.com/rust-lang/futures-rs/issues/2239'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.7
unaffected: <0.3.2
affected functions: Version
futures_util::lock::mutexguard::map: >=0.3.2
description: Affected versions of the crate had a Send/Sync implementation for MappedMutexGuard that only considered variance on T, while MappedMutexGuard dereferenced to U. This could of led to data races in safe Rust code when a closure used in MutexGuard::map() returns U that is unrelated to T. The issue was fixed by fixingSendandSyncimplementations, and by adding aPhantomData<&'a mut U>marker to theMappedMutexGuardtype to tell the compiler that the guard is over
U too. Advisory available underCC0-1.0license.
affected_functions: futures_util;;lock;;mutexguard;;map
version_of_Affected: >=0.3.2

---
classification: MEDIUM
subtitle: Possible use-after-free withproplist::Iterator
reported: December 22, 2018
issued: October 22, 2020(last modified: February 10, 2024)
package: {'name': 'libpulse-binding(crates.io)', 'url': '/packages/libpulse-binding.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2018-25001', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-25001'}, {'text': 'GHSA-6gvc-4jvj-pwq4', 'url': 'https://github.com/advisories/GHSA-6gvc-4jvj-pwq4'}, {'text': 'GHSA-f56g-chqp-22m9', 'url': 'https://github.com/advisories/GHSA-f56g-chqp-22m9'}]
references: [{'text': 'https://github.com/advisories/GHSA-6gvc-4jvj-pwq4', 'url': 'https://github.com/advisories/GHSA-6gvc-4jvj-pwq4'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N
patched: >=2.5.0
unaffected: <1.0.5
description: Affected versions contained a possible use-after-free issue with property list iteration
due to a lack of a lifetime constraint tying the lifetime of aproplist::Iteratorto theProplistobject for which it was created. This made it possible for users, without
experiencing a compiler error/warning, to destroy theProplistobject before the iterator,
thus destroying the underlying C object the iterator works upon, before the iterator may be
finished with it. This impacts all versions of the crate before2.5.0back to1.0.5. Before version1.0.5the function that produces the iterator was broken to the point of being useless. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: bespoke Cell implementation allows obtaining several mutable references to the same data
reported: January  8, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-service(crates.io)', 'url': '/packages/actix-service.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35899', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35899'}, {'text': 'GHSA-whc7-5p35-4ww2', 'url': 'https://github.com/advisories/GHSA-whc7-5p35-4ww2'}]
references: [{'text': 'https://github.com/actix/actix-net/pull/158', 'url': 'https://github.com/actix/actix-net/pull/158'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0.6
description: The custom implementation of a Cell primitive in the affected versions of this crate
does not keep track of mutable references to the underlying data. This allows obtaining several mutable references to the same object
which may result in arbitrary memory corruption, most likely use-after-free. The flaw was corrected by switching from a bespokeCell<T>implementation toRc<RefCell<T>>. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Malicious input could cause uninitialized memory to be exposed
reported: August 25, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'claxon(crates.io)', 'url': '/packages/claxon.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20992', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20992'}, {'text': 'GHSA-8c6g-4xc5-w96c', 'url': 'https://github.com/advisories/GHSA-8c6g-4xc5-w96c'}]
references: [{'text': 'https://github.com/ruuda/claxon/commit/8f28ec275e412dd3af4f3cda460605512faf332c', 'url': 'https://github.com/ruuda/claxon/commit/8f28ec275e412dd3af4f3cda460605512faf332c'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N
patched: ^0.3.2>=0.4.1
description: Affected versions of Claxon made an invalid assumption about the decode buffer
size being a multiple of a value read from the bitstream. This could cause parts
of the decode buffer to not be overwritten. If the decode buffer was newly
allocated and uninitialized, this uninitialized memory could be exposed. This allows an attacker to observe parts of the uninitialized memory in the
decoded audio stream. The flaw was corrected by checking that the value read from the bitstream divides
the decode buffer size, and returning a format error if it does not. If an error
is returned, the decode buffer is not exposed. Regression tests and an
additional fuzzer have been added to prevent similar flaws in the future. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: HTTP download and execution allows MitM RCE
reported: August  1, 2016
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'portaudio(crates.io)', 'url': '/packages/portaudio.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2016-10933', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10933'}, {'text': 'GHSA-pq6v-x7gp-7776', 'url': 'https://github.com/advisories/GHSA-pq6v-x7gp-7776'}]
references: [{'text': 'https://github.com/RustAudio/rust-portaudio/issues/144', 'url': 'https://github.com/RustAudio/rust-portaudio/issues/144'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: no patched versions
description: The build script in the portaudio crate will attempt to download via HTTP
the portaudio source and build it. A Mallory in the middle can intercept the download with their own archive
and get RCE. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: scalarmult() vulnerable to degenerate public keys
reported: January 26, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'sodiumoxide(crates.io)', 'url': '/packages/sodiumoxide.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-1000168', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-1000168'}, {'text': 'GHSA-2wc6-2rcj-8v76', 'url': 'https://github.com/advisories/GHSA-2wc6-2rcj-8v76'}]
references: [{'text': 'https://github.com/dnaq/sodiumoxide/issues/154', 'url': 'https://github.com/dnaq/sodiumoxide/issues/154'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N
patched: >=0.0.14
description: Thescalarmult()function included in previous versions of this crate
accepted all-zero public keys, for which the resulting Diffie-Hellman shared
secret will always be zero regardless of the private key used. This issue was fixed by checking for this class of keys and rejecting them
if they are used. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Compiler optimisation for next_with_timeout in pnet::transport::IcmpTransportChannelIterator flaws to SEGFAULT
reported: June 11, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'pnet(crates.io)', 'url': '/packages/pnet.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-25054', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25054'}, {'text': 'GHSA-24g6-5rx7-58wj', 'url': 'https://github.com/advisories/GHSA-24g6-5rx7-58wj'}, {'text': 'GHSA-r6ff-2q3c-v3pv', 'url': 'https://github.com/advisories/GHSA-r6ff-2q3c-v3pv'}]
references: [{'text': 'https://github.com/libpnet/libpnet/issues/449', 'url': 'https://github.com/libpnet/libpnet/issues/449'}]
cvss score: 6MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'High', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: High
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H
patched: >=0.27.2
affected functions: Version
pnet::transport::icmptransportchanneliterator: <0.27.2
description: Affected versions of this crate were optimized out by compiler,
which caused dereference of uninitialized file descriptor which caused segfault. Advisory available underCC0-1.0license.
affected_functions: pnet;;transport;;icmptransportchanneliterator
version_of_Affected: <0.27.2

---
classification: MEDIUM
subtitle: Hostname verification skipped when custom root certs used
reported: March 15, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'security-framework(crates.io)', 'url': '/packages/security-framework.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-18588', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18588'}, {'text': 'GHSA-jqqr-c2r2-9cvr', 'url': 'https://github.com/advisories/GHSA-jqqr-c2r2-9cvr'}]
references: [{'text': 'https://github.com/sfackler/rust-security-framework/pull/27', 'url': 'https://github.com/sfackler/rust-security-framework/pull/27'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.1.12
description: If custom root certificates were registered with aClientBuilder, the
hostname of the target server would not be validated against its presented leaf
certificate. This issue was fixed by properly configuring the trust evaluation logic to
perform that check. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Unsafe Send implementation in Atom allows data races
reported: September 21, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'atom(crates.io)', 'url': '/packages/atom.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35897', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35897'}, {'text': 'GHSA-9cg2-2j2h-59v9', 'url': 'https://github.com/advisories/GHSA-9cg2-2j2h-59v9'}]
references: [{'text': 'https://github.com/slide-rs/atom/issues/13', 'url': 'https://github.com/slide-rs/atom/issues/13'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.6
description: Theatomcrate contains a security issue revolving around its implementation
of the Send trait. It incorrectly allows any arbitrary type to be sent across
threads potentially leading to use-after-free issues through memory races. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: HTTP Request smuggling through malformed Transfer Encoding headers
reported: June 16, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'tiny_http(crates.io)', 'url': '/packages/tiny_http.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35884', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35884'}, {'text': 'GHSA-7v2r-wxmg-mgvc', 'url': 'https://github.com/advisories/GHSA-7v2r-wxmg-mgvc'}]
references: [{'text': 'https://github.com/tiny-http/tiny-http/issues/173', 'url': 'https://github.com/tiny-http/tiny-http/issues/173'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N
patched: >=0.8.0^0.6.3
description: HTTP pipelining issues and request smuggling attacks are possible due to incorrect
Transfer encoding header parsing. It is possible conduct HTTP request smuggling attacks (CL:TE/TE:TE) by sending invalid Transfer Encoding headers. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack, or obtain sensitive information
from requests other than their own. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: VecCopy allows misaligned access to elements
reported: September 27, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'dync(crates.io)', 'url': '/packages/dync.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35903', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35903'}, {'text': 'GHSA-qxjq-v4wf-ppvh', 'url': 'https://github.com/advisories/GHSA-qxjq-v4wf-ppvh'}]
references: [{'text': 'https://github.com/elrnv/dync/issues/4', 'url': 'https://github.com/elrnv/dync/issues/4'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.5.0
description: VecCopy::datais created as a Vec of u8 but can be used to store and retrieve
elements of different types leading to misaligned access. The issue was resolved in v0.5.0 by replacing data being stored byVec<u8>with a custom managed
pointer.  Elements are now stored and retrieved using types with proper alignment corresponding to
original types. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: HTTPS MitM vulnerability due to lack of hostname verification
reported: May  9, 2016
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2016-10932', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10932'}, {'text': 'GHSA-9xjr-m6f3-v5wm', 'url': 'https://github.com/advisories/GHSA-9xjr-m6f3-v5wm'}]
references: [{'text': 'https://github.com/hyperium/hyper/blob/master/CHANGELOG.md#v094-2016-05-09', 'url': 'https://github.com/hyperium/hyper/blob/master/CHANGELOG.md#v094-2016-05-09'}]
related: RUSTSEC-2016-0001
cvss score: 4.8MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N
patched: >=0.9.4
affected oses: windows
description: When used on Windows platforms, all versions of Hyper prior to 0.9.4 did not
perform hostname verification when making HTTPS requests. This allows an attacker to perform MitM attacks by preventing any valid
CA-issued certificate, even if there's a hostname mismatch. The problem was addressed by leveraging rust-openssl's built-in support for
hostname verification. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: headers containing newline characters can split messages
reported: January 23, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2017-18587', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18587'}, {'text': 'GHSA-q89x-f52w-6hj2', 'url': 'https://github.com/advisories/GHSA-q89x-f52w-6hj2'}]
references: [{'text': 'https://github.com/hyperium/hyper/wiki/Security-001', 'url': 'https://github.com/hyperium/hyper/wiki/Security-001'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.10.2<0.10.0, >=0.9.18
description: Serializing of headers to the socket did not filter the values for newline bytes (\ror\n),
which allowed for header values to split a request or response. People would not likely include
newlines in the headers in their own applications, so the way for most people to exploit this
is if an application constructs headers based on unsanitized user input. This issue was fixed by replacing all newline characters with a space during serialization of
a header value. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: array_queue pop_back() may cause a use-after-free
reported: September 26, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'array-queue(crates.io)', 'url': '/packages/array-queue.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35900', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35900'}, {'text': 'GHSA-75cq-g75g-rxff', 'url': 'https://github.com/advisories/GHSA-75cq-g75g-rxff'}]
references: [{'text': 'https://github.com/raviqqe/array-queue/issues/2', 'url': 'https://github.com/raviqqe/array-queue/issues/2'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N
patched: no patched versions
unaffected: <0.3.0
description: array_queue implements a circular queue that wraps around an array. However, it
fails to properly index into the array in thepop_backfunction allowing the
reading of previously dropped or uninitialized memory. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Reduced entropy due to inadequate character set usage
reported: June  3, 2024
issued: June  3, 2024(last modified: June 15, 2024)
package: {'name': 'nano-id(crates.io)', 'url': '/packages/nano-id.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'GHSA-2hfw-w739-p7x5', 'url': 'https://github.com/advisories/GHSA-2hfw-w739-p7x5'}, {'text': 'GHSA-9hc7-6w9r-wj94', 'url': 'https://github.com/advisories/GHSA-9hc7-6w9r-wj94'}, {'text': 'CVE-2024-36400', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-36400'}]
cvss score: 9.4CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L
patched: >=0.4.0
affected functions: Version
nano_id::base58: <0.4.0
nano_id::base62: <0.4.0
nano_id::gen: <0.4.0
description: Affected versions of the nano-id crate incorrectly generated IDs using a reduced character set in thenano_id::base62andnano_id::base58functions. Specifically, thebase62function used a character set of 32 symbols instead of the intended 62 symbols, and thebase58function used a character set of 16 symbols instead of the intended 58 symbols. Additionally, thenano_id::genmacro is also affected when a custom character set that is not a power of 2 in size is specified. It should be noted thatnano_id::base64is not affected by this vulnerability. This can result in a significant reduction in entropy, making the generated IDs predictable and vulnerable to brute-force attacks when the IDs are used in security-sensitive contexts such as session tokens or unique identifiers. The flaws were corrected in commita9022772b2f1ce38929b5b81eccc670ac9d3ab23by updating the thenano_id::genmacro to use all specified characters correctly. Advisory available underCC0-1.0license.
affected_functions: nano_id;;base58
version_of_Affected: <0.4.0

---
classification: CRITICAL
subtitle: Memory corruption in liblz4
reported: August 25, 2022
issued: August 26, 2022(last modified: June 13, 2023)
package: {'name': 'lz4-sys(crates.io)', 'url': '/packages/lz4-sys.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-9q5j-jm53-v7vr', 'url': 'https://github.com/advisories/GHSA-9q5j-jm53-v7vr'}]
references: [{'text': 'https://github.com/lz4/lz4/pull/972', 'url': 'https://github.com/lz4/lz4/pull/972'}]
related: CVE-2021-3520
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.9.4
description: lz4-sys up to v1.9.3 bundles a version of liblz4 that is vulnerable toCVE-2021-3520. Attackers could craft a payload that triggers an integer overflow upon
decompression, causing an out-of-bounds write. The flaw has been corrected in version v1.9.4 of liblz4, which is included
in lz4-sys 1.9.4. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Generated code can read and write out of bounds in safe code
reported: October 31, 2021
issued: November  7, 2021(last modified: June 13, 2023)
package: {'name': 'flatbuffers(crates.io)', 'url': '/packages/flatbuffers.html'}
type: Vulnerability
aliases: [{'text': 'GHSA-3jch-9qgp-4844', 'url': 'https://github.com/advisories/GHSA-3jch-9qgp-4844'}]
references: [{'text': 'https://github.com/google/flatbuffers/issues/6627', 'url': 'https://github.com/google/flatbuffers/issues/6627'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=22.9.29
description: Code generated by flatbuffers' compiler isunsafebut not marked as such.
See https://github.com/google/flatbuffers/issues/6627 for details. For example, if generated code is used to decode malformed or untrusted input,
undefined behavior (and thus security vulnerabilities) is possible even without
the use of theunsafekeyword,violating the the meaning of "safe"code; All users that use generated code byflatbufferscompiler are recommended to: Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: SM2 Decryption Buffer Overflow
reported: August 24, 2021
issued: August 24, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2021-3711', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3711'}, {'text': 'GHSA-5ww6-px42-wc85', 'url': 'https://github.com/advisories/GHSA-5ww6-px42-wc85'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210824.txt', 'url': 'https://www.openssl.org/news/secadv/20210824.txt'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=111.16
description: In order to decrypt SM2 encrypted data an application is expected to call the
API functionEVP_PKEY_decrypt(). Typically an application will call this
function twice. The first time, on entry, the "out" parameter can be NULL and,
on exit, the "outlen" parameter is populated with the buffer size required to
hold the decrypted plaintext. The application can then allocate a sufficiently
sized buffer and callEVP_PKEY_decrypt()again, but this time passing a non-NULL
value for the "out" parameter. A bug in the implementation of the SM2 decryption code means that the
calculation of the buffer size required to hold the plaintext returned by the
first call toEVP_PKEY_decrypt()can be smaller than the actual size required by
the second call. This can lead to a buffer overflow whenEVP_PKEY_decrypt()is
called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an
application could cause attacker chosen data to overflow the buffer by up to a
maximum of 62 bytes altering the contents of other data held after the
buffer, possibly changing application behaviour or causing the application to
crash. The location of the buffer is application dependent but is typically
heap allocated. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Data race in crossbeam-deque
reported: July 30, 2021
issued: August 21, 2021(last modified: October 19, 2021)
package: {'name': 'crossbeam-deque(crates.io)', 'url': '/packages/crossbeam-deque.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-pqqp-xmhj-wgcw', 'url': 'https://github.com/advisories/GHSA-pqqp-xmhj-wgcw'}, {'text': 'CVE-2021-32810', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32810'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-pqqp-xmhj-wgcw', 'url': 'https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-pqqp-xmhj-wgcw'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.7.4, <0.8.0>=0.8.1
description: In the affected version of this crate, the result of the race condition is that one or more tasks in the worker queue can be popped twice instead of other tasks that are forgotten and never popped. If tasks are allocated on the heap, this can cause double free and a memory leak. If not, this still can cause a logical bug. Crates usingStealer::steal,Stealer::steal_batch, orStealer::steal_batch_and_popare affected by this issue. Credits to @kmaork for discovering, reporting and fixing the bug. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Integer overflow inhyper's parsing of theTransfer-Encodingheader leads to data loss
reported: July  7, 2021
issued: August  8, 2021(last modified: October 19, 2021)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-32714', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32714'}, {'text': 'GHSA-5h46-h7hh-c6x9', 'url': 'https://github.com/advisories/GHSA-5h46-h7hh-c6x9'}]
references: [{'text': 'https://github.com/hyperium/hyper/security/advisories/GHSA-5h46-h7hh-c6x9', 'url': 'https://github.com/hyperium/hyper/security/advisories/GHSA-5h46-h7hh-c6x9'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H
patched: >=0.14.10
description: When decoding chunk sizes that are too large,hyper's code would encounter an integer overflow. Depending on the situation,
this could lead to data loss from an incorrect total size, or in rarer cases, a request smuggling attack. To be vulnerable, you must be usinghyperfor any HTTP/1 purpose, including as a client or server, and consumers must send
requests or responses that specify a chunk size greater than 18 exabytes. For a possible request smuggling attack to be possible,
any upstream proxies must accept a chunk size greater than 64 bits. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: grep-climay run arbitrary executables on Windows
reported: June 12, 2021
issued: June 15, 2021(last modified: June 13, 2023)
package: {'name': 'grep-cli(crates.io)', 'url': '/packages/grep-cli.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2021-3013', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3013'}, {'text': 'GHSA-g4xg-fxmg-vcg5', 'url': 'https://github.com/advisories/GHSA-g4xg-fxmg-vcg5'}]
references: [{'text': 'https://github.com/BurntSushi/ripgrep/issues/1773', 'url': 'https://github.com/BurntSushi/ripgrep/issues/1773'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.6
affected oses: windows
affected functions: Version
grep_cli::decompressionreader::new: <0.1.6
description: On Windows in versions ofgrep-cliprior to0.1.6, it's possible for some
of the routines to execute arbitrary executables. In particular, a quirk of
the Windows process execution API is that it will automatically consider the
current directory before other directories when resolving relative binary
names. Therefore, if you usegrep-clito read decompressed files in an
untrusted directory with that directory as the CWD, a malicious actor to could
put, e.g., agz.exebinary in that directory andgrep-cliwill use the
malicious actor's version ofgz.exeinstead of the system's. This is also technically possible on Unix as well, but only if thePATHvariable contains.. Conventionally, they do not. ADecompressionReaderhas been fixed to automatically resolve binary names
usingPATH, instead of relying on the Windows API to do it. If you usegrep-cli'sCommandReaderwith astd::process::Commandvalue
on Windows, then it is recommended to either construct theCommandwith an
absolute binary name, or usegrep-cli's newresolve_binaryhelper function. To be clear,grep-cli 0.1.6mitigates this issue in two ways: While the first mitigation fixes this issue for sensible values ofPATHwhen doing decompression search, the second mitigation is imperfect. The more
fundamental issue is thatstd::process::Commandis itself vulnerable to this. Advisory available underCC0-1.0license.
affected_functions: grep_cli;;decompressionreader;;new
version_of_Affected: <0.1.6

---
classification: CRITICAL
subtitle: KeyValueReader passes uninitialized memory to Read instance
reported: January 31, 2021
issued: April  2, 2021(last modified: June 13, 2023)
package: {'name': 'outer_cgi(crates.io)', 'url': '/packages/outer_cgi.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-30454', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-30454'}, {'text': 'GHSA-6vmq-jh76-hq43', 'url': 'https://github.com/advisories/GHSA-6vmq-jh76-hq43'}]
references: [{'text': 'https://github.com/SolraBizna/outer_cgi/issues/1', 'url': 'https://github.com/SolraBizna/outer_cgi/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.1
description: TheKeyValueReadertype in affected versions of this crate set up an
uninitialized memory buffer and passed them to be read in to a user-providedReadinstance. TheReadinstance could read uninitialized memory and cause undefined
behavior and miscompilations. This issue was fixed in commitdd59b30by zero-initializing the buffers before passing them. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: throughandthrough_andcauses a double free if the map function panics
reported: February 18, 2021
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'through(crates.io)', 'url': '/packages/through.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29940', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29940'}, {'text': 'GHSA-5hpj-m323-cphm', 'url': 'https://github.com/advisories/GHSA-5hpj-m323-cphm'}]
references: [{'text': 'https://github.com/gretchenfrage/through/issues/1', 'url': 'https://github.com/gretchenfrage/through/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: throughandthrough_andtake a mutable reference as well as a mapping
function to change the provided reference. They do this by callingptr::readon the reference which duplicates ownership and then calling the mapping
function. If the mapping function panics, both the original object and the one
duplicated byptr::readget dropped, causing a double free. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: misc::vec_with_size() can drop uninitialized memory if clone panics
reported: February 17, 2021
issued: March 29, 2021(last modified: June 13, 2023)
package: {'name': 'telemetry(crates.io)', 'url': '/packages/telemetry.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29937', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29937'}, {'text': 'GHSA-hpcx-3pw8-g3j2', 'url': 'https://github.com/advisories/GHSA-hpcx-3pw8-g3j2'}]
references: [{'text': 'https://github.com/Yoric/telemetry.rs/issues/45', 'url': 'https://github.com/Yoric/telemetry.rs/issues/45'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: misc::vec_with_sizecreates a vector of the providedsizeand immediately
callsvec.set_len(size)on it, initially filling it with uninitialized memory.
It then inserts elements usingvec[i] = value.clone(). If thevalue.clone()call panics, uninitialized items in the vector will be
dropped leading to undefined behavior. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: FromIterator implementation for Vector/Matrix can drop uninitialized memory
reported: January 11, 2021
issued: March 29, 2021(last modified: June 13, 2023)
package: {'name': 'adtensor(crates.io)', 'url': '/packages/adtensor.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29936', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29936'}, {'text': 'GHSA-rg4m-gww5-7p47', 'url': 'https://github.com/advisories/GHSA-rg4m-gww5-7p47'}]
references: [{'text': 'https://github.com/charles-r-earp/adtensor/issues/4', 'url': 'https://github.com/charles-r-earp/adtensor/issues/4'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: TheFromIterator<T>methods forVectorandMatrixrely on the type
parameterNto allocate space in the iterable. If the passed inNtype parameter is larger than the number of items returned
by the iterator, it can lead to uninitialized memory being left in theVectororMatrixtype which gets dropped. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Fix a use-after-free bug in diesels Sqlite backend
reported: March  5, 2021
issued: March  5, 2021(last modified: June 13, 2023)
package: {'name': 'diesel(crates.io)', 'url': '/packages/diesel.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28305', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28305'}, {'text': 'GHSA-j8q9-5rp9-4mv9', 'url': 'https://github.com/advisories/GHSA-j8q9-5rp9-4mv9'}]
references: [{'text': 'https://github.com/diesel-rs/diesel/pull/2663', 'url': 'https://github.com/diesel-rs/diesel/pull/2663'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.4.6
affected functions: Version
diesel::sqliteconnection::query_by_name: <1.4.6
description: We've misusedsqlite3_column_name. TheSQLitedocumentation
states that the following: As part of ourquery_by_nameinfrastructure we've first received all
field names for the prepared statement and stored them as string slices
for later use. After that we calledsqlite3_step()for the first time,
which invalids the pointer and therefore the stored string slice. Advisory available underCC0-1.0license.
affected_functions: diesel;;sqliteconnection;;query_by_name
version_of_Affected: <1.4.6

---
classification: CRITICAL
subtitle: Intern: Data race allowed on T
reported: March  3, 2021
issued: March  4, 2021(last modified: June 13, 2023)
package: {'name': 'internment(crates.io)', 'url': '/packages/internment.html'}
type: Vulnerability
categories: ['thread-safety']
aliases: [{'text': 'CVE-2021-28037', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28037'}, {'text': 'GHSA-gppw-3h6h-v6q2', 'url': 'https://github.com/advisories/GHSA-gppw-3h6h-v6q2'}]
references: [{'text': 'https://github.com/droundy/internment/issues/20', 'url': 'https://github.com/droundy/internment/issues/20'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.2
description: Affected versions of this crate unconditionally implementsSyncforIntern<T>.
This allows users to create data race onT: !Sync, which may lead to undefined behavior
(for example, memory corruption). The flaw was corrected in commit 2928a87 by adding the trait boundT: Syncin theSyncimpl ofIntern<T>. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: push_cloned can drop uninitialized memory or double free on panic
reported: February 22, 2021
issued: March  3, 2021(last modified: June 13, 2023)
package: {'name': 'stack_dst(crates.io)', 'url': '/packages/stack_dst.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28034', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28034'}, {'text': 'CVE-2021-28035', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28035'}, {'text': 'GHSA-45w7-7g63-2m5w', 'url': 'https://github.com/advisories/GHSA-45w7-7g63-2m5w'}, {'text': 'GHSA-8mjx-h23h-w2pg', 'url': 'https://github.com/advisories/GHSA-8mjx-h23h-w2pg'}]
references: [{'text': 'https://github.com/thepowersgang/stack_dst-rs/issues/5', 'url': 'https://github.com/thepowersgang/stack_dst-rs/issues/5'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
affected functions: Version
stack_dst::stacka::push_cloned: <0.6.1
description: Affected versions ofstack_dstused apush_innerfunction that increased
the internal length of the array and then calledval.clone(). If theval.clone()call panics, the stack could drop an already dropped
element or drop uninitialized memory. This issue was fixed in2a4d538by increasing the length of the array after
elements are cloned. Advisory available underCC0-1.0license.
affected_functions: stack_dst;;stacka;;push_cloned
version_of_Affected: <0.6.1

---
classification: CRITICAL
subtitle: split_at allows obtaining multiple mutable references to the same data
reported: January 31, 2021
issued: March  2, 2021(last modified: June 13, 2023)
package: {'name': 'nano_arena(crates.io)', 'url': '/packages/nano_arena.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28032', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28032'}, {'text': 'GHSA-wp34-mqw5-jj85', 'url': 'https://github.com/advisories/GHSA-wp34-mqw5-jj85'}]
references: [{'text': 'https://github.com/bennetthardwick/nano-arena/issues/1', 'url': 'https://github.com/bennetthardwick/nano-arena/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.2
affected functions: Version
nano_arena::arena::split_at: <0.5.2
nano_arena::arenasplit::split_at: <0.5.2
description: Affected versions of this crate assumed thatBorrow<Idx>was guaranteed to
return the same value on.borrow(). The borrowed index value was used to
retrieve a mutable reference to a value. If theBorrow<Idx>implementation returned a different index, the split arena
would allow retrieving the index as a mutable reference creating two mutable
references to the same element. This violates Rust's aliasing rules and allows
for memory safety issues such as writing out of bounds and use-after-frees. The flaw was corrected in commit6b83f9dby storing the.borrow()value in
a temporary variable. Advisory available underCC0-1.0license.
affected_functions: nano_arena;;arena;;split_at
version_of_Affected: <0.5.2

---
classification: CRITICAL
subtitle: Deserializing an array can drop uninitialized memory on panic
reported: March  1, 2021
issued: March  2, 2021(last modified: June 13, 2023)
package: {'name': 'byte_struct(crates.io)', 'url': '/packages/byte_struct.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28033', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28033'}, {'text': 'GHSA-8fgg-5v78-6g76', 'url': 'https://github.com/advisories/GHSA-8fgg-5v78-6g76'}]
references: [{'text': 'https://github.com/wwylele/byte-struct-rs/issues/1', 'url': 'https://github.com/wwylele/byte-struct-rs/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
description: Theread_bytes_default_lefunction for[T; n]arrays, used to deserialize
arrays ofTfrom bytes created a[T; n]array withstd::mem::uninitializedand then calledT's deserialization method. IfT's deserialization method panicked, the uninitialized memory could drop
invalid objects. This flaw was corrected ina535678by removing the unsafe block and using
a.mapfunction to deserialize each element of the array instead. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: move_elements can double-free objects on panic
reported: February 18, 2021
issued: March  2, 2021(last modified: June 13, 2023)
package: {'name': 'scratchpad(crates.io)', 'url': '/packages/scratchpad.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28031', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28031'}, {'text': 'GHSA-3qm2-rfqw-fmrw', 'url': 'https://github.com/advisories/GHSA-3qm2-rfqw-fmrw'}]
references: [{'text': 'https://github.com/okready/scratchpad/issues/1', 'url': 'https://github.com/okready/scratchpad/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.3.1
affected functions: Version
scratchpad::slicemovesource::move_elements: <1.3.1
description: Affected versions ofscratchpadusedptr::readto read elements while
calling a user provided functionfon them. Since the pointer read duplicates ownership, a panic inside the user providedffunction could cause a double free when unwinding. The flaw was fixed in commit891561beaby removing the unsafe block and using
a plain iterator. Advisory available underCC0-1.0license.
affected_functions: scratchpad;;slicemovesource;;move_elements
version_of_Affected: <1.3.1

---
classification: CRITICAL
subtitle: Loading a bgzip block can write out of bounds if size overflows.
reported: January  7, 2021
issued: March  1, 2021(last modified: June 13, 2023)
package: {'name': 'bam(crates.io)', 'url': '/packages/bam.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-28027', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28027'}, {'text': 'GHSA-cpqj-r29q-chrh', 'url': 'https://github.com/advisories/GHSA-cpqj-r29q-chrh'}]
references: [{'text': 'https://gitlab.com/tprodanov/bam/-/issues/4', 'url': 'https://gitlab.com/tprodanov/bam/-/issues/4'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.3
affected functions: Version
bam::bgzip::block::load: <0.1.3
description: Affected versions ofbamset the length of an internal buffer usingself.compressed.set_len(block_size - HEADER_SIZE - MIN_EXTRA_SIZE)and then
wrote into it. Whileblock_sizewas constrained to a proper maximum, when it
was too small the subtraction could overflow negatively to a large number past
the capacity ofself.compressed. This can result in memory corruption in the form of writing out of bounds when
loading abgzipfile with a smallblock_size. Commit061eee38d4fixed this issue by checking for the underflow when setting
the buffer size. Advisory available underCC0-1.0license.
affected_functions: bam;;bgzip;;block;;load
version_of_Affected: <0.1.3

---
classification: CRITICAL
subtitle: Incorrect check on buffer length when seeding RNGs
reported: February 12, 2021
issued: February 15, 2021(last modified: June 13, 2023)
package: {'name': 'rand_core(crates.io)', 'url': '/packages/rand_core.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2021-27378', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27378'}, {'text': 'GHSA-w7j2-35mf-95p7', 'url': 'https://github.com/advisories/GHSA-w7j2-35mf-95p7'}]
references: [{'text': 'https://github.com/rust-random/rand/pull/1096', 'url': 'https://github.com/rust-random/rand/pull/1096'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.2
unaffected: <0.6.0
affected functions: Version
rand_core::le::read_u32_into: <0.6.2, >=0.6.0
rand_core::le::read_u64_into: <0.6.2, >=0.6.0
description: Summary: rand_core::le::read_u32_into and read_u64_into have incorrect checks on the source buffer length, allowing the destination buffer to be under-filled. Implications: some downstream RNGs, including Hc128Rng (but not the more widely used ChaCha*Rng), allow seeding using the SeedableRng::from_seed trait-function with too short keys. Advisory available underCC0-1.0license.
affected_functions: rand_core;;le;;read_u32_into
version_of_Affected: <0.6.2, >=0.6.0

---
classification: CRITICAL
subtitle: Use-after-free insubscript_nextandsubscript_prevwrappers
reported: February  9, 2021
issued: February 15, 2021(last modified: June 13, 2023)
package: {'name': 'yottadb(crates.io)', 'url': '/packages/yottadb.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-27377', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27377'}, {'text': 'GHSA-9658-c26v-7qvf', 'url': 'https://github.com/advisories/GHSA-9658-c26v-7qvf'}]
references: [{'text': 'https://gitlab.com/YottaDB/Lang/YDBRust/-/issues/40', 'url': 'https://gitlab.com/YottaDB/Lang/YDBRust/-/issues/40'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.2.0
affected functions: Version
yottadb::key::sub_next_self_st: <1.2.0
yottadb::key::sub_prev_self_st: <1.2.0
yottadb::keycontext::sub_next_self_st: <1.2.0
yottadb::keycontext::sub_prev_self_st: <1.2.0
description: Affected versions of this crate had an unsound implementation which could pass
a pointer to freed memory toydb_subscript_next_standydb_subscript_prev_stif the variable and subscripts did not have enough
memory allocated on the first call to hold the next variable in the database. For example, the following code had undefined behavior: yottadbhas no reverse-dependencies on crates.io and there are no known
instances of this API being used incorrectly in practice. The fix is backwards
compatible. The flaw was corrected by recalculating the pointer each time it was reallocated. Advisory available underCC0-1.0license.
affected_functions: yottadb;;key;;sub_next_self_st
version_of_Affected: <1.2.0

---
classification: CRITICAL
subtitle: nb-connectinvalidly assumes the memory layout of std::net::SocketAddr
reported: February 14, 2021
issued: February 14, 2021(last modified: June 13, 2023)
package: {'name': 'nb-connect(crates.io)', 'url': '/packages/nb-connect.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2021-27376', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27376'}, {'text': 'GHSA-rm4w-6696-r77p', 'url': 'https://github.com/advisories/GHSA-rm4w-6696-r77p'}]
references: [{'text': 'https://github.com/smol-rs/nb-connect/issues/1', 'url': 'https://github.com/smol-rs/nb-connect/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.0.3
description: Thenb-connectcrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: FixedCapacityDequeLike::clone()can cause dropping uninitialized memory
reported: December 31, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'array-tools(crates.io)', 'url': '/packages/array-tools.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36452', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36452'}, {'text': 'GHSA-6wp2-fw3v-mfmc', 'url': 'https://github.com/advisories/GHSA-6wp2-fw3v-mfmc'}]
references: [{'text': 'https://github.com/L117/array-tools/issues/2', 'url': 'https://github.com/L117/array-tools/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.2
description: Affected versions of this crate don't guard against panics, so that partially uninitialized buffer is dropped when user-providedT::clone()panics inFixedCapacityDequeLike<T, A>::clone(). This causes memory corruption. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Sectors::getaccesses unclaimed/uninitialized memory
reported: January  6, 2021
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'calamine(crates.io)', 'url': '/packages/calamine.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
aliases: [{'text': 'CVE-2021-26951', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26951'}, {'text': 'GHSA-ppqp-78xx-3r38', 'url': 'https://github.com/advisories/GHSA-ppqp-78xx-3r38'}]
references: [{'text': 'https://github.com/tafia/calamine/issues/199', 'url': 'https://github.com/tafia/calamine/issues/199'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.17.0
description: Affected versions of this crate arbitrarily callsVec::set_lento increase length of a vector without claiming more memory for the vector. Affected versions of this crate
also calls user-providedReadon the uninitialized memory of the vector that was
extended withVec::set_len. This can overwrite active entities in adjacent heap memory and seems to be a major security issue. Also, calling user-providedReadon uninitialized memory is defined as UB in Rust. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Contents of uninitialized memory exposed in DeflateOutput's AsyncRead implementation
reported: January 24, 2020
issued: January 27, 2021(last modified: June 13, 2023)
package: {'name': 'libp2p-deflate(crates.io)', 'url': '/packages/libp2p-deflate.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36443', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36443'}, {'text': 'GHSA-gvcp-948f-8f2p', 'url': 'https://github.com/advisories/GHSA-gvcp-948f-8f2p'}]
references: [{'text': 'https://github.com/libp2p/rust-libp2p/issues/1932', 'url': 'https://github.com/libp2p/rust-libp2p/issues/1932'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.27.1
description: Affected versions of this crate passes an uninitialized buffer to a user-provided trait functionAsyncRead::poll_read(). ArbitraryAsyncRead::poll_read()implementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. The flaw was fixed in commit 5ba266a by ensuring the newly allocated part of the buffer is zero-initialized before passing it to a user-providedAsyncRead::poll_read(). Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Reading uninitialized memory can cause UB (Deserializer::read_vec)
reported: January  2, 2021
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'cdr(crates.io)', 'url': '/packages/cdr.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26305', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26305'}, {'text': 'GHSA-37jj-wp7g-7wj4', 'url': 'https://github.com/advisories/GHSA-37jj-wp7g-7wj4'}]
references: [{'text': 'https://github.com/hrektts/cdr-rs/issues/10', 'url': 'https://github.com/hrektts/cdr-rs/issues/10'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.4
description: Deserializer::read_vec()created an uninitialized buffer and passes it to a user-providedReadimplementation (Deserializer.reader.read_exact()). Passing an uninitialized buffer to an arbitraryReadimplementation is currently defined as undefined behavior in Rust. Official documentation for theReadtrait explains the following: "It is your responsibility to make sure that buf is initialized before calling read. Calling read with an uninitialized buf (of the kind one obtains via MaybeUninit) is not safe, and can lead to undefined behavior." The flaw was corrected in commit ce310f7 by zero-initializing the newly allocated buffer before handing it toDeserializer.reader.read_exact(). Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: reading on uninitialized buffer can cause UB (impl<R> BufRead for GreedyAccessReader<R>)
reported: January  2, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'bra(crates.io)', 'url': '/packages/bra.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-25905', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25905'}, {'text': 'GHSA-j8qq-58cr-8cc7', 'url': 'https://github.com/advisories/GHSA-j8qq-58cr-8cc7'}]
references: [{'text': 'https://github.com/Enet4/bra-rs/issues/1', 'url': 'https://github.com/Enet4/bra-rs/issues/1'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H
patched: >=0.1.1
description: Affected versions of this crate creates an uninitialized buffer and passes it to user-providedReadimplementation. This is unsound, because it allows safe Rust code to exhibit an undefined behavior (read from uninitialized memory). The flaw was corrected in version 0.1.1 by zero-initializing a newly allocated buffer
before handing it to a user-providedReadimplementation. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: panic safety: double drop may happen withinutil::{mutate, mutate2}
reported: January 12, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'containers(crates.io)', 'url': '/packages/containers.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25907', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25907'}, {'text': 'GHSA-cv7x-6rc6-pq5v', 'url': 'https://github.com/advisories/GHSA-cv7x-6rc6-pq5v'}]
references: [{'text': 'https://github.com/strake/containers.rs/issues/2', 'url': 'https://github.com/strake/containers.rs/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.9.11
description: Upon panic in a user-provided functionf,fn mutate()&fn mutate2drops twice a same object. Affected versions of this crate did not guard against double drop while temporarily duplicating an object's ownership withptr::read(). Dropping a same object can result in memory corruption. The flaw was corrected in version "0.9.11" by fixing the code to abort upon panic. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Double free when callingsys_info::disk_infofrom multiple threads
reported: May 31, 2020
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'sys-info(crates.io)', 'url': '/packages/sys-info.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36434', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36434'}, {'text': 'GHSA-2f5j-3mhq-xv58', 'url': 'https://github.com/advisories/GHSA-2f5j-3mhq-xv58'}]
references: [{'text': 'https://github.com/FillZpp/sys-info-rs/issues/63', 'url': 'https://github.com/FillZpp/sys-info-rs/issues/63'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.8.0
affected oses: linux
affected functions: Version
sys_info::disk_info: <=0.1.1
description: Affected versions ofsys-infouse a static, global, list to store temporary disk information while running. The function that cleans up this list,DFCleanup, assumes a single threaded environment and will try to free the same memory twice in a multithreaded environment. This results in consistent double-frees and segfaults when callingsys_info::disk_infofrom multiple threads at once. The issue was fixed by moving the global variable into a local scope. Advisory available underCC0-1.0license.
affected_functions: sys_info;;disk_info
version_of_Affected: <=0.1.1

---
classification: CRITICAL
subtitle: Buffer overflow in SmallVec::insert_many
reported: January  8, 2021
issued: January  8, 2021(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-25900', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25900'}, {'text': 'GHSA-43w2-9j62-hq99', 'url': 'https://github.com/advisories/GHSA-43w2-9j62-hq99'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/252', 'url': 'https://github.com/servo/rust-smallvec/issues/252'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.14, <1.0.0>=1.6.1
unaffected: <0.6.3
affected functions: Version
smallvec::smallvec::insert_many: >=0.6.3, <0.6.14>=1.0.0, <1.6.1
description: A bug in theSmallVec::insert_manymethod caused it to allocate a buffer that was smaller than needed.  It then wrote past the end of the buffer, causing a buffer overflow and memory corruption on the heap. This bug was only triggered if the iterator passed toinsert_manyyielded more items than the lower bound returned from itssize_hintmethod. The flaw was corrected in smallvec 0.6.14 and 1.6.1, by ensuring that additional space is always reserved for each item inserted.  The fix also simplified the implementation ofinsert_manyto use less unsafe code, so it is easier to verify its correctness. Thank you to Yechan Bae (@Qwaz) and the Rust group at Georgia Tech’s SSLab for finding and reporting this bug. Advisory available underCC0-1.0license.
affected_functions: smallvec;;smallvec;;insert_many
version_of_Affected: >=0.6.3, <0.6.14>=1.0.0, <1.6.1

---
classification: CRITICAL
subtitle: sigstack allocation bug can cause memory corruption or leak
reported: January 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'lucet-runtime-internals(crates.io)', 'url': '/packages/lucet-runtime-internals.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
aliases: [{'text': 'CVE-2020-35859', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35859'}, {'text': 'GHSA-3933-wvjf-pcvc', 'url': 'https://github.com/advisories/GHSA-3933-wvjf-pcvc'}]
references: [{'text': 'https://github.com/bytecodealliance/lucet/pull/401', 'url': 'https://github.com/bytecodealliance/lucet/pull/401'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H
patched: <0.5.0, >=0.4.3>=0.5.1
description: An embedding using affected versions of lucet-runtime configured to use
non-default Wasm globals sizes of more than 4KiB, or compiled in debug mode
without optimizations, could leak data from the signal handler stack to guest
programs. This can potentially cause data from the embedding host to leak to
guest programs or cause corruption of guest program memory. This flaw was resolved by correcting the sigstack allocation logic. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: traitobject assumes the layout of fat pointers
reported: June  1, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'traitobject(crates.io)', 'url': '/packages/traitobject.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35881', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35881'}, {'text': 'GHSA-j79j-cx3h-g27h', 'url': 'https://github.com/advisories/GHSA-j79j-cx3h-g27h'}]
references: [{'text': 'https://github.com/reem/rust-traitobject/issues/7', 'url': 'https://github.com/reem/rust-traitobject/issues/7'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
affected functions: Version
traitobject::data: 
traitobject::data_mut: 
description: This crate gets the data pointer from fat pointers assuming that the first
element in a fat pointer is the data pointer. This is currently true, but
it may change in a future Rust version, leading to memory corruption. This has been fixed in the master branch of the crate, but is has not
been released into crates.io. Advisory available underCC0-1.0license.
affected_functions: traitobject;;data
version_of_Affected: 

---
classification: CRITICAL
subtitle: Bug in SliceDeque::move_head_unchecked corrupts its memory
reported: May  7, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15543', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15543'}, {'text': 'GHSA-c3m3-c39q-pv23', 'url': 'https://github.com/advisories/GHSA-c3m3-c39q-pv23'}]
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/57', 'url': 'https://github.com/gnzlbg/slice_deque/issues/57'}]
related: RUSTSEC-2018-0008
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.0
description: Affected versions of this crate entered a corrupted state ifmem::size_of::<T>() % allocation_granularity() != 0and a specific allocation
pattern was used: sufficiently shifting the deque elements over the mirrored
page boundary. This allows an attacker that controls controls both element insertion and
removal to corrupt the deque, such that reading elements from it would read
bytes corresponding to other elements in the deque. (e.g. a read of T could read
some bytes from one value and some bytes from an adjacent one, resulting in a T
whose value representation is not meaningful). This is undefined behavior. The flaw was corrected by using a pair of pointers to track the head and tail of
the deque instead of a pair of indices. This pair of pointers are represented
using a Rust slice. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Bug in SliceDeque::move_head_unchecked allows read of corrupted memory
reported: December  5, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20995', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20995'}, {'text': 'GHSA-hr3c-6mmp-6m39', 'url': 'https://github.com/advisories/GHSA-hr3c-6mmp-6m39'}]
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/57', 'url': 'https://github.com/gnzlbg/slice_deque/issues/57'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.16
description: Affected versions of this crate did not properly update the
head and tail of the deque when inserting and removing elements from the front
if, before insertion or removal, the tail of the deque was in the mirrored
memory region, and if, after insertion or removal, the head of the deque is
exactly at the beginning of the mirrored memory region. An attacker that controls both element insertion and removal into the deque
could put it in a corrupted state. Once the deque enters such an state, its head
and tail are corrupted, but in bounds of the allocated memory. This can result
in partial reads and writes, reads of uninitialized memory, reads of memory
containing previously dropped objects, etc. An attacker could exploit this to
alter program execution. The flaw was corrected by properly updating the head and tail of the deque in
this case. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: linked-hash-map creates uninitialized NonNull pointer
reported: June 23, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'linked-hash-map(crates.io)', 'url': '/packages/linked-hash-map.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-25573', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25573'}, {'text': 'GHSA-r43h-gmrm-h5c9', 'url': 'https://github.com/advisories/GHSA-r43h-gmrm-h5c9'}]
references: [{'text': 'https://github.com/contain-rs/linked-hash-map/pull/100', 'url': 'https://github.com/contain-rs/linked-hash-map/pull/100'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.3
description: Affected versions of this crate calledmem::uninitialized()to create aNonNull<T>,
which is undefined behavior. The flaw was corrected by avoiding the use ofmem::uninitialized(). Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Parsing a specially crafted message can result in a stack overflow
reported: January 16, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'prost(crates.io)', 'url': '/packages/prost.html'}
type: Vulnerability
categories: ['denial-of-service', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-35858', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35858'}, {'text': 'GHSA-gv73-9mwv-fwgq', 'url': 'https://github.com/advisories/GHSA-gv73-9mwv-fwgq'}]
references: [{'text': 'https://github.com/danburkert/prost/issues/267', 'url': 'https://github.com/danburkert/prost/issues/267'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
description: Affected versions of this crate contained a bug in which decoding untrusted
input could overflow the stack. On architectures with stack probes (like x86), this can be used for denial of
service attacks, while on architectures without stack probes (like ARM)
overflowing the stack is unsound and can result in potential memory corruption
(or even RCE). The flaw was quickly corrected by @danburkert and released in version 0.6.1. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: generichash::Digest::eq always return true
reported: October 11, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'sodiumoxide(crates.io)', 'url': '/packages/sodiumoxide.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-25002', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25002'}, {'text': 'GHSA-wrvc-72w7-xpmj', 'url': 'https://github.com/advisories/GHSA-wrvc-72w7-xpmj'}]
references: [{'text': 'https://github.com/sodiumoxide/sodiumoxide/pull/381', 'url': 'https://github.com/sodiumoxide/sodiumoxide/pull/381'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.5
affected functions: Version
sodiumoxide::crypto::generichash::digest::eq: <0.2.5, >=0.2.0
sodiumoxide::crypto::generichash::digest::ne: <0.2.5, >=0.2.0
description: PartialEq implementation for generichash::Digest has compared itself to itself. Digest::eq always returns true and Digest::ne always returns false. Advisory available underCC0-1.0license.
affected_functions: sodiumoxide;;crypto;;generichash;;digest;;eq
version_of_Affected: <0.2.5, >=0.2.0

---
classification: CRITICAL
subtitle: Allows viewing and modifying arbitrary structs as bytes
reported: June 14, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rgb(crates.io)', 'url': '/packages/rgb.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-25016', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25016'}, {'text': 'GHSA-g4rw-8m5q-6453', 'url': 'https://github.com/advisories/GHSA-g4rw-8m5q-6453'}]
references: [{'text': 'https://github.com/kornelski/rust-rgb/issues/35', 'url': 'https://github.com/kornelski/rust-rgb/issues/35'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: >=0.8.20
unaffected: <0.5.4
description: Affected versions of rgb crate allow viewing and modifying data of any typeTwrapped inRGB<T>as bytes,
and do not correctly constrainRGB<T>and other wrapper structures to the types for which it is safe to do so. Safety violation possible for a type wrapped inRGB<T>and similar wrapper structures: The issue was resolved by requiring all types wrapped in structures provided by RGB crate to implement an unsafe marker trait. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: failure is officially deprecated/unmaintained
reported: May  2, 2020
issued: October  1, 2020(last modified: February 10, 2024)
package: {'name': 'failure(crates.io)', 'url': '/packages/failure.html'}
type: INFOUnmaintained
aliases: [{'text': 'CVE-2019-25010', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25010'}, {'text': 'CVE-2020-25575', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25575'}, {'text': 'GHSA-jq66-xh47-j9f3', 'url': 'https://github.com/advisories/GHSA-jq66-xh47-j9f3'}, {'text': 'GHSA-r98r-j25q-rmpr', 'url': 'https://github.com/advisories/GHSA-r98r-j25q-rmpr'}]
references: [{'text': 'https://github.com/rust-lang-nursery/failure/pull/347', 'url': 'https://github.com/rust-lang-nursery/failure/pull/347'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Thefailurecrate is officially end-of-life: it has been marked as deprecated
by the former maintainer, who has announced that there will be no updates or
maintenance work on it going forward. The following are some suggested actively developed alternatives to switch to: Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Type confusion ifprivate_get_type_idis overridden
reported: November 13, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'failure(crates.io)', 'url': '/packages/failure.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2019-25010', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25010'}, {'text': 'CVE-2020-25575', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25575'}, {'text': 'GHSA-jq66-xh47-j9f3', 'url': 'https://github.com/advisories/GHSA-jq66-xh47-j9f3'}, {'text': 'GHSA-r98r-j25q-rmpr', 'url': 'https://github.com/advisories/GHSA-r98r-j25q-rmpr'}]
references: [{'text': 'https://github.com/rust-lang-nursery/failure/issues/336', 'url': 'https://github.com/rust-lang-nursery/failure/issues/336'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
affected functions: Version
failure::fail::__private_get_type_id__: >=0.1.0
description: Safe Rust code can implement malfunctioning__private_get_type_id__and cause
type confusion when downcasting, which is an undefined behavior. Users who deriveFailtrait are not affected. Advisory available underCC0-1.0license.
affected_functions: failure;;fail;;__private_get_type_id__
version_of_Affected: >=0.1.0

---
classification: CRITICAL
subtitle: HeaderMap::Drain API is unsound
reported: November 16, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'http(crates.io)', 'url': '/packages/http.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-25009', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25009'}, {'text': 'GHSA-6rhx-hqxm-8p36', 'url': 'https://github.com/advisories/GHSA-6rhx-hqxm-8p36'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.20
affected functions: Version
http::header::headermap::drain: <0.1.20
description: Affected versions of this crate incorrectly used raw pointer,
which introduced unsoundness in its public safe API. Failing to drop the Drain struct causes double-free,
andit is possible to violate Rust's alias rule and cause data race with Drain's Iterator implementation. The flaw was corrected in 0.1.20 release ofhttpcrate. Advisory available underCC0-1.0license.
affected_functions: http;;header;;headermap;;drain
version_of_Affected: <0.1.20

---
classification: CRITICAL
subtitle: Unsoundimpl Follow for bool
reported: October 20, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'flatbuffers(crates.io)', 'url': '/packages/flatbuffers.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2019-25004', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25004'}, {'text': 'GHSA-gx73-2498-r55c', 'url': 'https://github.com/advisories/GHSA-gx73-2498-r55c'}]
references: [{'text': 'https://github.com/google/flatbuffers/issues/5530', 'url': 'https://github.com/google/flatbuffers/issues/5530'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
unaffected: <0.4.0
affected functions: Version
flatbuffers::follow::follow: >=0.4.0<=0.6.0
description: The implementation ofimpl Follow for boolallows to reinterpret arbitrary bytes as abool. In Rustboolhas stringent requirements for its in-memory representation. Use of this function
allows to violate these requirements and invoke undefined behaviour in safe code. Advisory available underCC0-1.0license.
affected_functions: flatbuffers;;follow;;follow
version_of_Affected: >=0.4.0<=0.6.0

---
classification: CRITICAL
subtitle: Integer overflow leads to heap-based buffer overflow in encode_config_buf
reported: May  3, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'base64(crates.io)', 'url': '/packages/base64.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-1000430', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-1000430'}, {'text': 'GHSA-x67x-vg9m-65c3', 'url': 'https://github.com/advisories/GHSA-x67x-vg9m-65c3'}]
references: [{'text': 'https://github.com/alicemaz/rust-base64/commit/24ead980daf11ba563e4fb2516187a56a71ad319', 'url': 'https://github.com/alicemaz/rust-base64/commit/24ead980daf11ba563e4fb2516187a56a71ad319'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.2
description: Affected versions of this crate suffered from an integer overflow bug when
calculating the size of a buffer to use when encoding base64 using theencode_config_bufandencode_configfunctions.  If the input string
was large, this would cause a buffer to be allocated that was too small.
Since this function writes to the buffer using unsafe code, it would
allow an attacker to write beyond the buffer, causing memory corruption
and possibly the execution of arbitrary code. This flaw was corrected by using checked arithmetic to calculate
the size of the buffer. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Ozone contains several memory safety issues
reported: July  4, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ozone(crates.io)', 'url': '/packages/ozone.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35877', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35877'}, {'text': 'CVE-2020-35878', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35878'}, {'text': 'GHSA-m3ww-7hrp-gw9w', 'url': 'https://github.com/advisories/GHSA-m3ww-7hrp-gw9w'}, {'text': 'GHSA-p2q9-9cq6-h3jw', 'url': 'https://github.com/advisories/GHSA-p2q9-9cq6-h3jw'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Ozone contains several memory safety issues includingout-of-bound accessand dropping ofuninitialized memory. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: CBox API allows to de-reference raw pointers withoutunsafecode
reported: March 19, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'cbox(crates.io)', 'url': '/packages/cbox.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35860', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35860'}, {'text': 'GHSA-3vjm-36rr-7qrq', 'url': 'https://github.com/advisories/GHSA-3vjm-36rr-7qrq'}]
references: [{'text': 'https://github.com/TomBebbington/cbox-rs/issues/2', 'url': 'https://github.com/TomBebbington/cbox-rs/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: CBoxandCSemiBoxare part of the public API of the cbox crate
and they allow to create smart pointers from raw pointers and de-reference
them without the need ofunsafecode. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: HMAC-BLAKE2 algorithms compute incorrect results
reported: August 25, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'blake2(crates.io)', 'url': '/packages/blake2.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2019-16143', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16143'}, {'text': 'GHSA-4x25-pvhw-5224', 'url': 'https://github.com/advisories/GHSA-4x25-pvhw-5224'}]
references: [{'text': 'https://github.com/RustCrypto/MACs/issues/19', 'url': 'https://github.com/RustCrypto/MACs/issues/19'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.8.1
description: When used in conjunction with the Hash-based Message Authentication Code (HMAC),
the BLAKE2b and BLAKE2s implementations inblake2crate versions prior to
v0.8.1 used an incorrect block size (32-bytes instead of 64-bytes for BLAKE2s,
and 64-bytes instead of 128-bytes for BLAKE2b), causing them to miscompute theMacResult. The v0.8.1 release of theblake2crate uses the correct block sizes. Note that this advisory only impacts usage of BLAKE2 with HMAC, and does not
impactDigestfunctionality. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Enum repr causing potential memory corruption
reported: December 18, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'arrayfire(crates.io)', 'url': '/packages/arrayfire.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2018-20998', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20998'}, {'text': 'GHSA-69fv-gw6g-8ccg', 'url': 'https://github.com/advisories/GHSA-69fv-gw6g-8ccg'}]
references: [{'text': 'https://github.com/arrayfire/arrayfire-rust/pull/177', 'url': 'https://github.com/arrayfire/arrayfire-rust/pull/177'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=3.6.0
unaffected: <=3.5.0
affected architectures: x86_64
affected oses: windows
description: The attribute repr() added to enums to be compatible with C-FFI caused
memory corruption on MSVC toolchain. arrayfire crates <= version 3.5.0 do not have this issue when used with
Rust versions 1.27 or earlier. The issue only started to appear since
Rust version 1.28. The issue seems to be interlinked with which version of Rust is being used. The issue was fixed in crate 3.6.0. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: bespoke Cell implementation allows obtaining several mutable references to the same data
reported: January  8, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-utils(crates.io)', 'url': '/packages/actix-utils.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35898', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35898'}, {'text': 'GHSA-hhw2-pqhf-vmx2', 'url': 'https://github.com/advisories/GHSA-hhw2-pqhf-vmx2'}]
references: [{'text': 'https://github.com/actix/actix-net/issues/160', 'url': 'https://github.com/actix/actix-net/issues/160'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H
patched: >=2.0.0
description: The custom implementation of a Cell primitive in the affected versions of this crate
does not keep track of mutable references to the underlying data. This allows obtaining several mutable references to the same object
which may result in arbitrary memory corruption, most likely use-after-free. The flaw was corrected by switching from a bespokeCell<T>implementation toRc<RefCell<T>>. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Matrix::new() drops uninitialized memory
reported: August 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'alg_ds(crates.io)', 'url': '/packages/alg_ds.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-36432', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36432'}, {'text': 'GHSA-3vv3-frrq-6486', 'url': 'https://github.com/advisories/GHSA-3vv3-frrq-6486'}]
references: [{'text': 'https://gitlab.com/dvshapkin/alg-ds/-/issues/1', 'url': 'https://gitlab.com/dvshapkin/alg-ds/-/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Matrix::new()internally callsMatrix::fill_with()which uses*ptr = valuepattern to initialize the buffer.
This pattern assumes that there is an initialized struct at the address and drops it, which results in dropping of uninitialized struct. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: bigint is unmaintained, use uint instead
reported: May  7, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'bigint(crates.io)', 'url': '/packages/bigint.html'}
type: INFOUnmaintained
aliases: [{'text': 'CVE-2020-35880', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35880'}, {'text': 'GHSA-wgx2-6432-j3fw', 'url': 'https://github.com/advisories/GHSA-wgx2-6432-j3fw'}]
references: [{'text': 'https://github.com/paritytech/bigint/commit/7e71521a61b009afc94c91135353102658550d42', 'url': 'https://github.com/paritytech/bigint/commit/7e71521a61b009afc94c91135353102658550d42'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Thebigintcrate is not maintained any more and contains several known bugs (including a soundness bug);
useuintinstead. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Unaligned memory access
reported: April 19, 2019
issued: October  1, 2020(last modified: October 19, 2021)
package: {'name': 'rand_core(crates.io)', 'url': '/packages/rand_core.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-mmc9-pwm7-qj5w', 'url': 'https://github.com/advisories/GHSA-mmc9-pwm7-qj5w'}, {'text': 'CVE-2020-25576', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25576'}]
references: [{'text': 'https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06', 'url': 'https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: ^0.3.1>=0.4.2
affected functions: Version
rand_core::blockrng::fill_bytes: <0.4.2
rand_core::blockrng::next_u64: <0.4.2
description: Affected versions of this crate violated alignment when casting byte slices to
integer slices, resulting in undefined behavior. The flaw was corrected by Ralf Jung and Diggory Hardy. Advisory available underCC0-1.0license.
affected_functions: rand_core;;blockrng;;fill_bytes
version_of_Affected: <0.4.2

---
classification: CRITICAL
subtitle: Use-after-free in Framed due to lack of pinning
reported: January 30, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-codec(crates.io)', 'url': '/packages/actix-codec.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35902', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35902'}, {'text': 'GHSA-rqgx-hpg4-456r', 'url': 'https://github.com/advisories/GHSA-rqgx-hpg4-456r'}]
references: [{'text': 'https://github.com/actix/actix-net/issues/91', 'url': 'https://github.com/actix/actix-net/issues/91'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.0-beta.1
description: Affected versions of this crate did not require the buffer wrapped inFramedto be pinned,
but treated it as if it had a fixed location in memory. This may result in a use-after-free. The flaw was corrected by making the affected functions acceptPin<&mut Self>instead of&mut self. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: MsQueue and SegQueue suffer from double-free
reported: December  9, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'crossbeam(crates.io)', 'url': '/packages/crossbeam.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20996', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20996'}, {'text': 'GHSA-c3cw-c387-pj65', 'url': 'https://github.com/advisories/GHSA-c3cw-c387-pj65'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam-epoch/issues/82', 'url': 'https://github.com/crossbeam-rs/crossbeam-epoch/issues/82'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.1
unaffected: <0.4.0
description: Even if an element is popped from a queue, crossbeam would run its
destructor inside the epoch-based garbage collector. This is a source
of double frees. The flaw was corrected by wrapping elements inside queues in aManuallyDrop. Thanks to @c0gent for reporting the issue. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Use after free in CMS Signing
reported: June  1, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'openssl(crates.io)', 'url': '/packages/openssl.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20997', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20997'}, {'text': 'GHSA-xjxc-vfw2-cg96', 'url': 'https://github.com/advisories/GHSA-xjxc-vfw2-cg96'}]
references: [{'text': 'https://github.com/sfackler/rust-openssl/pull/942', 'url': 'https://github.com/sfackler/rust-openssl/pull/942'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.10.9
unaffected: <0.10.8
description: Affected versions of the OpenSSL crate used structures after they'd been freed. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Use-after-free in buffer conversion implementation
reported: September  1, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'chttp(crates.io)', 'url': '/packages/chttp.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16140', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16140'}, {'text': 'GHSA-5rrv-m36h-qwf8', 'url': 'https://github.com/advisories/GHSA-5rrv-m36h-qwf8'}]
references: [{'text': 'https://github.com/sagebind/isahc/issues/2', 'url': 'https://github.com/sagebind/isahc/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.3
unaffected: <0.1.1
description: The Fromimplementation for Vecwas not properly implemented,
returning a vector backed by freed memory. This could lead to memory corruption
or be exploited to cause undefined behavior. A fix was published in version 0.1.3. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Possible double free during unwinding in SmallVec::insert_many
reported: July 19, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20991', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20991'}, {'text': 'GHSA-rxr4-x558-x7hw', 'url': 'https://github.com/advisories/GHSA-rxr4-x558-x7hw'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/96', 'url': 'https://github.com/servo/rust-smallvec/issues/96'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.3^0.3.4^0.4.5^0.5.1
unaffected: <0.3.2
description: If an iterator passed toSmallVec::insert_manypanicked inIterator::next,
destructors were run during unwinding while the vector was in an inconsistent
state, possibly causing a double free (a destructor running on two copies of
the same value). This is fixed in smallvec 0.6.3 by ensuring that the vector's length is not
updated to include moved items until they have been removed from their
original positions.  Items may now be leaked ifIterator::nextpanics, but
they will not be dropped more than once. Thank you to @Vurich for reporting this bug. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Double-free and use-after-free in SmallVec::grow()
reported: June  6, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15551', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15551'}, {'text': 'GHSA-mm7v-vpv8-xfc3', 'url': 'https://github.com/advisories/GHSA-mm7v-vpv8-xfc3'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/148', 'url': 'https://github.com/servo/rust-smallvec/issues/148'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.10
unaffected: <0.6.5
affected functions: Version
smallvec::smallvec::grow: <0.6.10, >=0.6.5
description: Attempting to callgrowon a spilled SmallVec with a value equal to the current capacity causes it to free the existing data. This performs a double free immediately and may lead to use-after-free on subsequent accesses to the SmallVec contents. An attacker that controls the value passed togrowmay exploit this flaw to obtain memory contents or gain remote code execution. Credits to @ehuss for discovering, reporting and fixing the bug. Advisory available underCC0-1.0license.
affected_functions: smallvec;;smallvec;;grow
version_of_Affected: <0.6.10, >=0.6.5

---
classification: CRITICAL
subtitle: Memory corruption in SmallVec::grow()
reported: July 19, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
aliases: [{'text': 'CVE-2019-15554', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15554'}, {'text': 'GHSA-69gw-hgj3-45m7', 'url': 'https://github.com/advisories/GHSA-69gw-hgj3-45m7'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/149', 'url': 'https://github.com/servo/rust-smallvec/issues/149'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.10
unaffected: <0.6.3
affected functions: Version
smallvec::smallvec::grow: <0.6.10, >=0.6.3
description: Attempting to callgrowon a spilled SmallVec with a value less than the current capacity causes corruption of memory allocator data structures. An attacker that controls the value passed togrowmay exploit this flaw to obtain memory contents or gain remote code execution. Credits to @ehuss for discovering, reporting and fixing the bug. Advisory available underCC0-1.0license.
affected_functions: smallvec;;smallvec;;grow
version_of_Affected: <0.6.10, >=0.6.3

---
classification: CRITICAL
subtitle: Lifetime boundary forraw_sliceandraw_slice_mutare incorrect
reported: February 11, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rulinalg(crates.io)', 'url': '/packages/rulinalg.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35879', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35879'}, {'text': 'GHSA-q2gj-9r85-p832', 'url': 'https://github.com/advisories/GHSA-q2gj-9r85-p832'}]
references: [{'text': 'https://github.com/AtheMathmo/rulinalg/issues/201', 'url': 'https://github.com/AtheMathmo/rulinalg/issues/201'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
unaffected: <0.4.0
affected functions: Version
rulinalg::matrix::rowmut::raw_slice: >=0.4.0
rulinalg::matrix::rowmut::raw_slice_mut: >=0.4.0
description: The affected version ofrulinalghas incorrect lifetime boundary definitions
forRowMut::raw_sliceandRowMut::raw_slice_mut. They do not conform with
Rust's borrowing rule and allows the user to create multiple mutable references
to the same location. This may result in unexpected calculation result and data
race if both references are used at the same time. Advisory available underCC0-1.0license.
affected_functions: rulinalg;;matrix;;rowmut;;raw_slice
version_of_Affected: >=0.4.0

---
classification: CRITICAL
subtitle: MultiDecoder::read() drops uninitialized memory of arbitrary type on panic in client code
reported: July  4, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'libflate(crates.io)', 'url': '/packages/libflate.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15552', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15552'}, {'text': 'GHSA-rpcm-whqc-jfw8', 'url': 'https://github.com/advisories/GHSA-rpcm-whqc-jfw8'}]
references: [{'text': 'https://github.com/sile/libflate/issues/35', 'url': 'https://github.com/sile/libflate/issues/35'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.25
unaffected: <0.1.14
affected functions: Version
libflate::gzip::multidecoder::read: <0.1.25, >=0.1.14
description: Affected versions of libflate have set a field of an internal structure with a generic type to an uninitialized value inMultiDecoder::read()and reverted it to the original value after the function completed. However, execution ofMultiDecoder::read()could be interrupted by a panic in caller-suppliedReadimplementation. This would causedrop()to be called on uninitialized memory of a generic type implementingRead. This is equivalent to a use-after-free vulnerability and could allow an attacker to gain arbitrary code execution. The flaw was corrected by aborting immediately instead of unwinding the stack in case of panic withinMultiDecoder::read(). The issue was discovered and fixed by Shnatsel. Advisory available underCC0-1.0license.
affected_functions: libflate;;gzip;;multidecoder;;read
version_of_Affected: <0.1.25, >=0.1.14

---
classification: CRITICAL
subtitle: rio allows a use-after-free buffer access when a future is leaked
reported: May 11, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rio(crates.io)', 'url': '/packages/rio.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
aliases: [{'text': 'CVE-2020-35876', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35876'}, {'text': 'GHSA-8rc5-mr4f-m243', 'url': 'https://github.com/advisories/GHSA-8rc5-mr4f-m243'}]
references: [{'text': 'https://github.com/spacejam/rio/issues/11', 'url': 'https://github.com/spacejam/rio/issues/11'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: When ario::Completionis leaked, its drop code will not run. The drop code
is responsible for waiting until the kernel completes the I/O operation into, or
out of, the buffer borrowed byrio::Completion. Leaking the struct will allow
one to access and/or drop the buffer, which can lead to a use-after-free,
data races or leaking secrets. Upstream is not interested in fixing the issue. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Flaw in generativity allows out-of-bounds access
reported: May 21, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'compact_arena(crates.io)', 'url': '/packages/compact_arena.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-16139', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16139'}, {'text': 'GHSA-7j36-gc4r-9x3r', 'url': 'https://github.com/advisories/GHSA-7j36-gc4r-9x3r'}]
references: [{'text': 'https://github.com/llogiq/compact_arena/issues/22', 'url': 'https://github.com/llogiq/compact_arena/issues/22'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
affected functions: Version
compact_arena::smallarena::new: <0.4.0
description: Affected versions of this crate did not properly implement the generativity,
because the invariant lifetimes were not necessarilydropped. This allows an attacker to mix up two arenas, using indices created from one
arena with another one. This might lead to an out-of-bounds read or write
access into the memory reserved for the arena. The flaw was corrected by implementing generativity correctly in version 0.4.0. Advisory available underCC0-1.0license.
affected_functions: compact_arena;;smallarena;;new
version_of_Affected: <0.4.0

---
classification: CRITICAL
subtitle: StrcCtx deallocates a memory region that it doesn't own
reported: August 20, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'alpm-rs(crates.io)', 'url': '/packages/alpm-rs.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35885', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35885'}, {'text': 'GHSA-qc4m-gc8r-mg8m', 'url': 'https://github.com/advisories/GHSA-qc4m-gc8r-mg8m'}]
references: [{'text': 'https://github.com/pigeonhands/rust-arch/issues/2', 'url': 'https://github.com/pigeonhands/rust-arch/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: StrcCtxdeallocate a memory region that it doesn't own whenStrcCtxis created without usingStrcCtx::new.
This can introduce memory safety issues such as double-free and use-after-free to client programs. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Matrix::zip_elementscauses double free
reported: September 14, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'linea(crates.io)', 'url': '/packages/linea.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-16880', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16880'}, {'text': 'GHSA-j52m-489x-v634', 'url': 'https://github.com/advisories/GHSA-j52m-489x-v634'}]
references: [{'text': 'https://github.com/strake/linea.rs/issues/2', 'url': 'https://github.com/strake/linea.rs/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >0.9.4
description: Affected versions of this crate did not properly implements theMatrix::zip_elementsmethod, which causes an double free when the given trait implementation might panic. This allows an attacker to corrupt or take control of the memory. The flaw was corrected by Phosphorus15. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Stream callback function is not unwind safe
reported: September 14, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'portaudio-rs(crates.io)', 'url': '/packages/portaudio-rs.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-16881', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16881'}, {'text': 'GHSA-qpjr-ch72-2qq4', 'url': 'https://github.com/advisories/GHSA-qpjr-ch72-2qq4'}]
references: [{'text': 'https://github.com/mvdnes/portaudio-rs/issues/20', 'url': 'https://github.com/mvdnes/portaudio-rs/issues/20'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >0.3.1
description: Affected versions of this crate is not panic safe within callback functionsstream_callbackandstream_finished_callback. The call to user-provided closure might panic before amem::forgetcall, which then causes a use after free that grants attacker to control the callback function pointer. This allows an attacker to construct an arbitrary code execution . The flaw was reported by Phosphorus15. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Internally mutating methods take immutable ref self
reported: September  2, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'renderdoc(crates.io)', 'url': '/packages/renderdoc.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16142', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16142'}, {'text': 'GHSA-vhfr-v4w9-45v8', 'url': 'https://github.com/advisories/GHSA-vhfr-v4w9-45v8'}]
references: [{'text': 'https://github.com/ebkalderon/renderdoc-rs/pull/32', 'url': 'https://github.com/ebkalderon/renderdoc-rs/pull/32'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.0
affected functions: Version
renderdoc::api::renderdocv110::trigger_multi_frame_capture: <0.5.0
renderdoc::api::renderdocv120::set_capture_file_comments: <0.5.0
description: Affected versions of this crate exposed several methods which tookselfby
immutable reference, despite the requesting the RenderDoc API to set a mutable
value internally. This is technically unsound and calling these methods from multiple threads
without synchronization could lead to unexpected and unpredictable behavior. The flaw was corrected in release 0.5.0. Advisory available underCC0-1.0license.
affected_functions: renderdoc;;api;;renderdocv110;;trigger_multi_frame_capture
version_of_Affected: <0.5.0

---
classification: CRITICAL
subtitle: Missing sanitization in mozwire allows local file overwrite of files ending in .conf
reported: August 18, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'mozwire(crates.io)', 'url': '/packages/mozwire.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35883', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35883'}, {'text': 'GHSA-4vhw-4rw7-jfpv', 'url': 'https://github.com/advisories/GHSA-4vhw-4rw7-jfpv'}]
references: [{'text': 'https://github.com/NilsIrl/MozWire/issues/14', 'url': 'https://github.com/NilsIrl/MozWire/issues/14'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H
patched: >0.4.1
description: The client software downloaded a list of servers from mozilla's servers and created local files named
after the hostname field in the json document. No verification of the content of the string was made, and it could therefore have included '../' leading to path traversal. This allows an attacker in control of mozilla's servers to overwrite/create local files named .conf. The flaw was corrected by sanitizing the hostname field. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Flaw in interface may drop uninitialized instance of arbitrary types
reported: August 21, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'image(crates.io)', 'url': '/packages/image.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16138', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16138'}, {'text': 'GHSA-m2pf-hprp-3vqm', 'url': 'https://github.com/advisories/GHSA-m2pf-hprp-3vqm'}]
references: [{'text': 'https://github.com/image-rs/image/pull/985', 'url': 'https://github.com/image-rs/image/pull/985'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.21.3
unaffected: <0.10.2
affected functions: Version
image::hdr::hdrdecoder::read_image_transform: <0.21.3, >=0.10.2
description: Affected versions of this crate would callVec::set_lenon an uninitialized
vector with user-provided type parameter, in an interface of the HDR image
format decoder. They would then also call other code that could panic before
initializing all instances. This could run Drop implementations on uninitialized types, equivalent to
use-after-free, and allow an attacker arbitrary code execution. Two different fixes were applied. It is possible to conserve the interface by
ensuring proper initialization before callingVec::set_len. Drop is no longer
called in case of panic, though. Starting from version0.22, a breaking change to the interface requires
callers to pre-allocate the output buffer and pass a mutable slice instead,
avoiding all unsafe code. Advisory available underCC0-1.0license.
affected_functions: image;;hdr;;hdrdecoder;;read_image_transform
version_of_Affected: <0.21.3, >=0.10.2

---
classification: CRITICAL
subtitle: Vec-to-vec transmutations could lead to heap overflow/corruption
reported: November 27, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'safe-transmute(crates.io)', 'url': '/packages/safe-transmute.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-21000', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-21000'}, {'text': 'GHSA-2v78-j59h-fmpf', 'url': 'https://github.com/advisories/GHSA-2v78-j59h-fmpf'}]
references: [{'text': 'https://github.com/nabijaczleweli/safe-transmute-rs/pull/36', 'url': 'https://github.com/nabijaczleweli/safe-transmute-rs/pull/36'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.10.1
unaffected: <0.4.0
description: Affected versions of this crate switched the length and capacity arguments in the Vec::from_raw_parts() constructor,
which could lead to memory corruption or data leakage. The flaw was corrected by using the constructor correctly. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Flaw in hyper allows request smuggling by sending a body in GET requests
reported: March 19, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
categories: ['format-injection']
keywords: []
aliases: [{'text': 'CVE-2020-35863', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35863'}, {'text': 'GHSA-h3qr-rq2j-74w4', 'url': 'https://github.com/advisories/GHSA-h3qr-rq2j-74w4'}]
references: [{'text': 'https://github.com/hyperium/hyper/issues/1925', 'url': 'https://github.com/hyperium/hyper/issues/1925'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.12.34
unaffected: <0.11.0
description: Vulnerable versions of hyper allow GET requests to have bodies, even if there is
no Transfer-Encoding or Content-Length header.  As per the HTTP 1.1
specification, such requests do not have bodies, so the body will be interpreted
as a separate HTTP request. This allows an attacker who can control the body and method of an HTTP request
made by hyper to inject a request with headers that would not otherwise be
allowed, as demonstrated by sending a malformed HTTP request from a Substrate
runtime.  This allows bypassing CORS restrictions.  In combination with other
vulnerabilities, such as an exploitable web server listening on loopback, it may
allow remote code execution. The flaw was corrected in hyper version 0.12.34. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Missing check in ArrayVec leads to out-of-bounds write.
reported: September 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'stack(crates.io)', 'url': '/packages/stack.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35895', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35895'}, {'text': 'GHSA-h45v-vgvp-3h5v', 'url': 'https://github.com/advisories/GHSA-h45v-vgvp-3h5v'}]
references: [{'text': 'https://github.com/arcnmx/stack-rs/issues/4', 'url': 'https://github.com/arcnmx/stack-rs/issues/4'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.1
description: ArrayVec::insert allows insertion of an element into the array object into the
specified index. Due to a missing check on the upperbound of this index, it is
possible to write out of bounds. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: use-after or double free of allocated memory
reported: March 27, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'bitvec(crates.io)', 'url': '/packages/bitvec.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35862', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35862'}, {'text': 'GHSA-7cjc-hvxf-gqh7', 'url': 'https://github.com/advisories/GHSA-7cjc-hvxf-gqh7'}]
references: [{'text': 'https://github.com/myrrlyn/bitvec/issues/55', 'url': 'https://github.com/myrrlyn/bitvec/issues/55'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.17.4
unaffected: <0.11.0
affected functions: Version
bitvec::vec::bitvec::into_boxed_bitslice: <0.17.4, >=0.11.0
description: Conversion ofBitVectoBitBoxdid not account for allocation movement. The flaw was corrected by using the address after resizing, rather than the original base address. Advisory available underCC0-1.0license.
affected_functions: bitvec;;vec;;bitvec;;into_boxed_bitslice
version_of_Affected: <0.17.4, >=0.11.0

---
classification: CRITICAL
subtitle: Buffer overflow vulnerability in str::repeat()
reported: September 21, 2018
issued: October  1, 2020
package: {'name': 'std', 'url': '/packages/std.html'}
type: Vulnerability
categories: ['denial-of-service', 'memory-corruption']
references: [{'text': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/CmSuTm-SaU0', 'url': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/CmSuTm-SaU0'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.29.1
unaffected: <1.26.0
affected functions: Version
std::str::repeat: <1.29.1, >=1.26.0
description: The Rust team was recently notified of a security vulnerability affecting
thestr::repeatfunction in the standard library. If your code does not
use this function, it is not affected. This vulnerability is an instance of CWE-680: Integer Overflow to Buffer
Overflow1. Thestr::repeatfunction in the standard library allows repeating a
string a fixed number of times, returning an owned version of the final
string. The capacity of the final string is calculated by multiplying
the length of the string being repeated by the number of copies. This
calculation can overflow, and this case was not properly checked for. The rest of the implementation ofstr::repeatcontains unsafe code
that relies on a preallocated vector having the capacity calculated
earlier. On integer overflow the capacity will be less than required,
and which then writes outside of the allocated buffer, leading to
buffer overflow. While thestr::repeatfunction has been in Rust since 1.16.0, this
vulnerability was introduced into the standard library in pull
request #486572. The pull request was merged on March 6, 2018 and
was first part of the 1.26.0 stable released on May 10, 2018. As such, this vulnerability affects: This bug can be mitigated manually by auditing for calls tostr::repeatand testing if the resulting vector's capacity will overflow. If it does,
then the program should panic. For Rust 1.29, we'll be releasing a 1.29.1 on 2018-09-25 with the fix,
which consists of checking for overflow and deterministically panicking
if it happens. Nightlies and betas produced after 2019-09-21 will also
contain a fix for this issue. We will not be releasing our own fixes for previous versions of Rust.
The patch to fix 1.29 should roughly applicable to older versions, although
the implementation has seen a few refactorings since it was introduced.
The patch for 1.29 is included at the end of this email. If you
need assistance patching an older version of Rust on your own, please reach
out to our security mailing list, security@rust-lang.org, and we'll be happy
to help. The current beta and nightly channels will be updated with a fix for this
issue as well. Thanks to Scott McMurray, who found this bug and reported it to us in
accordance with our security policy https://www.rust-lang.org/security.html. Advisory available underCC0-1.0license.
affected_functions: std;;str;;repeat
version_of_Affected: <1.29.1, >=1.26.0

---
classification: HIGH
subtitle: phonenumber:  panic on parsing crafted phonenumber inputs
reported: July  7, 2024
issued: September  5, 2024
package: {'name': 'phonenumber(crates.io)', 'url': '/packages/phonenumber.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2024-39697', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697'}, {'text': 'GHSA-mjw4-jj88-v687', 'url': 'https://github.com/advisories/GHSA-mjw4-jj88-v687'}]
references: [{'text': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687', 'url': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.3.6
unaffected: ['The phonenumber parsing code may panic due to a reachableassert!guard on the phonenumber string.', 'In a typical deployment of rust-phonenumber, this may get triggered by feeding a maliciously crafted phonenumber, e.g. over the network, specifically strings of the form+dwPAA;phone-context=AA, where the "number" part potentially parses as a number larger than 2^56.', 'Since f69abee1/0.3.4/#52.', '0.2.x series is not affected.']
affected functions: Version
phonenumber::parse: *
description: 
References: ['Patches have been published as version0.3.6+8.13.36.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: phonenumber;;parse
version_of_Affected: *

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-index(crates.io)', 'url': '/packages/gix-index.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.33.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-worktree(crates.io)', 'url': '/packages/gix-worktree.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.34.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-fs(crates.io)', 'url': '/packages/gix-fs.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.11.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Slow loris vulnerability with default configuration
reported: March 15, 2024
issued: May 20, 2024(last modified: May 21, 2024)
package: {'name': 'tls-listener(crates.io)', 'url': '/packages/tls-listener.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2024-28854', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28854'}, {'text': 'GHSA-2qph-qpvm-2qf7', 'url': 'https://github.com/advisories/GHSA-2qph-qpvm-2qf7'}]
references: [{'text': 'https://github.com/tmccombs/tls-listener/security/advisories/GHSA-2qph-qpvm-2qf7', 'url': 'https://github.com/tmccombs/tls-listener/security/advisories/GHSA-2qph-qpvm-2qf7'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.10.0
affected functions: Version
tls_listener::tlslistener::new: <0.10.0
description: tls-listener is a rust lang wrapper around a connection listener to support TLS. With the default configuration of tls-listener, a malicious user can open 6.4TcpStreams a second, sending 0 bytes, and can trigger a DoS. The default configuration options make any public service usingTlsListener::new()vulnerable to a slow-loris DoS attack. This impacts any publicly accessible service using the default configuration of tls-listener in versions prior to 0.10.0. Users are advised to upgrade. Users unable to upgrade may mitigate this by passing a large value, such asusize::MAXas the parameter toBuilder::max_handshakes. Advisory available underCC0-1.0license.
affected_functions: tls_listener;;tlslistener;;new
version_of_Affected: <0.10.0

---
classification: HIGH
subtitle: rustls::ConnectionCommon::complete_iocould fall into an infinite loop based on network input
reported: April 19, 2024
issued: April 19, 2024
package: {'name': 'rustls(crates.io)', 'url': '/packages/rustls.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2024-32650', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32650'}, {'text': 'GHSA-6g7w-8wpp-frhj', 'url': 'https://github.com/advisories/GHSA-6g7w-8wpp-frhj'}]
references: [{'text': 'https://github.com/rustls/rustls/security/advisories/GHSA-6g7w-8wpp-frhj', 'url': 'https://github.com/rustls/rustls/security/advisories/GHSA-6g7w-8wpp-frhj'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.23.5>=0.22.4, <0.23.0>=0.21.11, <0.22.0
affected functions: Version
rustls::connectioncommon::complete_io: <=0.23.4<=0.22.3<=0.21.10^0.20
description: If aclose_notifyalert is received during a handshake,complete_iodoes not terminate. Callers which do not callcomplete_ioare not affected. rustls-tokioandrustls-ffido not callcomplete_ioand are not affected. rustls::Streamandrustls::StreamOwnedtypes usecomplete_ioand are affected. Advisory available underCC0-1.0license.
affected_functions: rustls;;connectioncommon;;complete_io
version_of_Affected: <=0.23.4<=0.22.3<=0.21.10^0.20

---
classification: HIGH
subtitle: blurhash: panic on parsing crafted blurhash inputs
reported: September 19, 2023
issued: March  2, 2024
package: {'name': 'blurhash(crates.io)', 'url': '/packages/blurhash.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-42447', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447'}]
references: [{'text': 'https://github.com/whisperfish/blurhash-rs/security/advisories/GHSA-cxvp-82cq-57h2', 'url': 'https://github.com/whisperfish/blurhash-rs/security/advisories/GHSA-cxvp-82cq-57h2'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.2.0
affected functions: Version
blurhash::decode: *
description: The blurhash parsing code may panic due to multiple panic-guarded out-of-bounds accesses on untrusted input. In a typical deployment, this may get triggered by feeding a maliciously crafted blurhashes over the network. These may include: The patches were released under version 0.2.0, which may require user intervention because of slight API churn. Advisory available underCC0-1.0license.
affected_functions: blurhash;;decode
version_of_Affected: *

---
classification: HIGH
subtitle: phonenumber:  panic on parsing crafted RF3966 phonenumber inputs
reported: September 19, 2023
issued: February 29, 2024
package: {'name': 'phonenumber(crates.io)', 'url': '/packages/phonenumber.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-42444', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444'}]
references: [{'text': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2', 'url': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.2.5, <0.3.0>=0.3.3
affected functions: Version
phonenumber::parse: *
description: 
unaffected: ['The phonenumber parsing code may panic due to a panic-guarded out-of-bounds access on the phonenumber string.', 'In a typical deployment ofrust-phonenumber, this may get triggered by feeding a maliciously crafted phonenumber over the network, specifically the string.;phone-context=.']
References: ['Patches will be published as version0.3.3+8.13.9and backported as0.2.5+8.11.3.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: phonenumber;;parse
version_of_Affected: *

---
classification: HIGH
subtitle: Memory corruption, denial of service, and arbitrary code execution in libgit2
reported: February  6, 2024
issued: February  9, 2024(last modified: February 14, 2024)
package: {'name': 'libgit2-sys(crates.io)', 'url': '/packages/libgit2-sys.html'}
type: Vulnerability
categories: ['denial-of-service', 'code-execution', 'memory-corruption']
aliases: [{'text': 'GHSA-22q8-ghmq-63vf', 'url': 'https://github.com/advisories/GHSA-22q8-ghmq-63vf'}]
references: [{'text': 'https://github.com/rust-lang/git2-rs/pull/1017', 'url': 'https://github.com/rust-lang/git2-rs/pull/1017'}, {'text': 'https://github.com/libgit2/libgit2/releases/tag/v1.7.2', 'url': 'https://github.com/libgit2/libgit2/releases/tag/v1.7.2'}]
related: CVE-2024-24575CVE-2024-24577GHSA-54mf-x2rh-hq9vGHSA-j2v7-4f6v-gpg8
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L
patched: >=0.16.2
affected functions: Version
libgit2_sys::git_index_add: <0.16.2
libgit2_sys::git_revparse_single: <0.16.2, >=0.13.0
description: Thelibgit2project fixed three security issues in the 1.7.2 release. These issues are: Thelibgit2-syscrate bundles libgit2, or optionally links to a system libgit2 library. In either case, versions of the libgit2 library less than 1.7.2 are vulnerable. The 0.16.2 release oflibgit2-sysbundles the fixed version of 1.7.2, and requires a system libgit2 version of at least 1.7.2. It is recommended that all users upgrade. Advisory available underCC0-1.0license.
affected_functions: libgit2_sys;;git_index_add
version_of_Affected: <0.16.2

---
classification: HIGH
subtitle: KyberSlash: division timings depending on secrets
reported: December  1, 2023
issued: February  9, 2024(last modified: April 12, 2024)
package: {'name': 'pqc_kyber(crates.io)', 'url': '/packages/pqc_kyber.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'GHSA-x5j2-g63m-f8g4', 'url': 'https://github.com/advisories/GHSA-x5j2-g63m-f8g4'}]
references: [{'text': 'https://github.com/Argyle-Software/kyber/issues/108', 'url': 'https://github.com/Argyle-Software/kyber/issues/108'}, {'text': 'https://kyberslash.cr.yp.to/faq.html', 'url': 'https://kyberslash.cr.yp.to/faq.html'}, {'text': 'https://kyberslash.cr.yp.to/libraries.html', 'url': 'https://kyberslash.cr.yp.to/libraries.html'}, {'text': 'https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6', 'url': 'https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: no patched versions
description: Various Kyber software libraries in various environments leak secret information into timing, specifically because The KyberSlash pages track which Kyberlibrarieshave this issue, and include aFAQabout the issue. The KyberSlash pages were written by Daniel J. Bernstein. The FAQ originally said "I", but some people seemed to have trouble finding this authorship statement, so the FAQ now says "Bernstein" instead. The permanent link for the KyberSlash pages ishttps://kyberslash.cr.yp.to. The issue has not been resolved in the upstreampqc_kybercrate. A third-party fork that mitigates this attack vector has been published assafe_pqc_kyber. Theml-kemcrate is a maintained
alternative pure Rust implementation of ML-KEM / Kyber. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Infinite decoding loop through specially crafted payload
reported: December  8, 2023
issued: December  9, 2023
package: {'name': 'candid(crates.io)', 'url': '/packages/candid.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-6245', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6245'}, {'text': 'GHSA-7787-p7x6-fq3j', 'url': 'https://github.com/advisories/GHSA-7787-p7x6-fq3j'}]
references: [{'text': 'https://github.com/dfinity/candid/pull/478', 'url': 'https://github.com/dfinity/candid/pull/478'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.9.10
unaffected: ['Rust canisters using candid< 0.9.0or>= 0.9.10', 'Rust canister interfaces of type other thanrecord { * }', 'Motoko based canisters', 'dfx (for asset canister)<= 0.14.3or>= 0.15.2']
affected functions: Version
candid::decode: >=0.9.0, <0.9.10
description: The Candid library causes a Denial of Service while parsing a specially crafted payload withemptydata type. For example, if the payload isrecord { * ; empty }and  the canister interface expectsrecord { * }then the rust candid decoder treatsemptyas an extra field required by the type.  The problem with typeemptyis that the candid rust library wrongly categorizesemptyas a recoverable error when skipping the field and thus causing an infinite decoding loop. Canisters using affected versions of candid are exposed to denial of service by causing the decoding to run indefinitely until the canister traps due to reaching maximum instruction limit per execution round. Repeated exposure to the payload will result in degraded performance of the canister. For asset canister users,dfxversions>= 0.14.4to<= 0.15.2-beta.0ships asset canister with an affected version of candid.
References: ['GitHub Security Advisory (GHSA-7787-p7x6-fq3j)', {'text': 'GitHub Security Advisory (GHSA-7787-p7x6-fq3j)', 'url': 'https://github.com/dfinity/candid/security/advisories/GHSA-7787-p7x6-fq3j'}, 'dfinity/candid/pull/478', {'text': 'dfinity/candid/pull/478', 'url': 'https://github.com/dfinity/candid/pull/478'}, 'Candid Library Reference', {'text': 'Candid Library Reference', 'url': 'https://internetcomputer.org/docs/current/references/candid-ref'}, 'Candid Specification', {'text': 'Candid Specification', 'url': 'https://github.com/dfinity/candid/blob/master/spec/Candid.md'}, 'Internet Computer Specification', {'text': 'Internet Computer Specification', 'url': 'https://internetcomputer.org/docs/current/references/ic-interface-spec'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: candid;;decode
version_of_Affected: >=0.9.0, <0.9.10

---
classification: HIGH
subtitle: Tungstenite allows remote attackers to cause a denial of service
reported: September 25, 2023
issued: September 29, 2023
package: {'name': 'tungstenite(crates.io)', 'url': '/packages/tungstenite.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2023-43669', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-43669'}, {'text': 'GHSA-9mcr-873m-xcxp', 'url': 'https://github.com/advisories/GHSA-9mcr-873m-xcxp'}]
references: [{'text': 'https://github.com/snapview/tungstenite-rs/issues/376', 'url': 'https://github.com/snapview/tungstenite-rs/issues/376'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.20.1
description: The Tungstenite crate through 0.20.0 for Rust allows remote attackers to cause
a denial of service (minutes of CPU consumption) via an excessive length of an
HTTP header in a client handshake. The length affects both how many times a parse
is attempted (e.g., thousands of times) and the average amount of data for each
parse attempt (e.g., millions of bytes). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service in Quinn servers
reported: September 21, 2023
issued: September 21, 2023(last modified: February 10, 2024)
package: {'name': 'quinn-proto(crates.io)', 'url': '/packages/quinn-proto.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-42805', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42805'}, {'text': 'GHSA-q8wc-j5m9-27w3', 'url': 'https://github.com/advisories/GHSA-q8wc-j5m9-27w3'}]
references: [{'text': 'https://github.com/quinn-rs/quinn/pull/1667', 'url': 'https://github.com/quinn-rs/quinn/pull/1667'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: ^0.9.5>=0.10.5
description: Receiving QUIC frames containing a frame with unknown frame type could lead to a panic.
Unfortunately this is issue was not found by our fuzzing infrastructure. Thanks to the QUIC Tester research group for reporting this issue. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: BER/CER/DER decoder panics on invalid input
reported: September 13, 2023
issued: September 13, 2023(last modified: February 10, 2024)
package: {'name': 'bcder(crates.io)', 'url': '/packages/bcder.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-39914', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-39914'}, {'text': 'GHSA-6jmw-6mxw-w4jc', 'url': 'https://github.com/advisories/GHSA-6jmw-6mxw-w4jc'}]
references: [{'text': 'https://nlnetlabs.nl/downloads/bcder/CVE-2023-39914.txt', 'url': 'https://nlnetlabs.nl/downloads/bcder/CVE-2023-39914.txt'}, {'text': 'https://github.com/NLnetLabs/bcder/pull/74', 'url': 'https://github.com/NLnetLabs/bcder/pull/74'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.7.3
description: Due to insufficient checking of input data, decoding certain data sequences
can lead tobcderpanicking rather than returning an error. This can affect
both the actual decoding stage as well as accessing content of types that
utilized delayed decoding. bcder 0.7.3 fixes these issues by more thoroughly checking inputs and
returning errors as expected. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: rustls-webpki: CPU denial of service in certificate path building
reported: August 22, 2023
issued: August 22, 2023(last modified: August 27, 2023)
package: {'name': 'rustls-webpki(crates.io)', 'url': '/packages/rustls-webpki.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'GHSA-fh2r-99q2-6mmg', 'url': 'https://github.com/advisories/GHSA-fh2r-99q2-6mmg'}]
related: CVE-2018-16875
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.100.2, <0.101.0>=0.101.4
description: When this crate is given a pathological certificate chain to validate, it will
spend CPU time exponential with the number of candidate certificates at each
step of path building. Both TLS clients and TLS servers that accept client certificate are affected. We now give each path building operation a budget of 100 signature verifications. The originalwebpkicrate is also affected. This was previously reported in the original cratehttps://github.com/briansmith/webpki/issues/69and re-reported to us
recently by Luke Malinowski. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: webpki: CPU denial of service in certificate path building
reported: August 22, 2023
issued: August 22, 2023(last modified: September 30, 2023)
package: {'name': 'webpki(crates.io)', 'url': '/packages/webpki.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'GHSA-8qv2-5vq6-g2g7', 'url': 'https://github.com/advisories/GHSA-8qv2-5vq6-g2g7'}]
related: CVE-2018-16875
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.22.2
description: When this crate is given a pathological certificate chain to validate, it will
spend CPU time exponential with the number of candidate certificates at each
step of path building. Both TLS clients and TLS servers that accept client certificate are affected. This was previously reported inhttps://github.com/briansmith/webpki/issues/69and re-reported recently
by Luke Malinowski. webpki 0.22.1 included a partial fix and webpki 0.22.2 added further fixes. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: libsqlite3-sysvia C SQLite CVE-2022-35737
reported: August  3, 2022
issued: February 14, 2023(last modified: June 13, 2023)
package: {'name': 'libsqlite3-sys(crates.io)', 'url': '/packages/libsqlite3-sys.html'}
type: Vulnerability
categories: ['denial-of-service', 'code-execution']
aliases: [{'text': 'CVE-2022-35737', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-35737'}, {'text': 'GHSA-jw36-hf63-69r9', 'url': 'https://github.com/advisories/GHSA-jw36-hf63-69r9'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2022-35737', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2022-35737'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.25.1
description: It was sometimes possible for SQLite versions >= 1.0.12, < 3.39.2 to allow an array-bounds overflow when large string were input into SQLite'sprintffunction. Aslibsqlite3-sysbundles SQLite, it is susceptible to the vulnerability.libsqlite3-syswas updated to bundle the patched version of SQLitehere. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: evm incorrect state transition
reported: October 25, 2022
issued: February  2, 2023
package: {'name': 'evm(crates.io)', 'url': '/packages/evm.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-39354', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39354'}, {'text': 'GHSA-hhc4-47rh-cr34', 'url': 'https://github.com/advisories/GHSA-hhc4-47rh-cr34'}]
references: [{'text': 'https://github.com/rust-blockchain/evm/pull/133', 'url': 'https://github.com/rust-blockchain/evm/pull/133'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.36.0
description: SputnikVM, also called evm, is a Rust implementation of Ethereum Virtual Machine. A custom stateful precompile can use theis_staticparameter to determine if
the call is executed in a static context (viaSTATICCALL), and thus decide
if stateful operations should be done. Prior to version 0.36.0, the passedis_staticparameter was incorrect -- it
was only set totrueif the call came from a directSTATICCALLopcode. However, once a static call context is entered, it should stay static. The issue
only impacts custom precompiles that actually usesis_static. For those affected, the issue can lead to possible incorrect state transitions. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Slack OAuth Secrets leak in debug logs
reported: July 22, 2022
issued: February  2, 2023
package: {'name': 'slack-morphism(crates.io)', 'url': '/packages/slack-morphism.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2022-31162', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-31162'}, {'text': 'GHSA-99j7-mhfh-w84p', 'url': 'https://github.com/advisories/GHSA-99j7-mhfh-w84p'}]
references: [{'text': 'https://github.com/abdolence/slack-morphism-rust/pull/133', 'url': 'https://github.com/abdolence/slack-morphism-rust/pull/133'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.41.0
description: Debug log formatting made it possible to leak OAuth secrets into debug logs. The patched version has introduced more strict checks to avoid this. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: matrix-sdk Impersonation of room keys
reported: September 29, 2022
issued: February  2, 2023
package: {'name': 'matrix-sdk-crypto(crates.io)', 'url': '/packages/matrix-sdk-crypto.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2022-39252', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39252'}, {'text': 'GHSA-vp68-2wrm-69qm', 'url': 'https://github.com/advisories/GHSA-vp68-2wrm-69qm'}]
references: [{'text': 'https://github.com/matrix-org/matrix-rust-sdk/commit/093fb5d0aa21c0b5eaea6ec96b477f1075271cbb', 'url': 'https://github.com/matrix-org/matrix-rust-sdk/commit/093fb5d0aa21c0b5eaea6ec96b477f1075271cbb'}, {'text': 'https://github.com/matrix-org/matrix-rust-sdk/commit/41449d2cc360e347f5d4e1c154ec1e3185f11acd', 'url': 'https://github.com/matrix-org/matrix-rust-sdk/commit/41449d2cc360e347f5d4e1c154ec1e3185f11acd'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.6.0
description: When the user receives a forwarded room key, the software accepts it without
checking who the room key came from. This allows homeservers to try to insert
room keys of questionable validity, potentially mounting an impersonation attack. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: libp2p Lack of resource management DoS
reported: July 12, 2022
issued: February  2, 2023
package: {'name': 'libp2p(crates.io)', 'url': '/packages/libp2p.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2022-23486', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23486'}, {'text': 'GHSA-jvgw-gccv-q5p8', 'url': 'https://github.com/advisories/GHSA-jvgw-gccv-q5p8'}]
references: [{'text': 'https://github.com/libp2p/rust-libp2p/security/advisories/GHSA-jvgw-gccv-q5p8', 'url': 'https://github.com/libp2p/rust-libp2p/security/advisories/GHSA-jvgw-gccv-q5p8'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.45.1
description: libp2p allows a potential attacker to cause victim p2p node to run out of memory The out of memory failure can cause crashes where libp2p is intended to be used
within large scale networks leading to potential Denial of Service (DoS) vector Users should upgrade or reference theDoS mitigation strategies. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Bug in Wasmtime implementation of pooling instance allocator
reported: November 10, 2022
issued: January 12, 2023(last modified: March 16, 2023)
package: {'name': 'wasmtime(crates.io)', 'url': '/packages/wasmtime.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2022-39392', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39392'}, {'text': 'GHSA-44mr-8vmm-wjhg', 'url': 'https://github.com/advisories/GHSA-44mr-8vmm-wjhg'}]
references: [{'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-44mr-8vmm-wjhg', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-44mr-8vmm-wjhg'}, {'text': 'https://github.com/bytecodealliance/wasmtime/commit/e60c3742904ccbb3e26da201c9221c38a4981d72', 'url': 'https://github.com/bytecodealliance/wasmtime/commit/e60c3742904ccbb3e26da201c9221c38a4981d72'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: >=1.0.2, <2.0.0>=2.0.2
affected functions: Version
wasmtime::config::allocation_strategy: <1.0.2
wasmtime::poolingallocationconfig::instance_memory_pages: >=2.0.0, <2.0.2
description: Bug in Wasmtime's implementation of its pooling instance allocator when the allocator is configured to give WebAssembly instances a maximum of zero pages of memory. In this configuration, the virtual memory mapping for WebAssembly memories did not meet the compiler-required configuration requirements for safely executing WebAssembly modules. Wasmtime's default settings require virtual memory page faults to indicate that wasm reads/writes are out-of-bounds, but the pooling allocator's configuration would not create an appropriate virtual memory mapping for this meaning out of bounds reads/writes can successfully read/write memory unrelated to the wasm sandbox within range of the base address of the memory mapping created by the pooling allocator. This bug is not applicable with the default settings of thewasmtimecrate. This bug can only be triggered by settingInstanceLimits::memory_pagesto zero. This is expected to be a very rare configuration since this means that wasm modules cannot allocate any pages of linear memory. All wasm modules produced by all current toolchains are highly likely to use linear memory, so it's expected to be unlikely that this configuration is set to zero by any production embedding of Wasmtime. Advisory available underCC0-1.0license.
affected_functions: wasmtime;;config;;allocation_strategy
version_of_Affected: <1.0.2

---
classification: HIGH
subtitle: Denial of Service from unchecked request length
reported: October 30, 2022
issued: November  3, 2022
package: {'name': 'conduit-hyper(crates.io)', 'url': '/packages/conduit-hyper.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'GHSA-9398-5ghf-7pr6', 'url': 'https://github.com/advisories/GHSA-9398-5ghf-7pr6'}, {'text': 'CVE-2022-39294', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39294'}]
references: [{'text': 'https://github.com/conduit-rust/conduit-hyper/security/advisories/GHSA-9398-5ghf-7pr6', 'url': 'https://github.com/conduit-rust/conduit-hyper/security/advisories/GHSA-9398-5ghf-7pr6'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.2
unaffected: <0.2.0-alpha.3
description: Prior to version 0.4.2,conduit-hyperdid not check any limit on a request's
length before callinghyper::body::to_bytes. An attacker could send a
malicious request with an abnormally largeContent-Length, which could lead
to a panic if memory allocation failed for that request. In version 0.4.2,conduit-hypersets an internal limit of 128 MiB per
request, otherwise returning status 400 ("Bad Request"). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Multiple vulnerabilities resulting in out-of-bounds writes
reported: September  7, 2022
issued: October 30, 2022(last modified: June 13, 2023)
package: {'name': 'linked_list_allocator(crates.io)', 'url': '/packages/linked_list_allocator.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2022-36086', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36086'}, {'text': 'GHSA-xg8p-34w2-j49j', 'url': 'https://github.com/advisories/GHSA-xg8p-34w2-j49j'}]
references: [{'text': 'https://github.com/advisories/GHSA-xg8p-34w2-j49j', 'url': 'https://github.com/advisories/GHSA-xg8p-34w2-j49j'}]
cvss score: 8.4HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.10.2
description: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service on deeply nested fragment requests
reported: July 21, 2022
issued: August  3, 2022(last modified: August  6, 2022)
package: {'name': 'async-graphql(crates.io)', 'url': '/packages/async-graphql.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'GHSA-xq3c-8gqm-v648', 'url': 'https://github.com/advisories/GHSA-xq3c-8gqm-v648'}]
references: [{'text': 'https://github.com/async-graphql/async-graphql/commit/521769b80039fc8043d1c9883e3d6e5b57359072', 'url': 'https://github.com/async-graphql/async-graphql/commit/521769b80039fc8043d1c9883e3d6e5b57359072'}]
related: GHSA-4rx6-g5vg-5f3j
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=4.0.6
description: Deeply nested fragments in a GraphQL request may cause a stack overflow in the server. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service on deeply nested fragment requests
reported: July 28, 2022
issued: August  3, 2022
package: {'name': 'juniper(crates.io)', 'url': '/packages/juniper.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'GHSA-4rx6-g5vg-5f3j', 'url': 'https://github.com/advisories/GHSA-4rx6-g5vg-5f3j'}, {'text': 'CVE-2022-31173', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-31173'}]
references: [{'text': 'https://github.com/graphql-rust/juniper/security/advisories/GHSA-4rx6-g5vg-5f3j', 'url': 'https://github.com/graphql-rust/juniper/security/advisories/GHSA-4rx6-g5vg-5f3j'}]
related: GHSA-xq3c-8gqm-v648
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.15.10
description: Deeply nested fragments in a GraphQL request may cause a stack overflow in the server. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Resource leakage when decoding certificates and keys
reported: May  3, 2022
issued: May 19, 2022(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2022-1473', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1473'}, {'text': 'GHSA-g323-fr93-4j3c', 'url': 'https://github.com/advisories/GHSA-g323-fr93-4j3c'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20220503.txt', 'url': 'https://www.openssl.org/news/secadv/20220503.txt'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=300.0.6
unaffected: <300.0
description: TheOPENSSL_LH_flush()function, which empties a hash table, contains
a bug that breaks reuse of the memory occupied by the removed hash
table entries. This function is used when decoding certificates or keys. If a long lived
process periodically decodes certificates or keys its memory usage will
expand without bounds and the process might be terminated by the operating
system causing a denial of service. Also traversing the empty hash table
entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers
configured to accept client certificate authentication. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Regexes with large repetitions on empty sub-expressions take a very long time to parse
reported: March  8, 2022
issued: March  8, 2022(last modified: June 13, 2023)
package: {'name': 'regex(crates.io)', 'url': '/packages/regex.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2022-24713', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24713'}, {'text': 'GHSA-m5pq-gvj9-9vr8', 'url': 'https://github.com/advisories/GHSA-m5pq-gvj9-9vr8'}]
references: [{'text': 'https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw', 'url': 'https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.5.5
description: The Rust Security Response WG was notified that theregexcrate did not
properly limit the complexity of the regular expressions (regex) it parses. An
attacker could use this security issue to perform a denial of service, by
sending a specially crafted regex to a service accepting untrusted regexes. No
known vulnerability is present when parsing untrusted input with trusted
regexes. This issue has been assigned CVE-2022-24713. The severity of this vulnerability
is "high" when theregexcrate is used to parse untrusted regexes. Other uses
of theregexcrate are not affected by this vulnerability. Theregexcrate features built-in mitigations to prevent denial of service
attacks caused by untrusted regexes, or untrusted input matched by trusted
regexes. Those (tunable) mitigations already provide sane defaults to prevent
attacks. This guarantee is documented and it's considered part of the crate's
API. Unfortunately a bug was discovered in the mitigations designed to prevent
untrusted regexes to take an arbitrary amount of time during parsing, and it's
possible to craft regexes that bypass such mitigations. This makes it possible
to perform denial of service attacks by sending specially crafted regexes to
services accepting user-controlled, untrusted regexes. All versions of theregexcrate before or equal to 1.5.4 are affected by this
issue. The fix is include starting fromregex1.5.5. We recommend everyone accepting user-controlled regexes to upgrade immediately
to the latest version of theregexcrate. Unfortunately there is no fixed set of problematic regexes, as there are
practically infinite regexes that could be crafted to exploit this
vulnerability. Because of this, we do not recommend denying known problematic
regexes. We want to thank Addison Crump for responsibly disclosing this to us according
to theRust security policy, and for helping review the fix. We also want to thank Andrew Gallant for developing the fix, and Pietro Albini
for coordinating the disclosure and writing this advisory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Time-of-check time-of-use race condition can allow attacker to delete files they do not have access to delete
reported: January 16, 2022
issued: January 21, 2022
package: {'name': 'std', 'url': '/packages/std.html'}
type: Vulnerability
categories: ['file-disclosure']
references: [{'text': 'https://blog.rust-lang.org/2022/01/20/cve-2022-21658.html', 'url': 'https://blog.rust-lang.org/2022/01/20/cve-2022-21658.html'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityHigh
privileges required: Low
user interaction: None
scope: Changed
confidentiality: None
integrity: Low
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:N/I:L/A:H
patched: >=1.58.1
affected functions: Version
std::fs::remove_dir_all: <1.58.1
description: In the standard library in Rust before 1.58.1, an attacker with unprivileged access to a system could trick a privileged program usingstd::fs::remove_dir_allinto deleting files they don't have access to delete by creating a symlink in a directory that would be removed by astd::fs::remove_dir_allcall due to a Time-of-check time-of-use race condition around this function's check for symbolic links. The function should remove the symbolic links rather than recursively deleting the linked file or directory. Advisory available underCC0-1.0license.
affected_functions: std;;fs;;remove_dir_all
version_of_Affected: <1.58.1

---
classification: HIGH
subtitle: Improper Synchronization and Race Condition in vm-memory
reported: June  2, 2020
issued: September 10, 2021
package: {'name': 'vm-memory(crates.io)', 'url': '/packages/vm-memory.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-13759', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-13759'}, {'text': 'GHSA-mm4m-qg48-f7wc', 'url': 'https://github.com/advisories/GHSA-mm4m-qg48-f7wc'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2020-13759', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2020-13759'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.1^0.1.1
description: rust-vmm vm-memory before 0.1.1 and 0.2.x before 0.2.1 allows attackers to cause a denial of service (loss of IP networking) because read_obj and write_obj do not properly access memory. This affects aarch64 (with musl or glibc) and x86_64 (with musl). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Permissions bypass in pleaser
reported: May 27, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2021-31155', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31155'}, {'text': 'GHSA-vc5p-j8vw-mc6x', 'url': 'https://github.com/advisories/GHSA-vc5p-j8vw-mc6x'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31155', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31155'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4
description: Failure to normalize the umask in pleaser before 0.4 allows a local attacker to gain full root privileges if they are allowed to execute at least one command. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Permissions bypass in pleaser
reported: May 27, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2021-31154', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31154'}, {'text': 'GHSA-pp74-39w2-v4w9', 'url': 'https://github.com/advisories/GHSA-pp74-39w2-v4w9'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31154', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31154'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4
description: pleaseedit in pleaser before 0.4 uses predictable temporary filenames in /tmp and the target directory. This allows a local attacker to gain full root privileges by staging a symlink attack. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Uncontrolled Search Path Element in sharkdp/bat
reported: July 15, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'bat(crates.io)', 'url': '/packages/bat.html'}
type: Vulnerability
categories: ['code-execution']
aliases: [{'text': 'CVE-2021-36753', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36753'}, {'text': 'GHSA-p24j-h477-76q3', 'url': 'https://github.com/advisories/GHSA-p24j-h477-76q3'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36753', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36753'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.18.2
affected oses: windows
description: bat on windows before 0.18.2 executes programs named less.exe from the current working directory. This can lead to unintended code execution. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Relative Path Traversal in git-delta
reported: July 12, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'git-delta(crates.io)', 'url': '/packages/git-delta.html'}
type: Vulnerability
categories: ['file-disclosure']
aliases: [{'text': 'CVE-2021-36376', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36376'}, {'text': 'GHSA-5xg3-j2j6-rcx4', 'url': 'https://github.com/advisories/GHSA-5xg3-j2j6-rcx4'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36376', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36376'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.8.3
affected oses: windows
description: git-delta before 0.8.3 on Windows resolves an executable's pathname as a relative path from the current directory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Read buffer overruns processing ASN.1 strings
reported: August 24, 2021
issued: August 24, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service', 'crypto-failure']
aliases: [{'text': 'CVE-2021-3712', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3712'}, {'text': 'GHSA-q9wj-f4qw-6vfj', 'url': 'https://github.com/advisories/GHSA-q9wj-f4qw-6vfj'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210824.txt', 'url': 'https://www.openssl.org/news/secadv/20210824.txt'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H
patched: >=111.16
description: ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING
structure which contains a buffer holding the string data and a field holding
the buffer length. This contrasts with normal C strings which are represented as
a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's
own "d2i" functions (and other similar parsing functions) as well as any string
whose value has been set with the ASN1_STRING_set() function will additionally
NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING
structures which do not NUL terminate the byte array by directly setting the
"data" and "length" fields in the ASN1_STRING array. This can also happen by
using theASN1_STRING_set0()function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that
the ASN1_STRING byte array will be NUL terminated, even though this is not
guaranteed for strings that have been directly constructed. Where an application
requests an ASN.1 structure to be printed, and where that ASN.1 structure
contains ASN1_STRINGs that have been directly constructed by the application
without NUL terminating the "data" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates
(for example if a certificate has been directly constructed by the application
instead of loading it via the OpenSSL parsing functions, and the certificate
contains non NUL terminated ASN1_STRING structures). It can also occur in theX509_get1_email(),X509_REQ_get1_email()andX509_get1_ocsp()functions. If a malicious actor can cause an application to directly construct an
ASN1_STRING and then process it through one of the affected OpenSSL functions
then this issue could be hit. This might result in a crash (causing a Denial of
Service attack). It could also result in the disclosure of private memory
contents (such as private keys, or sensitive plaintext). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Potential request smuggling capabilities due to lack of input validation
reported: June 16, 2021
issued: August 10, 2021(last modified: June 13, 2023)
package: {'name': 'actix-http(crates.io)', 'url': '/packages/actix-http.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-38512', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38512'}, {'text': 'GHSA-8928-2fgm-6x9x', 'url': 'https://github.com/advisories/GHSA-8928-2fgm-6x9x'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: ^2.2.1>=3.0.0-beta.9
description: Affected versions of this crate did not properly detect invalid requests that could allow HTTP/1 request smuggling (HRS) attacks when running alongside a vulnerable front-end proxy server. This can result in leaked internal and/or user data, including credentials, when the front-end proxy is also vulnerable. Popular front-end proxies and load balancers already mitigate HRS attacks so it is recommended that they are also kept up to date; check your specific set up. You should upgrade even if the front-end proxy receives exclusively HTTP/2 traffic and connects to the back-end using HTTP/1; several downgrade attacks are known that can also expose HRS vulnerabilities. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Links in archive can create arbitrary directories
reported: July 19, 2021
issued: August  8, 2021(last modified: June 13, 2023)
package: {'name': 'tar(crates.io)', 'url': '/packages/tar.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2021-38511', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38511'}, {'text': 'GHSA-62jx-8vmh-4mcw', 'url': 'https://github.com/advisories/GHSA-62jx-8vmh-4mcw'}]
references: [{'text': 'https://github.com/alexcrichton/tar-rs/issues/238', 'url': 'https://github.com/alexcrichton/tar-rs/issues/238'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.4.36
affected functions: Version
tar::archive::unpack: <0.4.36
description: When unpacking a tarball that contains a symlink thetarcrate may create
directories outside of the directory it's supposed to unpack into. The function errors when it's trying to create a file, but the folders are
already created at this point. This has been fixed in https://github.com/alexcrichton/tar-rs/pull/259 and is
published astar0.4.36. Thanks to Martin Michaelis (@mgjm) for discovering
and reporting this, and Nikhil Benesch (@benesch) for the fix! Advisory available underCC0-1.0license.
affected_functions: tar;;archive;;unpack
version_of_Affected: <0.4.36

---
classification: HIGH
subtitle: Memory access due to code generation flaw in Cranelift module
reported: May 21, 2021
issued: May 22, 2021(last modified: October 19, 2021)
package: {'name': 'cranelift-codegen(crates.io)', 'url': '/packages/cranelift-codegen.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2021-32629', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32629'}, {'text': 'GHSA-hpqh-2wqx-7qp5', 'url': 'https://github.com/advisories/GHSA-hpqh-2wqx-7qp5'}]
references: [{'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-hpqh-2wqx-7qp5', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-hpqh-2wqx-7qp5'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Changed
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H
patched: >=0.73.1
affected architectures: x86
description: There is a bug in 0.73.0 of the Cranelift x64 backend that can create a
scenario that could result in a potential sandbox escape in a WebAssembly
module. Users of versions 0.73.0 of Cranelift should upgrade to either 0.73.1
or 0.74 to remediate this vulnerability. Users of Cranelift prior to 0.73.0
should update to 0.73.1 or 0.74 if they were not using the old default backend. More details can be found in the GitHub Security Advisory at: https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-hpqh-2wqx-7qp5 Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Integer overflow in CipherUpdate
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2021-23840', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-23840'}, {'text': 'GHSA-qgm6-9472-pwq7', 'url': 'https://github.com/advisories/GHSA-qgm6-9472-pwq7'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210216.txt', 'url': 'https://www.openssl.org/news/secadv/20210216.txt'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.14
description: Calls toEVP_CipherUpdate,EVP_EncryptUpdateandEVP_DecryptUpdatemay overflow
the output length argument in some cases where the input length is close to the
maximum permissable length for an integer on the platform. In such cases the
return value from the function call will be 1 (indicating success), but the
output length value will be negative. This could cause applications to behave
incorrectly or crash. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: CA certificate check bypass with X509_V_FLAG_X509_STRICT
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2021-3450', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3450'}, {'text': 'GHSA-8hfj-xrj2-pm22', 'url': 'https://github.com/advisories/GHSA-8hfj-xrj2-pm22'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210325.txt', 'url': 'https://www.openssl.org/news/secadv/20210325.txt'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: >=111.15
unaffected: <111.11
description: The X509_V_FLAG_X509_STRICT flag enables additional security checks of the
certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in
the chain that have explicitly encoded elliptic curve parameters was added
as an additional strict check. An error in the implementation of this check meant that the result of a
previous check to confirm that certificates in the chain are valid CA
certificates was overwritten. This effectively bypasses the check
that non-CA certificates must not be able to issue other certificates. If a "purpose" has been configured then there is a subsequent opportunity
for checks that the certificate is a valid CA.  All of the named "purpose"
values implemented in libcrypto perform this check.  Therefore, where
a purpose is set the certificate chain will still be rejected even when the
strict flag has been used. A purpose is set by default in libssl client and
server certificate verification routines, but it can be overridden or
removed by an application. In order to be affected, an application must explicitly set the
X509_V_FLAG_X509_STRICT verification flag and either not set a purpose
for the certificate verification or, in the case of TLS client or server
applications, override the default purpose. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Archives may contain uninitialized memory
reported: April 28, 2021
issued: April 29, 2021(last modified: June 13, 2023)
package: {'name': 'rkyv(crates.io)', 'url': '/packages/rkyv.html'}
type: Vulnerability
categories: ['memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2021-31919', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31919'}, {'text': 'GHSA-w5cr-frph-hw7f', 'url': 'https://github.com/advisories/GHSA-w5cr-frph-hw7f'}]
references: [{'text': 'https://github.com/djkoloski/rkyv/issues/113', 'url': 'https://github.com/djkoloski/rkyv/issues/113'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.6.0
affected functions: Version
rkyv::archive::resolve: <0.6.0
description: rkyvis a serialization framework that writes struct-compatible memory to be stored or
transmitted. During serialization, struct padding bytes and unused enum bytes may not be
initialized. These bytes may be written to disk or sent over unsecured channels. Advisory available underCC0-1.0license.
affected_functions: rkyv;;archive;;resolve
version_of_Affected: <0.6.0

---
classification: HIGH
subtitle: swap_index can write out of bounds and return uninitialized memory
reported: February 24, 2021
issued: March 31, 2021(last modified: June 13, 2023)
package: {'name': 'reorder(crates.io)', 'url': '/packages/reorder.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-29941', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29941'}, {'text': 'CVE-2021-29942', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29942'}, {'text': 'GHSA-3h87-v52r-p9rg', 'url': 'https://github.com/advisories/GHSA-3h87-v52r-p9rg'}, {'text': 'GHSA-jpwg-6gf5-5vh9', 'url': 'https://github.com/advisories/GHSA-jpwg-6gf5-5vh9'}]
references: [{'text': 'https://github.com/tiby312/reorder/issues/1', 'url': 'https://github.com/tiby312/reorder/issues/1'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=1.1.0
description: swap_indextakes an iterator and swaps the items with their corresponding
indexes. It reserves capacity and sets the length of the vector based on the.len()method of the iterator. If thelen()returned by the iterator is larger than the actual number of
elements yielded, thenswap_indexcreates a vector containing uninitialized
members. If thelen()returned by the iterator is smaller than the actual
number of members yielded, thenswap_indexcan write out of bounds past
its allocated vector. As noted by the Rust documentation,len()andsize_hint()are primarily meant for optimization and incorrect values
from their implementations should not lead to memory safety violations. A new version crate was pushed that marks this function as unsafe. reorder = "1.1.0" Previous versions have also been yanked from crates.io. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SliceDeque::drain_filter can double drop an element if the predicate panics
reported: February 19, 2021
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29938', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29938'}, {'text': 'GHSA-p9gf-gmfv-398m', 'url': 'https://github.com/advisories/GHSA-p9gf-gmfv-398m'}]
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/90', 'url': 'https://github.com/gnzlbg/slice_deque/issues/90'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of the crate incremented the current index of the drain filter
iteratorbeforecalling the predicate functionself.pred. If the predicate function panics, it is possible for the last element in the
iterator to be dropped twice. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: StackVec::extend can write out of bounds when size_hint is incorrect
reported: February 19, 2021
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'stackvector(crates.io)', 'url': '/packages/stackvector.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-29939', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29939'}, {'text': 'GHSA-9frf-r7c7-j2vg', 'url': 'https://github.com/advisories/GHSA-9frf-r7c7-j2vg'}]
references: [{'text': 'https://github.com/Alexhuszagh/rust-stackvector/issues/2', 'url': 'https://github.com/Alexhuszagh/rust-stackvector/issues/2'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=1.0.9
description: StackVec::extendused the lower and upper bounds from an Iterator'ssize_hintto determine how many items to push into the stack based vector. If thesize_hintimplementation returned a lower bound that was larger than
the upper bound,StackVecwould write out of bounds and overwrite memory
on the stack. As mentioned by thesize_hintdocumentation,size_hintis mainly for optimization and incorrect
implementations should not lead to memory safety issues. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use after free possible inuri::Formatteron panic
reported: February  9, 2021
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'rocket(crates.io)', 'url': '/packages/rocket.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29935', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29935'}, {'text': 'GHSA-vcw4-8ph6-7vw8', 'url': 'https://github.com/advisories/GHSA-vcw4-8ph6-7vw8'}]
references: [{'text': 'https://github.com/SergioBenitez/Rocket/issues/1534', 'url': 'https://github.com/SergioBenitez/Rocket/issues/1534'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=0.4.7
description: Affected versions of this crate transmuted a&strto a&'static strbefore
pushing it into aStackVec, this value was then popped later in the same
function. This was assumed to be safe because the reference would be valid while the
method's stack was active. In between the push and the pop, however, a functionfwas called that could invoke a user provided function. If the user provided panicked, then the assumption used by the function was no
longer true and the transmute to&'staticwould create an illegal static
reference to the string. This could result in a freed string being used during
(such as in aDropimplementation) or after (e.g throughcatch_unwind) the
panic unwinding. This flaw was corrected in commite325e2fby using a guard object to ensure that the&'static strwas dropped inside
the function. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: PartialReader passes uninitialized memory to user-provided Read
reported: February 17, 2021
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'uu_od(crates.io)', 'url': '/packages/uu_od.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-29934', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29934'}, {'text': 'GHSA-w9vv-q986-vj7x', 'url': 'https://github.com/advisories/GHSA-w9vv-q986-vj7x'}]
references: [{'text': 'https://github.com/uutils/coreutils/issues/1729', 'url': 'https://github.com/uutils/coreutils/issues/1729'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=0.0.4
description: Affected versions of this crate passed an uniniitalized buffer to a
user-providedReadinstance inPartialReader::read. This can result in safeReadimplementations reading from the uninitialized
buffer leading to undefined behavior. The flaw was fixed in commit39d62c6by zero-initializing the passed buffer. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: insert_many can drop elements twice on panic
reported: January 26, 2021
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'insert_many(crates.io)', 'url': '/packages/insert_many.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29933', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29933'}, {'text': 'GHSA-29hg-r7c7-54fr', 'url': 'https://github.com/advisories/GHSA-29hg-r7c7-54fr'}]
references: [{'text': 'https://github.com/rphmeier/insert_many/issues/1', 'url': 'https://github.com/rphmeier/insert_many/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions ofinsert_manyusedptr::copyto move over items in a
vector to make space before inserting, duplicating their ownership. It then
iterated over a providedIteratorto insert the new items. If the iterator's.next()method panics then the vector would drop the same
elements twice. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service through parsing payloads with too big exponent
reported: March 18, 2021
issued: March 24, 2021(last modified: June 13, 2023)
package: {'name': 'parse_duration(crates.io)', 'url': '/packages/parse_duration.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2021-29932', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29932'}, {'text': 'GHSA-qpgv-g792-wh6x', 'url': 'https://github.com/advisories/GHSA-qpgv-g792-wh6x'}]
references: [{'text': 'https://github.com/zeta12ti/parse_duration/issues/21', 'url': 'https://github.com/zeta12ti/parse_duration/issues/21'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
affected functions: Version
parse_duration::parse: *
description: Theparse_duration::parsefunction allows for parsing duration strings with exponents like5e5swhere under the hood, theBigInttype along with thepowfunction are used for such payloads. Passing an arbitrarily big exponent makes theparse_duration::parsefunction to process the payload for a very long time taking up CPU and memory. This allows an attacker to cause a DoS if theparse_duration::parsefunction is used to process untrusted input. Advisory available underCC0-1.0license.
affected_functions: parse_duration;;parse
version_of_Affected: *

---
classification: HIGH
subtitle: panic in user-providedEndianimpl triggers double drop of T
reported: January  4, 2021
issued: March  7, 2021(last modified: June 13, 2023)
package: {'name': 'endian_trait(crates.io)', 'url': '/packages/endian_trait.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-29929', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29929'}, {'text': 'GHSA-vpw8-43wm-rxw5', 'url': 'https://github.com/advisories/GHSA-vpw8-43wm-rxw5'}]
references: [{'text': 'https://gitlab.com/myrrlyn/endian_trait/-/issues/1', 'url': 'https://gitlab.com/myrrlyn/endian_trait/-/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of the crate does not guard against panic from user-provided impl ofEndiantrait, which is a safe trait that users can implement.
If a user-provided implementation of theEndiantrait panics, double-drop is triggered due to the duplicated ownership ofTcreated byptr::read(). Double-drop (or double free) can cause memory corruption in the heap. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: panic safety: double drop or uninitialized drop of T upon panic
reported: January 12, 2021
issued: March  7, 2021(last modified: June 13, 2023)
package: {'name': 'arenavec(crates.io)', 'url': '/packages/arenavec.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-29930', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29930'}, {'text': 'CVE-2021-29931', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29931'}, {'text': 'GHSA-327x-39hh-65wf', 'url': 'https://github.com/advisories/GHSA-327x-39hh-65wf'}, {'text': 'GHSA-955p-rc5h-hg6h', 'url': 'https://github.com/advisories/GHSA-955p-rc5h-hg6h'}]
references: [{'text': 'https://github.com/ibabushkin/arenavec/issues/1', 'url': 'https://github.com/ibabushkin/arenavec/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate did not guard against potential panics that may happen from user-provided functionsT::default()andT::drop(). Panic withinT::default()leads to dropping uninitializedT, when it is invoked fromcommon::Slice::<T, H>::new().
Panic withinT::drop()leads to double drop ofT, when it is invoked either fromcommon::SliceVec::<T, H>::resize_with()orcommon::SliceVec::<T, H>::resize() Either case causes memory corruption in the heap memory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: quinninvalidly assumes the memory layout of std::net::SocketAddr
reported: March  4, 2021
issued: March  4, 2021(last modified: June 13, 2023)
package: {'name': 'quinn(crates.io)', 'url': '/packages/quinn.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2021-28036', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28036'}, {'text': 'GHSA-fhv4-fx3v-77w6', 'url': 'https://github.com/advisories/GHSA-fhv4-fx3v-77w6'}]
references: [{'text': 'https://github.com/quinn-rs/quinn/issues/968', 'url': 'https://github.com/quinn-rs/quinn/issues/968'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: ^0.5.4^0.6.2>=0.7.0
description: Thequinncrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Tape::take_bytes exposes uninitialized memory to a user-provided Read
reported: February 17, 2021
issued: March  1, 2021(last modified: June 13, 2023)
package: {'name': 'truetype(crates.io)', 'url': '/packages/truetype.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-28030', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28030'}, {'text': 'GHSA-v7q4-97x4-4qw2', 'url': 'https://github.com/advisories/GHSA-v7q4-97x4-4qw2'}]
references: [{'text': 'https://github.com/bodoni/truetype/issues/11', 'url': 'https://github.com/bodoni/truetype/issues/11'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.30.1
description: Affected versions of this crate passed an unininitialized buffer to a
user-providedReadinstance inTape::take_bytes. This can result in safeReadimplementations reading from the uninitialized
buffer leading to undefined behavior. The flaw was corrected in commit1f2dc7f37ddby removing the unsafe block
and zero-initializing the buffer. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: arr! macro erases lifetimes
reported: April  9, 2020
issued: March  1, 2021(last modified: June 13, 2023)
package: {'name': 'generic-array(crates.io)', 'url': '/packages/generic-array.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36465', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36465'}, {'text': 'GHSA-3358-4f7f-p4j4', 'url': 'https://github.com/advisories/GHSA-3358-4f7f-p4j4'}]
references: [{'text': 'https://github.com/fizyk20/generic-array/issues/98', 'url': 'https://github.com/fizyk20/generic-array/issues/98'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.8.4, <0.9.0>=0.9.1, <0.10.0>=0.10.1, <0.11.0>=0.11.2, <0.12.0>=0.12.4, <0.13.0>=0.13.3
unaffected: <0.8.0
description: Affected versions of this crate allowed unsoundly extending
lifetimes usingarr!macro. This may result in a variety of
memory corruption scenarios, most likely use-after-free. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use-after-free when cloning a partially consumedVeciterator
reported: November  2, 2020
issued: February 27, 2021(last modified: June 13, 2023)
package: {'name': 'heapless(crates.io)', 'url': '/packages/heapless.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2020-36464', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36464'}, {'text': 'GHSA-qgwf-r2jj-2ccv', 'url': 'https://github.com/advisories/GHSA-qgwf-r2jj-2ccv'}]
references: [{'text': 'https://github.com/japaric/heapless/issues/181', 'url': 'https://github.com/japaric/heapless/issues/181'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.1
affected functions: Version
heapless::vec::intoiter::clone: <=0.6
description: TheIntoIterCloneimplementation clones the whole underlyingVec.
If the iterator is partially consumed the consumed items will be copied, thus creating a use-after-free access. A proof of concept is available in the original bug report. Advisory available underCC0-1.0license.
affected_functions: heapless;;vec;;intoiter;;clone
version_of_Affected: <=0.6

---
classification: HIGH
subtitle: Multiple Transfer-Encoding headers misinterprets request payload
reported: February  5, 2021
issued: February  5, 2021(last modified: October 19, 2021)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
categories: ['format-injection']
keywords: []
aliases: [{'text': 'CVE-2021-21299', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21299'}, {'text': 'GHSA-6hfq-h8hq-87mf', 'url': 'https://github.com/advisories/GHSA-6hfq-h8hq-87mf'}]
references: [{'text': 'https://github.com/hyperium/hyper/security/advisories/GHSA-6hfq-h8hq-87mf', 'url': 'https://github.com/hyperium/hyper/security/advisories/GHSA-6hfq-h8hq-87mf'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.14.3^0.13.10^0.12.36
unaffected: <0.12.0
description: hyper's HTTP server code had a flaw that incorrectly understands some requests
with multiple transfer-encoding headers to have a chunked payload, when it
should have been rejected as illegal. This combined with an upstream HTTP proxy
that understands the request payload boundary differently can result in
"request smuggling" or "desync attacks". Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Queues allow non-Send types to be sent to other threads, allowing data races
reported: December 25, 2020
issued: February  4, 2021(last modified: June 13, 2023)
package: {'name': 'multiqueue(crates.io)', 'url': '/packages/multiqueue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36463', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36463'}, {'text': 'GHSA-jf43-3v8j-qwwr', 'url': 'https://github.com/advisories/GHSA-jf43-3v8j-qwwr'}, {'text': 'GHSA-r2x6-vrxx-jgv4', 'url': 'https://github.com/advisories/GHSA-r2x6-vrxx-jgv4'}]
references: [{'text': 'https://github.com/schets/multiqueue/issues/31', 'url': 'https://github.com/schets/multiqueue/issues/31'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implementedSendfor types used in queue implementations (InnerSend<RW, T>,InnerRecv<RW, T>,FutInnerSend<RW, T>,FutInnerRecv<RW, T>). This allows users to send non-Send types to other threads, which can lead to data race bugs or other undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Send bound needed on T (for Send impl ofBucket2)
reported: November 29, 2020
issued: February  2, 2021(last modified: June 13, 2023)
package: {'name': 'syncpool(crates.io)', 'url': '/packages/syncpool.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36462', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36462'}, {'text': 'GHSA-r88h-6987-g79f', 'url': 'https://github.com/advisories/GHSA-r88h-6987-g79f'}, {'text': 'GHSA-vp6r-mrq9-8f4h', 'url': 'https://github.com/advisories/GHSA-vp6r-mrq9-8f4h'}]
references: [{'text': 'https://github.com/Chopinsky/byte_buffer/issues/2', 'url': 'https://github.com/Chopinsky/byte_buffer/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.6
description: Affected versions of this crate unconditionally implementsSendforBucket2. This allows sending non-Send types to other threads. This can lead to data races when non Send types likeCell<T>orRc<T>are contained insideBucket2and sent across thread boundaries. The data races can potentially lead to memory corruption (as demonstrated in the PoC from the original report issue). The flaw was corrected in commit 15b2828 by adding aT: Sendbound to theSendimpl ofBucket2<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: MvccRwLock allows data races & aliasing violations
reported: December 10, 2020
issued: February  1, 2021(last modified: June 13, 2023)
package: {'name': 'noise_search(crates.io)', 'url': '/packages/noise_search.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36461', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36461'}, {'text': 'GHSA-wxjf-9f4g-3v44', 'url': 'https://github.com/advisories/GHSA-wxjf-9f4g-3v44'}]
references: [{'text': 'https://github.com/pipedown/noise/issues/72', 'url': 'https://github.com/pipedown/noise/issues/72'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forMvccRwLock.
This can lead to data races when types that are either!Sendor!Sync(e.g.Rc<T>,Arc<Cell<_>>) are contained insideMvccRwLockand sent across thread boundaries. The data races can potentially lead to memory corruption (as demonstrated in the PoC from the original report issue). Also, safe APIs ofMvccRwLockallow aliasing violations by allowing&TandLockResult<MutexGuard<Box<T>>>to co-exist in conflicting lifetime regions. The APIs ofMvccRwLockshould either be marked asunsafeorMbccRwLockshould be changed to private or pub(crate). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: IoReader::read(): user-providedReadon uninitialized buffer may cause UB
reported: January 26, 2021
issued: January 31, 2021(last modified: June 13, 2023)
package: {'name': 'ms3d(crates.io)', 'url': '/packages/ms3d.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26952', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26952'}, {'text': 'GHSA-9f5r-vqm5-m342', 'url': 'https://github.com/advisories/GHSA-9f5r-vqm5-m342'}]
references: [{'text': 'https://github.com/andrewhickman/ms3d/issues/1', 'url': 'https://github.com/andrewhickman/ms3d/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.1.3
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. The flaw was fixed in commit 599313b by zero-initializing the buffer (viaself.buf.resize(len, 0)) before passing it toRead. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Readon uninitialized buffer may cause UB (impl Walue for Vec<u8>)
reported: January 30, 2021
issued: January 31, 2021(last modified: June 13, 2023)
package: {'name': 'postscript(crates.io)', 'url': '/packages/postscript.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26953', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26953'}, {'text': 'GHSA-fhvc-gp6c-h2wx', 'url': 'https://github.com/advisories/GHSA-fhvc-gp6c-h2wx'}]
references: [{'text': 'https://github.com/bodoni/postscript/issues/1', 'url': 'https://github.com/bodoni/postscript/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.14.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. This flaw was fixed in commit 8026286 by zero-initializing the buffer before handing to a user-providedRead. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ArcGuard's Send and Sync should have bounds on RC
reported: December  8, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'async-coap(crates.io)', 'url': '/packages/async-coap.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36444', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36444'}, {'text': 'GHSA-9j8q-m9x5-9g6j', 'url': 'https://github.com/advisories/GHSA-9j8q-m9x5-9g6j'}]
references: [{'text': 'https://github.com/google/rust-async-coap/issues/33', 'url': 'https://github.com/google/rust-async-coap/issues/33'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate implement Send/Sync forArcGuard<RC, T>with no trait bounds onRC. This allows users to sendRC: !Sendto other threads and also allows users to concurrently accessRc: !Syncfrom multiple threads. This can result in memory corruption from data race or other undefined behavior caused by sendingT: !Sendto other threads (e.g. droppingMutexGuard<T>in another thread that didn't lock its mutex). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: convec::ConVecunconditionally implements Send/Sync
reported: November 24, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'convec(crates.io)', 'url': '/packages/convec.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36445', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36445'}, {'text': 'GHSA-rpxm-vmr7-5f5f', 'url': 'https://github.com/advisories/GHSA-rpxm-vmr7-5f5f'}]
references: [{'text': 'https://github.com/krl/convec/issues/2', 'url': 'https://github.com/krl/convec/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forConVec<T>.
This allows users to insertTthat is not Send or not Sync. This allows users to create data races by using non-Send types likeArc<Cell<_>>orRc<_>asTinConVec<T>. It is also possible to create data races by using types likeCell<_>orRefCell<_>asT(types that areSendbut notSync).
Such data races can lead to memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: LockWeak<T>allows to create data race toT.
reported: November 14, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'parc(crates.io)', 'url': '/packages/parc.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36454', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36454'}, {'text': 'GHSA-29v7-3v4c-gf38', 'url': 'https://github.com/advisories/GHSA-29v7-3v4c-gf38'}, {'text': 'GHSA-xwxc-j97j-84gf', 'url': 'https://github.com/advisories/GHSA-xwxc-j97j-84gf'}]
references: [{'text': 'https://github.com/hyyking/rustracts/pull/6', 'url': 'https://github.com/hyyking/rustracts/pull/6'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: In the affected versions of this crate,LockWeak<T>unconditionally implementedSendwith no trait bounds onT.LockWeak<T>doesn't ownTand only provides&T. This allows concurrent access to a non-SyncT, which can cause undefined behavior like data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Sharedcan cause a data race
reported: November 10, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'model(crates.io)', 'url': '/packages/model.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-36460', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36460'}, {'text': 'GHSA-mxv6-q98x-h958', 'url': 'https://github.com/advisories/GHSA-mxv6-q98x-h958'}]
references: [{'text': 'https://github.com/spacejam/model/issues/3', 'url': 'https://github.com/spacejam/model/issues/3'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Shareddata structure inmodelcrate implementsSendandSynctraits regardless of the inner type.
This allows safe Rust code to trigger a data race, which is undefined behavior in Rust. Users are advised to treatSharedas an unsafe type.
It should not be used outside of the testing context,
and care must be taken so that the testing code does not have a data race
besides a race condition that is expected to be caught by the test. Checkthe Rustonomiconfor the difference between
a data race and a general race condition. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: dces' World type can cause data races
reported: December  9, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'dces(crates.io)', 'url': '/packages/dces.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36459', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36459'}, {'text': 'GHSA-hxw9-jxqw-jc8j', 'url': 'https://github.com/advisories/GHSA-hxw9-jxqw-jc8j'}]
references: [{'text': 'https://gitlab.redox-os.org/redox-os/dces-rust/-/issues/8', 'url': 'https://gitlab.redox-os.org/redox-os/dces-rust/-/issues/8'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: TheWorldtype indcesis marked asSendwithout bounds on itsEntityStoreandComponentStore. This allows non-thread safeEntityStoreandComponentStores to be sent
across threads and cause data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SyncChannelcan move 'T: !Send' to other threads
reported: November 15, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'signal-simple(crates.io)', 'url': '/packages/signal-simple.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36446', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36446'}, {'text': 'GHSA-36cg-4jff-5863', 'url': 'https://github.com/advisories/GHSA-36cg-4jff-5863'}, {'text': 'GHSA-8892-84wf-cg8f', 'url': 'https://github.com/advisories/GHSA-8892-84wf-cg8f'}]
references: [{'text': 'https://github.com/kitsuneninetails/signal-rust/issues/2', 'url': 'https://github.com/kitsuneninetails/signal-rust/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forSyncChannel<T>.SyncChannel<T>doesn't provide access to&Tbut merely serves as a channel that consumes and returns ownedT. Users can create UB in safe Rust by sendingT: !Sendto other threads withSyncChannel::send/recvAPIs. UsingT = Arc<Cell<_>allows to create data races (which can lead to memory corruption), and usingT = MutexGuard<T>allows to unlock a mutex from a thread that didn't lock the mutex. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Bunchunconditionally implements Send/Sync
reported: November 12, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'bunch(crates.io)', 'url': '/packages/bunch.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36450', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36450'}, {'text': 'GHSA-jwph-qp5h-f9wj', 'url': 'https://github.com/advisories/GHSA-jwph-qp5h-f9wj'}]
references: [{'text': 'https://github.com/krl/bunch/issues/1', 'url': 'https://github.com/krl/bunch/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implementsSend/SyncforBunch<T>.
This allows users to insertT: !SynctoBunch<T>. It is possible to create a data race to aT: !Syncby invoking theBunch::get()API (which returns&T) from multiple threads. It is also possible to sendT: !Sendto other threads by insertingTinsideBunch<T>and sendingBunch<T>to another thread, allowing to create a data race by inserting types likeT = Rc<_>. Such data races can lead to memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: CopyCell lacks bounds on its Send trait allowing for data races
reported: November 15, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'toolshed(crates.io)', 'url': '/packages/toolshed.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36456', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36456'}, {'text': 'GHSA-2r6q-6c8c-g762', 'url': 'https://github.com/advisories/GHSA-2r6q-6c8c-g762'}]
references: [{'text': 'https://github.com/ratel-rust/toolshed/issues/12', 'url': 'https://github.com/ratel-rust/toolshed/issues/12'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: CopyCell<T>is aCell-like type that is implemented for any typeTthat
isCopyable. It'sSendtrait has no bounds on the contained type. As not allCopyable types are thread safe, for example non-mutable references
implement theCopytrait, it is possible to send references to types with
interior mutability such asCellacross threads and cause data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Queueshould have a Send bound on its Send/Sync traits
reported: November 15, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'scottqueue(crates.io)', 'url': '/packages/scottqueue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36453', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36453'}, {'text': 'GHSA-gvvv-w559-2hg6', 'url': 'https://github.com/advisories/GHSA-gvvv-w559-2hg6'}]
references: [{'text': 'https://github.com/rossdylan/rust-scottqueue/issues/1', 'url': 'https://github.com/rossdylan/rust-scottqueue/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implementsSend/SyncforQueue<T>. This allows (1) creating data races to aT: !Syncand (2) sendingT: !Sendto other threads, resulting in memory corruption or other undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Cache: Send/Sync impls needs trait bounds onK
reported: November 24, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'cache(crates.io)', 'url': '/packages/cache.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36448', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36448'}, {'text': 'GHSA-g78p-g85h-q6ww', 'url': 'https://github.com/advisories/GHSA-g78p-g85h-q6ww'}]
references: [{'text': 'https://github.com/krl/cache/issues/1', 'url': 'https://github.com/krl/cache/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forCache<K>.
This allows users to insertKthat is not Send or not Sync. This allows users to create data races by using non-Send types likeArc<Cell<T>>orRc<T>asKinCache<K>. It is also possible to create data races by using types likeCell<T>orRefCell<T>(types that areSendbut notSync).
Such data races can lead to memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Send/Sync bound needed on T  for Send/Sync impl of RcuCell
reported: November 14, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'rcu_cell(crates.io)', 'url': '/packages/rcu_cell.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36451', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36451'}, {'text': 'GHSA-686h-j8r8-wmfm', 'url': 'https://github.com/advisories/GHSA-686h-j8r8-wmfm'}]
references: [{'text': 'https://github.com/Xudong-Huang/rcu_cell/issues/3', 'url': 'https://github.com/Xudong-Huang/rcu_cell/issues/3'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forRcuCell<T>.
This allows users to sendT: !Sendto other threads (whileTenclosed withinRcuCell<T>), and allows users to concurrently accessT: !Syncby using the APIs ofRcuCell<T>that provide access to&T. This can result in memory corruption caused by data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ReaderResult should be bounded by Sync
reported: November 10, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'lexer(crates.io)', 'url': '/packages/lexer.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36458', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36458'}, {'text': 'GHSA-f997-8gxg-r354', 'url': 'https://github.com/advisories/GHSA-f997-8gxg-r354'}]
references: [{'text': 'https://gitlab.com/nathanfaucett/rs-lexer/-/issues/2', 'url': 'https://gitlab.com/nathanfaucett/rs-lexer/-/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate implementsSyncforReaderResult<T, E>with the trait boundT: Send, E: Send. Since matching on the public enumReaderResult<T, E>provides access to&T&&E,
allowing data race to a non-Sync typeTorE.
This can result in a memory corruption when multiple threads concurrently access&Tor&E. Suggested fix for the bug is change the trait bounds imposed onT&Eto beT: Sync, E: Sync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SyncRef's clone() and debug() allow data races
reported: December 18, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'v9(crates.io)', 'url': '/packages/v9.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36447', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36447'}, {'text': 'GHSA-3837-87vh-xq3w', 'url': 'https://github.com/advisories/GHSA-3837-87vh-xq3w'}, {'text': 'GHSA-pfjq-935c-4895', 'url': 'https://github.com/advisories/GHSA-pfjq-935c-4895'}]
references: [{'text': 'https://github.com/purpleposeidon/v9/issues/1', 'url': 'https://github.com/purpleposeidon/v9/issues/1'}, {'text': 'https://github.com/purpleposeidon/v9/commit/18847c50e5d36561cc91c996c3539ddb1eacf6c7', 'url': 'https://github.com/purpleposeidon/v9/commit/18847c50e5d36561cc91c996c3539ddb1eacf6c7'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.43
description: Affected versions of this crate unconditionally implementSyncforSyncRef<T>.
This definition allows data races if&Tis accessible through&SyncRef. SyncRef<T>derivesCloneandDebug, and the default implementations of those traits access&Tby invokingT::clone()&T::fmt(). It is possible to create data races & undefined behavior by concurrently invokingSyncRef<T>::clone()orSyncRef<T>::fmt()from multiple threads withT: !Sync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ShmWriter allows sending non-Send type across threads
reported: December 18, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'kekbit(crates.io)', 'url': '/packages/kekbit.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36449', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36449'}, {'text': 'GHSA-g83m-67wh-whpw', 'url': 'https://github.com/advisories/GHSA-g83m-67wh-whpw'}]
references: [{'text': 'https://github.com/motoras/kekbit/issues/34', 'url': 'https://github.com/motoras/kekbit/issues/34'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.4
description: Affected versions of this crate implementSendforShmWriter<H>without requiringH: Send. This allows users to sendH: !Sendto other threads, which can potentially lead to data races and undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Slockallows sending non-Send types across thread boundaries
reported: November 17, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'slock(crates.io)', 'url': '/packages/slock.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36455', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36455'}, {'text': 'GHSA-83r8-p8v6-6gfm', 'url': 'https://github.com/advisories/GHSA-83r8-p8v6-6gfm'}, {'text': 'GHSA-mc36-5m36-hjh5', 'url': 'https://github.com/advisories/GHSA-mc36-5m36-hjh5'}]
references: [{'text': 'https://github.com/BrokenLamp/slock-rs/issues/2', 'url': 'https://github.com/BrokenLamp/slock-rs/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.0
description: Slock<T>unconditionally implementsSend/Sync. Affected versions of this crate allows sending non-Send types to other threads,
which can lead to data races and memory corruption due to the data race. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: AtomicBoxlacks bound on its Send and Sync traits allowing data races
reported: November 10, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'lever(crates.io)', 'url': '/packages/lever.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36457', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36457'}, {'text': 'GHSA-9pp4-8p8v-g78w', 'url': 'https://github.com/advisories/GHSA-9pp4-8p8v-g78w'}]
references: [{'text': 'https://github.com/vertexclique/lever/issues/15', 'url': 'https://github.com/vertexclique/lever/issues/15'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.1
description: AtomicBox<T>is aBoxtype designed to be used across threads, however, it
implements theSendandSynctraits for all typesT. This allows non-Send types such asRcand non-Sync types such asCellto
be used across thread boundaries which can trigger undefined behavior and
memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Record::read : CustomReadon uninitialized buffer may cause UB
reported: January 26, 2021
issued: January 27, 2021(last modified: June 13, 2023)
package: {'name': 'marc(crates.io)', 'url': '/packages/marc.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26308', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26308'}, {'text': 'GHSA-3mf3-2gv9-h39j', 'url': 'https://github.com/advisories/GHSA-3mf3-2gv9-h39j'}]
references: [{'text': 'https://github.com/blackbeam/rust-marc/issues/7', 'url': 'https://github.com/blackbeam/rust-marc/issues/7'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=2.0.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. (Record::read()) ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. This flaw was fixed in commit 6299af0 by zero-initializing the newly allocated memory (viadata.resize(len, 0)) instead of exposing uninitialized memory (unsafe { data.set_len(len) }). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: beef::Cow lacks a Sync bound on its Send trait allowing for data races
reported: October 28, 2020
issued: January 26, 2021(last modified: June 13, 2023)
package: {'name': 'beef(crates.io)', 'url': '/packages/beef.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36442', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36442'}, {'text': 'GHSA-m7w4-8wp8-m2xq', 'url': 'https://github.com/advisories/GHSA-m7w4-8wp8-m2xq'}]
references: [{'text': 'https://github.com/maciejhirsz/beef/issues/37', 'url': 'https://github.com/maciejhirsz/beef/issues/37'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.0
description: Affected versions of this crate did not have aT: Syncbound in theSendimpl forCow<'_, T, U>. This allows users to create data races by makingCowcontain types that are (Send && !Sync) likeCell<_>orRefCell<_>. Such data races can lead to memory corruption. The flaw was corrected in commit d1c7658 by adding trait boundsT: SyncandT::Owned: Sendto theSendimpl forCow<'_, T, U>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: AtomicBoximplements Send/Sync for anyT: Sized
reported: November 10, 2020
issued: January 25, 2021(last modified: June 13, 2023)
package: {'name': 'abox(crates.io)', 'url': '/packages/abox.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36441', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36441'}, {'text': 'GHSA-r626-fc64-3q28', 'url': 'https://github.com/advisories/GHSA-r626-fc64-3q28'}]
references: [{'text': 'https://github.com/SonicFrog/abox/issues/1', 'url': 'https://github.com/SonicFrog/abox/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.1
description: Affected versions of this crate implementsSend/SyncforAtomicBox<T>without requiringT: Send/T: Sync. This allows to create data races toT: !Syncand sendT: !Sendto another thread. Such behavior breaks the compile-time thread safety guarantees of Rust, and allows users to incur undefined behavior using safe Rust (e.g. memory corruption from data race). The flaw was corrected in commit 34c2b9e by adding trait boundT: SendtoSendimpl forAtomicBox<T>and trait boundT: SynctoSyncimpl forAtomicBox<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ReadTicket and WriteTicket should only be sendable when T is Send
reported: November 17, 2020
issued: January 25, 2021(last modified: June 13, 2023)
package: {'name': 'ticketed_lock(crates.io)', 'url': '/packages/ticketed_lock.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36439', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36439'}, {'text': 'GHSA-77m6-x95j-75r5', 'url': 'https://github.com/advisories/GHSA-77m6-x95j-75r5'}, {'text': 'GHSA-gq4h-f254-7cw9', 'url': 'https://github.com/advisories/GHSA-gq4h-f254-7cw9'}]
references: [{'text': 'https://github.com/kvark/ticketed_lock/issues/7', 'url': 'https://github.com/kvark/ticketed_lock/issues/7'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.0
description: Affected versions of this crate unconditionally implementedSendforReadTicket<T>&WriteTicket<T>.
This allows to send non-SendTto other threads. This can allows creating data races by cloning types with internal mutability and sending them to other threads (asTofReadTicket<T>/WriteTicket<T>). Such data races can cause memory corruption or other undefined behavior. The flaw was corrected in commit a986a93 by addingT: Sendbounds toSendimpls ofReadTicket<T>/WriteTicket<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Decoder<R>can carryR: !Sendto other threads
reported: November 10, 2020
issued: January 25, 2021(last modified: June 13, 2023)
package: {'name': 'libsbc(crates.io)', 'url': '/packages/libsbc.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36440', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36440'}, {'text': 'GHSA-f6g6-54hm-fhxv', 'url': 'https://github.com/advisories/GHSA-f6g6-54hm-fhxv'}]
references: [{'text': 'https://github.com/mvertescher/libsbc-rs/issues/4', 'url': 'https://github.com/mvertescher/libsbc-rs/issues/4'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.5
description: Affected versions of this crate implementsSendforDecoder<R>for anyR: Read. This allowsDecoder<R>to containR: !Sendand carry (move) it to another thread. This can result in undefined behavior such as memory corruption from data race onR, or droppingR = MutexGuard<_>from a thread that didn't lock the mutex. The flaw was corrected in commit a34d6e1 by adding trait boundR: Sendto theSendimpl forDecoder<R>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Futurelacks bounds on Send and Sync.
reported: December  8, 2020
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'tiny_future(crates.io)', 'url': '/packages/tiny_future.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36438', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36438'}, {'text': 'GHSA-fg42-vwxx-xx5j', 'url': 'https://github.com/advisories/GHSA-fg42-vwxx-xx5j'}, {'text': 'GHSA-m296-j53x-xv95', 'url': 'https://github.com/advisories/GHSA-m296-j53x-xv95'}]
references: [{'text': 'https://github.com/KizzyCode/tiny_future/issues/1', 'url': 'https://github.com/KizzyCode/tiny_future/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
description: tiny_futurecontains a light-weight implementation ofFutures. TheFuturetype it has lacked bound on itsSendandSynctraits. This allows for a bug where non-thread safe types such asCellcan be used inFutures and cause data races in concurrent programs. The flaw was corrected in commitc791919by adding trait bounds toFuture'sSendandSync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: PinSlaband Unordered<T, S> need bounds on their Send/Sync traits
reported: November 15, 2020
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'unicycle(crates.io)', 'url': '/packages/unicycle.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36436', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36436'}, {'text': 'GHSA-686f-ch3r-xwmh', 'url': 'https://github.com/advisories/GHSA-686f-ch3r-xwmh'}]
references: [{'text': 'https://github.com/udoprog/unicycle/issues/8', 'url': 'https://github.com/udoprog/unicycle/issues/8'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.7.1
description: Affected versions of this crate unconditionally implementedSend&Syncfor typesPinSlab<T>&Unordered<T, S>. This allows sending non-Send types to other threads and concurrently accessing non-Sync types from multiple threads. This can result in a data race & memory corruption when types that provide internal mutability without synchronization are contained withinPinSlab<T>orUnordered<T, S>and accessed concurrently from multiple threads. The flaw was corrected in commits 92f40b4 & 6a6c367 by adding trait boundT: SendtoSendimpls forPinSlab<T>&Unordered<T, S>and addingT: SynctoSyncimpls forPinSlab<T>&Unordered<T, S>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: QueueSender/QueueReceiver: Send/Sync impls needT: Send
reported: November 24, 2020
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'conqueue(crates.io)', 'url': '/packages/conqueue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36437', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36437'}, {'text': 'GHSA-368f-29c3-4f2r', 'url': 'https://github.com/advisories/GHSA-368f-29c3-4f2r'}]
references: [{'text': 'https://github.com/longshorej/conqueue/issues/9', 'url': 'https://github.com/longshorej/conqueue/issues/9'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
description: Affected versions of this crate unconditionally implementedSend/SyncforQueueSender<T>,
allowing to send non-SendTto other threads by invoking(&QueueSender<T>).send(). This fails to prevent users from creating data races by sending types likeRc<T>orArc<Cell<T>>to other threads, which can lead to memory corruption. The flaw was corrected in commit 1e462c3 by imposingT: Sendto bothSend/Syncimpls forQueueSender<T>/QueueReceiver<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Singleton lacks bounds on Send and Sync.
reported: November 16, 2020
issued: January 22, 2021(last modified: June 13, 2023)
package: {'name': 'ruspiro-singleton(crates.io)', 'url': '/packages/ruspiro-singleton.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36435', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36435'}, {'text': 'GHSA-fqq2-xp7m-xvm8', 'url': 'https://github.com/advisories/GHSA-fqq2-xp7m-xvm8'}]
references: [{'text': 'https://github.com/RusPiRo/ruspiro-singleton/issues/10', 'url': 'https://github.com/RusPiRo/ruspiro-singleton/issues/10'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.1
description: Singleton<T>is meant to be a static object that can be initialized lazily. In
order to satisfy the requirement thatstaticitems must implementSync,Singletonimplemented bothSyncandSendunconditionally. This allows for a bug where non-Synctypes such asCellcan be used in
singletons and cause data races in concurrent programs. The flaw was corrected in commitb0d2bd20eby adding trait bounds, requiring
the contaiend type to implementSync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: LateStatic has incorrect Sync bound
reported: November 10, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'late-static(crates.io)', 'url': '/packages/late-static.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36209', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36209'}, {'text': 'GHSA-wr55-mf5c-hhwm', 'url': 'https://github.com/advisories/GHSA-wr55-mf5c-hhwm'}]
references: [{'text': 'https://github.com/Richard-W/late-static/issues/1', 'url': 'https://github.com/Richard-W/late-static/issues/1'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
description: Affected versions of this crate implementedSyncforLateStaticwithT: Send, so that it is possible to create a data race to a typeT: Send + !Sync(e.g.Cell<T>). This can result in a memory corruption or other kinds of undefined behavior. The flaw was corrected in commit 11f396c by replacing theT: Sendbound toT: Syncbound in theSyncimpl forLateStatic<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: panic safety issue inimpl TransformContent<S, D> for [S; (2|3|4)]
reported: January 10, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'basic_dsp_matrix(crates.io)', 'url': '/packages/basic_dsp_matrix.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25906', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25906'}, {'text': 'GHSA-fjr6-hm39-4cf9', 'url': 'https://github.com/advisories/GHSA-fjr6-hm39-4cf9'}]
references: [{'text': 'https://github.com/liebharc/basic_dsp/issues/47', 'url': 'https://github.com/liebharc/basic_dsp/issues/47'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.9.2
description: Affected versions of this crate did not guard against double drop while temporarily duplicating objects' ownership usingptr::read(). Upon panic in a user-provided functionconversion, objects that are copied byptr::read()are dropped twice, leading to memory corruption. The flaw was corrected in v0.9.2 by usingManuallyDrop<T>to enclose objects that are to be temporarily duplicated. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: EventList's Fromconversions can double drop on panic.
reported: January  4, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'fil-ocl(crates.io)', 'url': '/packages/fil-ocl.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-25908', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25908'}, {'text': 'GHSA-x3v2-fgr6-3wmm', 'url': 'https://github.com/advisories/GHSA-x3v2-fgr6-3wmm'}]
references: [{'text': 'https://github.com/cogciprocate/ocl/issues/194', 'url': 'https://github.com/cogciprocate/ocl/issues/194'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
unaffected: <0.12.0
description: Affected versions of this crate read from a container usingptr::readinFrom<EventList>, and then call a user specifiedInto<Event>function. This issue can result in a double-free if the user provided function panics. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: conquer-once's OnceCell lacks Send bound for its Sync trait.
reported: December 22, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'conquer-once(crates.io)', 'url': '/packages/conquer-once.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36208', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36208'}, {'text': 'GHSA-3jc5-5hc5-33gj', 'url': 'https://github.com/advisories/GHSA-3jc5-5hc5-33gj'}]
references: [{'text': 'https://github.com/oliver-giersch/conquer-once/issues/3', 'url': 'https://github.com/oliver-giersch/conquer-once/issues/3'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.2
description: Affected versions ofconquer-onceimplementsSyncfor itsOnceCelltype
without restricting it toSendable types. This allows non-SendbutSynctypes such asMutexGuardto be sent across
threads leading to undefined behavior and memory corruption in concurrent
programs. The issue was fixed by adding aSendconstraint toOnceCell. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Update unsound DrainFilter and RString::retain
reported: December 21, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'abi_stable(crates.io)', 'url': '/packages/abi_stable.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36212', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36212'}, {'text': 'CVE-2020-36213', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36213'}, {'text': 'GHSA-vq23-5h4f-vwpv', 'url': 'https://github.com/advisories/GHSA-vq23-5h4f-vwpv'}, {'text': 'GHSA-wqxc-qrq4-w5v4', 'url': 'https://github.com/advisories/GHSA-wqxc-qrq4-w5v4'}]
references: [{'text': 'https://github.com/rodrimati1992/abi_stable_crates/issues/44', 'url': 'https://github.com/rodrimati1992/abi_stable_crates/issues/44'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.9.1
description: Affected versions of this crate contained code from the Rust standard library that contained soundness bugs rust-lang/rust#60977 (double drop) & rust-lang/rust#78498 (create invalid utf-8 string). The flaw was corrected in v0.9.1 by making a similar fix to the one made in the Rust standard library. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: impl Randomon arrays can lead to dropping uninitialized memory
reported: December 31, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'autorand(crates.io)', 'url': '/packages/autorand.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36210', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36210'}, {'text': 'GHSA-cgmg-2v6m-fjg7', 'url': 'https://github.com/advisories/GHSA-cgmg-2v6m-fjg7'}]
references: [{'text': 'https://github.com/mersinvald/autorand-rs/issues/5', 'url': 'https://github.com/mersinvald/autorand-rs/issues/5'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.3
description: Affected versions of this crate had a panic safety issue to drop partially uninitialized array ofTupon panic in a user provided functionT::random(). Dropping uninitializedTcan potentially cause memory corruption or undefined behavior. The flaw was corrected in commit 565d508 by usingMaybeUninit<T>to avoid possible dropping of uninitialized memory upon panic. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: hashconsing's HConsed lacks Send/Sync bound for its Send/Sync trait.
reported: November 10, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'hashconsing(crates.io)', 'url': '/packages/hashconsing.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36215', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36215'}, {'text': 'GHSA-rw2c-c256-3r53', 'url': 'https://github.com/advisories/GHSA-rw2c-c256-3r53'}]
references: [{'text': 'https://github.com/AdrienChampion/hashconsing/issues/1', 'url': 'https://github.com/AdrienChampion/hashconsing/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.1.0
description: Affected versions ofhashconsingimplementsSend/Syncfor itsHConsedtype without restricting it toSendable types andSyncable types. This allows non-Synctypes such asCellto be shared across threads leading to undefined behavior and memory corruption in concurrent programs. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ImageChunkMut needs bounds on its Send and Sync traits
reported: December  8, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'gfwx(crates.io)', 'url': '/packages/gfwx.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36211', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36211'}, {'text': 'GHSA-xp6v-qx65-4pp7', 'url': 'https://github.com/advisories/GHSA-xp6v-qx65-4pp7'}]
references: [{'text': 'https://github.com/Devolutions/gfwx-rs/issues/7', 'url': 'https://github.com/Devolutions/gfwx-rs/issues/7'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.0
description: In the affected versions of this crate,ImageChunkMut<'_, T>unconditionally implementsSendandSync, allowing to create data races. This can result in a memory corruption or undefined behavior when non thread-safe types are moved and referenced across thread boundaries. The flaw was corrected in commit e7fb2f5 by addingT: Sendbound to theSendimpl and addingT: Syncbound to theSyncimpl. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Aoveclacks bound on its Send and Sync traits allowing data races
reported: December 10, 2020
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'aovec(crates.io)', 'url': '/packages/aovec.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36207', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36207'}, {'text': 'GHSA-g489-xrw3-3v8w', 'url': 'https://github.com/advisories/GHSA-g489-xrw3-3v8w'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: aovec::Aovec<T>is a vector type that implementsSendandSyncfor all
typesT. This allows non-Send types such asRcand non-Sync types such asCellto
be used across thread boundaries which can trigger undefined behavior and
memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Exposes internally used raw pointer
reported: January  1, 2021
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'cache(crates.io)', 'url': '/packages/cache.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-25903', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25903'}, {'text': 'GHSA-gh87-6jr3-8q47', 'url': 'https://github.com/advisories/GHSA-gh87-6jr3-8q47'}]
references: [{'text': 'https://github.com/krl/cache/issues/2', 'url': 'https://github.com/krl/cache/issues/2'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate dereference a raw pointer that can be modified
without usingunsafecode. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Frame::copy_from_raw_partscan lead to segfault withoutunsafe
reported: January  7, 2021
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'av-data(crates.io)', 'url': '/packages/av-data.html'}
type: Vulnerability
categories: ['memory-exposure', 'privilege-escalation']
aliases: [{'text': 'CVE-2021-25904', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25904'}, {'text': 'GHSA-352p-rhvq-7g78', 'url': 'https://github.com/advisories/GHSA-352p-rhvq-7g78'}]
references: [{'text': 'https://github.com/rust-av/rust-av/issues/136', 'url': 'https://github.com/rust-av/rust-av/issues/136'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.0
description: fn Frame::copy_from_raw_parts()is a safe API that can take a
raw pointer and dereference it. It is possible to read arbitrary memory address
with an arbitrarily fed pointer. This allows the safe API to access & read
arbitrary address in memory. Feeding an invalid memory address pointer to
the API may also cause the program to segfault. The flaw was corrected in https://github.com/rust-av/rust-av/pull/137,
by removing the APIfn Frame::copy_from_raw_parts(). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Double drop upon panic in 'fn map_array()'
reported: January 10, 2021
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'glsl-layout(crates.io)', 'url': '/packages/glsl-layout.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25902', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25902'}, {'text': 'GHSA-cx4j-fxr7-jxg8', 'url': 'https://github.com/advisories/GHSA-cx4j-fxr7-jxg8'}]
references: [{'text': 'https://github.com/rustgd/glsl-layout/pull/10', 'url': 'https://github.com/rustgd/glsl-layout/pull/10'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.0
description: Affected versions of this crate did not guard against panic within the user-provided functionf(2nd parameter offn map_array), and thus panic withinfcauses double drop of a single object. The flaw was corrected in the 0.4.0 release by wrapping the object vulnerable
to a double drop withinManuallyDrop<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: UsbContext trait did not require implementers to be Send and Sync.
reported: December 18, 2020
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'rusb(crates.io)', 'url': '/packages/rusb.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36206', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36206'}, {'text': 'GHSA-9mxw-4856-9cm5', 'url': 'https://github.com/advisories/GHSA-9mxw-4856-9cm5'}]
references: [{'text': 'https://github.com/a1ien/rusb/issues/44', 'url': 'https://github.com/a1ien/rusb/issues/44'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.7.0
description: Affected versions ofrusbdid not requireUsbContextto implementSendandSync. However, throughDeviceandDeviceHandleit is possible to useUsbContexts across threads. This issue allows non-thread safeUsbContexttypes to be used concurrently
leading to data races and memory corruption. The issue was fixed by addingSendandSyncbounds toUsbContext. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Dangling reference inaccess::Mapwith Constant
reported: December 10, 2020
issued: December 11, 2020(last modified: June 13, 2023)
package: {'name': 'arc-swap(crates.io)', 'url': '/packages/arc-swap.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-35711', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35711'}, {'text': 'GHSA-9pqx-g3jh-qpqq', 'url': 'https://github.com/advisories/GHSA-9pqx-g3jh-qpqq'}]
references: [{'text': 'https://github.com/vorner/arc-swap/issues/45', 'url': 'https://github.com/vorner/arc-swap/issues/45'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.8, <1.0.0-0>=1.1.0
unaffected: <0.4.2
affected functions: Version
arc_swap::access::mapguard::deref: <1.1.0
description: Using thearc_swap::access::Mapwith theConstanttest helper (or with
user-provided implementation of theAccesstrait) could sometimes lead to the
map returning dangling references. Replaced by implementation withoutunsafe, at the cost of addedClonebound
on the closure and small penalty on performance. Advisory available underCC0-1.0license.
affected_functions: arc_swap;;access;;mapguard;;deref
version_of_Affected: <1.1.0

---
classification: HIGH
subtitle: Unexpected panic in multihashfrom_sliceparsing code
reported: November  8, 2020
issued: November  9, 2020(last modified: June 13, 2023)
package: {'name': 'multihash(crates.io)', 'url': '/packages/multihash.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35909', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35909'}, {'text': 'GHSA-h7qh-3h6f-w79p', 'url': 'https://github.com/advisories/GHSA-h7qh-3h6f-w79p'}]
references: [{'text': 'https://github.com/multiformats/rust-multihash/pull/72', 'url': 'https://github.com/multiformats/rust-multihash/pull/72'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.11.3
affected functions: Version
multihash::digests::multihashgeneric::from_bytes: <0.11.3
multihash::digests::multihashrefgeneric::from_slice: <0.11.3
description: In versions prior 0.11.3 it's possible to makefrom_slicepanic by feeding it certain malformed input.
It's never documented thatfrom_slice(andfrom_byteswhich wraps it) can panic, and its' return type (Result<Self, DecodeError>) suggests otherwise. In practice,from_slice/from_bytesis frequently used in networking code (for examplein rust-libp2p) and is being called with unsanitized data from untrusted sources.
This can allow attackers to cause DoS by causing an unexpectedpanicin the network client's code. Advisory available underCC0-1.0license.
affected_functions: multihash;;digests;;multihashgeneric;;from_bytes
version_of_Affected: <0.11.3

---
classification: HIGH
subtitle: futures_task::waker may cause a use-after-free if used on a type that isn't 'static
reported: September  4, 2020
issued: October 31, 2020(last modified: June 13, 2023)
package: {'name': 'futures-task(crates.io)', 'url': '/packages/futures-task.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-35906', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35906'}, {'text': 'GHSA-r93v-9p5q-vhpf', 'url': 'https://github.com/advisories/GHSA-r93v-9p5q-vhpf'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/pull/2206', 'url': 'https://github.com/rust-lang/futures-rs/pull/2206'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.6
unaffected: <=0.2.1
affected functions: Version
futures_task::waker: >=0.3.0
description: Affected versions of the crate did not properly implement a'staticlifetime bound on thewakerfunction.
This resulted in a use-after-free ifWaker::wake()is called after original data had been dropped. The flaw was corrected by adding'staticlifetime bound to the datawakertakes. Advisory available underCC0-1.0license.
affected_functions: futures_task;;waker
version_of_Affected: >=0.3.0

---
classification: HIGH
subtitle: Obstack generates unaligned references
reported: September  3, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'obstack(crates.io)', 'url': '/packages/obstack.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35894', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35894'}, {'text': 'GHSA-85j6-f8j6-q26x', 'url': 'https://github.com/advisories/GHSA-85j6-f8j6-q26x'}]
references: [{'text': 'https://github.com/petertodd/rust-obstack/issues/4', 'url': 'https://github.com/petertodd/rust-obstack/issues/4'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.1.4
description: Obstack generates unaligned references for types that require a large alignment. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: LocalRequest::clonecreates multiple mutable references to the same object
reported: May 27, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rocket(crates.io)', 'url': '/packages/rocket.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35882', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35882'}, {'text': 'GHSA-8q2v-67v7-6vc6', 'url': 'https://github.com/advisories/GHSA-8q2v-67v7-6vc6'}]
references: [{'text': 'https://github.com/SergioBenitez/Rocket/issues/1312', 'url': 'https://github.com/SergioBenitez/Rocket/issues/1312'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.5
unaffected: <0.4.0
affected functions: Version
rocket::local::localrequest::clone: <0.4.5, >=0.4.0
description: The affected version ofrocketcontains aClonetrait implementation ofLocalRequestthat reuses the pointer to innerRequestobject.
This causes data race in rare combinations of APIs if the original and the
cloned objects are modified at the same time. Advisory available underCC0-1.0license.
affected_functions: rocket;;local;;localrequest;;clone
version_of_Affected: <0.4.5, >=0.4.0

---
classification: HIGH
subtitle: Out of Memory in stream::read_raw_bytes_into()
reported: June  8, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'protobuf(crates.io)', 'url': '/packages/protobuf.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2019-15544', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15544'}, {'text': 'GHSA-mh6h-f25p-98f8', 'url': 'https://github.com/advisories/GHSA-mh6h-f25p-98f8'}]
references: [{'text': 'https://github.com/stepancheg/rust-protobuf/issues/411', 'url': 'https://github.com/stepancheg/rust-protobuf/issues/411'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: ^1.7.5>=2.6.0
affected functions: Version
protobuf::stream::read_raw_bytes_into: <2.6.0
description: Affected versions of this crate called Vec::reserve() on user-supplied input. This allows an attacker to cause an Out of Memory condition while calling the
vulnerable method on untrusted data. Advisory available underCC0-1.0license.
affected_functions: protobuf;;stream;;read_raw_bytes_into
version_of_Affected: <2.6.0

---
classification: HIGH
subtitle: Uncontrolled recursion leads to abort in HTML serialization
reported: April 27, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ammonia(crates.io)', 'url': '/packages/ammonia.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15542', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15542'}, {'text': 'GHSA-5hp8-35wj-m525', 'url': 'https://github.com/advisories/GHSA-5hp8-35wj-m525'}]
references: [{'text': 'https://github.com/rust-ammonia/ammonia/blob/master/CHANGELOG.md#210', 'url': 'https://github.com/rust-ammonia/ammonia/blob/master/CHANGELOG.md#210'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.1.0
affected functions: Version
ammonia::document::to_string: <2.1.0
ammonia::document::write_to: <2.1.0
ammonia::clean: <2.1.0
description: Affected versions of this crate did use recursion for serialization of HTML
DOM trees. This allows an attacker to cause abort due to stack overflow by providing
a pathologically nested input. The flaw was corrected by serializing the DOM tree iteratively instead. Advisory available underCC0-1.0license.
affected_functions: ammonia;;document;;to_string
version_of_Affected: <2.1.0

---
classification: HIGH
subtitle: tokio-rustls reads may cause excessive memory usage
reported: May 19, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'tokio-rustls(crates.io)', 'url': '/packages/tokio-rustls.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35875', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35875'}, {'text': 'GHSA-2jfv-g3fh-xq3v', 'url': 'https://github.com/advisories/GHSA-2jfv-g3fh-xq3v'}]
references: [{'text': 'https://github.com/tokio-rs/tls/pull/14', 'url': 'https://github.com/tokio-rs/tls/pull/14'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.12.3, <0.13.0>=0.13.1
unaffected: <0.12
description: tokio-rustlsdoes not callprocess_new_packetsimmediately afterread,
so the expected termination conditionwants_readalways returns true.
As long as new incoming data arrives faster than it is processed
and the reader does not return pending, data will be buffered. This may cause DoS. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Cloned interners may read already dropped strings
reported: August 24, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'string-interner(crates.io)', 'url': '/packages/string-interner.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16882', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16882'}, {'text': 'GHSA-49fq-pw77-6qxj', 'url': 'https://github.com/advisories/GHSA-49fq-pw77-6qxj'}]
references: [{'text': 'https://github.com/Robbepop/string-interner/issues/9', 'url': 'https://github.com/Robbepop/string-interner/issues/9'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: ^0.6.4>=0.7.1
description: Affected versions of this crate did not clone contained strings when an interner is cloned.
Interners have raw pointers to the contained strings, and they keep pointing the strings which the old interner owns, after the interner is cloned.
If a new cloned interner is alive and the old original interner is dead, the new interner has dangling pointers to the old interner's storage, which is already dropped. This allows an attacker to read the already freed memory.
The dangling pointers are used by the interners to check a string is already interned.
An attacker can do brute force attack to get the data pointed by the dangling pointer. The flaw was corrected byhttps://github.com/Robbepop/string-interner/pull/10.
This patch implementsClonemanually to the interner type, so that the internal raw pointers always point the strings owned by the same interner. PR #10 was also backported to the 0.6 release line inhttps://github.com/Robbepop/string-interner/pull/14and was released in 0.6.4. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Processing of maliciously crafted length fields causes memory allocation SIGABRTs
reported: June 13, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'asn1_der(crates.io)', 'url': '/packages/asn1_der.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15549', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15549'}, {'text': 'GHSA-v5r6-6r3c-wqxc', 'url': 'https://github.com/advisories/GHSA-v5r6-6r3c-wqxc'}]
references: [{'text': 'https://github.com/KizzyCode/asn1_der/issues/1', 'url': 'https://github.com/KizzyCode/asn1_der/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.2
description: Affected versions of this crate tried to preallocate a vector for an arbitrary amount of bytes announced by the ASN.1-DER length field without further checks. This allows an attacker to trigger a SIGABRT by creating length fields that announce more bytes than the allocator can provide. The flaw was corrected by not preallocating memory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in Scalar::check_overflow allows side-channel timing attack
reported: October 14, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'libsecp256k1(crates.io)', 'url': '/packages/libsecp256k1.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2019-25003', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25003'}, {'text': 'GHSA-hrjm-c879-pp86', 'url': 'https://github.com/advisories/GHSA-hrjm-c879-pp86'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.3.1
affected functions: Version
libsecp256k1::scalar::check_overflow: <0.3.1
description: Versions oflibsecp256k1prior to0.3.1did not execute
Scalar::check_overflow in constant time. This allows an attacker to potentially leak information via a timing attack. The flaw was corrected by modifying Scalar::check_overflow to execute in
constant time. Advisory available underCC0-1.0license.
affected_functions: libsecp256k1;;scalar;;check_overflow
version_of_Affected: <0.3.1

---
classification: HIGH
subtitle: Integer Overflow in HeaderMap::reserve() can cause Denial of Service
reported: November 16, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'http(crates.io)', 'url': '/packages/http.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2019-25008', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25008'}, {'text': 'CVE-2020-25574', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25574'}, {'text': 'GHSA-x7vr-c387-8w57', 'url': 'https://github.com/advisories/GHSA-x7vr-c387-8w57'}, {'text': 'GHSA-xvc9-xwgj-4cq9', 'url': 'https://github.com/advisories/GHSA-xvc9-xwgj-4cq9'}]
references: [{'text': 'https://github.com/hyperium/http/issues/352', 'url': 'https://github.com/hyperium/http/issues/352'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.1.20
affected functions: Version
http::header::headermap::reserve: <0.1.20
description: HeaderMap::reserve()usedusize::next_power_of_two()to calculate the increased capacity.
However,next_power_of_two()silently overflows to 0 if given a sufficiently large number
in release mode. If the map was not empty when the overflow happens,
the library will invokeself.grow(0)and start infinite probing.
This allows an attacker who controls the argument toreserve()to cause a potential denial of service (DoS). The flaw was corrected in 0.1.20 release ofhttpcrate. Advisory available underCC0-1.0license.
affected_functions: http;;header;;headermap;;reserve
version_of_Affected: <0.1.20

---
classification: HIGH
subtitle: Memory safety issues incompact::Vec
reported: September  3, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ordnung(crates.io)', 'url': '/packages/ordnung.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35890', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35890'}, {'text': 'CVE-2020-35891', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35891'}, {'text': 'GHSA-4wj3-p7hj-cvx8', 'url': 'https://github.com/advisories/GHSA-4wj3-p7hj-cvx8'}, {'text': 'GHSA-qrwc-jxf5-g8x6', 'url': 'https://github.com/advisories/GHSA-qrwc-jxf5-g8x6'}]
references: [{'text': 'https://github.com/maciejhirsz/ordnung/issues/8', 'url': 'https://github.com/maciejhirsz/ordnung/issues/8'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: compact::Veccontains multiple memory safety issues. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: fix unsound APIs that could lead to UB
reported: September  6, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'generator(crates.io)', 'url': '/packages/generator.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16144', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16144'}, {'text': 'GHSA-6c65-xcf5-299x', 'url': 'https://github.com/advisories/GHSA-6c65-xcf5-299x'}]
references: [{'text': 'https://github.com/Xudong-Huang/generator-rs/issues/9', 'url': 'https://github.com/Xudong-Huang/generator-rs/issues/9'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.18
description: Affected versions of this crate API could use uninitialized memory with some APIs in special
cases, like use the API in none generator context. This could lead to UB.
The flaw was corrected byhttps://github.com/Xudong-Huang/generator-rs/issues/9https://github.com/Xudong-Huang/generator-rs/issues/11https://github.com/Xudong-Huang/generator-rs/issues/13https://github.com/Xudong-Huang/generator-rs/issues/14This patch fixes all those issues above. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in offset_of and span_of causes SIGILL, drops uninitialized memory of arbitrary type on panic in client code
reported: July 16, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'memoffset(crates.io)', 'url': '/packages/memoffset.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2019-15553', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15553'}, {'text': 'GHSA-rh89-x75f-rh3c', 'url': 'https://github.com/advisories/GHSA-rh89-x75f-rh3c'}]
references: [{'text': 'https://github.com/Gilnaa/memoffset/issues/9#issuecomment-505461490', 'url': 'https://github.com/Gilnaa/memoffset/issues/9#issuecomment-505461490'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.5.0
description: Affected versions of this crate caused traps and/or memory unsafety by zero-initializing references.
They also could lead to uninitialized memory being dropped if the field for which the offset is requested was behind a deref coercion, and that deref coercion caused a panic. The flaw was corrected by usingMaybeUninit. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw inreallocallows reading unknown memory
reported: March 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'bumpalo(crates.io)', 'url': '/packages/bumpalo.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-35861', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35861'}, {'text': 'GHSA-vqx7-pw4r-29rr', 'url': 'https://github.com/advisories/GHSA-vqx7-pw4r-29rr'}]
references: [{'text': 'https://github.com/fitzgen/bumpalo/issues/69', 'url': 'https://github.com/fitzgen/bumpalo/issues/69'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=3.2.1
unaffected: <3.0.0
description: Whenreallocing, if we allocate new space, we need to copy the old
allocation's bytes into the new space. There areold_sizenumber of bytes in
the old allocation, but we were accidentally copyingnew_sizenumber of bytes,
which could lead to copying bytes into the realloc'd space from past the chunk
that we're bump allocating out of, from unknown memory. If an attacker can causereallocs, and can read therealoced data back,
this could allow them to read things from other regions of memory that they
shouldn't be able to. For example, if some crypto keys happened to live in
memory right after a chunk we were bump allocating out of, this could allow
the attacker to read the crypto keys. Beyond just fixing the bug and adding a regression test, I've also taken two
additional steps: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: read_scalarandread_scalar_atallow transmuting values withoutunsafeblocks
reported: April 11, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'flatbuffers(crates.io)', 'url': '/packages/flatbuffers.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35864', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35864'}, {'text': 'GHSA-c9h5-hf8r-m97x', 'url': 'https://github.com/advisories/GHSA-c9h5-hf8r-m97x'}]
references: [{'text': 'https://github.com/google/flatbuffers/issues/5825', 'url': 'https://github.com/google/flatbuffers/issues/5825'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.0
unaffected: <0.4.0
affected functions: Version
flatbuffers::read_scalar: >=0.4.0
flatbuffers::read_scalar_at: >=0.4.0
description: Theread_scalarandread_scalar_atfunctions are unsound
because they allow transmuting values withoutunsafeblocks. The following example shows how to create a dangling reference: Advisory available underCC0-1.0license.
affected_functions: flatbuffers;;read_scalar
version_of_Affected: >=0.4.0

---
classification: HIGH
subtitle: Format string vulnerabilities inpancurses
reported: June 15, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'pancurses(crates.io)', 'url': '/packages/pancurses.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2019-15546', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15546'}, {'text': 'GHSA-m57c-4vvx-gjgq', 'url': 'https://github.com/advisories/GHSA-m57c-4vvx-gjgq'}]
references: [{'text': 'https://github.com/RustSec/advisory-db/issues/106', 'url': 'https://github.com/RustSec/advisory-db/issues/106'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: no patched versions
affected functions: Version
pancurses::mvprintw: >=0
pancurses::printw: >=0
description: pancurses::mvprintwandpancurses::printwpasses a pointer from a rust&strto C,
allowing hostile input to execute a format string attack, which trivially allows writing
arbitrary data to stack memory. Advisory available underCC0-1.0license.
affected_functions: pancurses;;mvprintw
version_of_Affected: >=0

---
classification: HIGH
subtitle: Wrong memory orderings in RwLock potentially violates mutual exclusion
reported: August 27, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'spin(crates.io)', 'url': '/packages/spin.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16137', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16137'}, {'text': 'GHSA-hv7x-f3pv-gpwr', 'url': 'https://github.com/advisories/GHSA-hv7x-f3pv-gpwr'}]
references: [{'text': 'https://github.com/mvdnes/spin-rs/issues/65', 'url': 'https://github.com/mvdnes/spin-rs/issues/65'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.5.2
affected functions: Version
spin::rwlock::new: <0.5.2
description: Wrong memory orderings inside the RwLock implementation allow for two writers to acquire the lock at the same time. The drop implementation used Ordering::Relaxed, which allows the compiler or CPU to reorder a mutable access on the locked data after the lock has been yielded. Only users of the RwLock implementation are affected. Users of Once (including users of lazy_static with thespin_no_stdfeature enabled) are NOT affected. On strongly ordered CPU architectures like x86, the only real way that this would lead to a memory corruption is if the compiler reorders an access after the lock is yielded, which is possible but in practice unlikely. It is a more serious issue on weakly ordered architectures such as ARM which, except in the presence of certain instructions, allow the hardware to decide which accesses are seen at what times. Therefore on an ARM system it is likely that using the wrong memory ordering would result in a memory corruption, even if the compiler itself doesn't reorder the memory accesses in a buggy way. The flaw was corrected by https://github.com/mvdnes/spin-rs/pull/66. Advisory available underCC0-1.0license.
affected_functions: spin;;rwlock;;new
version_of_Affected: <0.5.2

---
classification: HIGH
subtitle: Insufficient size checks in outgoing buffer in ws allows remote attacker to run the process out of memory
reported: September 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ws(crates.io)', 'url': '/packages/ws.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35896', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35896'}, {'text': 'GHSA-rh7x-ppxx-p34c', 'url': 'https://github.com/advisories/GHSA-rh7x-ppxx-p34c'}]
references: [{'text': 'https://github.com/housleyjk/ws-rs/issues/291', 'url': 'https://github.com/housleyjk/ws-rs/issues/291'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate did not properly check and cap the growth of the outgoing buffer. This allows a remote attacker to take down the process by growing the buffer of their (single) connection until the process runs out of memory it can allocate and is killed. The flaw was corrected in theparity-wsfork(>=0.10.0) bydisconnecting a client when the buffer runs full. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ChaCha20 counter overflow can expose repetitions in the keystream
reported: October 22, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'chacha20(crates.io)', 'url': '/packages/chacha20.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2019-25005', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25005'}, {'text': 'GHSA-j2r6-2m5c-vgh5', 'url': 'https://github.com/advisories/GHSA-j2r6-2m5c-vgh5'}]
references: [{'text': 'https://github.com/RustCrypto/stream-ciphers/pull/64', 'url': 'https://github.com/RustCrypto/stream-ciphers/pull/64'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.2.3
description: The ChaCha20 stream cipher can produce a maximum of 2^32 blocks (~256GB)
before the 32-bit counter overflows. Releases of thechacha20crate prior
to v0.2.3 allow generating keystreams larger than this, including seeking
past the limit. When this occurs, the keystream is duplicated, with failure
modes similar to nonce reuse (i.e. exposure of the XOR of two plaintexts). The v0.2.3 release now panics in this event, rather than exposing the
duplicated keystream. Note this is a "hot fix" solution to the problem
and future releases will pursue returning an error in this case. Users of thechacha20poly1305crate are unaffected by this as this crate
properly asserts the length of the plaintext is less than the maximum allowed
(P_MAXas described in RFC 8439 Section 2.8). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Stack overflow when parsing malicious DNS packet
reported: October  9, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'trust-dns-proto(crates.io)', 'url': '/packages/trust-dns-proto.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20994', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20994'}, {'text': 'GHSA-369h-pjr2-6wrh', 'url': 'https://github.com/advisories/GHSA-369h-pjr2-6wrh'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.3
description: There's a stack overflow leading to a crash when Trust-DNS's parses a
malicious DNS packet. Affected versions of this crate did not properly handle parsing of DNS message
compression (RFC1035 section 4.1.4). The parser could be tricked into infinite
loop when a compression offset pointed back to the same domain name to be
parsed. This allows an attacker to craft a malicious DNS packet which when consumed
with Trust-DNS could cause stack overflow and crash the affected software. The flaw was corrected by trust-dns-proto 0.4.3 and upcoming 0.5.0 release. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SSL/TLS MitM vulnerability due to insecure defaults
reported: November  5, 2016
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'openssl(crates.io)', 'url': '/packages/openssl.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2016-10931', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10931'}, {'text': 'GHSA-34p9-f4q3-c4r7', 'url': 'https://github.com/advisories/GHSA-34p9-f4q3-c4r7'}]
references: [{'text': 'https://github.com/sfackler/rust-openssl/releases/tag/v0.9.0', 'url': 'https://github.com/sfackler/rust-openssl/releases/tag/v0.9.0'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.9.0
description: All versions of rust-openssl prior to 0.9.0 contained numerous insecure defaults
including off-by-default certificate verification and no API to perform hostname
verification. Unless configured correctly by a developer, these defaults could allow an attacker
to perform man-in-the-middle attacks. The problem was addressed in newer versions by enabling certificate verification
by default and exposing APIs to perform hostname verification. Use theSslConnectorandSslAcceptortypes to take advantage of these new features
(as opposed to the lower-levelSslContexttype). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in string parsing can lead to crashes due to invalid memory access.
reported: June 24, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'simd-json(crates.io)', 'url': '/packages/simd-json.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15550', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15550'}, {'text': 'GHSA-gwfj-pw2x-h6c2', 'url': 'https://github.com/advisories/GHSA-gwfj-pw2x-h6c2'}]
references: [{'text': 'https://github.com/Licenser/simdjson-rs/pull/27', 'url': 'https://github.com/Licenser/simdjson-rs/pull/27'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.1.15
unaffected: <=0.1.13
affected architectures: x86x86_64
description: The affected version of this crate did not guard against accessing memory
beyond the range of its input data. A pointer cast to read the data into
a 256-bit register could lead to a segmentation fault when the end plus
the 32 bytes (256 bit) read would overlap into the next page during string
parsing. This allows an attacker to eventually crash a service. The flaw was corrected by using a padding buffer for the last read from the
input. So that we are we never read over the boundary of the input data. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Panic during initialization of Lazymight trigger undefined behavior
reported: September  1, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'once_cell(crates.io)', 'url': '/packages/once_cell.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16141', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16141'}, {'text': 'GHSA-7j44-fv4x-79g9', 'url': 'https://github.com/advisories/GHSA-7j44-fv4x-79g9'}]
references: [{'text': 'https://github.com/matklad/once_cell/issues/46', 'url': 'https://github.com/matklad/once_cell/issues/46'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0.1
unaffected: <0.2.5
affected functions: Version
once_cell::sync::lazy::deref: <1.0.1, >=0.2.5
once_cell::sync::lazy::force: <1.0.1, >=0.2.5
once_cell::unsync::lazy::deref: <1.0.1, >=0.2.5
once_cell::unsync::lazy::force: <1.0.1, >=0.2.5
description: If during the first dereference of Lazythe initialization function panics,
subsequent dereferences will executestd::hints::unreachable_unchecked. Applications withpanic = "abort"are not affected, as there will be no
subsequent dereferences. Advisory available underCC0-1.0license.
affected_functions: once_cell;;sync;;lazy;;deref
version_of_Affected: <1.0.1, >=0.2.5

---
classification: HIGH
subtitle: Flaw in streaming state reset() functions can create incorrect results.
reported: December 20, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'orion(crates.io)', 'url': '/packages/orion.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2018-20999', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20999'}, {'text': 'GHSA-gffv-5hr2-f9gj', 'url': 'https://github.com/advisories/GHSA-gffv-5hr2-f9gj'}]
references: [{'text': 'https://github.com/brycx/orion/issues/46', 'url': 'https://github.com/brycx/orion/issues/46'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.11.2
description: Affected versions of this crate did not properly reset a streaming state. Resetting a streaming state, without finalising it first, creates incorrect results. The flaw was corrected by not first checking if the state had already been reset, when calling reset(). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Stack overflow when resolving additional records from MX or SRV null targets
reported: January  6, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'trust-dns-server(crates.io)', 'url': '/packages/trust-dns-server.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35857', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35857'}, {'text': 'GHSA-4cww-f7w5-x525', 'url': 'https://github.com/advisories/GHSA-4cww-f7w5-x525'}]
references: [{'text': 'https://github.com/bluejekyll/trust-dns/issues/980', 'url': 'https://github.com/bluejekyll/trust-dns/issues/980'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.18.1
unaffected: <0.16.0
description: There's a stack overflow leading to a crash and potential DOS when processing
additional records for return of MX or SRV record types from the server. This is only possible when a zone is configured with a null target for MX or SRV records, i.e. '.'. Example effected zone record: Prior to 0.16.0 the additional record processing was not supported by trust-dns-server. There
Are no known issues with upgrading from 0.16 or 0.17 to 0.18.1. The remidy should be to upgrade to
0.18.1. If unable to do so, MX, SRV or other record types with a target to the null type, should be avoided. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Failure to properly verify ed25519 signatures makes any signature valid
reported: May 15, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'libp2p-core(crates.io)', 'url': '/packages/libp2p-core.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2019-15545', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15545'}, {'text': 'GHSA-4q4x-67hx-5mpg', 'url': 'https://github.com/advisories/GHSA-4q4x-67hx-5mpg'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: ^0.7.1>=0.8.1
unaffected: <0.3
description: Affected versions of this crate did not properly verify ed25519 signatures.
Any signature with a correct length was considered valid. This allows an attacker to impersonate any node identity. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Chunk API does not respect align requirement
reported: August 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'chunky(crates.io)', 'url': '/packages/chunky.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-36433', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36433'}, {'text': 'GHSA-qg24-8xj4-gj2h', 'url': 'https://github.com/advisories/GHSA-qg24-8xj4-gj2h'}]
references: [{'text': 'https://github.com/aeplay/chunky/issues/2', 'url': 'https://github.com/aeplay/chunky/issues/2'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: no patched versions
description: Chunk API does not respect the align requirement of types. Unaligned reference can be created with the API, which is an undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use-after-free in BodyStream due to lack of pinning
reported: January 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-http(crates.io)', 'url': '/packages/actix-http.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35901', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35901'}, {'text': 'GHSA-v3j6-xf77-8r9c', 'url': 'https://github.com/advisories/GHSA-v3j6-xf77-8r9c'}]
references: [{'text': 'https://github.com/actix/actix-web/issues/1321', 'url': 'https://github.com/actix/actix-web/issues/1321'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.0-alpha.1
description: Affected versions of this crate did not require the buffer wrapped inBodyStreamto be pinned,
but treated it as if it had a fixed location in memory. This may result in a use-after-free. The flaw was corrected by making the traitMessageBodyrequireUnpinand makingpoll_next()function acceptPin<&mut Self>instead of&mut self. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Links in archives can overwrite any existing file
reported: June 29, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'tar(crates.io)', 'url': '/packages/tar.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20990', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20990'}, {'text': 'GHSA-2367-c296-3mp2', 'url': 'https://github.com/advisories/GHSA-2367-c296-3mp2'}]
references: [{'text': 'https://github.com/alexcrichton/tar-rs/pull/156', 'url': 'https://github.com/alexcrichton/tar-rs/pull/156'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.4.16
description: When unpacking a tarball with theunpack_in-family of functions it's intended
that only files within the specified directory are able to be written. Tarballs
with hard links or symlinks, however, can be used to overwrite any file on the
filesystem. Tarballs can contain multiple entries for the same file. A tarball which first
contains an entry for a hard link or symlink pointing to any file on the
filesystem will have the link created, and then afterwards if the same file is
listed in the tarball the hard link will be rewritten and any file can be
rewritten on the filesystem. This has been fixed in https://github.com/alexcrichton/tar-rs/pull/156 and is
published astar0.4.16. Thanks to Max Justicz for discovering this and
emailing about the issue! Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: MisbehavingHandleLikeimplementation can lead to memory safety violation
reported: August 31, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'crayon(crates.io)', 'url': '/packages/crayon.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35889', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35889'}, {'text': 'GHSA-m833-jv95-mfjh', 'url': 'https://github.com/advisories/GHSA-m833-jv95-mfjh'}]
references: [{'text': 'https://github.com/shawnscode/crayon/issues/87', 'url': 'https://github.com/shawnscode/crayon/issues/87'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Unsafe code inObjectPoolhas time-of-check to time-of-use (TOCTOU) bug that
can eventually lead to a memory safety violation.ObjectPoolandHandlePoolimplicitly assumes thatHandleLiketrait methods are pure, i.e., they always
return the same value. However, this assumption is unsound sinceHandleLikeis a safe, public trait that allows a custom implementation. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: An integer underflow could lead to panic
reported: June 21, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'untrusted(crates.io)', 'url': '/packages/untrusted.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20989', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20989'}, {'text': 'GHSA-wq8f-46ww-6c2h', 'url': 'https://github.com/advisories/GHSA-wq8f-46ww-6c2h'}]
references: [{'text': 'https://github.com/briansmith/untrusted/pull/20', 'url': 'https://github.com/briansmith/untrusted/pull/20'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.2
description: A mistake in error handling in untrusted before 0.6.2 could lead to an integer
underflow and panic if a user of the crate didn't properly check for errors
returned by untrusted. Combination of these two programming errors (one in untrusted and another by
user of this crate) could lead to a panic and maybe a denial of service of
affected software. The error in untrusted is fixed in release 0.6.2 released 2018-06-21. It's also
advisable that users of untrusted check for their sources for cases where errors
returned by untrusted are not handled correctly. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Uncontrolled recursion leads to abort in deserialization
reported: September 17, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'yaml-rust(crates.io)', 'url': '/packages/yaml-rust.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20993', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20993'}, {'text': 'GHSA-hv87-47h9-jcvq', 'url': 'https://github.com/advisories/GHSA-hv87-47h9-jcvq'}]
references: [{'text': 'https://github.com/chyh1990/yaml-rust/pull/109', 'url': 'https://github.com/chyh1990/yaml-rust/pull/109'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.1
description: Affected versions of this crate did not prevent deep recursion while
deserializing data structures. This allows an attacker to make a YAML file with deeply nested structures
that causes an abort while deserializing it. The flaw was corrected by checking the recursion depth. Note:clap 2.33is not affected by this because it usesyaml-rustin a way that doesn't trigger the vulnerability. More specifically: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Improper uniqueness verification of signature threshold
reported: July  9, 2020
issued: October  1, 2020(last modified: October 19, 2021)
package: {'name': 'tough(crates.io)', 'url': '/packages/tough.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-15093', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15093'}, {'text': 'GHSA-5q2r-92f9-4m49', 'url': 'https://github.com/advisories/GHSA-5q2r-92f9-4m49'}]
references: [{'text': 'https://github.com/awslabs/tough/security/advisories/GHSA-5q2r-92f9-4m49', 'url': 'https://github.com/awslabs/tough/security/advisories/GHSA-5q2r-92f9-4m49'}]
related: CVE-2020-6174
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N
patched: >=0.7.1
description: The tough library, prior to 0.7.1, does not properly verify the uniqueness of
keys in the signatures provided to meet the threshold of cryptographic
signatures. It allows someone with access to a valid signing key to create
multiple valid signatures in order to circumvent TUF requiring a minimum
threshold of unique keys before the metadata is considered valid. AWS would like to thank Erick Tryzelaar of the Google Fuchsia Team for
reporting this issue. A fix is available in version 0.7.1. CVE-2020-6174 is assigned to the same issue in the TUF reference
implementation. If you have any questions or comments about this advisory, contact AWS Security
at aws-security@amazon.com. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in CBOR deserializer allows stack overflow
reported: October  3, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'serde_cbor(crates.io)', 'url': '/packages/serde_cbor.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2019-25001', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25001'}, {'text': 'GHSA-xr7r-88qv-q7hm', 'url': 'https://github.com/advisories/GHSA-xr7r-88qv-q7hm'}]
references: [{'text': 'https://github.com/pyfisch/cbor/releases/tag/v0.10.2', 'url': 'https://github.com/pyfisch/cbor/releases/tag/v0.10.2'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.10.2
description: Affected versions of this crate did not properly check if semantic tags were nested excessively during deserialization. This allows an attacker to craft small (< 1 kB) CBOR documents that cause a stack overflow. The flaw was corrected by limiting the allowed number of nested tags. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Crash causing Denial of Service attack
reported: April 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2020-1967', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1967'}, {'text': 'GHSA-jq65-29v4-4x35', 'url': 'https://github.com/advisories/GHSA-jq65-29v4-4x35'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20200421.txt', 'url': 'https://www.openssl.org/news/secadv/20200421.txt'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.9
unaffected: <111.6
description: Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3
handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the
"signature_algorithms_cert" TLS extension. The crash occurs if an invalid or unrecognised signature
algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of
Service attack. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Relies on undefined behavior ofchar::from_u32_unchecked
reported: April 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'os_str_bytes(crates.io)', 'url': '/packages/os_str_bytes.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35865', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35865'}, {'text': 'GHSA-q948-x8rf-888m', 'url': 'https://github.com/advisories/GHSA-q948-x8rf-888m'}]
references: [{'text': 'https://github.com/dylni/os_str_bytes/pull/1', 'url': 'https://github.com/dylni/os_str_bytes/pull/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.0
affected oses: windows
description: The Windows implementation of this crate relied on the behavior ofstd::char::from_u32_uncheckedwhen its safety clause is violated.
Even though this worked with Rust versions up to 1.42 (at least),
that behavior could change with any new Rust version, possibly leading
a security issue. The flaw was corrected in version 2.0.0. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use after free in ArcIntern::drop
reported: May 28, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'internment(crates.io)', 'url': '/packages/internment.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35874', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35874'}, {'text': 'GHSA-96w3-p368-4h8c', 'url': 'https://github.com/advisories/GHSA-96w3-p368-4h8c'}]
references: [{'text': 'https://github.com/droundy/internment/issues/11', 'url': 'https://github.com/droundy/internment/issues/11'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
unaffected: <0.3.12
affected functions: Version
internment::arcintern::drop: >=0.3.12
description: ArcIntern::drophas a race condition where it can release memory
which is about to get another user. The new user will get a reference
to freed memory. This was fixed by serializing access to an interned object while it
is being deallocated. Versions prior to 0.3.12 used stronger locking which avoided the problem. Advisory available underCC0-1.0license.
affected_functions: internment;;arcintern;;drop
version_of_Affected: >=0.3.12

---
classification: HIGH
subtitle: Multiple soundness issues in Chunk and InlineArray
reported: September  6, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'sized-chunks(crates.io)', 'url': '/packages/sized-chunks.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-25791', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25791'}, {'text': 'CVE-2020-25792', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25792'}, {'text': 'CVE-2020-25793', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25793'}, {'text': 'CVE-2020-25794', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25794'}, {'text': 'CVE-2020-25795', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25795'}, {'text': 'CVE-2020-25796', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25796'}, {'text': 'GHSA-64gv-qg2v-vxv6', 'url': 'https://github.com/advisories/GHSA-64gv-qg2v-vxv6'}, {'text': 'GHSA-9p9m-9xww-qjcx', 'url': 'https://github.com/advisories/GHSA-9p9m-9xww-qjcx'}, {'text': 'GHSA-fqpx-cq8x-9wp4', 'url': 'https://github.com/advisories/GHSA-fqpx-cq8x-9wp4'}, {'text': 'GHSA-mp6f-p9gp-vpj9', 'url': 'https://github.com/advisories/GHSA-mp6f-p9gp-vpj9'}, {'text': 'GHSA-rfgg-vccr-m46m', 'url': 'https://github.com/advisories/GHSA-rfgg-vccr-m46m'}, {'text': 'GHSA-x54v-qxxr-93qc', 'url': 'https://github.com/advisories/GHSA-x54v-qxxr-93qc'}]
references: [{'text': 'https://github.com/bodil/sized-chunks/issues/11', 'url': 'https://github.com/bodil/sized-chunks/issues/11'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.3
description: Chunk: InlineArray: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Large cookie Max-Age values can cause a denial of service
reported: May  6, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'cookie(crates.io)', 'url': '/packages/cookie.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-18589', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18589'}, {'text': 'GHSA-vjrq-cg9x-rfjp', 'url': 'https://github.com/advisories/GHSA-vjrq-cg9x-rfjp'}]
references: [{'text': 'https://github.com/alexcrichton/cookie-rs/pull/86', 'url': 'https://github.com/alexcrichton/cookie-rs/pull/86'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: <0.6.0^0.6.2>=0.7.6
description: Affected versions of this crate use thetimecrate and the methodDuration::secondsto parse theMax-Ageduration cookie setting. This method
will panic if the value is greater than 2^64/1000 and less than or equal to
2^64, which can result in denial of service for a client or server. This flaw was corrected by explicitly checking for theMax-Agebeing in this
integer range and clamping the value to the maximum duration value. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Uncontrolled search path element vulnerability in rustdoc plugins
reported: July  5, 2018
issued: October  1, 2020
package: {'name': 'rustdoc', 'url': '/packages/rustdoc.html'}
type: Vulnerability
categories: ['code-execution']
references: [{'text': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/4ybxYLTtXuM', 'url': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/4ybxYLTtXuM'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >1.27.0
description: Rustdoc, if not passed the--plugin-pathargument, defaults to/tmp/rustdoc/plugins./tmpis world-writable on many systems, and so an
attacker could craft a malicious plugin, place it in that directory, and the
victim would end up executing their code. This only occurs when the--pluginargument is also passed. If you're not using that argument, then
the loading, and therefore the bug, will not happen. Because this feature is very difficult to use, and has been deprecated for
almost a year2with no comments on its usage, we don't expect this to
affect many users. For more details, read on. Rustdoc has a "plugins" feature that lets you extend rustdoc. To write a
plugin, you create a library with a specific exposed symbol. You instruct
rustdoc to use this plugin, and it will load it, and execute the function as
a callback to modify rustdoc's AST. This feature is quite hard to use, because the function needs to take as
input and return as output Rustdoc's AST type. The Rust project does not ship
a copy oflibrustdocto end users, and so they would have to synthesize
this type on their own. Furthermore, Rust's ABI is unstable, and so
dynamically loading a plugin is only guaranteed to work if the plugin is
compiled with the same compiler revision as the rustdoc that you're using.
Beyond that, the feature and how to use it are completely undocumented. Given all of this, we're not aware of any usage of plugins in the wild,
though the functionality still exists in the codebase. If you pass the--pluginsparameter, let's say with "foo", anddo notpass the--plugin-pathparameter, rustdoc will look for the "foo" plugin
in /tmp/rustdoc/plugins. Given that /tmp is world-writable on many systems,
an attacker with access to your machine could place a maliciously crafted
plugin into /tmp/rustdoc/plugins, and rustdoc would then load the plugin,
and execute the attacker's callback, running arbitrary Rust code as your
user instead of theirs. This functionality was introduced into rustdoc on December 31, 2013, in commit
14f59e890207f3b7a70bcfffaea7ad88656041113. That change was to rename/tmp/rustdoc_ng/pluginsto/tmp/rustdoc/plugins; The addition of this
search path generally came with the first commit to this iteration of rustdoc,
on September 22, 2013, in commit 7b24efd6f333620ed2559d70b32da8f6f99573854. To prevent this bug from happening on any version of Rust, you can always
pass the--plugin-pathflag to control the path. This only applies if
you use the--pluginflag in the first place. For Rust 1.27, we'll be releasing a 1.27.1 on Tuesday with the fix, which
consists of requiring--plugin-pathto be passed whenever--pluginis passed. We will not be releasing our own fixes for previous versions of Rust, given
the low severity and impact of this bug. The patch to fix 1.27 should be
trivially applicable to previous versions, as this code has not changed in
a very long time. The patch is included at the end of this email. If you
need assistance patching an older version of Rust on your own, please reach
out to Steve Klabnik, st...@steveklabnik.com, and he'll be happy to help. On beta and nightly we will be removing plugins entirely. Thanks to Red Hat Product Security, which found this bug. And specifically to
Josh Stone, who took their findings and reported it to us in accordance with
our security policy https://www.rust-lang.org/security.html, as well as providing
feedback on the patch itself. You can find their bug at5. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: proc-macro-error is unmaintained
reported: September  1, 2024
issued: September  5, 2024
package: {'name': 'proc-macro-error(crates.io)', 'url': '/packages/proc-macro-error.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20', 'url': 'https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20'}]
patched: no patched versions
description: proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email. proc-macro-error also depends onsyn 1.x, which may be bringing duplicate dependencies into dependant build trees. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: XmpFile::closecan trigger UB
reported: July 26, 2024
issued: July 26, 2024
package: {'name': 'xmp_toolkit(crates.io)', 'url': '/packages/xmp_toolkit.html'}
type: INFOUnsound
keywords: []
references: [{'text': 'https://github.com/adobe/xmp-toolkit-rs/issues/233', 'url': 'https://github.com/adobe/xmp-toolkit-rs/issues/233'}]
patched: >=1.9.0
affected functions: Version
xmp_toolkit::xmpfile::close: <1.9.0
description: Affected versions of the crate failed to catch C++ exceptions raised within theXmpFile::closefunction. If such an exception occured, it would trigger undefined behavior, typically a process abort. This is best demonstrated inissue #230, where a race condition causes theclosecall to fail due to file I/O errors. This was fixed inPR #232(released as crate version 1.9.0), which now safely handles the exception. For backward compatibility, the existing API ignores the error. A new APIXmpFile::try_closewas added to allow callers to receive and process the error result. Users of all prior versions ofxmp_toolkitare encouraged to update to version 1.9.0 to avoid undefined behavior. Advisory available underCC0-1.0license.
affected_functions: xmp_toolkit;;xmpfile;;close
version_of_Affected: <1.9.0

---
classification: INFO
subtitle: The kstring integration in gix-attributes is unsound
reported: July 24, 2024
issued: July 25, 2024
package: {'name': 'gix-attributes(crates.io)', 'url': '/packages/gix-attributes.html'}
type: INFOUnsound
references: [{'text': 'https://github.com/Byron/gitoxide/issues/1460', 'url': 'https://github.com/Byron/gitoxide/issues/1460'}]
patched: >=0.22.3
description: gix-attributes(instate::ValueRef) unsafely creates a&strfrom a&[u8]containing non-UTF8 data, with the justification that so long as nothing reads the&strand relies on it being UTF-8 in the&str, there is no UB: The problem is that the non-UTF8strisexposed to outside code: first to thekstringcrate itself, which requires UTF-8 in its documentation and may have UB as a consequence of this, but also toserde, where it propagates to e.g.serde_json,serde_yaml, etc., where the same problems occur. This is not sound, and it could cause further UB down the line in these places that can view the&str. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: The cratezip_nexthas been renamed tozip.
reported: April 20, 2024
issued: April 24, 2024
package: {'name': 'zip_next(crates.io)', 'url': '/packages/zip_next.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/zip-rs/zip/issues/446', 'url': 'https://github.com/zip-rs/zip/issues/446'}]
patched: no patched versions
description: Please switch to the new name.zip_nextwill receive no further releases. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rsa-exportis unmaintained
reported: April  6, 2024
issued: April 12, 2024
package: {'name': 'rsa-export(crates.io)', 'url': '/packages/rsa-export.html'}
type: INFOUnmaintained
references: [{'text': 'https://crates.io/crates/rsa-export/0.3.3', 'url': 'https://crates.io/crates/rsa-export/0.3.3'}, {'text': 'https://gitlab.com/smallglitch/rsa-export/-/commit/e29f17170d655a6f62eca8bf1f64ef0ce5807058', 'url': 'https://gitlab.com/smallglitch/rsa-export/-/commit/e29f17170d655a6f62eca8bf1f64ef0ce5807058'}]
patched: no patched versions
description: This crate has been deprecated in favour of using the native support for exporting RSA keys into the standard PEM format.Seedocs.rs documentation. In addition to that, the operations in this crate (arithmetic and Base64 encoding) are not done in constant-time,
potentiallyexposing the user to sidechannel attacks. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: libp2p-tokio-socks5is unmaintained
reported: April  5, 2024
issued: April 12, 2024
package: {'name': 'libp2p-tokio-socks5(crates.io)', 'url': '/packages/libp2p-tokio-socks5.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/comit-network/rust-libp2p-tokio-socks5/commit/e1fdc92ca69ffd254824ab80fbad5660f4aac911', 'url': 'https://github.com/comit-network/rust-libp2p-tokio-socks5/commit/e1fdc92ca69ffd254824ab80fbad5660f4aac911'}]
patched: no patched versions
description: Note the repository was archived without an issue so we link directly
to the commit that marked the repository as unmaintained. To the best of the original authors knowledge the crate has no
vulnerabilities as of the last release, it is just unmaintained due to
laziness - new maintainer welcome. Advisory available underCC-BY-4.0license.

    
      
      
          Source:https://github.com/comit-network/rust-libp2p-tokio-socks5/commit/e1fdc92ca69ffd254824ab80fbad5660f4aac911

---
classification: INFO
subtitle: Puccinier is unmainted.
reported: March 31, 2024
issued: March 31, 2024
package: {'name': 'puccinier(crates.io)', 'url': '/packages/puccinier.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/catppuccin/toolbox/issues/66', 'url': 'https://github.com/catppuccin/toolbox/issues/66'}]
patched: no patched versions
description: The tool has been deprecated in favor of Catppuccin's new tool,whiskers(crates.io). Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: yaml-rust is unmaintained.
reported: March 20, 2024
issued: March 25, 2024
package: {'name': 'yaml-rust(crates.io)', 'url': '/packages/yaml-rust.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rustsec/advisory-db/issues/1921', 'url': 'https://github.com/rustsec/advisory-db/issues/1921'}]
patched: no patched versions
description: The maintainer seemsunreachable. Many issues and pull requests have been submitted over the years
without anyresponse. Consider switching to the actively maintainedyaml-rust2fork of the original project: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: hpackis unmaintained
reported: September 15, 2023
issued: March  6, 2024
package: {'name': 'hpack(crates.io)', 'url': '/packages/hpack.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/mlalic/hpack-rs/issues/8', 'url': 'https://github.com/mlalic/hpack-rs/issues/8'}]
patched: no patched versions
description: Thehpackcrate is no longer maintained. Consider usingfluke-hpackorhttlib-huffman. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Non-idiomatic use of iterators leads to use after free
reported: February 28, 2024
issued: February 28, 2024(last modified: April 11, 2024)
package: {'name': 'cassandra-cpp(crates.io)', 'url': '/packages/cassandra-cpp.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2024-27284', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27284'}, {'text': 'GHSA-x9xc-63hg-vcfq', 'url': 'https://github.com/advisories/GHSA-x9xc-63hg-vcfq'}]
references: [{'text': 'https://github.com/Metaswitch/cassandra-rs/security/advisories/GHSA-x9xc-63hg-vcfq', 'url': 'https://github.com/Metaswitch/cassandra-rs/security/advisories/GHSA-x9xc-63hg-vcfq'}]
patched: >=3.0.0
description: Code that attempts to use an item (e.g., a row) returned by an iterator after the iterator has advanced to the next item will be accessing freed memory and experience undefined behaviour. Code that uses the item and then advances the iterator is unaffected. This problem has always existed. This is a use-after-free bug, so it's rated high severity. If your code uses a pre-3.0.0 version of cassandra-rs, and uses an item returned by a cassandra-rs iterator after callingnext()on that iterator, then it is vulnerable. However, such code will almost always fail immediately - so we believe it is unlikely that any code using this pattern would have reached production. For peace of mind, we recommend you upgrade anyway. The problem has been fixed in version 3.0.0 (commit 299e6ac50f87eb2823a373baec37b590a74994ee). Users should upgrade to ensure their code cannot use the problematic pattern. There is an upgrade guide in the project README. Ensure all usage fits the expected pattern. For example, useget_first_row()rather than an iterator, or completely process an item before advancing the iterator withnext(). Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: safemem is unmaintained
reported: February 14, 2023
issued: February 22, 2024(last modified: March  4, 2024)
package: {'name': 'safemem(crates.io)', 'url': '/packages/safemem.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/abonander/safemem', 'url': 'https://github.com/abonander/safemem'}]
patched: no patched versions
description: The latest crates.io release was in 2019. The repository has been archived by the author. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: filesystem-rs may be implicitly unmaintained
reported: January 25, 2024
issued: February 18, 2024
package: {'name': 'filesystem(crates.io)', 'url': '/packages/filesystem.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/iredelmeier/filesystem-rs/pull/29', 'url': 'https://github.com/iredelmeier/filesystem-rs/pull/29'}]
patched: no patched versions
description: The last release was over 5 years ago, and the last commit was over 4 years ago. The maintainer(s) have not responded to a pull request to update dependencies that are themselves unmaintained, and which poses the question of maintenance. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: generational-arenais unmaintained
reported: February 11, 2024
issued: February 18, 2024
package: {'name': 'generational-arena(crates.io)', 'url': '/packages/generational-arena.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/fitzgen/generational-arena/issues/55', 'url': 'https://github.com/fitzgen/generational-arena/issues/55'}]
patched: no patched versions
description: Thegenerational-arenacrate's repository has been archived and is no longer maintained. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Use-after-free when setting the locale
reported: January 19, 2024
issued: January 23, 2024(last modified: February 10, 2024)
package: {'name': 'rust-i18n-support(crates.io)', 'url': '/packages/rust-i18n-support.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-c8v3-jhv9-4ppc', 'url': 'https://github.com/advisories/GHSA-c8v3-jhv9-4ppc'}]
references: [{'text': 'https://github.com/longbridgeapp/rust-i18n/issues/71', 'url': 'https://github.com/longbridgeapp/rust-i18n/issues/71'}, {'text': 'https://github.com/longbridgeapp/rust-i18n/pull/72', 'url': 'https://github.com/longbridgeapp/rust-i18n/pull/72'}, {'text': 'https://github.com/longbridgeapp/rust-i18n/releases/tag/v3.0.1', 'url': 'https://github.com/longbridgeapp/rust-i18n/releases/tag/v3.0.1'}]
patched: >=3.0.1
unaffected: <3.0.0
affected functions: Version
rust_i18n_support::atomicstr::as_str: <3.0.1, >=3.0.0
description: Version 3.0.0 introduced anAtomicStrtype, that is used to store the current locale.
It stores the locale as a raw pointer to anArc<String>.
The locale can be read withAtomicStr::as_str().AtomicStr::as_str()does not increment the usage counter of theArc. If the locale is changed in one thread, another thread can have a stale -- possibly already freed --
reference to the stored string. Advisory available underCC0-1.0license.
affected_functions: rust_i18n_support;;atomicstr;;as_str
version_of_Affected: <3.0.1, >=3.0.0

---
classification: INFO
subtitle: Unsound sending of non-Send types across threads
reported: January  7, 2024
issued: January 22, 2024(last modified: February 10, 2024)
package: {'name': 'threadalone(crates.io)', 'url': '/packages/threadalone.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-w59h-378f-2frm', 'url': 'https://github.com/advisories/GHSA-w59h-378f-2frm'}]
references: [{'text': 'https://github.com/cr0sh/threadalone/issues/1', 'url': 'https://github.com/cr0sh/threadalone/issues/1'}]
patched: >=0.2.1
description: Affected versions can run theDropimpl of a non-Send type on a different
thread than it was created on. The flaw occurs when a stderr write performed by thethreadalonecrate fails,
for example because stderr is redirected to a location on a filesystem that is
full, or because stderr is a pipe that has been closed by the reader. Dropping a non-Send type on the wrong thread is unsound. If used with a type
such as a pthread-basedMutexGuard,the consequence is undefined
behavior. If used withRc, there would be a data race on the
reference count, which is likewise undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cosmwasmis unmaintained
reported: January 20, 2024
issued: January 21, 2024
package: {'name': 'cosmwasm(crates.io)', 'url': '/packages/cosmwasm.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/CosmWasm/cosmwasm/issues/1430', 'url': 'https://github.com/CosmWasm/cosmwasm/issues/1430'}]
patched: no patched versions
description: The cratecosmwasmisnot used anymoresince spring 2020.
The functionality was split in multiple different crates, such as the standard librarycosmwasm-stdand the virtual machinecosmwasm-vm. An overview can be found in thecosmwasm repository. If you have this crate in your dependency tree, this is very likely by mistake and should be corrected. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Potential stack use-after-free inInstrumented::into_inner
reported: October 19, 2023
issued: January 13, 2024(last modified: February 10, 2024)
package: {'name': 'tracing(crates.io)', 'url': '/packages/tracing.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-8f24-6m29-wm2r', 'url': 'https://github.com/advisories/GHSA-8f24-6m29-wm2r'}]
references: [{'text': 'https://github.com/tokio-rs/tracing/pull/2765', 'url': 'https://github.com/tokio-rs/tracing/pull/2765'}]
patched: >=0.1.40
unaffected: <=0.1.37
affected functions: Version
tracing::instrument::instrumented::into_inner: >=0.1.38<0.1.40
description: The implementation of theInstrumented::into_innermethod in affected
versions of this crate contains undefined behavior due to incorrect use ofstd::mem::forgetThe function creates*constpointers toself, callsmem::forget(self), and then moves values out of those
pointers usingstd::ptr::read. However, themem::forgetdocumentationstates: This means that these pointers are no longer valid. This could result in a stack
use-after-free if LLVM chooses to reuseself's stack slot for a rebinding
after the call tostd::mem::forget. This undefined behavior has not been observed to cause miscompilation as of Rust
1.73.0. However, any use of this method with the affected versions oftracingare unsound. The flaw was corrected in commit20a1762(PR #2765) by replacing the use ofstd::mem::forgetwithstd::mem::ManuallyDrop, ensuring that the stack slot
is not reused and the pointers remain valid when they are read. The fix is
published intracingv0.1.40. Affected versions have been yanked from
crates.io. Thanks toTaylor CramerandManish Goregaokarfor finding and correcting
this issue! Advisory available underCC0-1.0license.
affected_functions: tracing;;instrument;;instrumented;;into_inner
version_of_Affected: >=0.1.38<0.1.40

---
classification: INFO
subtitle: Unsound use of str::from_utf8_unchecked on bytes which are not UTF-8
reported: January 13, 2024
issued: January 13, 2024(last modified: February 10, 2024)
package: {'name': 'ferris-says(crates.io)', 'url': '/packages/ferris-says.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-v363-rrf2-5fmj', 'url': 'https://github.com/advisories/GHSA-v363-rrf2-5fmj'}]
references: [{'text': 'https://github.com/rust-lang/ferris-says/pull/21', 'url': 'https://github.com/rust-lang/ferris-says/pull/21'}]
patched: >=0.3.1
unaffected: <=0.1.2
description: Affected versions receive a&[u8]from the caller through a safe API, and pass
it directly to the unsafestr::from_utf8_uncheckedfunction. The behavior offerris_says::sayis undefined if the bytes from the caller
don't happen to be valid UTF-8. The flaw was corrected inferris-says#21by using the safestr::from_utf8instead, and returning an error on invalid input. However this fix has not yet
been published to crates.io as a patch version for 0.2. Separately,ferris-says#32has introduced a different API for version 0.3
which accepts input as&strrather than&[u8], so is unaffected by this bug. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cpythonis unmaintained
reported: November 14, 2023
issued: December 20, 2023
package: {'name': 'cpython(crates.io)', 'url': '/packages/cpython.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dgrunwald/rust-cpython/commit/e815555', 'url': 'https://github.com/dgrunwald/rust-cpython/commit/e815555'}, {'text': 'https://github.com/dgrunwald/rust-cpython/issues/265', 'url': 'https://github.com/dgrunwald/rust-cpython/issues/265'}, {'text': 'https://github.com/dgrunwald/rust-cpython/issues/294', 'url': 'https://github.com/dgrunwald/rust-cpython/issues/294'}]
patched: no patched versions
description: Thecpythoncrate and the underlyingpython3-sysandpython27-syscrates have been marked asno longer actively maintainedby the developer. There are also open issues for unsound code that is currently in these crates: Thepyo3crate is actively maintained. Preliminary support for Python 3.12 was added in version 0.19.2, and version 0.20.0 was released with full support for Python 3.12. Both versions implement string functions correctly on big-endian architectures. The endianness issue affecting thecpythoncrate was fixed in recent versions ofpyo3. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unaligned write of u64 on 32-bit and 16-bit platforms
reported: December 20, 2023
issued: December 20, 2023(last modified: February 10, 2024)
package: {'name': 'unsafe-libyaml(crates.io)', 'url': '/packages/unsafe-libyaml.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-r24f-hg58-vfrw', 'url': 'https://github.com/advisories/GHSA-r24f-hg58-vfrw'}]
references: [{'text': 'https://github.com/dtolnay/unsafe-libyaml/issues/21', 'url': 'https://github.com/dtolnay/unsafe-libyaml/issues/21'}]
patched: >=0.2.10
description: Affected versions allocate memory using the alignment ofusizeand write data
to it of typeu64, without usingcore::ptr::write_unaligned. In platforms
with sub-64bit alignment forusize(including wasm32 and x86) these writes
are insufficiently aligned some of the time. If using an ordinary optimized standard library, the bug exhibits Undefined
Behavior so may or may not behave in any sensible way, depending on
optimization settings and hardware and other things. If using a Rust standard
library built with debug assertions enabled, the bug manifests deterministically
in a crash (non-unwinding panic) saying"ptr::write requires that the pointer
argument is aligned and non-null". No 64-bit platform is impacted by the bug. The flaw was corrected by allocating with adequately high alignment on all
platforms. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: opensslX509StoreRef::objectsis unsound
reported: November 23, 2023
issued: November 28, 2023(last modified: February 10, 2024)
package: {'name': 'openssl(crates.io)', 'url': '/packages/openssl.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-xphf-cx8h-7q9g', 'url': 'https://github.com/advisories/GHSA-xphf-cx8h-7q9g'}]
references: [{'text': 'https://github.com/sfackler/rust-openssl/issues/2096', 'url': 'https://github.com/sfackler/rust-openssl/issues/2096'}]
patched: >=0.10.60
affected functions: Version
openssl::x509::store::x509storeref::objects: <0.10.60, >=0.10.29
description: This function returned a shared reference into an OpenSSL datastructure but did not account for interior mutability. OpenSSL may modify the data behind this reference, meaning accesses can race and the reference is unsound. Use of this function should be replaced withX509StoreRef::all_certificates. Advisory available underCC0-1.0license.
affected_functions: openssl;;x509;;store;;x509storeref;;objects
version_of_Affected: <0.10.60, >=0.10.29

---
classification: INFO
subtitle: fehleris unmaintained; useculpainstead
reported: October 12, 2023
issued: October 14, 2023
package: {'name': 'fehler(crates.io)', 'url': '/packages/fehler.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/withoutboats/fehler/issues/66', 'url': 'https://github.com/withoutboats/fehler/issues/66'}]
patched: no patched versions
description: Thefehlercrate is no longer maintained.
Consider usingculpainstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unaligned read of*const *const c_charpointer
reported: September 10, 2023
issued: September 10, 2023(last modified: February 10, 2024)
package: {'name': 'users(crates.io)', 'url': '/packages/users.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-jcr6-4frq-9gjj', 'url': 'https://github.com/advisories/GHSA-jcr6-4frq-9gjj'}]
references: [{'text': 'https://github.com/ogham/rust-users/issues/55', 'url': 'https://github.com/ogham/rust-users/issues/55'}]
patched: no patched versions
description: Affected versions dereference a potentially unaligned pointer. The pointer is
commonly unaligned in practice, resulting in undefined behavior. In some build modes, this is observable as a panic followed by abort. In other
build modes the UB may manifest in some other way, including the possibility of
working correctly in some architectures. The crate is not currently maintained, so a patched version is not available. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Fails to prohibit standard library access prior to initialization of Rust standard library runtime
reported: September 10, 2023
issued: September 10, 2023(last modified: February 10, 2024)
package: {'name': 'inventory(crates.io)', 'url': '/packages/inventory.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-ghc8-5cgm-5rpf', 'url': 'https://github.com/advisories/GHSA-ghc8-5cgm-5rpf'}]
references: [{'text': 'https://github.com/dtolnay/inventory/pull/43', 'url': 'https://github.com/dtolnay/inventory/pull/43'}]
patched: >=0.2.0
description: Affected versions allow arbitrary caller-provided code to execute before the
lifetime ofmain. If the caller-provided code accesses particular pieces of the standard library
that require an initialized Rust runtime, such asstd::ioorstd::thread,
these may not behave as documented. Panics are likely; UB is possible. The flaw was corrected by enforcing that only code written within theinventorycrate, which is guaranteed not to access runtime-dependent parts of
the standard library, runs beforemain. Caller-provided code is restricted to
running at compile time. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Exposes reference to non-Sync data to an arbitrary thread
reported: September 10, 2023
issued: September 10, 2023(last modified: February 10, 2024)
package: {'name': 'inventory(crates.io)', 'url': '/packages/inventory.html'}
type: INFOUnsound
categories: ['thread-safety']
keywords: []
aliases: [{'text': 'GHSA-36xm-35qq-795w', 'url': 'https://github.com/advisories/GHSA-36xm-35qq-795w'}]
references: [{'text': 'https://github.com/dtolnay/inventory/pull/42', 'url': 'https://github.com/dtolnay/inventory/pull/42'}]
patched: >=0.2.0
description: Affected versions do not enforce aSyncbound on the type of caller-provided
value held in the plugin registry. References to these values are made
accessible to arbitrary threads other than the one that constructed them. A caller could use this flaw to submit thread-unsafe data into inventory, then
access it as a reference simultaneously from multiple threads. The flaw was corrected by enforcing that data submitted by the caller into
inventory isSync. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Multiple soundness issues
reported: September  3, 2023
issued: September  3, 2023(last modified: July  2, 2024)
package: {'name': 'lexical(crates.io)', 'url': '/packages/lexical.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-c2hm-mjxv-89r4', 'url': 'https://github.com/advisories/GHSA-c2hm-mjxv-89r4'}]
references: [{'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/102', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/102'}, {'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/101', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/101'}, {'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/95', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/95'}, {'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/104', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/104'}]
patched: no patched versions
description: lexicalcontains multiple soundness issues: The crate also has some correctness issues and appears to be unmaintained. For quickly parsing floating-point numbers third-party crates are no longer needed. A fast float parsing algorithm by the author oflexicalhas beenmergedinto libcore. For quickly parsing integers, consideratoiandbtoicrates (100% safe code).atoi_radix10provides even faster parsing, but only with-C target-cpu=native, and at the cost of someunsafe. For formatting integers in a#[no_std]context consider thenumtoacrate. For working with big numbers considernum-bigintandnum-traits. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: dlopen_deriveis unmaintained
reported: July 30, 2023
issued: August 19, 2023
package: {'name': 'dlopen_derive(crates.io)', 'url': '/packages/dlopen_derive.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/szymonwieloch/rust-dlopen/issues/47', 'url': 'https://github.com/szymonwieloch/rust-dlopen/issues/47'}]
patched: no patched versions
description: dlopen_derivehasn't been updated since June 9, 2019. dlopen_derivedepends onquote = "0.6.12"andsyn = "0.15.34". Versions1.0.0of these dependencies were published on August 13, 2019. The0.*versions haven't received updates since. Note thatdlopenis an unmaintained crate from the same repository asdlopen_derive. However, migrating away fromdlopen_deriveimplies migrating away fromdlopen, as well. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: multipart is Unmaintained
reported: April 11, 2023
issued: August 18, 2023
package: {'name': 'multipart(crates.io)', 'url': '/packages/multipart.html'}
type: INFOUnmaintained
patched: no patched versions
description: Themultipartcrate is unmaintained. The author has archived the github
repository. Alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tuiis unmaintained; useratatuiinstead
reported: August  7, 2023
issued: August  7, 2023
package: {'name': 'tui(crates.io)', 'url': '/packages/tui.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/fdehau/tui-rs/issues/654', 'url': 'https://github.com/fdehau/tui-rs/issues/654'}]
patched: no patched versions
description: Thetuicrate is no longer maintained. Consider using theratatuicrate instead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsoundness ininternmethods onintagliosymbol interners
reported: July 26, 2023
issued: July 27, 2023(last modified: July 29, 2023)
package: {'name': 'intaglio(crates.io)', 'url': '/packages/intaglio.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-gch5-hwqf-mxhp', 'url': 'https://github.com/advisories/GHSA-gch5-hwqf-mxhp'}]
references: [{'text': 'https://github.com/artichoke/intaglio/pull/236', 'url': 'https://github.com/artichoke/intaglio/pull/236'}, {'text': 'https://github.com/artichoke/intaglio/issues/235', 'url': 'https://github.com/artichoke/intaglio/issues/235'}, {'text': 'https://github.com/artichoke/intaglio/pull/236', 'url': 'https://github.com/artichoke/intaglio/pull/236'}, {'text': 'https://github.com/artichoke/intaglio/releases/tag/v1.9.0', 'url': 'https://github.com/artichoke/intaglio/releases/tag/v1.9.0'}]
patched: >=1.9.0
affected functions: Version
intaglio::symboltable::intern: <1.9.0
intaglio::bytes::symboltable::intern: <1.9.0
intaglio::cstr::symboltable::intern: <1.9.0, >=1.5.0
intaglio::osstr::symboltable::intern: <1.9.0, >=1.5.0
intaglio::path::symboltable::intern: <1.9.0, >=1.5.0
description: Affected versions of this crate have a stacked borrows violation when creating
references to interned contents. All interner types are affected. The flaw was corrected in version 1.9.0 by reordering move and borrowing
operations and storing interned contents by raw pointer instead of as aBox. Advisory available underCC0-1.0license.
affected_functions: intaglio;;symboltable;;intern
version_of_Affected: <1.9.0

---
classification: INFO
subtitle: implFromMdbValuefor bool is unsound
reported: June 26, 2023
issued: July 18, 2023(last modified: July 29, 2023)
package: {'name': 'lmdb-rs(crates.io)', 'url': '/packages/lmdb-rs.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-f9g6-fp84-fv92', 'url': 'https://github.com/advisories/GHSA-f9g6-fp84-fv92'}]
references: [{'text': 'https://github.com/vhbit/lmdb-rs/issues/67', 'url': 'https://github.com/vhbit/lmdb-rs/issues/67'}]
patched: no patched versions
description: The implementation ofFromMdbValuehave several unsoundness issues. First of all, it allows to reinterpret arbitrary bytes as a bool and could make undefined behavior happen with safe function. Secondly, it allows transmuting pointer without taking memory layout into consideration. The details of reproducing the bug were included in url above. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Misaligned pointer dereference inChunkId::new
reported: June 15, 2023
issued: June 22, 2023(last modified: July  8, 2023)
package: {'name': 'cyfs-base(crates.io)', 'url': '/packages/cyfs-base.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-g753-ghr7-q33w', 'url': 'https://github.com/advisories/GHSA-g753-ghr7-q33w'}]
references: [{'text': 'https://github.com/buckyos/CYFS/issues/275', 'url': 'https://github.com/buckyos/CYFS/issues/275'}]
patched: no patched versions
description: The functionChunkId::newcreates a misaligned pointer by casting mutable pointer ofu8slice which has alignment 1 to the mutable pointer ofu32which has alignment 4, and dereference the misaligned pointer leading UB, which should not be allowed in safe function. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: memoffset allows reading uninitialized memory
reported: June 21, 2023
issued: June 21, 2023(last modified: July  8, 2023)
package: {'name': 'memoffset(crates.io)', 'url': '/packages/memoffset.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-wfg4-322g-9vqv', 'url': 'https://github.com/advisories/GHSA-wfg4-322g-9vqv'}]
references: [{'text': 'https://github.com/Gilnaa/memoffset/issues/24', 'url': 'https://github.com/Gilnaa/memoffset/issues/24'}]
patched: >=0.6.2
affected functions: Version
memoffset::offset_of: <0.6.2
description: memoffset allows attempt of reading data from address0with arbitrary type. This behavior is an undefined behavior because address0tostd::mem::size_of<T>may not have valid bit-pattern withT. Old implementation dereferences uninitialized memory obtained fromstd::mem::align_of. Older implementation prior to it allows using uninitialized data obtained fromstd::mem::uninitializedwith arbitrary type then compute offset by taking the address of field-projection. This may also result in an undefined behavior for "father" that includes (directly or transitively) type thatdoes not allow to be uninitialized. This flaw was corrected by usingstd::ptr::addr_ofinhttps://github.com/Gilnaa/memoffset/pull/50. Advisory available underCC0-1.0license.
affected_functions: memoffset;;offset_of
version_of_Affected: <0.6.2

---
classification: INFO
subtitle: ftp is unmaintained, use suppaftp instead
reported: February 20, 2023
issued: June 14, 2023
package: {'name': 'ftp(crates.io)', 'url': '/packages/ftp.html'}
type: INFOUnmaintained
keywords: []
references: [{'text': 'https://github.com/mattnenterprise/rust-ftp/pull/92', 'url': 'https://github.com/mattnenterprise/rust-ftp/pull/92'}, {'text': 'https://github.com/mattnenterprise/rust-ftp/issues/91', 'url': 'https://github.com/mattnenterprise/rust-ftp/issues/91'}, {'text': 'https://github.com/mattnenterprise/rust-ftp/issues/84', 'url': 'https://github.com/mattnenterprise/rust-ftp/issues/84'}]
patched: no patched versions
description: Theftpcrate is not maintained any more;
usesuppaftpinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Ouroboros is Unsound
reported: June 11, 2023
issued: June 12, 2023(last modified: July  8, 2023)
package: {'name': 'ouroboros(crates.io)', 'url': '/packages/ouroboros.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-87mf-9wg6-ppf8', 'url': 'https://github.com/advisories/GHSA-87mf-9wg6-ppf8'}]
references: [{'text': 'https://github.com/joshua-maros/ouroboros/issues/88', 'url': 'https://github.com/joshua-maros/ouroboros/issues/88'}]
patched: >=0.16.0
description: Ouroboros has a soundness problem, but a fix has been implemented in 0.16.0. In 0.15.0, Ouroboros works internally by creating a struct where all
uses of 'this are replaced by 'static. However, a recent addition to
Miri checks that references passed to functions are valid during the
entire execution of the function, even when those references are
passed inside a struct. This poses an issue for dropping
self-referencing values, as the reference becomes invalid during the
dropping process. Effectively, since self-referencing structs are
not allowed in vanilla Rust, there is no allowance for dropping data
during a function that has also been given a reference to that data.
There's usually no way to pass a and &a to the same function. A fix was attempted, where the struct would be turned in to a raw
byte array and only transformed back into the underlying data type
inside each function. This is allowable as a reference can be
created and die over the body of a function, as long as the
reference was created inside the function. However, this is also
not sound if the original struct contains padding. There is no
way to initialize padding bytes to a known value that Miri will
accept, so when it is cast to an array some of the bytes contain
uninitialized values. This is not acceptable (despite the fact
that these bytes are never read) due to the potential for
optimizations that may read from the uninitialized bytes. Besides
which, this fix does not allow for template or constant parameters
as there is no way to check the size of a templated type without
giving specific, concrete values for the template parameters. The final solution was to use this fix while wrapping the raw byte
array inMaybeUninit<>. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: userscrate is unmaintained
reported: June  1, 2023
issued: June  1, 2023(last modified: August 21, 2023)
package: {'name': 'users(crates.io)', 'url': '/packages/users.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/ogham/rust-users/issues/54', 'url': 'https://github.com/ogham/rust-users/issues/54'}]
patched: no patched versions
description: Theuserscrate hasn't seen any action since 2020-10-08. The developer seemsMIAsince. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tocrypto_secretbox
reported: May 16, 2023
issued: May 16, 2023
package: {'name': 'xsalsa20poly1305(crates.io)', 'url': '/packages/xsalsa20poly1305.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/AEADs/pull/525', 'url': 'https://github.com/RustCrypto/AEADs/pull/525'}]
patched: no patched versions
description: This crate has been forked/renamed fromxsalsa20poly1305tocrypto_secretbox. The new repository location is at: https://github.com/RustCrypto/nacl-compat/tree/master/crypto_secretbox Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tree_magic is Unmaintained
reported: April 11, 2023
issued: April 24, 2023
package: {'name': 'tree_magic(crates.io)', 'url': '/packages/tree_magic.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/aahancoc/tree_magic/issues/16', 'url': 'https://github.com/aahancoc/tree_magic/issues/16'}]
patched: no patched versions
description: Thetree_magiccrate is unmaintained. The author has archived the github
repository. Alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Adverserial use ofmake_bitflags!macro can cause undefined behavior
reported: April 17, 2023
issued: April 23, 2023(last modified: June 13, 2023)
package: {'name': 'enumflags2(crates.io)', 'url': '/packages/enumflags2.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-qvc4-78gw-pv8p', 'url': 'https://github.com/advisories/GHSA-qvc4-78gw-pv8p'}]
references: [{'text': 'https://github.com/meithecatte/enumflags2/releases/tag/v0.7.7', 'url': 'https://github.com/meithecatte/enumflags2/releases/tag/v0.7.7'}]
patched: >=0.7.7
unaffected: <0.7.0
description: The macro relied on an expression of the formEnum::Variantalways being a
variant of the enum. However, it may also be an associated integer constant, in
which case there's no guarantee that the value of said constant consists only of
bits valid for this bitflag type. Thus, code like this could create an invalidBitFlags<Test>, which would cause
iterating over it to trigger undefined behavior. As the debug formatter
internally iterates over the value, it is also affected. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Parsing borsh messages with ZST which are not-copy/clone is unsound
reported: April 12, 2023
issued: April 13, 2023(last modified: September 28, 2023)
package: {'name': 'borsh(crates.io)', 'url': '/packages/borsh.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-fjx5-qpf4-xjf2', 'url': 'https://github.com/advisories/GHSA-fjx5-qpf4-xjf2'}]
references: [{'text': 'https://github.com/near/borsh-rs/issues/19', 'url': 'https://github.com/near/borsh-rs/issues/19'}, {'text': 'https://github.com/near/borsh-rs/pull/136', 'url': 'https://github.com/near/borsh-rs/pull/136'}]
patched: >=1.0.0-alpha.1
description: Affected versions of borsh cause undefined behavior when zero-sized-types (ZST)
are parsed and the Copy/Clone traits are not implemented/derived.
For instance if 1000 instances of a ZST are deserialized, and the ZST is not copy
(this can be achieved through a singleton), then accessing/writing to deserialized
data will cause a segmentation fault. There is currently no way for borsh to read data without also providing a Rust type.
Therefore, if not ZST are used for serialization, then you are not affected by this issue. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsound FFI: Wrong API usage causes write past allocated area
reported: March 22, 2023
issued: April  6, 2023(last modified: June 13, 2023)
package: {'name': 'ntru(crates.io)', 'url': '/packages/ntru.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-fq33-vmhv-48xh', 'url': 'https://github.com/advisories/GHSA-fq33-vmhv-48xh'}]
references: [{'text': 'https://github.com/FrinkGlobal/ntru-rs/issues/8', 'url': 'https://github.com/FrinkGlobal/ntru-rs/issues/8'}]
patched: no patched versions
affected functions: Version
ntru::types::privatekey::export: >=0.4.3
ntru::types::publickey::export: >=0.4.3
description: The following usage causes undefined behavior. When compiled with debug assertions, the code above will trigger aattempt to subtract with overflowpanic before UB occurs.
Other mistakes (e.g. usingEncParamsfrom a different key) may always trigger UB. Likely, older versions of this crate are also affected, but have not been tested. Advisory available underCC0-1.0license.
affected_functions: ntru;;types;;privatekey;;export
version_of_Affected: >=0.4.3

---
classification: INFO
subtitle: Initialisation failure inOnce::try_call_oncecan lead to undefined behaviour for other initialisers
reported: March 31, 2023
issued: April  4, 2023(last modified: June 13, 2023)
package: {'name': 'spin(crates.io)', 'url': '/packages/spin.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-2qv5-7mw5-j3cg', 'url': 'https://github.com/advisories/GHSA-2qv5-7mw5-j3cg'}]
references: [{'text': 'https://github.com/mvdnes/spin-rs/issues/148', 'url': 'https://github.com/mvdnes/spin-rs/issues/148'}]
patched: >=0.9.8
unaffected: <0.9.3
description: Once::try_call_onceis unsound if invoked more than once concurrently and any call fails to initialise successfully. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Gitoxide has renamed its crates.
reported: March 14, 2023
issued: March 25, 2023
package: {'name': 'git-path(crates.io)', 'url': '/packages/git-path.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Byron/gitoxide/pull/741', 'url': 'https://github.com/Byron/gitoxide/pull/741'}]
patched: no patched versions
description: All crates in the gitoxide project have been renamed from git-to
gix-. The git- prefixed crates are no longer being updated. Switch
to using gix-path to continue receiving updates. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Gitoxide has renamed its crates.
reported: March 14, 2023
issued: March 25, 2023
package: {'name': 'git-hash(crates.io)', 'url': '/packages/git-hash.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Byron/gitoxide/pull/741', 'url': 'https://github.com/Byron/gitoxide/pull/741'}]
patched: no patched versions
description: All crates in the gitoxide project have been renamed from git-to
gix-. The git- prefixed crates are no longer being updated. Switch
to using gix-hash to continue receiving updates. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: buf_redux is Unmaintained
reported: January 24, 2023
issued: March 25, 2023
package: {'name': 'buf_redux(crates.io)', 'url': '/packages/buf_redux.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/abonander/buf_redux/issues', 'url': 'https://github.com/abonander/buf_redux/issues'}]
patched: no patched versions
description: Last release was over three years ago. The maintainer(s) have been unreachable to respond to any issues that may or may not include security issues. The repository is now archived and there is no security policy in place to contact the maintainer(s) otherwise. The safety-undocumented unsafe in the crate may or may not be safe to use. The crate also has a current future incompatibility warningbuf_redux/23. The below may or may not provide alternative(s) Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rmp-serdeRawandRawRefunsound
reported: April 13, 2022
issued: March 22, 2023(last modified: June 13, 2023)
package: {'name': 'rmp-serde(crates.io)', 'url': '/packages/rmp-serde.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-255r-3prx-mf99', 'url': 'https://github.com/advisories/GHSA-255r-3prx-mf99'}]
references: [{'text': 'https://github.com/3Hren/msgpack-rust/issues/305', 'url': 'https://github.com/3Hren/msgpack-rust/issues/305'}]
patched: >=1.1.1
description: It was found thatRaw::from_utf8expects valid UTF-8. If invalid UTF-8 is received it can cause the process to crash. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: const-cstr is Unmaintained
reported: March 12, 2023
issued: March 13, 2023
package: {'name': 'const-cstr(crates.io)', 'url': '/packages/const-cstr.html'}
type: INFOUnsound
references: [{'text': 'https://github.com/abonander/const-cstr', 'url': 'https://github.com/abonander/const-cstr'}]
patched: no patched versions
description: Last release was about five years ago. The maintainer(s) have been unreachable to respond to any issues that may or may not include security issues. The repository is now archived and there is no security policy in place to contact the maintainer(s) otherwise. No direct fork exist. The crate violates the safety contract offfi::CStr::from_bytes_with_nul_uncheckedused inConstCStr::as_cstr No interior nul bytes checking is done either by the constructor or the canonical macro to create theConstCStr Additionally the crate may cause runtime panics if statically compiled and ran with any untrusted data that is not nul-terminated. This is however unlikely but the the crate should not be used for untrusted data in context where panic may create a DoS vector. The below may or may not provide alternative(s) Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: encodingis unmaintained
reported: December  5, 2021
issued: March 12, 2023
package: {'name': 'encoding(crates.io)', 'url': '/packages/encoding.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/lifthrasiir/rust-encoding/issues/127', 'url': 'https://github.com/lifthrasiir/rust-encoding/issues/127'}]
patched: no patched versions
description: Last release was on 2016-08-28. Theissueinquiring as to the status of the crate has gone unanswered by the maintainer. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: boxfnonceobsolete with release of Rust 1.35.0
reported: June 20, 2019
issued: March 12, 2023
package: {'name': 'boxfnonce(crates.io)', 'url': '/packages/boxfnonce.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/stbuehler/rust-boxfnonce/commit/058ac7e1a7d732076da9d8a37baa66bcb67758d8', 'url': 'https://github.com/stbuehler/rust-boxfnonce/commit/058ac7e1a7d732076da9d8a37baa66bcb67758d8'}]
patched: no patched versions
description: Thiscommit marks theboxfnoncecrate as obsolete and the GitHub repo has since been archived. The functionality ofboxfnoncehas been added to Rust since 1.35.0. UseBox<dyn FnOnce(...) -> ...>. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: nphysics2d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'nphysics2d(crates.io)', 'url': '/packages/nphysics2d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/nphysics', 'url': 'https://github.com/dimforge/nphysics'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theRapierproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mach is unmaintained
reported: July 14, 2020
issued: March 12, 2023
package: {'name': 'mach(crates.io)', 'url': '/packages/mach.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/fitzgen/mach/issues/63', 'url': 'https://github.com/fitzgen/mach/issues/63'}]
patched: no patched versions
description: Last release was almost 4 years ago. Maintainer(s) seem to be completely unreachable. These may or may not be suitable alternatives and have not been vetted in any way; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: ncollide2d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'ncollide2d(crates.io)', 'url': '/packages/ncollide2d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/ncollide', 'url': 'https://github.com/dimforge/ncollide'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theParryproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: out_reference::Out::from_rawshould beunsafe
reported: January 20, 2021
issued: March 12, 2023(last modified: June 13, 2023)
package: {'name': 'out-reference(crates.io)', 'url': '/packages/out-reference.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-p7mj-xvxg-grff', 'url': 'https://github.com/advisories/GHSA-p7mj-xvxg-grff'}]
references: [{'text': 'https://github.com/RustyYato/out-ref/issues/1', 'url': 'https://github.com/RustyYato/out-ref/issues/1'}]
patched: >=0.2.0
unaffected: <0.1.0
affected functions: Version
out_reference::out::from_raw: >=0.1.0, <0.2.0
description: Out::from_rawin affected versions allows writing a value to invalid memory address without requiringunsafe. The soundness issue has been addressed by makingOut::from_rawan unsafe function. Advisory available underCC0-1.0license.
affected_functions: out_reference;;out;;from_raw
version_of_Affected: >=0.1.0, <0.2.0

---
classification: INFO
subtitle: nphysics3d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'nphysics3d(crates.io)', 'url': '/packages/nphysics3d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/nphysics', 'url': 'https://github.com/dimforge/nphysics'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theRapierproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: ncollide3d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'ncollide3d(crates.io)', 'url': '/packages/ncollide3d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/ncollide', 'url': 'https://github.com/dimforge/ncollide'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theParryproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: kuchikiis unmaintained
reported: January 21, 2023
issued: March  7, 2023(last modified: May 23, 2023)
package: {'name': 'kuchiki(crates.io)', 'url': '/packages/kuchiki.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/kuchiki-rs/kuchiki/commit/f92e4c047fdc30619555da282ac7ccce1d313aa6', 'url': 'https://github.com/kuchiki-rs/kuchiki/commit/f92e4c047fdc30619555da282ac7ccce1d313aa6'}]
patched: no patched versions
description: Thekuchikirepo was marked as archived inthiscommit. Possible alternatives may include: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: maligned::align_firstcauses incorrect deallocation
reported: March  4, 2023
issued: March  4, 2023(last modified: June 13, 2023)
package: {'name': 'maligned(crates.io)', 'url': '/packages/maligned.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-wm8x-php5-hvq6', 'url': 'https://github.com/advisories/GHSA-wm8x-php5-hvq6'}]
references: [{'text': 'https://github.com/tylerhawkes/maligned/issues/5', 'url': 'https://github.com/tylerhawkes/maligned/issues/5'}]
patched: no patched versions
affected functions: Version
maligned::align_first: *
maligned::align_first_boxed: *
maligned::align_first_boxed_cloned: *
maligned::align_first_boxed_default: *
description: maligned::align_firstmanually allocates with an alignment larger than T, and then usesVec::from_raw_partson that allocation to get aVec<T>. GlobalAlloc::deallocrequires that thelayoutargument must be the same layout that was used to allocate that block of memory. When deallocating,BoxandVecmay not respect the specified alignment and can cause undefined behavior. Advisory available underCC0-1.0license.
affected_functions: maligned;;align_first
version_of_Affected: *

---
classification: INFO
subtitle: Ascii allows out-of-bounds array indexing in safe code
reported: February 25, 2023
issued: February 25, 2023(last modified: June 13, 2023)
package: {'name': 'ascii(crates.io)', 'url': '/packages/ascii.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-mrrw-grhq-86gf', 'url': 'https://github.com/advisories/GHSA-mrrw-grhq-86gf'}]
references: [{'text': 'https://github.com/tomprogrammer/rust-ascii/issues/64', 'url': 'https://github.com/tomprogrammer/rust-ascii/issues/64'}]
patched: >=0.9.3
unaffected: <=0.6.0
description: Affected version of this crate had implementation ofFrom<&mut AsciiStr>for&mut [u8]and&mut str. This can result in out-of-bounds array indexing in safe code. The flaw was corrected in commit8a6c779by removing those impls. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Possible out-of-bounds read in release mode
reported: February 20, 2023
issued: February 25, 2023(last modified: June 13, 2023)
package: {'name': 'partial_sort(crates.io)', 'url': '/packages/partial_sort.html'}
type: INFOUnsound
categories: ['memory-exposure']
keywords: []
aliases: [{'text': 'GHSA-5x36-7567-3cw6', 'url': 'https://github.com/advisories/GHSA-5x36-7567-3cw6'}]
references: [{'text': 'https://github.com/sundy-li/partial_sort/issues/7', 'url': 'https://github.com/sundy-li/partial_sort/issues/7'}]
patched: >=0.2.0
description: Affected versions of this crate were using a debug assertion to validate thelastparameter ofpartial_sort(). This would allow invalid inputs to cause
an out-of-bounds read instead of immediately panicking, when compiled without
debug assertions. All writes are bounds-checked, so the out-of-bounds memory access is read-only.
This also means that the first attempted out-of-bounds write will panic,
limiting the possible reads. The accessible region is further limited by an initial bounds-checked read
at(last / 2) - 1, i.e., it is proportional to the size of the vector. This bug has been fixed in v0.2.0. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Miscompilation in cortex-m-rt 0.7.1 and 0.7.2
reported: February 13, 2023
issued: February 14, 2023(last modified: June 13, 2023)
package: {'name': 'cortex-m-rt(crates.io)', 'url': '/packages/cortex-m-rt.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-xw5j-gv2g-mjm2', 'url': 'https://github.com/advisories/GHSA-xw5j-gv2g-mjm2'}]
references: [{'text': 'https://github.com/rust-embedded/cortex-m/discussions/469', 'url': 'https://github.com/rust-embedded/cortex-m/discussions/469'}]
patched: >=0.7.3
unaffected: <=0.7.0
description: Version 0.7.1 of thecortex-m-rtcrate introduced a regression causing the stack to NOT be eight-byte aligned prior to callingmain(or any other specified entrypoint), violating thestack ABI of AAPCS32, the default ABI used by all Cortex-M targets. This regression is also present in version 0.7.2 of thecortex-m-rtcrate. This regression can cause certain compiler optimizations (which assume the eight-byte alignment) to produce incorrect behavior at runtime. This incorrect behavior has beenobserved in real-world applications. It is advised that ALL users ofv0.7.1andv0.7.2of thecortex-m-rtcrate update to the latest version (v0.7.3), AS SOON AS POSSIBLE.Users ofv0.7.0and prior versions ofcortex-m-rtare not affected by this regression. It will be necessary to rebuild all affected firmware binaries, and flash or deploy the new firmware binaries to affected devices. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tokio::io::ReadHalf<T>::unsplitis Unsound
reported: January 11, 2023
issued: February  3, 2023(last modified: June 13, 2023)
package: {'name': 'tokio(crates.io)', 'url': '/packages/tokio.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-4q83-7cq4-p6wg', 'url': 'https://github.com/advisories/GHSA-4q83-7cq4-p6wg'}]
references: [{'text': 'https://github.com/tokio-rs/tokio/issues/5372', 'url': 'https://github.com/tokio-rs/tokio/issues/5372'}]
patched: >=1.18.5, <1.19.0>=1.20.4, <1.21.0>=1.24.2
unaffected: <0.2.0
description: tokio::io::ReadHalf<T>::unsplitcan violate thePincontract The soundness issue is described in thetokio/issues#5372 Specific set of conditions needed to trigger an issue (a !Unpin type in ReadHalf)
is unusual, combined with the difficulty of making any arbitrary use-after-free
exploitable in Rust without doing a lot of careful alignment of data types in
the surrounding code. Thetokiofeatureio-utilis also required to be enabled to trigger this
soundness issue. Thanks to zachs18 reporting the issue to Tokio team responsibly and taiki-e
and carllerche appropriately responding and fixing the soundness bug. Tokio before 0.2.0 usedfutures0.1 that did not havePin, so it is not
affected by this issue. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: personnummer Input validation error
reported: September  4, 2020
issued: February  2, 2023
package: {'name': 'personnummer(crates.io)', 'url': '/packages/personnummer.html'}
type: INFONotice
aliases: [{'text': 'GHSA-28r9-pq4c-wp3c', 'url': 'https://github.com/advisories/GHSA-28r9-pq4c-wp3c'}]
references: [{'text': 'https://github.com/personnummer/rust/pull/4', 'url': 'https://github.com/personnummer/rust/pull/4'}]
patched: >=3.0.1
description: Swedish personal identity is in the form of YYMMDD-XXXX An issue arises from the regular expression allowing the first three digits in
the last four digits of the personnummer to be 000, which is invalid. To mitigate this without upgrading, a check on the last four digits can be made
to make sure it's not 000x. The affected version should not be relied on without the mitigation to check
that the swedish personal identity number is valid. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: json is unmaintained
reported: February  1, 2022
issued: January 19, 2023(last modified: August 25, 2023)
package: {'name': 'json(crates.io)', 'url': '/packages/json.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maciejhirsz/json-rust/issues/205', 'url': 'https://github.com/maciejhirsz/json-rust/issues/205'}, {'text': 'https://github.com/maciejhirsz/json-rust/issues/196', 'url': 'https://github.com/maciejhirsz/json-rust/issues/196'}]
patched: no patched versions
description: Last release was almost 3 years ago. The maintainer is unresponsive with outstanding issues. One of the outstanding issues includea possible soundness issue. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: parity-util-mem Unmaintained
reported: November 30, 2022
issued: January 16, 2023
package: {'name': 'parity-util-mem(crates.io)', 'url': '/packages/parity-util-mem.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/paritytech/parity-common/pull/696', 'url': 'https://github.com/paritytech/parity-common/pull/696'}, {'text': 'https://github.com/paritytech/parity-common/issues/607', 'url': 'https://github.com/paritytech/parity-common/issues/607'}, {'text': 'https://github.com/paritytech/parity-common/pull/697', 'url': 'https://github.com/paritytech/parity-common/pull/697'}]
patched: no patched versions
description: The crate has been deprecated and will receive no updates with no repository source. The crate hasa warningsurrounding it's use related to global allocator use that may lead to UB. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Cratetwowaydeprecated by the author
reported: May 20, 2021
issued: January 15, 2023(last modified: February  9, 2023)
package: {'name': 'twoway(crates.io)', 'url': '/packages/twoway.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/bluss/twoway', 'url': 'https://github.com/bluss/twoway'}, {'text': 'https://github.com/bluss/twoway/commit/e99b3c718df1117ad7f54c33f6540c8f46cc17dd', 'url': 'https://github.com/bluss/twoway/commit/e99b3c718df1117ad7f54c33f6540c8f46cc17dd'}]
patched: no patched versions
description: The commite99b3c7releasing version 0.2.2 explicitly deprecatestwowayin favour ofmemchrcrate. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Use-after-free due to a lifetime error inVec::into_iter()
reported: January 14, 2022
issued: January 14, 2023(last modified: June 13, 2023)
package: {'name': 'bumpalo(crates.io)', 'url': '/packages/bumpalo.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'GHSA-f85w-wvc7-crwc', 'url': 'https://github.com/advisories/GHSA-f85w-wvc7-crwc'}]
references: [{'text': 'https://github.com/fitzgen/bumpalo/blob/main/CHANGELOG.md#3111', 'url': 'https://github.com/fitzgen/bumpalo/blob/main/CHANGELOG.md#3111'}]
patched: >=3.11.1
unaffected: <1.1.0
affected functions: Version
bumpalo::collections::vec::vec::into_iter: <3.11.1
description: In affected versions of this crate, the lifetime of the iterator produced byVec::into_iter()is not constrained to the lifetime of theBumpthat
allocated the vector's memory. Using the iterator after theBumpis dropped
causes use-after-free accesses. The following example demonstrates memory corruption arising from a misuse of
this unsoundness. The issue was corrected in version 3.11.1 by adding a lifetime to theIntoItertype, and updating the signature ofVec::into_iter()to constrain this
lifetime. Advisory available underCC0-1.0license.
affected_functions: bumpalo;;collections;;vec;;vec;;into_iter
version_of_Affected: <3.11.1

---
classification: INFO
subtitle: claimis Unmaintained
reported: December  4, 2022
issued: January 14, 2023(last modified: February  4, 2023)
package: {'name': 'claim(crates.io)', 'url': '/packages/claim.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/svartalf/rust-claim/issues/12', 'url': 'https://github.com/svartalf/rust-claim/issues/12'}]
patched: no patched versions
description: The last release was in February 2021, almost two years ago. The maintainer has been unresponsive regarding this crate for over a year. A pending issue withclaim's dependencies has made the cratedifficult to use. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Force cast a &Vecto &[T]
reported: December  2, 2022
issued: December 27, 2022(last modified: June 13, 2023)
package: {'name': 'prettytable-rs(crates.io)', 'url': '/packages/prettytable-rs.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-gfgm-chr3-x6px', 'url': 'https://github.com/advisories/GHSA-gfgm-chr3-x6px'}]
references: [{'text': 'https://github.com/phsym/prettytable-rs/issues/145', 'url': 'https://github.com/phsym/prettytable-rs/issues/145'}]
patched: >=0.10.0
description: In functionTable::as_ref, a reference of vector is force cast to slice. There are multiple problems here: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toembedded-alloc
reported: December 21, 2022
issued: December 23, 2022
package: {'name': 'alloc-cortex-m(crates.io)', 'url': '/packages/alloc-cortex-m.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rust-embedded/embedded-alloc/pull/56', 'url': 'https://github.com/rust-embedded/embedded-alloc/pull/56'}]
patched: no patched versions
description: This crate has been renamed fromalloc-cortex-mtoembedded-alloc. The new repository location is: https://github.com/rust-embedded/embedded-alloc Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Rusoto is unmaintained
reported: April 24, 2022
issued: December 18, 2022
package: {'name': 'rusoto_credential(crates.io)', 'url': '/packages/rusoto_credential.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rusoto/rusoto/issues/1651', 'url': 'https://github.com/rusoto/rusoto/issues/1651'}]
patched: no patched versions
description: The maintainers of Rusoto advise that all its crates are deprecated. This includes the common cratesrusoto_core,rusoto_signature,rusoto_credential, and service crates such asrusoto_s3andrusoto_ec2. Users should migrate to theAWS SDK for Rust, which is maintained by AWS. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsound API insecp256k1allows use-after-free and invalid deallocation from safe code
reported: November 30, 2022
issued: December  7, 2022(last modified: June 13, 2023)
package: {'name': 'secp256k1(crates.io)', 'url': '/packages/secp256k1.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-969w-q74q-9j8v', 'url': 'https://github.com/advisories/GHSA-969w-q74q-9j8v'}]
references: [{'text': 'https://github.com/rust-bitcoin/rust-secp256k1/issues/543', 'url': 'https://github.com/rust-bitcoin/rust-secp256k1/issues/543'}, {'text': 'https://github.com/rust-bitcoin/rust-secp256k1/pull/548', 'url': 'https://github.com/rust-bitcoin/rust-secp256k1/pull/548'}]
patched: >=0.22.2, <0.23.0>=0.23.5, <0.24.0>=0.24.2
unaffected: <0.14.0
affected functions: Version
secp256k1::secp256k1::preallocated_gen_new: <0.22.2>=0.23.0, <0.23.5>=0.24.0, <0.24.2
description: Because of incorrect bounds on methodSecp256k1::preallocated_gen_newit was possible to cause use-after-free from safe consumer code. It was also possible to "free" memory not allocated by the appropriate allocator. The method takes a place for storing the context as a mutable reference and returns context containing that reference. Because the code internally usesunsafeand the bounds were incorrect it was possible to create a context that outlived the passed reference (e.g.'static). Because the context can alternatively carry heap-allocated pointer freed on drop it was possible to "deallocate" a pointer that wasn't returned from appropriate allocator. The code decides whether to free the memory based on type parameter but because of missing bound it was possible to construct the context with invalid parameter. You are unaffected if you either The patched version uses correct bounds which means it is API-breaking. This effectively means adopting the policy of Rust lang itself allowing API-breaking changes to fix soundness bugs. Note however that valid straightforward usage of the code will continue to compile. Only unsound code or code that propagates the bound in custom generics will fail to compile. If the code is sound fixing the bounds should be sufficient to make the code compile. See theGitHub issuefor example "exploit" code and further discussion. Advisory available underCC0-1.0license.
affected_functions: secp256k1;;secp256k1;;preallocated_gen_new
version_of_Affected: <0.22.2>=0.23.0, <0.23.5>=0.24.0, <0.24.2

---
classification: INFO
subtitle: Potential unaligned read
reported: July  4, 2021
issued: November 22, 2022(last modified: July  8, 2023)
package: {'name': 'atty(crates.io)', 'url': '/packages/atty.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-g98v-hv3f-hcfr', 'url': 'https://github.com/advisories/GHSA-g98v-hv3f-hcfr'}]
references: [{'text': 'https://github.com/softprops/atty/issues/50', 'url': 'https://github.com/softprops/atty/issues/50'}, {'text': 'https://github.com/softprops/atty/pull/51', 'url': 'https://github.com/softprops/atty/pull/51'}, {'text': 'https://github.com/softprops/atty/issues/57', 'url': 'https://github.com/softprops/atty/issues/57'}]
patched: no patched versions
affected oses: windows
description: On windows,attydereferences a potentially unaligned pointer. In practice however, the pointer won't be unaligned unless a custom global allocator is used. In particular, theSystemallocator on windows usesHeapAlloc, which guarantees a large enough alignment. A Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable. Last release ofattywas almost 3 years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Invalid use ofmem::uninitializedcausesuse-of-uninitialized-value
reported: October 22, 2022
issued: November  7, 2022(last modified: June 13, 2023)
package: {'name': 'lzf(crates.io)', 'url': '/packages/lzf.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-5m39-wx2q-mxg3', 'url': 'https://github.com/advisories/GHSA-5m39-wx2q-mxg3'}]
references: [{'text': 'https://github.com/badboy/lzf-rs/issues/9', 'url': 'https://github.com/badboy/lzf-rs/issues/9'}]
patched: >=0.3.2
affected functions: Version
lzf::compress: <0.3.2
lzf::decompress: <0.3.2
description: The compression and decompression function usedmem:uninitializedto create an array of uninitialized values, to later write values into it.
This later leads to reads from uninitialized memory. The flaw was corrected in commit b633bf265e41c60dfce3be7eac4e4dd5e18d06cf
by using a heap-allocatedVecand removing out use ofmem::uninitialized.
The fix was released in v0.3.2 and v1.0.0 Subsequently the crate was deprecated and its use is discouraged. Advisory available underCC0-1.0license.
affected_functions: lzf;;compress
version_of_Affected: <0.3.2

---
classification: INFO
subtitle: Crateparity-wasmdeprecated by the author
reported: October  1, 2022
issued: October 23, 2022
package: {'name': 'parity-wasm(crates.io)', 'url': '/packages/parity-wasm.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/paritytech/parity-wasm/pull/334', 'url': 'https://github.com/paritytech/parity-wasm/pull/334'}]
patched: no patched versions
description: This PRexplicitly deprecatesparity-wasm.
The author recommends switching towasm-tools. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: orbtk is Unmaintained
reported: October 13, 2022
issued: October 19, 2022
package: {'name': 'orbtk(crates.io)', 'url': '/packages/orbtk.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/redox-os/orbtk/blob/eba9e77821551076bbf1d9f7ab44d788150e3446/README.md#orbtk-is-sunsetting', 'url': 'https://github.com/redox-os/orbtk/blob/eba9e77821551076bbf1d9f7ab44d788150e3446/README.md#orbtk-is-sunsetting'}]
patched: no patched versions
description: Theorbtkcrate is no longer maintained. Alternatives proposed by the authors: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Library exclusively intended to inject UB into safe Rust.
reported: September 28, 2022
issued: October 11, 2022
package: {'name': 'inconceivable(crates.io)', 'url': '/packages/inconceivable.html'}
type: INFONotice
references: [{'text': 'https://crates.io/crates/inconceivable', 'url': 'https://crates.io/crates/inconceivable'}]
patched: no patched versions
description: Quoting from the crate description: Specifically, theinconceivable!macro is insta-UB if theub_inconceivablefeature is enabled byanyreverse dependency.
The value this adds is questionable, and hidesunsafecode from naive analysis. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: badge is Unmaintained
reported: August 31, 2022
issued: October  4, 2022(last modified: February  9, 2023)
package: {'name': 'badge(crates.io)', 'url': '/packages/badge.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rust-lang/docs.rs/issues/1813#issuecomment-1232875809', 'url': 'https://github.com/rust-lang/docs.rs/issues/1813#issuecomment-1232875809'}]
patched: no patched versions
description: The maintainer has advised this crate is deprecated and will not receive any maintenance. The crate depends on the deprecatedrusttypecrate and won't receive updates
anymore. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: clipboard is Unmaintained
reported: June 25, 2022
issued: September 24, 2022
package: {'name': 'clipboard(crates.io)', 'url': '/packages/clipboard.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/aweinstock314/rust-clipboard/issues/91', 'url': 'https://github.com/aweinstock314/rust-clipboard/issues/91'}, {'text': 'https://github.com/aweinstock314/rust-clipboard/issues/90', 'url': 'https://github.com/aweinstock314/rust-clipboard/issues/90'}]
patched: no patched versions
description: Last release was almost 4 years ago and the repository with outstanding issues and pull requests seems to be abandoned by the maintainer. In addition the sole maintainer account may be abandoned that may represent account takeover risk. Current outstanding issues include vulnerable dependencies that all together may mean that security issues may not be addressed now or in the future. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: traitobject is Unmaintained
reported: October  4, 2021
issued: September  8, 2022(last modified: June 13, 2023)
package: {'name': 'traitobject(crates.io)', 'url': '/packages/traitobject.html'}
type: INFOUnmaintained
aliases: [{'text': 'GHSA-pp8r-vv2j-9j5v', 'url': 'https://github.com/advisories/GHSA-pp8r-vv2j-9j5v'}]
references: [{'text': 'https://github.com/reem/rust-traitobject/issues/7', 'url': 'https://github.com/reem/rust-traitobject/issues/7'}, {'text': 'https://rustsec.org/advisories/RUSTSEC-2020-0027', 'url': 'https://rustsec.org/advisories/RUSTSEC-2020-0027'}]
patched: no patched versions
description: Cratetraitobjecthas not had a release for over five years. In addition there is an existing security advisory that has not been addressed: The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: wee_alloc is Unmaintained
reported: May 11, 2022
issued: September  8, 2022(last modified: June 13, 2023)
package: {'name': 'wee_alloc(crates.io)', 'url': '/packages/wee_alloc.html'}
type: INFOUnmaintained
aliases: [{'text': 'GHSA-rc23-xxgq-x27g', 'url': 'https://github.com/advisories/GHSA-rc23-xxgq-x27g'}]
references: [{'text': 'https://github.com/rustwasm/wee_alloc/issues/107', 'url': 'https://github.com/rustwasm/wee_alloc/issues/107'}, {'text': 'https://www.reddit.com/r/rust/comments/x1cle0/dont_use_wee_alloc_in_production_code_targeting/', 'url': 'https://www.reddit.com/r/rust/comments/x1cle0/dont_use_wee_alloc_in_production_code_targeting/'}, {'text': 'https://github.com/rustwasm/wee_alloc/issues/85', 'url': 'https://github.com/rustwasm/wee_alloc/issues/85'}, {'text': 'https://github.com/rustwasm/wee_alloc/issues/106', 'url': 'https://github.com/rustwasm/wee_alloc/issues/106'}]
patched: no patched versions
description: Two of the maintainers have indicated that the crate may not be maintained. The crate has open issues including memory leaks and may not be suitable for production use. It may be best to switch to the default Rust standard allocator on wasm32 targets. Last release seems to have been three years ago. The below list has not been vetted in any way and may or may not contain alternatives; The below may serve to educate on potential future alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: typemap is Unmaintained
reported: April  6, 2019
issued: September  8, 2022(last modified: June 13, 2023)
package: {'name': 'typemap(crates.io)', 'url': '/packages/typemap.html'}
type: INFOUnmaintained
aliases: [{'text': 'GHSA-vfv3-9w6v-23jp', 'url': 'https://github.com/advisories/GHSA-vfv3-9w6v-23jp'}]
references: [{'text': 'https://github.com/reem/rust-typemap/issues/45', 'url': 'https://github.com/reem/rust-typemap/issues/45'}, {'text': 'https://github.com/rustsec/advisory-db/issues/1088', 'url': 'https://github.com/rustsec/advisory-db/issues/1088'}]
patched: no patched versions
description: The maintainer seems unreachable. The crate may or may not be usable as-is despite no maintenance and may not work in future versions of Rust. The last release seems to have been seven years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: dotenv is Unmaintained
reported: December 24, 2021
issued: August 31, 2022
package: {'name': 'dotenv(crates.io)', 'url': '/packages/dotenv.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dotenv-rs/dotenv/issues/74', 'url': 'https://github.com/dotenv-rs/dotenv/issues/74'}]
patched: no patched versions
description: dotenv by description is meant to be used in development or testing only. Using this in production may or may not be advisable. The below may or may not be feasible alternative(s): Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mozjpeg DecompressScanlines::read_scanlines is Unsound
reported: July  4, 2020
issued: August 31, 2022(last modified: June 13, 2023)
package: {'name': 'mozjpeg(crates.io)', 'url': '/packages/mozjpeg.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-v8gq-5grq-9728', 'url': 'https://github.com/advisories/GHSA-v8gq-5grq-9728'}]
references: [{'text': 'https://github.com/ImageOptim/mozjpeg-rust/issues/10', 'url': 'https://github.com/ImageOptim/mozjpeg-rust/issues/10'}, {'text': 'https://github.com/kornelski/rust-rgb/issues/35', 'url': 'https://github.com/kornelski/rust-rgb/issues/35'}, {'text': 'https://rustsec.org/advisories/RUSTSEC-2020-0029.html', 'url': 'https://rustsec.org/advisories/RUSTSEC-2020-0029.html'}]
patched: >=0.8.19
affected functions: Version
mozjpeg::decompressscanlines::read_scanlines: <0.8.19
description: This issue and vector is similar toRUSTSEC-2020-0029ofrgbcrate whichmozjpegdepends on. Affected versions ofmozjpegcrate allow creating instances of any typeTfrom bytes,
and do not correctly constrainTto the types for which it is safe to do so. Examples of safety violation possible for a typeT: The issue was fixed in 0.8.19 by using safer types and involvingrgbdependency bump. Advisory available underCC0-1.0license.
affected_functions: mozjpeg;;decompressscanlines;;read_scanlines
version_of_Affected: <0.8.19

---
classification: INFO
subtitle: rusttype is Unmaintained
reported: April  1, 2021
issued: August 31, 2022(last modified: February  9, 2023)
package: {'name': 'rusttype(crates.io)', 'url': '/packages/rusttype.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.redox-os.org/redox-os/rusttype/-/issues/148', 'url': 'https://gitlab.redox-os.org/redox-os/rusttype/-/issues/148'}]
patched: no patched versions
description: The maintainer has advised this crate is deprecated and will not
receive any maintenance. The maintainer has further advised to migrate over toab_glyph. Last release seems to have been over two years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cell-projectused incorrect variance when projecting through&Cell<T>
reported: August 27, 2020
issued: August 31, 2022(last modified: June 13, 2023)
package: {'name': 'cell-project(crates.io)', 'url': '/packages/cell-project.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-p75v-367r-2v23', 'url': 'https://github.com/advisories/GHSA-p75v-367r-2v23'}]
references: [{'text': 'https://github.com/RustyYato/cell-project/issues/3', 'url': 'https://github.com/RustyYato/cell-project/issues/3'}, {'text': 'https://github.com/RustyYato/cell-project/issues/3', 'url': 'https://github.com/RustyYato/cell-project/issues/3'}, {'text': 'https://github.com/RustyYato/cell-project/issues/4', 'url': 'https://github.com/RustyYato/cell-project/issues/4'}]
patched: >=0.1.4
affected functions: Version
cell_project::cell_project: <0.1.4
cell_project::nightly_cell_project: <0.1.4
description: The issue lies in the implementation of thecell_projectmacro which usedfield as *const _instead offield as *mut _.
The problem being that*const Tis covariant inTwhile*mut Tis invariant inT. Keep in mind that&Cell<T>is invariant inT,
so casting to*const Trelaxed the variance, and lead to unsoundness, as shown in the example below.
unaffected: ['All versions of the cell-project crate before0.1.4are affected.', 'This was fixed inIssues/4, and released as version0.1.4.\nSo just updating to the latest version will include the fix (which may result in a compile error on unsound usage).', {'text': 'Issues/4', 'url': 'https://github.com/RustyYato/cell-project/issues/4'}, 'This was discovered and fixed by @SoniEx2 in cell-project:Issues/3andIssues/4', {'text': 'Issues/3', 'url': 'https://github.com/RustyYato/cell-project/issues/3'}, {'text': 'Issues/4', 'url': 'https://github.com/RustyYato/cell-project/issues/4'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: cell_project;;cell_project
version_of_Affected: <0.1.4

---
classification: INFO
subtitle: dotenv is Unmaintained
reported: December 24, 2021
issued: August 31, 2022
package: {'name': 'dotenv_codegen(crates.io)', 'url': '/packages/dotenv_codegen.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dotenv-rs/dotenv/issues/74', 'url': 'https://github.com/dotenv-rs/dotenv/issues/74'}]
patched: no patched versions
description: dotenv by description is meant to be used in development or testing only. Using this in production may or may not be advisable. The below may or may not be feasible alternative(s): Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mapr is Unmaintained
reported: August 24, 2022
issued: August 27, 2022(last modified: February  9, 2023)
package: {'name': 'mapr(crates.io)', 'url': '/packages/mapr.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rustsec/advisory-db/pull/1381', 'url': 'https://github.com/rustsec/advisory-db/pull/1381'}]
patched: no patched versions
description: Themaprfork has been merged back into upstream forkmemmap2. The maintainer(s) have advisedmapris deprecated and will not
receive any maintenance in favor of usingmemmap2. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: os_socketaddrinvalidly assumes the memory layout of std::net::SocketAddr
reported: August 26, 2022
issued: August 27, 2022(last modified: June 13, 2023)
package: {'name': 'os_socketaddr(crates.io)', 'url': '/packages/os_socketaddr.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-c439-chv8-8g2j', 'url': 'https://github.com/advisories/GHSA-c439-chv8-8g2j'}]
references: [{'text': 'https://github.com/a-ba/os_socketaddr/issues/3', 'url': 'https://github.com/a-ba/os_socketaddr/issues/3'}]
patched: >=0.2.2
description: Theos_socketaddrcrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C
representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. These layout werechanged into idiomatic rust typesin nightlystd. Starting from rustc 1.64 the affected versions of this crate will have undefined
behaviour. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Interledger is Unmaintained
reported: August  4, 2022
issued: August 19, 2022
package: {'name': 'interledger-packet(crates.io)', 'url': '/packages/interledger-packet.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/interledger-rs/interledger-rs/issues/745', 'url': 'https://github.com/interledger-rs/interledger-rs/issues/745'}, {'text': 'https://github.com/interledger-rs/interledger-rs/pull/744', 'url': 'https://github.com/interledger-rs/interledger-rs/pull/744'}]
patched: no patched versions
description: Interledger family of crates is not being actively maintained anymore. The owner of the published crate does not appear to be responsive. There is an outstanding concern around username comparison. This concern may or may not be resolved by bumping up the dependencies of the project. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: ansi_term is Unmaintained
reported: August 18, 2021
issued: August 19, 2022(last modified: September  7, 2023)
package: {'name': 'ansi_term(crates.io)', 'url': '/packages/ansi_term.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/ogham/rust-ansi-term/issues/72', 'url': 'https://github.com/ogham/rust-ansi-term/issues/72'}]
patched: no patched versions
description: The maintainer has advised that this crate is deprecated and will not receive any maintenance. The crate does not seem to have much dependencies and may or may not be ok to use as-is. Last release seems to have been three years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Use after free in MacOS / iOS implementation
reported: August 15, 2022
issued: August 17, 2022(last modified: June 13, 2023)
package: {'name': 'iana-time-zone(crates.io)', 'url': '/packages/iana-time-zone.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-3fg9-hcq5-vxrc', 'url': 'https://github.com/advisories/GHSA-3fg9-hcq5-vxrc'}]
references: [{'text': 'https://github.com/strawlab/iana-time-zone/pull/54', 'url': 'https://github.com/strawlab/iana-time-zone/pull/54'}, {'text': 'https://github.com/strawlab/iana-time-zone/pull/50#discussion_r945353515', 'url': 'https://github.com/strawlab/iana-time-zone/pull/50#discussion_r945353515'}]
patched: >=0.1.45
unaffected: <0.1.43
affected oses: iosmacos
affected functions: Version
iana_time_zone::get_timezone: >0.1.42, <0.1.45
description: In iana-time-zone v0.1.43 a use-after-free bug in the MacOS / iOS implementation was introduced. The copied system time zone was released before its name was copied.
If the system time zone was changed between the call ofCFReleaseandstr::to_owned(),
random memory would be copied. Advisory available underCC0-1.0license.
affected_functions: iana_time_zone;;get_timezone
version_of_Affected: >0.1.42, <0.1.45

---
classification: INFO
subtitle: Incorrect use ofset_lenallows for un-initialized memory
reported: October 14, 2021
issued: August 13, 2022(last modified: June 13, 2023)
package: {'name': 'mz-avro(crates.io)', 'url': '/packages/mz-avro.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-jwh2-vrr9-vcp2', 'url': 'https://github.com/advisories/GHSA-jwh2-vrr9-vcp2'}]
references: [{'text': 'https://github.com/MaterializeInc/materialize/issues/8669', 'url': 'https://github.com/MaterializeInc/materialize/issues/8669'}]
patched: >=0.7.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure)
and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke
undefined behavior. Note: there is only UB in the case where a user provides a struct whoseReadimplementation inspects the buffer passed toread_exactbefore writing to it.
This is an unidiomatic (albeit possible)Readimplementation. See https://github.com/MaterializeInc/materialize/issues/8669 for details. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: sodiumoxide is deprecated
reported: October 22, 2021
issued: August 10, 2022
package: {'name': 'sodiumoxide(crates.io)', 'url': '/packages/sodiumoxide.html'}
type: INFOUnmaintained
keywords: []
references: [{'text': 'https://github.com/sodiumoxide/sodiumoxide/commit/5bb1dfd2578539b89ffb0cbea25f21f00cfb963e', 'url': 'https://github.com/sodiumoxide/sodiumoxide/commit/5bb1dfd2578539b89ffb0cbea25f21f00cfb963e'}]
patched: no patched versions
description: Alternatives may be found - not in any specific order: Recommendations can be also found from: No direct maintained fork exists. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: markdown(1.0.0 and higher) is maintained
reported: January 17, 2022
issued: August  8, 2022(last modified: January 22, 2023)
package: {'name': 'markdown(crates.io)', 'url': '/packages/markdown.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/johannhof/markdown.rs/issues/48', 'url': 'https://github.com/johannhof/markdown.rs/issues/48'}]
patched: >=1.0.0-alpha.1
description: A newmarkdowncrate has been brought over by a new maintainer replacing the old crate. As of time of writing only pre-releases seem to be available for the 1.0.0 version of the crate. The crate GitHub repository is nowwooorm/markdown-rs The oldmarkdowncrate was no longer actively maintained. The crate GitHub repository wasjohannhof/markdown.rs Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsoundness of AtomicCell<64> arithmetics on 32-bit targets that support Atomic64
reported: February  5, 2022
issued: August  4, 2022
package: {'name': 'crossbeam-utils(crates.io)', 'url': '/packages/crossbeam-utils.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-qc84-gqf4-9926', 'url': 'https://github.com/advisories/GHSA-qc84-gqf4-9926'}, {'text': 'CVE-2022-23639', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23639'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/781', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/781'}]
patched: >=0.8.7
description: Affected versions of this crate incorrectly assumed that the alignment of {i,u}64 was always the same as Atomic{I,U}64. However, the alignment of {i,u}64 on a 32-bit target can be smaller than Atomic{I,U}64. This can cause the following problems: Crates using fetch_* methods with AtomicCell<{i,u}64> are affected by this issue. 32-bit targets without Atomic{I,U}64 and 64-bit targets are not affected by this issue. 32-bit targets with Atomic{I,U}64 and {i,u}64 have the same alignment are also not affected by this issue. The following is a complete list of the builtin targets that may be affected. (last update: nightly-2022-02-11) (script to get list) This has been fixed in crossbeam-utils 0.8.7. Affected 0.8.x releases have been yanked. Thanks to @taiki-e Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: project abandoned
reported: January 17, 2022
issued: August  3, 2022
package: {'name': 'r2d2_odbc(crates.io)', 'url': '/packages/r2d2_odbc.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Koka/r2d2-odbc/issues/128#issuecomment-958629171', 'url': 'https://github.com/Koka/r2d2-odbc/issues/128#issuecomment-958629171'}]
patched: no patched versions
description: Ther2d2-odbc-apicrate might be an alternative. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: term_sizeis unmaintained; useterminal_sizeinstead
reported: November  3, 2020
issued: August  3, 2022
package: {'name': 'term_size(crates.io)', 'url': '/packages/term_size.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/clap-rs/term_size-rs/pull/31', 'url': 'https://github.com/clap-rs/term_size-rs/pull/31'}]
patched: no patched versions
description: Theterm_sizecrate is no longer maintained. Consider usingterminal_sizeinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: project abandoned
reported: January 17, 2022
issued: August  3, 2022
package: {'name': 'odbc(crates.io)', 'url': '/packages/odbc.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Koka/odbc-rs/commit/f9e5f77fac0a6328f9759e6e0f9e10c16509aebb', 'url': 'https://github.com/Koka/odbc-rs/commit/f9e5f77fac0a6328f9759e6e0f9e10c16509aebb'}]
patched: no patched versions
description: Alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: sass-rshas been deprecated
reported: April  7, 2021
issued: August  3, 2022(last modified: February  9, 2023)
package: {'name': 'sass-rs(crates.io)', 'url': '/packages/sass-rs.html'}
type: INFOUnmaintained
keywords: []
references: [{'text': 'https://github.com/compass-rs/sass-rs/issues/83', 'url': 'https://github.com/compass-rs/sass-rs/issues/83'}]
patched: no patched versions
description: Thesass-rscrate is not maintained anymore as libsass is deprecated.
Consider using https://github.com/connorskees/grass or https://github.com/kaj/rsass instead.
(Author's recommendation.) Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Safety issues inpkcs11
reported: July 22, 2022
issued: July 25, 2022
package: {'name': 'pkcs11(crates.io)', 'url': '/packages/pkcs11.html'}
type: INFOUnsound
categories: ['code-execution', 'memory-corruption', 'crypto-failure']
keywords: []
references: [{'text': 'https://github.com/mheese/rust-pkcs11/issues/57', 'url': 'https://github.com/mheese/rust-pkcs11/issues/57'}]
patched: no patched versions
description: 
unaffected: ['The interface ofpkcs11is subject to a number of safety issues, mainly related to handling of raw pointers. Despite presenting a safe interface, many of the functions and methods that rely on inputs which contain pointers (attributes and mechanisms in particular) can lead to segmentation faults and undefined behaviour when those pointers get dereferenced. For more details see the issues referenced below.', 'Other problems that have been identified by the community include use-after-free (mheese/rust-pkcs11#53) and unsound uses oftransmute_copy(mheese/rust-pkcs11#55).', {'text': 'mheese/rust-pkcs11#53', 'url': 'https://github.com/mheese/rust-pkcs11/pull/53'}, {'text': 'mheese/rust-pkcs11#55', 'url': 'https://github.com/mheese/rust-pkcs11/issues/55'}]
References: ['mheese/rust-pkcs11#38', {'text': 'mheese/rust-pkcs11#38', 'url': 'https://github.com/mheese/rust-pkcs11/issues/38'}, 'mheese/rust-pkcs11#53', {'text': 'mheese/rust-pkcs11#53', 'url': 'https://github.com/mheese/rust-pkcs11/pull/53'}, 'mheese/rust-pkcs11#55', {'text': 'mheese/rust-pkcs11#55', 'url': 'https://github.com/mheese/rust-pkcs11/issues/55'}, 'mheese/rust-pkcs11#54', {'text': 'mheese/rust-pkcs11#54', 'url': 'https://github.com/mheese/rust-pkcs11/issues/54'}, 'mheese/rust-pkcs11#50', {'text': 'mheese/rust-pkcs11#50', 'url': 'https://github.com/mheese/rust-pkcs11/issues/50'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: INFO
subtitle: static_type_maphas been renamed toerased_set
reported: May 11, 2022
issued: May 11, 2022
package: {'name': 'static_type_map(crates.io)', 'url': '/packages/static_type_map.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/malobre/erased_set/issues/6', 'url': 'https://github.com/malobre/erased_set/issues/6'}]
patched: no patched versions
description: Please use theerased_setcrate going forward: https://github.com/malobre/erased_set There will be no further releases ofstatic_type_map. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: double-checked-cell is unmaintained
reported: May 11, 2022
issued: May 11, 2022
package: {'name': 'double-checked-cell(crates.io)', 'url': '/packages/double-checked-cell.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/niklasf/double-checked-cell/commit/9cf94d75316ef441033ce4c80def7c1a8c7643fe', 'url': 'https://github.com/niklasf/double-checked-cell/commit/9cf94d75316ef441033ce4c80def7c1a8c7643fe'}]
patched: no patched versions
description: The author recommends switching toonce_cell, which offers a superset
of the functionality. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: SegQueuecreates zero value of any type
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'crossbeam-queue(crates.io)', 'url': '/packages/crossbeam-queue.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-6888-wf7j-34jq', 'url': 'https://github.com/advisories/GHSA-6888-wf7j-34jq'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/458', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/458'}]
patched: >=0.2.3
description: Affected versions of this crate calledmem::zeroed()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null). The flaw was corrected by avoiding the use ofmem::zeroed(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Channel creates zero value of any type
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'crossbeam-channel(crates.io)', 'url': '/packages/crossbeam-channel.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-9g55-pg62-m8hh', 'url': 'https://github.com/advisories/GHSA-9g55-pg62-m8hh'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/458', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/458'}]
patched: >=0.4.3
description: Affected versions of this crate calledmem::zeroed()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null). The flaw was corrected by avoiding the use ofmem::zeroed(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: SegQueuecreates zero value of any type
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'crossbeam(crates.io)', 'url': '/packages/crossbeam.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-8gj8-hv75-gp94', 'url': 'https://github.com/advisories/GHSA-8gj8-hv75-gp94'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/458', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/458'}]
patched: >=0.7.0
description: Affected versions of this crate calledmem::zeroed()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null). The flaw was corrected by avoiding the use ofmem::zeroed(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Parser creates invalid uninitialized value
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-f67m-9j94-qv9j', 'url': 'https://github.com/advisories/GHSA-f67m-9j94-qv9j'}]
references: [{'text': 'https://github.com/hyperium/hyper/pull/2545', 'url': 'https://github.com/hyperium/hyper/pull/2545'}]
patched: >=0.14.12
description: Affected versions of this crate calledmem::uninitialized()in the HTTP1 parser to create values of typehttparse::Header(from thehttparsecrate).
This is unsound, sinceHeadercontains references and thus must be non-null. The flaw was corrected by avoiding the use ofmem::uninitialized(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: array!macro is unsound when its length is impure constant
reported: April 27, 2022
issued: April 27, 2022(last modified: June 13, 2023)
package: {'name': 'array-macro(crates.io)', 'url': '/packages/array-macro.html'}
type: INFOUnsound
categories: ['code-execution', 'memory-corruption', 'memory-exposure']
aliases: [{'text': 'GHSA-7v4j-8wvr-v55r', 'url': 'https://github.com/advisories/GHSA-7v4j-8wvr-v55r'}]
references: [{'text': 'https://gitlab.com/KonradBorowski/array-macro/-/issues/5', 'url': 'https://gitlab.com/KonradBorowski/array-macro/-/issues/5'}]
patched: >=2.1.2
unaffected: <2.1.0
description: Affected versions of this crate did substitute the array length provided by an user at compile-time multiple times. When an impure constant expression is passed as an array length (such as a result of an impure procedural macro), this can result in the initialization of an array with uninitialized types, which in turn can allow an attacker to execute arbitrary code. The flaw was corrected in commitd5b63f72by making sure that array length is substituted just once. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: pty is unmaintained
reported: March 22, 2022
issued: March 22, 2022
package: {'name': 'pty(crates.io)', 'url': '/packages/pty.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/hibariya/pty-rs/issues/19', 'url': 'https://github.com/hibariya/pty-rs/issues/19'}]
patched: no patched versions
description: The repository hasn't received any updates since Jun 25, 2017 and the author is unresponsive. Maintained alternatives include: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: enum_map macro can cause UB whenEnumtrait is incorrectly implemented
reported: February 17, 2022
issued: February 18, 2022(last modified: June 13, 2023)
package: {'name': 'enum-map(crates.io)', 'url': '/packages/enum-map.html'}
type: INFOUnsound
categories: ['code-execution', 'memory-corruption', 'memory-exposure']
aliases: [{'text': 'GHSA-rxhx-9fj6-6h2m', 'url': 'https://github.com/advisories/GHSA-rxhx-9fj6-6h2m'}]
references: [{'text': 'https://gitlab.com/KonradBorowski/enum-map/-/blob/master/CHANGELOG.md#version-202', 'url': 'https://gitlab.com/KonradBorowski/enum-map/-/blob/master/CHANGELOG.md#version-202'}]
patched: >=2.0.2
unaffected: <2.0.0-2
description: Affected versions of this crate did not properly check the length of an enum when usingenum_map!macro, trusting user-provided length. When theLENGTHin theEnumtrait does not match the array length in theEnumArraytrait, this can result in the initialization of the enum map with uninitialized types, which in turn can allow an attacker to execute arbitrary code. This problem can only occur with a manual implementation of the Enum trait, it will never occur for enums that use#[derive(Enum)]. Example code that triggers this vulnerability looks like this: The flaw was corrected in commitb824e23by puttingLENGTHproperty on sealed trait for macro to read. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tokio-protois deprecated/unmaintained
reported: February  6, 2020
issued: February  7, 2022
package: {'name': 'tokio-proto(crates.io)', 'url': '/packages/tokio-proto.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/tokio-rs/tokio-proto/commit/56c720ea3c74efa8f39e36c24e609628222b16a1', 'url': 'https://github.com/tokio-rs/tokio-proto/commit/56c720ea3c74efa8f39e36c24e609628222b16a1'}]
patched: no patched versions
description: Thetokio-protocrate has been deprecated, andits GitHub repositoryhas been archived.
Users may be interested intokio-towerinstead, per https://github.com/tokio-rs/tokio/issues/118#issuecomment-452969665 Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Delegate functions are missingSendbound
reported: January  2, 2022
issued: February  4, 2022(last modified: June 13, 2023)
package: {'name': 'windows(crates.io)', 'url': '/packages/windows.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'GHSA-x4mq-m75f-mx8m', 'url': 'https://github.com/advisories/GHSA-x4mq-m75f-mx8m'}]
references: [{'text': 'https://github.com/microsoft/windows-rs/issues/1409', 'url': 'https://github.com/microsoft/windows-rs/issues/1409'}]
patched: >=0.32.0
unaffected: <0.1.2
affected oses: windows
description: Affected versions of this crate did not require event handlers to haveSendbound despite there being no guarantee of them being called on any particular thread, which can potentially lead to data races and undefined behavior. The flaw was corrected in commitafe3252by addingSendbounds. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: A malicious coder can get unsound access to TCell or TLCell memory
reported: January 24, 2022
issued: January 24, 2022(last modified: June 13, 2023)
package: {'name': 'qcell(crates.io)', 'url': '/packages/qcell.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-9c9f-7x9p-4wqp', 'url': 'https://github.com/advisories/GHSA-9c9f-7x9p-4wqp'}]
references: [{'text': 'https://github.com/uazu/qcell/issues/20', 'url': 'https://github.com/uazu/qcell/issues/20'}]
patched: >=0.4.3
description: This is impossible to do by accident, but by carefully constructing
marker types to be covariant, a malicious coder can cheat the
singleton check inTCellOwnerandTLCellOwner, giving unsound
access to cell memory.  This could take the form of getting two
mutable references to the same memory, or a mutable reference and an
immutable reference. The fix is for the crate to internally force the marker type to be
invariant.  This blocks the conversion between covariant types which
Rust normally allows. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toftdi-embedded-hal
reported: January 22, 2022
issued: January 22, 2022
package: {'name': 'ftd2xx-embedded-hal(crates.io)', 'url': '/packages/ftd2xx-embedded-hal.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/newAM/ftd2xx-embedded-hal/pull/40', 'url': 'https://github.com/newAM/ftd2xx-embedded-hal/pull/40'}]
patched: no patched versions
description: This crate has been renamed fromftd2xx-embedded-haltoftdi-embedded-hal. The new repository location is: https://github.com/ftdi-rs/ftdi-embedded-hal Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: array!macro is unsound in presence of traits that implement methods it calls internally
reported: May  7, 2020
issued: January 21, 2022(last modified: June 13, 2023)
package: {'name': 'array-macro(crates.io)', 'url': '/packages/array-macro.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-83gg-pwxf-jr89', 'url': 'https://github.com/advisories/GHSA-83gg-pwxf-jr89'}]
references: [{'text': 'https://gitlab.com/KonradBorowski/array-macro/-/commit/01940637dd8f3bfeeee3faf9639fa9ae52f19f4d', 'url': 'https://gitlab.com/KonradBorowski/array-macro/-/commit/01940637dd8f3bfeeee3faf9639fa9ae52f19f4d'}]
patched: >=1.0.5
unaffected: <0.1.2
description: Affected versions of this crate called some methods using auto-ref. The affected code looked like this. In this case, the problem is thatas_mut_ptris a method of&mut MaybeUninit, notMaybeUninit. This made it possible for traits to hijack the method calls in order to cause unsoundness. The flaw was corrected by explicitly referencing variables in macro body in order to avoid auto-ref. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: lmdb is unmaintained, use lmdb-rkv instead
reported: January  5, 2022
issued: January  5, 2022
package: {'name': 'lmdb(crates.io)', 'url': '/packages/lmdb.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/danburkert/lmdb-rs', 'url': 'https://github.com/danburkert/lmdb-rs'}]
patched: no patched versions
description: The lmdb crate hasn't had any updates since August 2018. Mozilla'slmdb-rkvfork of the crate has received additional maintenance work beyond that and is the best available replacement. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rental is unmaintained, author has moved on
reported: December 27, 2021
issued: December 27, 2021(last modified: March  6, 2022)
package: {'name': 'rental(crates.io)', 'url': '/packages/rental.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/jpernst/rental/commit/213671ab3aab3452efd7e2290c6bb714ee327014', 'url': 'https://github.com/jpernst/rental/commit/213671ab3aab3452efd7e2290c6bb714ee327014'}]
patched: no patched versions
description: The author encourages users to explore other solutions, or maintain a fork. Maintained alternatives include: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cargo-download is unmaintained
reported: December 25, 2021
issued: December 25, 2021
package: {'name': 'cargo-download(crates.io)', 'url': '/packages/cargo-download.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Xion/cargo-download', 'url': 'https://github.com/Xion/cargo-download'}]
patched: no patched versions
description: The cargo download subcommand (via cargo-download crate) is broken and maintainer has disappeared from GitHub and hasn't had any commits for a year. Using this downloader will result to corrupted crates. Maintainer has not responded to maintenance takeover. Just use wget / curl directly. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: serde_cbor is unmaintained
reported: August 15, 2021
issued: November 30, 2021(last modified: December  1, 2021)
package: {'name': 'serde_cbor(crates.io)', 'url': '/packages/serde_cbor.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/pyfisch/cbor', 'url': 'https://github.com/pyfisch/cbor'}]
patched: no patched versions
description: Theserde_cborcrate is unmaintained. The author has archived the github repository. Alternatives proposed by the author: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Non-aligned u32 read in Chacha20 encryption and decryption
reported: October  8, 2021
issued: October 18, 2021(last modified: June 13, 2023)
package: {'name': 'crypto2(crates.io)', 'url': '/packages/crypto2.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2021-45709', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45709'}, {'text': 'GHSA-9hfg-pxr6-q4vp', 'url': 'https://github.com/advisories/GHSA-9hfg-pxr6-q4vp'}, {'text': 'GHSA-pmcv-mgcf-rvxg', 'url': 'https://github.com/advisories/GHSA-pmcv-mgcf-rvxg'}]
references: [{'text': 'https://github.com/shadowsocks/crypto2/issues/27', 'url': 'https://github.com/shadowsocks/crypto2/issues/27'}]
patched: no patched versions
affected functions: Version
crypto2::streamcipher::chacha20::decrypt_slice: *
crypto2::streamcipher::chacha20::encrypt_slice: *
crypto2::streamcipher::xor_si512_inplace: *
description: The implementation does not enforce alignment requirements on input slices while incorrectly assuming 4-byte alignment through an unsafe call tostd::slice::from_raw_parts_mut, which breaks the contract and introduces undefined behavior. This affects Chacha20 encryption and decryption in crypto2. Advisory available underCC0-1.0license.
affected_functions: crypto2;;streamcipher;;chacha20;;decrypt_slice
version_of_Affected: *

---
classification: INFO
subtitle: abomonation transmutes &T to and from &[u8] without sufficient constraints
reported: October 17, 2021
issued: October 17, 2021(last modified: June 13, 2023)
package: {'name': 'abomonation(crates.io)', 'url': '/packages/abomonation.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2021-45708', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45708'}, {'text': 'GHSA-5vwc-r48g-wj6c', 'url': 'https://github.com/advisories/GHSA-5vwc-r48g-wj6c'}, {'text': 'GHSA-hfxp-p695-629x', 'url': 'https://github.com/advisories/GHSA-hfxp-p695-629x'}]
references: [{'text': 'https://github.com/TimelyDataflow/abomonation/issues/23', 'url': 'https://github.com/TimelyDataflow/abomonation/issues/23'}]
patched: no patched versions
description: This transmute is at the core of the abomonation crates. It's so easy to use it to violate alignment requirements that no test in the crate's test suite passes under miri.
The use of this transmute in serialization/deserialization also incorrectly assumes that the layout of a repr(Rust) type is stable.
This transmute can also disclose both the contents of padding bytes which may be an information leak and the contents of pointers, which may be used to defeat ASLR. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: slice-deque is unmaintained
reported: February 10, 2020
issued: October  7, 2021(last modified: November 18, 2021)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/94', 'url': 'https://github.com/gnzlbg/slice_deque/issues/94'}]
patched: no patched versions
description: The author of theslice-dequecrate is unresponsive and is not receiving security patches. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer may cause UB ('tectonic_xdv' crate)
reported: February 17, 2021
issued: September 18, 2021(last modified: June 13, 2023)
package: {'name': 'tectonic_xdv(crates.io)', 'url': '/packages/tectonic_xdv.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45703', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45703'}, {'text': 'GHSA-6692-8qqf-79jc', 'url': 'https://github.com/advisories/GHSA-6692-8qqf-79jc'}, {'text': 'GHSA-qwvx-c8j7-5g75', 'url': 'https://github.com/advisories/GHSA-qwvx-c8j7-5g75'}]
references: [{'text': 'https://github.com/tectonic-typesetting/tectonic/issues/752', 'url': 'https://github.com/tectonic-typesetting/tectonic/issues/752'}]
patched: >=0.1.12
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer. Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. The problem was fixed in commitcdff034by zero-initializing the buffer before passing it to a user-providedReadimplementation. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Crate has been renamed tocosmrs
reported: August 25, 2021
issued: August 25, 2021
package: {'name': 'cosmos_sdk(crates.io)', 'url': '/packages/cosmos_sdk.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/cosmos/cosmos-rust/issues/113', 'url': 'https://github.com/cosmos/cosmos-rust/issues/113'}]
patched: no patched versions
description: Thecosmos_sdkcrate, which provides a basic Rust SDK for the Cosmos ecosystem,
has rebranded to “CosmRS” in the spirit of other projects like CosmJS and CosmWasm. You can find the new home here: https://github.com/cosmos/cosmos-rust/tree/main/cosmrs The new crate name iscosmrs: https://crates.io/crates/cosmrs Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: spirv_headers is unmaintained, use spirv instead
reported: August 16, 2021
issued: August 23, 2021
package: {'name': 'spirv_headers(crates.io)', 'url': '/packages/spirv_headers.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/gfx-rs/rspirv/issues/197', 'url': 'https://github.com/gfx-rs/rspirv/issues/197'}]
patched: no patched versions
description: Because of versioning issues; thespirv_headerscrate is unmaintained. Usespirvfor parsing spirv files. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Reading on uninitialized memory may cause UB (util::read_spv())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'ash(crates.io)', 'url': '/packages/ash.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45688', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45688'}, {'text': 'GHSA-64wv-8vwp-xgw2', 'url': 'https://github.com/advisories/GHSA-64wv-8vwp-xgw2'}, {'text': 'GHSA-qj69-c89v-jwq2', 'url': 'https://github.com/advisories/GHSA-qj69-c89v-jwq2'}]
references: [{'text': 'https://github.com/MaikKlein/ash/issues/354', 'url': 'https://github.com/MaikKlein/ash/issues/354'}]
patched: >=0.33.1
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mopais technically unsound
reported: June  1, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'mopa(crates.io)', 'url': '/packages/mopa.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure', 'code-execution']
keywords: []
aliases: [{'text': 'CVE-2021-45695', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45695'}, {'text': 'GHSA-2gxj-qrp2-53jv', 'url': 'https://github.com/advisories/GHSA-2gxj-qrp2-53jv'}, {'text': 'GHSA-8mv5-7x95-7wcf', 'url': 'https://github.com/advisories/GHSA-8mv5-7x95-7wcf'}]
references: [{'text': 'https://github.com/chris-morgan/mopa/issues/13', 'url': 'https://github.com/chris-morgan/mopa/issues/13'}]
patched: no patched versions
description: Themopacrate redefines the deprecatedTraitObjectstruct fromcore::rawlike so: This is done to then transmute a reference to a trait object (&dyn Traitfor any traitTrait) into this struct and retrieve thedatafield for the purpose of downcasting. This is used to implementdowncast_ref_unchecked(), in terms of whichdowncast_ref()is also implemented. Same goes for mutable reference downcasting andBoxdowncasting. The Rust compiler explicitly reserves the right to change the memory layout of&dyn Traitfor any traitTrait. The worst case scenario is that it swapsdataandvtable, making an executable location breach and compromisation of ASLR possible, since reads fromdatawould readvtableinstead. Likewise, arbitrary code execution is also theoretically possible if reads ofvtablegenerated by the compiler readdatainstead. While, as of Rust 1.52, this unsound assumption still holds true, updating the compiler may silently create UB in a crate which previously compiled and run without issues, compromising the security of builds which are believed to be reproducible. A potential strategy to resolve this has already been suggested in an issue on the GitHub repository of the crate. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer infill_buf()andread_up_to()
reported: December 27, 2020
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'acc_reader(crates.io)', 'url': '/packages/acc_reader.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36513', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36513'}, {'text': 'CVE-2020-36514', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36514'}, {'text': 'GHSA-799f-r78p-gq9c', 'url': 'https://github.com/advisories/GHSA-799f-r78p-gq9c'}, {'text': 'GHSA-hv9v-7w3v-rj6f', 'url': 'https://github.com/advisories/GHSA-hv9v-7w3v-rj6f'}, {'text': 'GHSA-p4cr-64x4-f92f', 'url': 'https://github.com/advisories/GHSA-p4cr-64x4-f92f'}]
references: [{'text': 'https://github.com/netvl/acc_reader/issues/1', 'url': 'https://github.com/netvl/acc_reader/issues/1'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer may cause UB (read_entry())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'flumedb(crates.io)', 'url': '/packages/flumedb.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45684', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45684'}, {'text': 'GHSA-p46c-w9m3-7qr2', 'url': 'https://github.com/advisories/GHSA-p46c-w9m3-7qr2'}, {'text': 'GHSA-p56p-gq3f-whg8', 'url': 'https://github.com/advisories/GHSA-p56p-gq3f-whg8'}]
references: [{'text': 'https://github.com/sunrise-choir/flumedb-rs/issues/10', 'url': 'https://github.com/sunrise-choir/flumedb-rs/issues/10'}, {'text': 'https://github.com/sunrise-choir/flumedb-rs/pull/12', 'url': 'https://github.com/sunrise-choir/flumedb-rs/pull/12'}]
patched: >=0.1.6
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation.
There are two of such cases (go_offset_log::read_entry()&offset_log::read_entry()). ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: readon uninitialized buffer may cause UB (bite::read::BiteReadExpandedExt::read_framed_max)
reported: December 31, 2020
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'bite(crates.io)', 'url': '/packages/bite.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36511', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36511'}, {'text': 'GHSA-72r2-rg28-47v9', 'url': 'https://github.com/advisories/GHSA-72r2-rg28-47v9'}, {'text': 'GHSA-v2ch-fc8f-qm33', 'url': 'https://github.com/advisories/GHSA-v2ch-fc8f-qm33'}]
references: [{'text': 'https://github.com/hinaria/bite/issues/1', 'url': 'https://github.com/hinaria/bite/issues/1'}]
patched: no patched versions
description: Affected versions of this crate calls a user providedReadimplementation on an uninitialized buffer. Readon uninitialized buffer is defined as undefined behavior in Rust. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: 'Read' on uninitialized memory may cause UB
reported: January  3, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'binjs_io(crates.io)', 'url': '/packages/binjs_io.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45683', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45683'}, {'text': 'GHSA-c6px-4grw-hrjr', 'url': 'https://github.com/advisories/GHSA-c6px-4grw-hrjr'}, {'text': 'GHSA-cw4j-cf6c-mmfv', 'url': 'https://github.com/advisories/GHSA-cw4j-cf6c-mmfv'}]
references: [{'text': 'https://github.com/binast/binjs-ref/issues/460', 'url': 'https://github.com/binast/binjs-ref/issues/460'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. The crate currently contains 4 occurrences of such cases. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: columnar:Readon uninitialized buffer may cause UB (ColumnarReadExt::read_typed_vec())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'columnar(crates.io)', 'url': '/packages/columnar.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45685', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45685'}, {'text': 'GHSA-9mp7-45qh-r8j8', 'url': 'https://github.com/advisories/GHSA-9mp7-45qh-r8j8'}, {'text': 'GHSA-cxcc-q839-2cw9', 'url': 'https://github.com/advisories/GHSA-cxcc-q839-2cw9'}]
references: [{'text': 'https://github.com/frankmcsherry/columnar/issues/6', 'url': 'https://github.com/frankmcsherry/columnar/issues/6'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation (ColumnarReadExt::read_typed_vec()). ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Window can read out of bounds if Read instance returns more bytes than buffer size
reported: February  3, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'rdiff(crates.io)', 'url': '/packages/rdiff.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45694', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45694'}, {'text': 'GHSA-2rxc-8f9w-fjq8', 'url': 'https://github.com/advisories/GHSA-2rxc-8f9w-fjq8'}, {'text': 'GHSA-q579-9wp9-gfp2', 'url': 'https://github.com/advisories/GHSA-q579-9wp9-gfp2'}]
references: [{'text': 'https://github.com/dyule/rdiff/issues/3', 'url': 'https://github.com/dyule/rdiff/issues/3'}]
patched: no patched versions
description: rdiffperforms a diff of two provided strings or files. As part of its reading
code it uses the return value of aReadinstance to set the length of
its internal character vector. If theReadimplementation claims that it has read more bytes than the length
of the provided buffer, the length of the vector will be set to longer than its
capacity. This causesrdiffAPIs to return uninitialized memory in its API
methods. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: InputStream::read_exact :Readon uninitialized buffer causes UB
reported: December 31, 2020
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'buffoon(crates.io)', 'url': '/packages/buffoon.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36512', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36512'}, {'text': 'GHSA-hmx9-jm3v-33hv', 'url': 'https://github.com/advisories/GHSA-hmx9-jm3v-33hv'}, {'text': 'GHSA-v938-qcc9-rwv8', 'url': 'https://github.com/advisories/GHSA-v938-qcc9-rwv8'}]
references: [{'text': 'https://github.com/carllerche/buffoon/issues/2', 'url': 'https://github.com/carllerche/buffoon/issues/2'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized memory may cause UB (fn preamble_skipcount())
reported: January  5, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'csv-sniffer(crates.io)', 'url': '/packages/csv-sniffer.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45686', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45686'}, {'text': 'GHSA-9783-42pm-x5jq', 'url': 'https://github.com/advisories/GHSA-9783-42pm-x5jq'}, {'text': 'GHSA-r67p-m7g9-gxw6', 'url': 'https://github.com/advisories/GHSA-r67p-m7g9-gxw6'}]
references: [{'text': 'https://github.com/jblondin/csv-sniffer/issues/1', 'url': 'https://github.com/jblondin/csv-sniffer/issues/1'}, {'text': 'https://github.com/jblondin/csv-sniffer/pull/2', 'url': 'https://github.com/jblondin/csv-sniffer/pull/2'}]
patched: >=0.2.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation (withinfn preamble_skipcount()). ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer can cause UB (impl ofReadKVExt)
reported: January  3, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'bronzedb-protocol(crates.io)', 'url': '/packages/bronzedb-protocol.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45682', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45682'}, {'text': 'GHSA-5phc-849h-vcxg', 'url': 'https://github.com/advisories/GHSA-5phc-849h-vcxg'}, {'text': 'GHSA-jv2r-jx6q-89jg', 'url': 'https://github.com/advisories/GHSA-jv2r-jx6q-89jg'}]
references: [{'text': 'https://github.com/Hexilee/BronzeDB/issues/1', 'url': 'https://github.com/Hexilee/BronzeDB/issues/1'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Reading on uninitialized buffer may cause UB (gfx_auxil::read_spirv())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'gfx-auxil(crates.io)', 'url': '/packages/gfx-auxil.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45689', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45689'}, {'text': 'GHSA-28p5-7rg4-8v99', 'url': 'https://github.com/advisories/GHSA-28p5-7rg4-8v99'}, {'text': 'GHSA-ff2r-xpwq-6whj', 'url': 'https://github.com/advisories/GHSA-ff2r-xpwq-6whj'}]
references: [{'text': 'https://github.com/gfx-rs/gfx/issues/3567', 'url': 'https://github.com/gfx-rs/gfx/issues/3567'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: vec-const attempts to construct a Vec from a pointer to a const slice
reported: August 14, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'vec-const(crates.io)', 'url': '/packages/vec-const.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-45680', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45680'}, {'text': 'GHSA-jmwx-r3gq-qq3p', 'url': 'https://github.com/advisories/GHSA-jmwx-r3gq-qq3p'}, {'text': 'GHSA-x76r-966h-5qv9', 'url': 'https://github.com/advisories/GHSA-x76r-966h-5qv9'}]
references: [{'text': 'https://github.com/Eolu/vec-const/issues/1#issuecomment-898908241', 'url': 'https://github.com/Eolu/vec-const/issues/1#issuecomment-898908241'}]
patched: >=2.0.0
description: Affected versions of this crate claimed to construct a constVecwith nonzero length and capacity, but that cannot be done because such aVecrequires a pointer from an allocator. The implementation was later changed to just construct astd::borrow::Cow. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: anymap is unmaintained.
reported: May  7, 2021
issued: May  7, 2021(last modified: June 13, 2023)
package: {'name': 'anymap(crates.io)', 'url': '/packages/anymap.html'}
type: INFOUnmaintained
aliases: [{'text': 'CVE-2021-38187', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38187'}, {'text': 'GHSA-hc92-9h3m-c39j', 'url': 'https://github.com/advisories/GHSA-hc92-9h3m-c39j'}]
references: [{'text': 'https://github.com/chris-morgan/anymap/issues/37', 'url': 'https://github.com/chris-morgan/anymap/issues/37'}]
patched: no patched versions
description: Theanymapcrate does not appear to be maintained, and the most recent
published version 0.12.1 includes a soundness bug. This has beenfixeda few years ago, but
was never released. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cpuid-boolhas been renamed tocpufeatures
reported: May  6, 2021
issued: May  6, 2021
package: {'name': 'cpuid-bool(crates.io)', 'url': '/packages/cpuid-bool.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/utils/pull/381', 'url': 'https://github.com/RustCrypto/utils/pull/381'}]
patched: no patched versions
description: Please use the `cpufeatures`` crate going forward: https://github.com/RustCrypto/utils/tree/master/cpufeatures There will be no further releases ofcpuid-bool. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: aes-ctrhas been merged into theaescrate
reported: April 29, 2021
issued: May  3, 2021
package: {'name': 'aes-ctr(crates.io)', 'url': '/packages/aes-ctr.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/block-ciphers/pull/200', 'url': 'https://github.com/RustCrypto/block-ciphers/pull/200'}]
patched: no patched versions
description: Please use theaescrate going forward. The new repository location is at: https://github.com/RustCrypto/block-ciphers/tree/master/aes Theaescrate now has an optionalctrfeature which autodetects SIMD
features oni686/x86-64targets and uses them if available, or otherwise
falls back to the implementation in thectrcrate. If you would prefer not to have this autodetection performed, use theaescrate directly with thectrcrate. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: project abandoned; migrate to theaes-sivcrate
reported: February 28, 2021
issued: May  3, 2021
package: {'name': 'miscreant(crates.io)', 'url': '/packages/miscreant.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/miscreant/miscreant.rs/commit/5d921f579e0c2b9960d472cf377b8487d97fbcec', 'url': 'https://github.com/miscreant/miscreant.rs/commit/5d921f579e0c2b9960d472cf377b8487d97fbcec'}]
patched: no patched versions
description: The Miscreant project has been abandoned and archived. The Rust implementation has been adapted into the newaes-sivcrate which
implements both the AES-CMAC-SIV and AES-PMAC-SIV constructions: https://github.com/RustCrypto/AEADs/tree/master/aes-siv Please migrate to theaes-sivcrate. Alternatively see theaes-gcm-sivcrate for a newer, faster construction
which provides similar properties: https://github.com/RustCrypto/AEADs/tree/master/aes-gcm-siv Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: aesnihas been merged into theaescrate
reported: April 29, 2021
issued: May  3, 2021
package: {'name': 'aesni(crates.io)', 'url': '/packages/aesni.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/block-ciphers/pull/200', 'url': 'https://github.com/RustCrypto/block-ciphers/pull/200'}]
patched: no patched versions
description: Please use theaescrate going forward. The new repository location is at: https://github.com/RustCrypto/block-ciphers/tree/master/aes AES-NI is now autodetected at runtime oni686/x86-64platforms.
If AES-NI is not present, theaescrate will fallback to a constant-time
portable software implementation. To prevent this fallback (and have absence of AES-NI result in an illegal
instruction crash instead), continue to pass the same RUSTFLAGS which were
previously required for theaesnicrate to compile: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: aes-softhas been merged into theaescrate
reported: April 29, 2021
issued: May  3, 2021
package: {'name': 'aes-soft(crates.io)', 'url': '/packages/aes-soft.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/block-ciphers/pull/200', 'url': 'https://github.com/RustCrypto/block-ciphers/pull/200'}]
patched: no patched versions
description: Please use theaescrate going forward. The new repository location is at: https://github.com/RustCrypto/block-ciphers/tree/master/aes AES-NI is now autodetected at runtime oni686/x86-64platforms.
If AES-NI is not present, theaescrate will fallback to a constant-time
portable software implementation. To force the use of a constant-time portable implementation on these platforms,
even if AES-NI is available, use the newforce-softfeature of theaescrate to disable autodetection. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rulinalg is unmaintained, use nalgebra instead
reported: February 11, 2020
issued: March  4, 2021
package: {'name': 'rulinalg(crates.io)', 'url': '/packages/rulinalg.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/AtheMathmo/rulinalg/issues/201#issuecomment-584749313', 'url': 'https://github.com/AtheMathmo/rulinalg/issues/201#issuecomment-584749313'}]
patched: no patched versions
description: Therulinalgcrate is no longer maintained, usenalgebrainstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: office is unmaintained, use calamine instead
reported: February  4, 2021
issued: March  3, 2021
package: {'name': 'office(crates.io)', 'url': '/packages/office.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustSec/advisory-db/issues/742#issuecomment-773313783', 'url': 'https://github.com/RustSec/advisory-db/issues/742#issuecomment-773313783'}]
patched: no patched versions
description: Theofficecrate is unmaintained. Usecalaminefor reading excel files. Contact theofficeauthor for ownership of the package name. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toqjsonrpc
reported: February 15, 2021
issued: February 15, 2021
package: {'name': 'jsonrpc-quic(crates.io)', 'url': '/packages/jsonrpc-quic.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_api/pull/623', 'url': 'https://github.com/maidsafe/sn_api/pull/623'}]
patched: no patched versions
description: This crate has been renamed fromjsonrpc-quictoqjsonrpc. The new repository location is: https://github.com/maidsafe/sn_api Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_api
reported: February 15, 2021
issued: February 15, 2021
package: {'name': 'safe-api(crates.io)', 'url': '/packages/safe-api.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_api/pull/619', 'url': 'https://github.com/maidsafe/sn_api/pull/619'}]
patched: no patched versions
description: This crate has been renamed fromsafe-apitosn_api. The new repository location is: https://github.com/maidsafe/sn_api Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: lzw is unmaintained
reported: February 10, 2020
issued: February 10, 2021
package: {'name': 'lzw(crates.io)', 'url': '/packages/lzw.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/nwin/lzw/issues/2', 'url': 'https://github.com/nwin/lzw/issues/2'}]
patched: no patched versions
unaffected: >0.10.0
description: The author of thelzwcrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: stderr is unmaintained; use eprintln instead
reported: December 22, 2020
issued: January 20, 2021
package: {'name': 'stderr(crates.io)', 'url': '/packages/stderr.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/biluohc/stderr/issues/5', 'url': 'https://github.com/biluohc/stderr/issues/5'}]
patched: no patched versions
description: Thestderrcrate is no longer maintained by its current owner. The author recommends using theeprintlnmacro from the standard library as a
replacement. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: difference is unmaintained
reported: December 20, 2020
issued: January  6, 2021(last modified: January 24, 2021)
package: {'name': 'difference(crates.io)', 'url': '/packages/difference.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/johannhof/difference.rs/issues/45', 'url': 'https://github.com/johannhof/difference.rs/issues/45'}]
patched: no patched versions
unaffected: >2.0.0
description: The author of thedifferencecrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: interfaces2 is unmaintained, use interfaces instead
reported: January  4, 2021
issued: January  6, 2021
package: {'name': 'interfaces2(crates.io)', 'url': '/packages/interfaces2.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/aep/interfaces-rs', 'url': 'https://github.com/aep/interfaces-rs'}]
patched: no patched versions
description: Theinterfaces2crate is not maintained any more;
useinterfacesinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been superseded bysn_client
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_authenticator(crates.io)', 'url': '/packages/safe_authenticator.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_client/pull/1267', 'url': 'https://github.com/maidsafe/sn_client/pull/1267'}]
patched: no patched versions
description: This crate has been superseded bysn_client. The new repository location is: https://github.com/maidsafe/sn_client Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_node
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_vault(crates.io)', 'url': '/packages/safe_vault.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_node/pull/1116', 'url': 'https://github.com/maidsafe/sn_node/pull/1116'}]
patched: no patched versions
description: This crate has been renamed fromsafe_vaulttosn_node. The new repository location is: https://github.com/maidsafe/sn_node Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been superseded bysn_client
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_app(crates.io)', 'url': '/packages/safe_app.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_client/pull/1267', 'url': 'https://github.com/maidsafe/sn_client/pull/1267'}]
patched: no patched versions
description: This crate has been superseded bysn_client. The new repository location is: https://github.com/maidsafe/sn_client Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_client
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_core(crates.io)', 'url': '/packages/safe_core.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_client/pull/1267', 'url': 'https://github.com/maidsafe/sn_client/pull/1267'}]
patched: no patched versions
description: This crate has been renamed fromsafe_coretosn_client. The new repository location is: https://github.com/maidsafe/sn_client Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_routing
reported: November  2, 2020
issued: December  2, 2020
package: {'name': 'routing(crates.io)', 'url': '/packages/routing.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_routing/pull/2190', 'url': 'https://github.com/maidsafe/sn_routing/pull/2190'}]
patched: no patched versions
description: This crate has been renamed fromroutingtosn_routing. The new repository location is: https://github.com/maidsafe/sn_routing Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: memmap is unmaintained
reported: December  2, 2020
issued: December  2, 2020(last modified: August 25, 2022)
package: {'name': 'memmap(crates.io)', 'url': '/packages/memmap.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/danburkert/memmap-rs/issues/90', 'url': 'https://github.com/danburkert/memmap-rs/issues/90'}]
patched: no patched versions
unaffected: >0.7.0
description: The author of thememmapcrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Some lock_api lock guard objects can cause data races
reported: November  8, 2020
issued: November 18, 2020(last modified: June 13, 2023)
package: {'name': 'lock_api(crates.io)', 'url': '/packages/lock_api.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35910', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35910'}, {'text': 'CVE-2020-35911', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35911'}, {'text': 'CVE-2020-35912', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35912'}, {'text': 'CVE-2020-35913', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35913'}, {'text': 'CVE-2020-35914', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35914'}, {'text': 'GHSA-5wg8-7c9q-794v', 'url': 'https://github.com/advisories/GHSA-5wg8-7c9q-794v'}, {'text': 'GHSA-gmv4-vmx3-x9f3', 'url': 'https://github.com/advisories/GHSA-gmv4-vmx3-x9f3'}, {'text': 'GHSA-hj9h-wrgg-hgmx', 'url': 'https://github.com/advisories/GHSA-hj9h-wrgg-hgmx'}, {'text': 'GHSA-ppj3-7jw3-8vc4', 'url': 'https://github.com/advisories/GHSA-ppj3-7jw3-8vc4'}, {'text': 'GHSA-vh4p-6j7g-f4j9', 'url': 'https://github.com/advisories/GHSA-vh4p-6j7g-f4j9'}]
references: [{'text': 'https://github.com/Amanieu/parking_lot/pull/262', 'url': 'https://github.com/Amanieu/parking_lot/pull/262'}]
patched: >=0.4.2
affected functions: Version
lock_api::mappedmutexguard: >=0.1.0
lock_api::mappedrwlockreadguard: >=0.1.0
lock_api::mappedrwlockwriteguard: >=0.1.0
lock_api::rwlockreadguard: >=0.1.0
lock_api::rwlockwriteguard: >=0.1.0
description: Affected versions of lock_api had unsound implementations of theSendorSynctraits for some guard objects, namely: These guards could allow data races through types that are not safe toSendacross thread boundaries in safe Rust code. This issue was fixed by changing the trait bounds on theMappedguard types
and removing theSynctrait for theRwLockguards. Advisory available underCC0-1.0license.
affected_functions: lock_api;;mappedmutexguard
version_of_Affected: >=0.1.0

---
classification: INFO
subtitle: crate has been renamed toqp2p
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'quic-p2p(crates.io)', 'url': '/packages/quic-p2p.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/qp2p/pull/141', 'url': 'https://github.com/maidsafe/qp2p/pull/141'}]
patched: no patched versions
description: This crate has been renamed fromquic-p2ptoqp2p. The new repository location is: https://github.com/maidsafe/qp2p Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosafe-nd
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'safe-nd(crates.io)', 'url': '/packages/safe-nd.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_data_types/pull/218', 'url': 'https://github.com/maidsafe/sn_data_types/pull/218'}]
patched: no patched versions
description: This crate has been renamed fromsafe-ndtosn_data_types. The new repository location is: https://github.com/maidsafe/sn_data_types Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_fake_clock
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'fake_clock(crates.io)', 'url': '/packages/fake_clock.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_fake_clock/pull/38', 'url': 'https://github.com/maidsafe/sn_fake_clock/pull/38'}]
patched: no patched versions
description: This crate has been renamed fromfake_clocktosn_fake_clock. The new repository location is: https://github.com/maidsafe/sn_fake_clock Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_bindgen
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'safe_bindgen(crates.io)', 'url': '/packages/safe_bindgen.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_bindgen/pull/67', 'url': 'https://github.com/maidsafe/sn_bindgen/pull/67'}]
patched: no patched versions
description: This crate has been renamed fromsafe_bindgentosn_bindgen. The new repository location is: https://github.com/maidsafe/sn_bindgen Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_ffi_utils
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'ffi_utils(crates.io)', 'url': '/packages/ffi_utils.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_ffi_utils/pull/45', 'url': 'https://github.com/maidsafe/sn_ffi_utils/pull/45'}]
patched: no patched versions
description: This crate has been renamed fromffi_utilstosn_ffi_utils. The new repository location is: https://github.com/maidsafe/sn_ffi_utils Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: stdweb is unmaintained
reported: May  4, 2020
issued: October 25, 2020
package: {'name': 'stdweb(crates.io)', 'url': '/packages/stdweb.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/koute/stdweb/issues/403', 'url': 'https://github.com/koute/stdweb/issues/403'}]
patched: no patched versions
unaffected: >0.4.20
description: The author of thestdwebcrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Fix for UB in failure to catch panics crossing FFI boundaries
reported: March 10, 2019
issued: October 25, 2020(last modified: June 13, 2023)
package: {'name': 'libpulse-binding(crates.io)', 'url': '/packages/libpulse-binding.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2019-25055', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25055'}, {'text': 'GHSA-wcxc-jf6c-8rx9', 'url': 'https://github.com/advisories/GHSA-wcxc-jf6c-8rx9'}, {'text': 'GHSA-xvcg-2q82-r87j', 'url': 'https://github.com/advisories/GHSA-xvcg-2q82-r87j'}]
references: [{'text': 'https://github.com/jnqnfe/pulse-binding-rust/commit/7fd282aef7787577c385aed88cb25d004b85f494', 'url': 'https://github.com/jnqnfe/pulse-binding-rust/commit/7fd282aef7787577c385aed88cb25d004b85f494'}]
patched: >=2.6.0
description: Affected versions of this crate failed to catch panics crossing FFI boundaries via callbacks, which
is a form of UB. This flaw was corrected bythis commitwhich was included in version 2.6.0. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tocipher
reported: October 15, 2020
issued: October 25, 2020
package: {'name': 'block-cipher(crates.io)', 'url': '/packages/block-cipher.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/traits/pull/337', 'url': 'https://github.com/RustCrypto/traits/pull/337'}]
patched: no patched versions
description: This crate has been renamed fromblock-ciphertocipher. The new repository location is at: https://github.com/RustCrypto/traits/tree/master/cipher Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tocipher
reported: October 15, 2020
issued: October 25, 2020
package: {'name': 'stream-cipher(crates.io)', 'url': '/packages/stream-cipher.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/traits/pull/337', 'url': 'https://github.com/RustCrypto/traits/pull/337'}]
patched: no patched versions
description: This crate has been renamed fromstream-ciphertocipher. The new repository location is at: https://github.com/RustCrypto/traits/tree/master/cipher Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toblock-cipher
reported: May 26, 2020
issued: October  1, 2020
package: {'name': 'block-cipher-trait(crates.io)', 'url': '/packages/block-cipher-trait.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/traits/pull/139', 'url': 'https://github.com/RustCrypto/traits/pull/139'}]
patched: no patched versions
description: This crate has been renamed fromblock-cipher-traittoblock-cipher. The new repository location is at: https://github.com/RustCrypto/traits/tree/master/block-cipher Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tempdircrate has been deprecated; usetempfileinstead
reported: February 13, 2018
issued: October  1, 2020
package: {'name': 'tempdir(crates.io)', 'url': '/packages/tempdir.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rust-lang-deprecated/tempdir/pull/46', 'url': 'https://github.com/rust-lang-deprecated/tempdir/pull/46'}]
patched: no patched versions
description: Thetempdircrate has been deprecated
and the functionality is merged intotempfile. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: term is looking for a new maintainer
reported: November 19, 2018
issued: October  1, 2020
package: {'name': 'term(crates.io)', 'url': '/packages/term.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Stebalien/term/issues/93', 'url': 'https://github.com/Stebalien/term/issues/93'}]
patched: no patched versions
unaffected: >0.6.1
description: The author of thetermcrate does not have time to maintain it and is looking
for a new maintainer. Some maintained alternatives you can potentially switch to instead, depending
on your needs: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: net2crate has been deprecated; usesocket2instead
reported: May  1, 2020
issued: October  1, 2020
package: {'name': 'net2(crates.io)', 'url': '/packages/net2.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/deprecrated/net2-rs/commit/3350e3819adf151709047e93f25583a5df681091', 'url': 'https://github.com/deprecrated/net2-rs/commit/3350e3819adf151709047e93f25583a5df681091'}]
patched: no patched versions
description: Thenet2crate has been deprecated
and users are encouraged to consideredsocket2instead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: stb_truetypecrate has been deprecated; usettf-parserinstead
reported: April 18, 2020
issued: October  1, 2020
package: {'name': 'stb_truetype(crates.io)', 'url': '/packages/stb_truetype.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.redox-os.org/redox-os/stb_truetype-rs/-/commit/f1f5be4794e87bfc80a4255bc3f23ed75dd77645', 'url': 'https://gitlab.redox-os.org/redox-os/stb_truetype-rs/-/commit/f1f5be4794e87bfc80a4255bc3f23ed75dd77645'}]
patched: no patched versions
description: This crate was maintained for use in rusttype which has switched to usettf-parser Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Library exclusively intended to obfuscate code.
reported: April 23, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'plutonium(crates.io)', 'url': '/packages/plutonium.html'}
type: INFONotice
aliases: [{'text': 'GHSA-gfg9-x6px-r7gr', 'url': 'https://github.com/advisories/GHSA-gfg9-x6px-r7gr'}]
references: [{'text': 'https://docs.rs/plutonium', 'url': 'https://docs.rs/plutonium'}]
patched: no patched versions
description: This crate allows you to write safe functions with unsafe bodies without theunsafekeyword. The value this adds is questionable, and hidesunsafeusages from naive analysis. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cassandracrate is unmaintained; usecassandra-cppinstead
reported: December 15, 2016
issued: October  1, 2020
package: {'name': 'cassandra(crates.io)', 'url': '/packages/cassandra.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/tupshin/cassandra-rs/issues/52', 'url': 'https://github.com/tupshin/cassandra-rs/issues/52'}]
patched: no patched versions
unaffected: >0.8.1
description: Thecassandracrate has not seen a release since December 2016, and its author
is unresponsive. Thecassandra-cppcrate is a maintained fork: https://github.com/Metaswitch/cassandra-rs Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: libusb is unmaintained; use rusb instead
reported: September 10, 2016
issued: October  1, 2020
package: {'name': 'libusb(crates.io)', 'url': '/packages/libusb.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dcuddeback/libusb-rs/issues/33', 'url': 'https://github.com/dcuddeback/libusb-rs/issues/33'}]
patched: no patched versions
unaffected: >0.3.0
description: Thelibusbcrate has not seen a release since September 2016, and its author
is unresponsive. Therusbcrate is a maintained fork: https://github.com/a1ien/rusb Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rust_sodium is unmaintained; switch to a modern alternative
reported: January 20, 2020
issued: October  1, 2020
package: {'name': 'rust_sodium(crates.io)', 'url': '/packages/rust_sodium.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/rust_sodium/pull/117', 'url': 'https://github.com/maidsafe/rust_sodium/pull/117'}]
patched: no patched versions
unaffected: >0.10.2
description: Therust_sodiumcrate is no longer maintained by its current owner, who
advise in the repository readme that they are looking for
someone else to take ownership of it. We recommend you switch to an alternative crate such as: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rust-crypto is unmaintained; switch to a modern alternative
reported: September  6, 2016
issued: October  1, 2020(last modified: January  9, 2022)
package: {'name': 'rust-crypto(crates.io)', 'url': '/packages/rust-crypto.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/DaGenix/rust-crypto/issues/440', 'url': 'https://github.com/DaGenix/rust-crypto/issues/440'}]
patched: no patched versions
unaffected: >0.2.36
description: Therust-cryptocrate has not seen a release or GitHub commit since 2016,
and its author is unresponsive. NOTE: The (old)rust-cryptocrate (with hyphen) should not be confused with
similarly named (new)RustCrypto GitHub Org(without hyphen). The GitHub Org
is actively maintained. We recommend you switch to one of the following crates instead, depending on
which algorithms you need: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tiberius is unmaintained
reported: February 28, 2020
issued: October  1, 2020
package: {'name': 'tiberius(crates.io)', 'url': '/packages/tiberius.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustSec/advisory-db/issues/261', 'url': 'https://github.com/RustSec/advisory-db/issues/261'}]
patched: no patched versions
unaffected: >0.3.2
description: The author oftiberiushas archived the GitHub repository and left the
following note: Suggested alternatives are: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: smallvec creates uninitialized value of any type
reported: September 25, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2018-25023', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-25023'}, {'text': 'GHSA-55m5-whcv-c49c', 'url': 'https://github.com/advisories/GHSA-55m5-whcv-c49c'}, {'text': 'GHSA-66p5-j55p-32r9', 'url': 'https://github.com/advisories/GHSA-66p5-j55p-32r9'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/126', 'url': 'https://github.com/servo/rust-smallvec/issues/126'}]
patched: >=0.6.13
description: Affected versions of this crate calledmem::uninitialized()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null and thus may not remain uninitialized). The flaw was corrected by avoiding the use ofmem::uninitialized(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: chan is end-of-life; use crossbeam-channel instead
reported: July 31, 2018
issued: October  1, 2020
package: {'name': 'chan(crates.io)', 'url': '/packages/chan.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/BurntSushi/chan/commit/0a5c0d4ad4adc90a54ee04a427389acf2e157275', 'url': 'https://github.com/BurntSushi/chan/commit/0a5c0d4ad4adc90a54ee04a427389acf2e157275'}]
patched: no patched versions
unaffected: >0.1.23
description: chanhas reached its end-of-life and is now deprecated. The intended successor of this crate iscrossbeam-channel.
Its API is strikingly similar, but comes with a much betterselect!macro,
better performance, a better test suite and an all-around better
implementation. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: lz4-compress is unmaintained
reported: April 17, 2017
issued: October  1, 2020
package: {'name': 'lz4-compress(crates.io)', 'url': '/packages/lz4-compress.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.redox-os.org/redox-os/tfs/issues/89', 'url': 'https://gitlab.redox-os.org/redox-os/tfs/issues/89'}]
patched: no patched versions
description: According to the developersthis crate is no longer maintained. The suggested alternative islz4-compression, a maintained fork oflz4-compress. See alsolz-fearwhich is compatible with the reference LZ4 implementation in C, but not with lz4-compress. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crust repo has been archived; use libp2p instead
reported: November 21, 2019
issued: October  1, 2020
package: {'name': 'crust(crates.io)', 'url': '/packages/crust.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/crust', 'url': 'https://github.com/maidsafe/crust'}]
patched: no patched versions
unaffected: >0.32.1
description: ** Thecrustcrate repo was archived with no warning or explanation.** Given that it was archived with no warning or successor, there's not an
official replacement butrust-libp2plooks like it's got a similar feature set and is actively maintained. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: quickersort is deprecated and unmaintained
reported: June 30, 2018
issued: October  1, 2020
package: {'name': 'quickersort(crates.io)', 'url': '/packages/quickersort.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/notriddle/quickersort/commit/0bc164366315801f0c6b31f4081b7df9fc894076', 'url': 'https://github.com/notriddle/quickersort/commit/0bc164366315801f0c6b31f4081b7df9fc894076'}]
patched: no patched versions
unaffected: >3.0.1
description: The author of thequickersortcrate has deprecated it and does not recommend using it anymore. Everything in it has been incorporated intostd::sort_unstablein the standard library as of Rust 1.20. Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: gix-path uses local config across repos when it is the highest scope
reported: August 31, 2024
issued: September  1, 2024(last modified: September  3, 2024)
package: {'name': 'gix-path(crates.io)', 'url': '/packages/gix-path.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2024-45305', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45305'}, {'text': 'GHSA-v26r-4c9c-h3j6', 'url': 'https://github.com/advisories/GHSA-v26r-4c9c-h3j6'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-v26r-4c9c-h3j6', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-v26r-4c9c-h3j6'}, {'text': 'https://github.com/advisories/GHSA-v26r-4c9c-h3j6', 'url': 'https://github.com/advisories/GHSA-v26r-4c9c-h3j6'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-45305', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-45305'}]
cvss score: 2.5LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N
patched: >=0.10.10
affected functions: Version
gix_path::env::installation_config: *
gix_path::env::installation_config_prefix: *
description: 
unaffected: ["gix-pathexecutesgitto find the path of a configuration file that belongs to thegitinstallation itself, but mistakenly treats the local repository's configuration as system-wide if no higher scoped configuration is found. In rare cases, this causes a less trusted repository to be treated as more trusted, or leaks sensitive information from one repository to another, such as sending credentials to another repository's remote."]
References: ['It is believed to be very difficult to exploit this vulnerability deliberately, due to the need either to anticipate a situation in which higher-scoped configuration variables would be absent, or to arrange for this to happen. Although any operating system may be affected, users running Apple Git on macOS are much less likely to be affected.', "In the example shown above, more secure general practices would avoid it: using a credential manager, or even usinghttp.<url>.extraHeaderwith as specific a<url>as possible, rather than the more generalhttp.extraHeader. Many scenarios are analogous: if each repository's configuration is as secure as possible for how the repository is used, and secrets are stored securely and separately, then the circumstances under which an unacceptably unsecure configuration is used, or under which a leak of credentials would occur, become unlikely.", 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: gix_path;;env;;installation_config
version_of_Affected: *

---
classification: LOW
subtitle: gitoxide-core does not neutralize special characters for terminals
reported: August 22, 2024
issued: August 23, 2024
package: {'name': 'gitoxide-core(crates.io)', 'url': '/packages/gitoxide-core.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2024-43785', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-43785'}, {'text': 'GHSA-88g2-r9rw-g55h', 'url': 'https://github.com/advisories/GHSA-88g2-r9rw-g55h'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-88g2-r9rw-g55h', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-88g2-r9rw-g55h'}, {'text': 'https://github.com/advisories/GHSA-88g2-r9rw-g55h', 'url': 'https://github.com/advisories/GHSA-88g2-r9rw-g55h'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-43785', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-43785'}, {'text': 'https://github.com/Byron/gitoxide/issues/1534', 'url': 'https://github.com/Byron/gitoxide/issues/1534'}]
cvss score: 2.5LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N
patched: no patched versions
description: 
unaffected: ['Thegixandeincommands write pathnames and other metadata literally to terminals, even if they contain characters terminals treat specially, including ANSI escape sequences. This sometimes allows an untrusted repository to misrepresent its contents and to alter or concoct error messages.']
References: ['For users who do not clone or operate in clones of untrusted repositories, there is no impact.', 'Windows is much less affected than Unix-like systems due to limitations on what characters can appear in filenames, and because traditionally Windows terminals do not support as many ANSI escape sequences.', 'Because differentgixandeincommands display different data in different formats, the author of a malicious repository must guess how it will be used, which complicates crafting truly convincing output, though it may be possible to craft a repository wheregix clonefails to clone it but produces a misleading message.', 'Although this is mainly exploitable on systemsotherthan Windows, in the ability to produce misleading output this superficially resemblesCVE-2024-35197. But this is much more limited, because:', {'text': 'CVE-2024-35197', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, 'The misleading output can only be made to go where the application is already sending output. Redirection is not defeated, and devices to access cannot be chosen by the attacker.', 'The misleading output can only be take placewhenthe application is already producing output. This limitation complicates the production of believable messages.', 'Only terminals are affected. Even if a standard stream is redirected to another file or device, these special characters would not have a special effect, unless echoed later without sanitization.', 'Reading and blocking cannot be performed.', 'Applications other than the gitoxidegixandeinexecutables are unaffected. The exception is if another application usesgitoxide-core. But this is explicitly discouraged in thegitoxide-coredocumentation and is believed to be rare.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: LOW
subtitle: Apache Arrow Rust Object Store: AWS WebIdentityToken exposure in log files
reported: July 23, 2024
issued: July 23, 2024
package: {'name': 'object_store(crates.io)', 'url': '/packages/object_store.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2024-41178', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-41178'}]
references: [{'text': 'https://github.com/apache/arrow-rs/pull/6074', 'url': 'https://github.com/apache/arrow-rs/pull/6074'}, {'text': 'https://www.openwall.com/lists/oss-security/2024/07/23/3', 'url': 'https://www.openwall.com/lists/oss-security/2024/07/23/3'}]
cvss score: 3.8LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: Low
user interaction: None
scope: Changed
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N
patched: >=0.10.2
unaffected: <0.5.0
description: Exposure of temporary credentials in logs in Apache Arrow Rust Object Store,
version 0.10.1 and earlier on all platforms using AWS WebIdentityTokens. On certain error conditions, the logs may contain the OIDC token passed toAssumeRoleWithWebIdentity.
This allows someone with access to the logs to impersonate that identity,
including performing their own calls to AssumeRoleWithWebIdentity, until the
OIDC token expires. Typically OIDC tokens are valid for up to an hour, although
this will vary depending on the issuer. Users are recommended to use a different AWS authentication mechanism, disable
logging or upgrade to version 0.10.2, which fixes this issue. When using AWS WebIdentityTokens with theobject_storecrate, in the event of
a failure and automatic retry, the underlyingreqwesterror, including the
full URL with the credentials, potentially in the parameters, is written to the
logs. Thanks to Paul Hatcherian for reporting this vulnerability Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: sudo-rs: Path Traversal vulnerability
reported: November  1, 2023
issued: November  6, 2023
package: {'name': 'sudo-rs(crates.io)', 'url': '/packages/sudo-rs.html'}
type: Vulnerability
categories: ['file-disclosure']
keywords: []
aliases: [{'text': 'CVE-2023-42456', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42456'}, {'text': 'GHSA-2r3c-m6v7-9354', 'url': 'https://github.com/advisories/GHSA-2r3c-m6v7-9354'}]
references: [{'text': 'https://github.com/advisories/GHSA-2r3c-m6v7-9354', 'url': 'https://github.com/advisories/GHSA-2r3c-m6v7-9354'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42456', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42456'}]
cvss score: 3.1LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: High
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:N/I:L/A:L
patched: >=0.2.1
description: An issue was discovered where usernames containing the . and / characters could result in the corruption of specific files on the filesystem. As usernames are generally not limited by the characters they can contain, a username appearing to be a relative path can be constructed. For example we could add a user to the system containing the username ../../../../bin/cp. When logged in as a user with that name, that user could run sudo -K to clear their session record file. The session code then constructs the path to the session file by concatenating the username to the session file storage directory, resulting in a resolved path of /bin/cp. The code then clears that file, resulting in the cp binary effectively being removed from the system. An attacker needs to be able to login as a user with a constructed username. Given that such a username is unlikely to exist on an existing system, they will also need to be able to create the users with the constructed usernames. The bug is fixed in version 0.2.1 of sudo-rs. Sudo-rs now uses the uid for the user instead of their username for determining the filename. Note that an upgrade to this version will result in existing session files being ignored and users will be forced to re-authenticate. It also fully eliminates any possibility of path traversal, given that uids are always integer values. The issue was corrected in commitbfdbda22968e3de43fa8246cab1681cfd5d5493d. Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: Default functions in VolatileMemory trait lack bounds checks, potentially leading to out-of-bounds memory accesses
reported: September  1, 2023
issued: September  6, 2023
package: {'name': 'vm-memory(crates.io)', 'url': '/packages/vm-memory.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2023-41051', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-41051'}, {'text': 'GHSA-49hh-fprx-m68g', 'url': 'https://github.com/advisories/GHSA-49hh-fprx-m68g'}]
references: [{'text': 'https://github.com/rust-vmm/vm-memory/issues/250', 'url': 'https://github.com/rust-vmm/vm-memory/issues/250'}, {'text': 'https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8', 'url': 'https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8'}]
cvss score: 2.5LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'Low'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: None
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L
patched: >=0.12.2
affected functions: Version
vm_memory::volatile_memory::volatilememory::aligned_as_mut: <0.12.2
vm_memory::volatile_memory::volatilememory::aligned_as_ref: <0.12.2
vm_memory::volatile_memory::volatilememory::get_array_ref: <0.12.2
vm_memory::volatile_memory::volatilememory::get_atomic_ref: <0.12.2
vm_memory::volatile_memory::volatilememory::get_ref: <0.12.2
description: An issue was discovered in the default implementations of theVolatileMemory::{get_atomic_ref, aligned_as_ref, aligned_as_mut, get_ref, get_array_ref}trait functions, which allows out-of-bounds memory access if theVolatileMemory::get_slicefunction returns aVolatileSlicewhose length is less than the function’scountargument. No implementations ofget_sliceprovided invm_memoryare affected. Users of customVolatileMemoryimplementations may be impacted if the custom implementation does not adhere toget_slice's documentation. The issue started in version 0.1.0 but was fixed in version 0.12.2 by inserting a check that verifies that theVolatileSlicereturned byget_sliceis of the correct length. Advisory available underCC0-1.0license.
affected_functions: vm_memory;;volatile_memory;;volatilememory;;aligned_as_mut
version_of_Affected: <0.12.2

---
classification: LOW
subtitle: taurifilesystem scope partial bypass
reported: September 19, 2022
issued: February 25, 2023
package: {'name': 'tauri(crates.io)', 'url': '/packages/tauri.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2022-41874', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41874'}, {'text': 'GHSA-q9wv-22m9-vhqh', 'url': 'https://github.com/advisories/GHSA-q9wv-22m9-vhqh'}]
references: [{'text': 'https://github.com/tauri-apps/tauri/issues/5234', 'url': 'https://github.com/tauri-apps/tauri/issues/5234'}]
cvss score: 2.3LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: High
user interaction: Required
scope: Changed
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:H/UI:R/S:C/C:L/I:N/A:N
patched: >=1.0.7, <1.1.0>=1.1.2
unaffected: <1.0.0
description: A bug identified inthisissue allows a partial filesystem scope bypass if glob characters are used within file dialog or drag-and-drop functionalities. ThisPR fixes the issue by escaping glob characters. Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: File exposure in pleaser
reported: May 27, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['file-disclosure']
aliases: [{'text': 'CVE-2021-31153', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31153'}, {'text': 'GHSA-f3fg-5j9p-vchc', 'url': 'https://github.com/advisories/GHSA-f3fg-5j9p-vchc'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31153', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31153'}]
cvss score: 3.3LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N
patched: >=0.4
description: pleaser before 0.4 allows a local unprivileged attacker to gain knowledge about the existence of files or directories in privileged locations via the search_path function, the --check option, or the -d option. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: gix-path can use a fake program files location
reported: July 18, 2024
issued: July 18, 2024
package: {'name': 'gix-path(crates.io)', 'url': '/packages/gix-path.html'}
type: Vulnerability
categories: ['code-execution', 'privilege-escalation']
keywords: []
aliases: [{'text': 'CVE-2024-40644', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40644'}, {'text': 'GHSA-mgvv-9p9g-3jv4', 'url': 'https://github.com/advisories/GHSA-mgvv-9p9g-3jv4'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-mgvv-9p9g-3jv4', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-mgvv-9p9g-3jv4'}, {'text': 'https://github.com/advisories/GHSA-mgvv-9p9g-3jv4', 'url': 'https://github.com/advisories/GHSA-mgvv-9p9g-3jv4'}]
cvss score: 6.8MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow', 'Privileges required': 'Low', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow
privileges required: Low
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:L
patched: >=0.10.9
unaffected: ['When looking for Git for Windows so it can run it to report its paths,gix-pathcan be tricked into running anothergit.exeplaced in an untrusted location by a limited user account.']
affected oses: windows
affected functions: Version
gix_path::env::exe_invocation: *
gix_path::env::installation_config: *
gix_path::env::installation_config_prefix: *
gix_path::env::system_prefix: *
description: 
References: ['Only Windows is affected. Exploitation is unlikely except on a 32-bit system. In particular, running a 32-bit build on a 64-bit system is not a risk factor. Furthermore, the attacker must have a user account on the system, though it may be a relatively unprivileged account. Such a user can perform privilege escalation and execute code as another user, though it may be difficult to do so reliably because the targeted user account must run an application or service that usesgix-pathand must not havegitin itsPATH.', 'The main exploitable configuration is one where Git for Windows has been installed but not added toPATH. This is one of the options in its installer, though not the default option. Alternatively, an affected program that sanitizes itsPATHto remove seemingly nonessential directories could allow exploitation. But for the most part, if the target user has configured aPATHin which the realgit.execan be found, then this cannot be exploited.', 'This vulnerability is comparable toCVE-2022-24765, in which an uncontrolled path likeC:\\.git\\config, which a limited user can create, could supply configuration used by other users. However, in this case, exploitation is slightly simpler because, rather than using configuration, an executable is directly run.', {'text': 'CVE-2022-24765', 'url': 'https://github.com/git-for-windows/git/security/advisories/GHSA-vw2c-22j4-2fh2'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: gix_path;;env;;exe_invocation
version_of_Affected: *

---
classification: MEDIUM
subtitle: Refs and paths with reserved Windows device names access the devices
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-index(crates.io)', 'url': '/packages/gix-index.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2024-35197', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35197'}, {'text': 'GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://github.com/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197'}]
cvss score: 5.4MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L
patched: >=0.33.0
affected oses: windows
description: 
unaffected: ['On Windows, fetching refs that clash with legacy device names reads from the devices, and checking out paths that clash with such names writes arbitrary data to the devices. This allows a repository, when cloned, to cause indefinite blocking or the production of arbitrary message that appear to have come from the application, and potentially other harmful effects under limited circumstances.']
References: ['If Windows is not used, or untrusted repositories are not cloned or otherwise used, then there is no impact.', 'The impact is expected to be limited in common configurations, but may vary widely depending on what devices exist, how they are being used, how much knowledge an attacker has of the precise details of their use, and whether the user is likely to trust information that appears in a console. Accessing devices through refs is expected to be less dangerous than accessing them through filenames, since it is trivial to attempt to write arbitrary data using filenames.', "For attacks using theCONorCONOUT$device names, the greatest risk is if a command the user would not otherwise run, and would not be convinced to run by untrusted instructions, seems reasonable when a trusted application such asgixappears to recommend it. The user may then be misled into running an attacker's command.", 'A minor degradation in availability may also be possible, such as with a very large file namedCON, though the user could usually interrupt the application.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: Refs and paths with reserved Windows device names access the devices
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-worktree(crates.io)', 'url': '/packages/gix-worktree.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2024-35197', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35197'}, {'text': 'GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://github.com/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197'}]
cvss score: 5.4MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L
patched: >=0.34.0
affected oses: windows
description: 
unaffected: ['On Windows, fetching refs that clash with legacy device names reads from the devices, and checking out paths that clash with such names writes arbitrary data to the devices. This allows a repository, when cloned, to cause indefinite blocking or the production of arbitrary message that appear to have come from the application, and potentially other harmful effects under limited circumstances.']
References: ['If Windows is not used, or untrusted repositories are not cloned or otherwise used, then there is no impact.', 'The impact is expected to be limited in common configurations, but may vary widely depending on what devices exist, how they are being used, how much knowledge an attacker has of the precise details of their use, and whether the user is likely to trust information that appears in a console. Accessing devices through refs is expected to be less dangerous than accessing them through filenames, since it is trivial to attempt to write arbitrary data using filenames.', "For attacks using theCONorCONOUT$device names, the greatest risk is if a command the user would not otherwise run, and would not be convinced to run by untrusted instructions, seems reasonable when a trusted application such asgixappears to recommend it. The user may then be misled into running an attacker's command.", 'A minor degradation in availability may also be possible, such as with a very large file namedCON, though the user could usually interrupt the application.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: Refs and paths with reserved Windows device names access the devices
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-ref(crates.io)', 'url': '/packages/gix-ref.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2024-35197', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35197'}, {'text': 'GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://github.com/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197'}]
cvss score: 5.4MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L
patched: >=0.44.0
affected oses: windows
description: 
unaffected: ['On Windows, fetching refs that clash with legacy device names reads from the devices, and checking out paths that clash with such names writes arbitrary data to the devices. This allows a repository, when cloned, to cause indefinite blocking or the production of arbitrary message that appear to have come from the application, and potentially other harmful effects under limited circumstances.']
References: ['If Windows is not used, or untrusted repositories are not cloned or otherwise used, then there is no impact.', 'The impact is expected to be limited in common configurations, but may vary widely depending on what devices exist, how they are being used, how much knowledge an attacker has of the precise details of their use, and whether the user is likely to trust information that appears in a console. Accessing devices through refs is expected to be less dangerous than accessing them through filenames, since it is trivial to attempt to write arbitrary data using filenames.', "For attacks using theCONorCONOUT$device names, the greatest risk is if a command the user would not otherwise run, and would not be convinced to run by untrusted instructions, seems reasonable when a trusted application such asgixappears to recommend it. The user may then be misled into running an attacker's command.", 'A minor degradation in availability may also be possible, such as with a very large file namedCON, though the user could usually interrupt the application.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: serdedeserialization forFamStructWrapperlacks bound checks that could potentially lead to out-of-bounds memory access
reported: January  2, 2024
issued: January 13, 2024
package: {'name': 'vmm-sys-util(crates.io)', 'url': '/packages/vmm-sys-util.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2023-50711', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-50711'}, {'text': 'GHSA-875g-mfp6-g7f9', 'url': 'https://github.com/advisories/GHSA-875g-mfp6-g7f9'}]
references: [{'text': 'https://github.com/advisories/GHSA-875g-mfp6-g7f9', 'url': 'https://github.com/advisories/GHSA-875g-mfp6-g7f9'}]
cvss score: 5.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:L
patched: >=0.12.0
unaffected: <0.5.0
affected functions: Version
vmm_sys_util::fam::famstructwrapper::deserialize: <0.12.0, >=0.5.0
description: An issue was discovered in theFamStructWrapper::deserializeimplementation
provided by the crate forvmm_sys_util::fam::FamStructWrapper, which can lead
to out of bounds memory accesses. The deserialization does not check that the
length stored in the header matches the flexible array length. Mismatch in the
lengths might allow out of bounds memory access through Rust-safe methods. Impacted versions: >= 0.5.0 The issue was corrected in version 0.12.0 by inserting a check that verifies
the lengths of compared flexible arrays are equal for any deserialized header
and aborting deserialization otherwise. Moreover, the API was changed so that
header length can only be modified through Rust-unsafe code. This ensures that
users cannot trigger out-of-bounds memory access from Rust-safe code. Advisory available underCC0-1.0license.
affected_functions: vmm_sys_util;;fam;;famstructwrapper;;deserialize
version_of_Affected: <0.12.0, >=0.5.0

---
classification: MEDIUM
subtitle: Marvin Attack: potential key recovery through timing sidechannels
reported: November 22, 2023
issued: November 28, 2023(last modified: December 15, 2023)
package: {'name': 'rsa(crates.io)', 'url': '/packages/rsa.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2023-49092', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-49092'}, {'text': 'GHSA-c38w-74pg-36hr', 'url': 'https://github.com/advisories/GHSA-c38w-74pg-36hr'}, {'text': 'GHSA-4grx-2x9w-596c', 'url': 'https://github.com/advisories/GHSA-4grx-2x9w-596c'}]
references: [{'text': 'https://github.com/RustCrypto/RSA/issues/19#issuecomment-1822995643', 'url': 'https://github.com/RustCrypto/RSA/issues/19#issuecomment-1822995643'}, {'text': 'https://people.redhat.com/~hkario/marvin/', 'url': 'https://people.redhat.com/~hkario/marvin/'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: no patched versions
description: 
unaffected: ['Due to a non-constant-time implementation, information about the private key is leaked through timing information which is observable over the network. An attacker may be able to use that information to recover the key.']
References: ['This vulnerability was discovered as part of the "Marvin Attack", which revealed several implementations of RSA including OpenSSL had not properly mitigated timing sidechannel attacks.', {'text': 'Marvin Attack', 'url': 'https://people.redhat.com/~hkario/marvin/'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: Sequential calls of encryption API (encrypt,wrap, anddump) result in nonce reuse
reported: October 15, 2023
issued: October 23, 2023(last modified: February 10, 2024)
package: {'name': 'cocoon(crates.io)', 'url': '/packages/cocoon.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'GHSA-6878-6wc2-pf5h', 'url': 'https://github.com/advisories/GHSA-6878-6wc2-pf5h'}]
references: [{'text': 'https://github.com/fadeevab/cocoon/issues/22', 'url': 'https://github.com/fadeevab/cocoon/issues/22'}]
cvss score: 4.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:N
patched: >=0.4.0
affected functions: Version
cocoon::cocoon::dump: <=0.3.3
cocoon::cocoon::encrypt: <=0.3.3
cocoon::cocoon::wrap: <=0.3.3
cocoon::minicocoon::dump: <=0.3.3
cocoon::minicocoon::encrypt: <=0.3.3
cocoon::minicocoon::wrap: <=0.3.3
description: Problem: Trying to create a new encrypted message with the same cocoon
object generates the same ciphertext. It mostly affectsMiniCocoonandCocoonobjects with custom seeds and RNGs (whereStdRngis used under
the hood). Note: The issue doesNOTaffect objects created withCocoon::newwhich utilizesThreadRng. Cause:StdRngproduces the same nonce becauseStdRng::cloneresets its
state. Measure: Make encryption API mutable (encrypt,wrap, anddump). Workaround: Create a new cocoon object with a newseedper each
encryption. Forcocoon <= 0.3.3, create a new cocoon with a differentseedper eachencrypt/wrap/dumpcall. Advisory available underCC0-1.0license.
affected_functions: cocoon;;cocoon;;dump
version_of_Affected: <=0.3.3

---
classification: MEDIUM
subtitle: Vulnerable to privilege escalation using ioctls TIOCSTI and TIOCLINUX
reported: April 29, 2023
issued: October  3, 2023(last modified: February 10, 2024)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2023-46277', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-46277'}, {'text': 'GHSA-cgf8-h3fp-h956', 'url': 'https://github.com/advisories/GHSA-cgf8-h3fp-h956'}]
references: [{'text': 'https://gitlab.com/edneville/please/-/issues/13', 'url': 'https://gitlab.com/edneville/please/-/issues/13'}]
cvss score: 4.6MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: Low
user interaction: Required
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N
patched: no patched versions
description: please is vulnerable to privilege escalation using ioctls TIOCSTI
and TIOCLINUX on systems where they are not disabled. Here is how to see it in action: Please note that: This affects both the case where root wants to drop privileges as well when non-root wants to gain other privileges. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Versionize::deserializeimplementation forFamStructWrapper<T>is lacking bound checks, potentially leading to out of bounds memory accesses
reported: March 24, 2023
issued: March 25, 2023(last modified: June 13, 2023)
package: {'name': 'versionize(crates.io)', 'url': '/packages/versionize.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2023-28448', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-28448'}, {'text': 'GHSA-8vxc-r5wp-vgvc', 'url': 'https://github.com/advisories/GHSA-8vxc-r5wp-vgvc'}]
references: [{'text': 'https://github.com/firecracker-microvm/versionize/pull/53', 'url': 'https://github.com/firecracker-microvm/versionize/pull/53'}]
cvss score: 5.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:L
patched: >=0.1.10
affected oses: linux
description: An issue was discovered in theVersionize::deserializeimplementation provided by theversionizecrate forvmm_sys_util::fam::FamStructWrapper, which can lead to out of bounds memory accesses. The impact started with version 0.1.1. The issue was corrected in version 0.1.10 by inserting a check that verifies, for any deserialized header, the lengths of compared flexible arrays are equal and aborting deserialization otherwise. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: pnet_packetbuffer overrun inset_payloadsetters
reported: June 19, 2020
issued: February  9, 2023(last modified: June 13, 2023)
package: {'name': 'pnet_packet(crates.io)', 'url': '/packages/pnet_packet.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-cf4g-fcf8-3cr9', 'url': 'https://github.com/advisories/GHSA-cf4g-fcf8-3cr9'}]
references: [{'text': 'https://github.com/libpnet/libpnet/issues/449', 'url': 'https://github.com/libpnet/libpnet/issues/449'}]
cvss score: 6MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'High', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: High
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H
patched: >=0.27.2
description: As indicated by thisissue, a buffer overrun is possible in theset_payloadsetter of the various mutable "Packet" struct setters. The offendingset_payloadfunctions were defined within the structimplblocks in earlier versions of the package, and later by thepacketmacro. Fixed in thepacketmacro bythisPR. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: aliyun-oss-clientsecret exposure
reported: November 19, 2022
issued: February  7, 2023
package: {'name': 'aliyun-oss-client(crates.io)', 'url': '/packages/aliyun-oss-client.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-39397', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39397'}, {'text': 'GHSA-3w3h-7xgx-grwc', 'url': 'https://github.com/advisories/GHSA-3w3h-7xgx-grwc'}]
references: [{'text': 'https://github.com/advisories/GHSA-3w3h-7xgx-grwc', 'url': 'https://github.com/advisories/GHSA-3w3h-7xgx-grwc'}]
cvss score: 5.6MEDIUM
cvss details: {'Attack vector': 'Physical', 'Attack complexity': 'LowPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityHighIntegrityLowAvailabilityNone', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'High', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Physical
attack complexity: LowPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityHighIntegrityLowAvailabilityNone
privileges required: High
user interaction: Required
scope: Changed
confidentiality: High
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:P/AC:L/PR:H/UI:R/S:C/C:H/I:L/A:N
patched: >=0.8.1
description: Thealiyun-oss-clientunintentionally divulges the authentication secret. This bug was fixed inthiscommit by limiting the concerned traits to bepubonly within the crate. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: tauri'sreadDirendpoint allows possible enumeration outside of filesystem scope
reported: August  7, 2022
issued: February  5, 2023
package: {'name': 'tauri(crates.io)', 'url': '/packages/tauri.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2022-39215', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39215'}, {'text': 'GHSA-28m8-9j7v-x499', 'url': 'https://github.com/advisories/GHSA-28m8-9j7v-x499'}]
references: [{'text': 'https://github.com/tauri-apps/tauri/issues/4882', 'url': 'https://github.com/tauri-apps/tauri/issues/4882'}]
cvss score: 5.8MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Changed
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:N
patched: >=1.0.6
description: It is possible forreadDirto incorrectly enumerate files from a symlinked directory if called recursively when specifying an empty string for the dir parameter as outlined inthisissue. This is corrected inthisPR by checking if a directory is a symlink before reading from it. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: kamadak-exif DoS with untrusted PNG data
reported: January  4, 2021
issued: September  8, 2022
package: {'name': 'kamadak-exif(crates.io)', 'url': '/packages/kamadak-exif.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2021-21235', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21235'}, {'text': 'GHSA-px9g-8hgv-jvg2', 'url': 'https://github.com/advisories/GHSA-px9g-8hgv-jvg2'}]
references: [{'text': 'https://github.com/kamadak/exif-rs/commit/1b05eab57e484cd7d576d4357b9cda7fdc57df8c', 'url': 'https://github.com/kamadak/exif-rs/commit/1b05eab57e484cd7d576d4357b9cda7fdc57df8c'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H
patched: >=0.5.3
unaffected: <0.5.2
affected functions: Version
kamadak_exif::reader::read_from_container: >=0.5.2, <0.5.3
description: Attacker crafted data can cause a infinite loop leading to DoS if used with untrusted data. Advisory available underCC0-1.0license.
affected_functions: kamadak_exif;;reader;;read_from_container
version_of_Affected: >=0.5.2, <0.5.3

---
classification: MEDIUM
subtitle: OCSP_basic_verifymay incorrectly verify the response signing certificate
reported: May  3, 2022
issued: May 19, 2022(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-1343', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1343'}, {'text': 'GHSA-mfm6-r9g2-q4r7', 'url': 'https://github.com/advisories/GHSA-mfm6-r9g2-q4r7'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20220503.txt', 'url': 'https://www.openssl.org/news/secadv/20220503.txt'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=300.0.6
unaffected: <300.0
description: The functionOCSP_basic_verifyverifies the signer certificate on an OCSP
response. In the case where the (non-default) flag OCSP_NOCHECKS is used then
the response will be positive (meaning a successful verification) even in the
case where the response signing certificate fails to verify. It is anticipated that most users ofOCSP_basic_verifywill not use the
OCSP_NOCHECKS flag. In this case theOCSP_basic_verifyfunction will return
a negative value (indicating a fatal error) in the case of a certificate
verification failure. The normal expected return value in this case would be 0. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Incorrect MAC key used in the RC4-MD5 ciphersuite
reported: May  3, 2022
issued: May 19, 2022(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-1434', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1434'}, {'text': 'GHSA-638m-m8mh-7gw2', 'url': 'https://github.com/advisories/GHSA-638m-m8mh-7gw2'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20220503.txt', 'url': 'https://www.openssl.org/news/secadv/20220503.txt'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=300.0.6
unaffected: <300.0
description: The OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the
AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to
modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that
the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint
will always be rejected by the recipient and the connection will fail at that
point. Many application protocols require data to be sent from the client to the
server first. Therefore, in such a case, only an OpenSSL 3.0 server would be
impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being
sent in both directions. In this case both clients and servers could be
affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0
endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the
handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker
cannot decrypt data that has been encrypted using this ciphersuite - they can
only modify it. In order for this attack to work both endpoints must legitimately negotiate the
RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0,
and is not available within the default provider or the default ciphersuite
list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In
order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must
have occurred: Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Timing attack
reported: May  9, 2022
issued: May  9, 2022(last modified: June 13, 2023)
package: {'name': 'totp-rs(crates.io)', 'url': '/packages/totp-rs.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2022-29185', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-29185'}, {'text': 'GHSA-8vxv-2g8p-2249', 'url': 'https://github.com/advisories/GHSA-8vxv-2g8p-2249'}]
references: [{'text': 'https://github.com/constantoine/totp-rs/security/advisories/GHSA-8vxv-2g8p-2249', 'url': 'https://github.com/constantoine/totp-rs/security/advisories/GHSA-8vxv-2g8p-2249'}]
cvss score: 4.2MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: High
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:H/I:N/A:N
patched: >=1.1.0
affected functions: Version
totp_rs::totp::check: <1.1.0
description: Affecting versions did not compare tokens in constant time, which could make it possible for an attacker to guess the 2fa token of a user. This has been fixed by using using the crate constant_time_eq for comparison. Advisory available underCC0-1.0license.
affected_functions: totp_rs;;totp;;check
version_of_Affected: <1.1.0

---
classification: MEDIUM
subtitle: Multiple Vulnerabilities in Wasmtime
reported: September 17, 2021
issued: September 17, 2021(last modified: June 13, 2023)
package: {'name': 'wasmtime(crates.io)', 'url': '/packages/wasmtime.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2021-39216', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39216'}, {'text': 'CVE-2021-39218', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39218'}, {'text': 'CVE-2021-39219', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39219'}, {'text': 'GHSA-4873-36h9-wv49', 'url': 'https://github.com/advisories/GHSA-4873-36h9-wv49'}, {'text': 'GHSA-q879-9g95-56mx', 'url': 'https://github.com/advisories/GHSA-q879-9g95-56mx'}, {'text': 'GHSA-v4cp-h94r-m7xf', 'url': 'https://github.com/advisories/GHSA-v4cp-h94r-m7xf'}]
references: [{'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-v4cp-h94r-m7xf', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-v4cp-h94r-m7xf'}, {'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49'}, {'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-q879-9g95-56mx', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-q879-9g95-56mx'}]
cvss score: 6.3MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H
patched: >=0.30.0
affected functions: Version
wasmtime::linker::func_new: <0.30.0
wasmtime::linker::func_wrap: <0.30.0
wasmtime::store::gc: <0.30.0
description: Advisory available underCC0-1.0license.
affected_functions: wasmtime;;linker;;func_new
version_of_Affected: <0.30.0

---
classification: MEDIUM
subtitle: Observable Discrepancy in libsecp256k1-rs
reported: January 22, 2020
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'libsecp256k1-rs(crates.io)', 'url': '/packages/libsecp256k1-rs.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2019-20399', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20399'}, {'text': 'GHSA-7cqg-8449-rmfv', 'url': 'https://github.com/advisories/GHSA-7cqg-8449-rmfv'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2019-20399', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2019-20399'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.3.1
description: A timing vulnerability in the Scalar::check_overflow function in Parity libsecp256k1-rs before 0.3.1 potentially allows an attacker to leak information via a side-channel attack. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Lenienthyperheader parsing ofContent-Lengthcould allow request smuggling
reported: July  7, 2021
issued: August  8, 2021(last modified: October 19, 2021)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-32715', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32715'}, {'text': 'GHSA-f3pg-qwvg-p99c', 'url': 'https://github.com/advisories/GHSA-f3pg-qwvg-p99c'}]
references: [{'text': 'https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c', 'url': 'https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.14.10
description: hyper's HTTP header parser accepted, according to RFC 7230, illegal contents insideContent-Lengthheaders.
Due to this, upstream HTTP proxies that ignore the header may still forward them along if it chooses to ignore the error. To be vulnerable,hypermust be used as an HTTP/1 server and using an HTTP proxy upstream that ignores the header's contents
but still forwards it. Due to all the factors that must line up, an attack exploiting this vulnerability is unlikely. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Null pointer deref inX509_issuer_and_serial_hash()
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2021-23841', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-23841'}, {'text': 'GHSA-84rm-qf37-fgc2', 'url': 'https://github.com/advisories/GHSA-84rm-qf37-fgc2'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210216.txt', 'url': 'https://www.openssl.org/news/secadv/20210216.txt'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.14
description: The OpenSSL public API functionX509_issuer_and_serial_hash()attempts to
create a unique hash value based on the issuer and serial number data contained
within an X509 certificate. However it fails to correctly handle any errors
that may occur while parsing the issuer field (which might occur if the issuer
field is maliciously constructed). This may subsequently result in a NULL
pointer deref and a crash leading to a potential denial of service attack. The functionX509_issuer_and_serial_hash()is never directly called by OpenSSL
itself so applications are only vulnerable if they use this function directly
and they use it on certificates that may have been obtained from untrusted
sources. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: NULL pointer deref in signature_algorithms processing
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2021-3449', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3449'}, {'text': 'GHSA-83mx-573x-5rw9', 'url': 'https://github.com/advisories/GHSA-83mx-573x-5rw9'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210325.txt', 'url': 'https://www.openssl.org/news/secadv/20210325.txt'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.15
description: An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation
ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits
the signature_algorithms extension (where it was present in the initial
ClientHello), but includes a signature_algorithms_cert extension then a NULL
pointer dereference will result, leading to a crash and a denial of service
attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which
is the default configuration). OpenSSL TLS clients are not impacted by this
issue. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Generators can cause data races if non-Send types are used in their generator functions
reported: November 16, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'generator(crates.io)', 'url': '/packages/generator.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36471', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36471'}, {'text': 'GHSA-w3g5-2848-2v8r', 'url': 'https://github.com/advisories/GHSA-w3g5-2848-2v8r'}]
references: [{'text': 'https://github.com/Xudong-Huang/generator-rs/issues/27', 'url': 'https://github.com/Xudong-Huang/generator-rs/issues/27'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.7.0
description: TheGeneratortype is an iterable which uses a generator function that yields
values. In affected versions of the crate, the provided function yielding values
had noSendbounds despite theGeneratoritself implementingSend. The generator function lacking aSendbound means that types that are
dangerous to send across threads such asRccould be sent as part of a
generator, potentially leading to data races. This flaw was fixed in commitf7d120a3bby enforcing that the generator function be bound bySend. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: ImmediateIO and TransactionalIO can cause data races
reported: December 18, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'max7301(crates.io)', 'url': '/packages/max7301.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36472', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36472'}, {'text': 'GHSA-rmff-f8w9-c9rm', 'url': 'https://github.com/advisories/GHSA-rmff-f8w9-c9rm'}]
references: [{'text': 'https://github.com/edarc/max7301/issues/1', 'url': 'https://github.com/edarc/max7301/issues/1'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.0
description: TheImmediateIOandTransactionalIOtypes implementSyncfor all containedExpander<EI>types regardless of if theExpanderitself is safe to use
across threads. As theIOtypes allow retrieving theExpander, this can lead to non-thread
safe types being sent across threads as part of theExpanderleading to data
races. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: RingBuffer can create multiple mutable references and cause data races
reported: December 17, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'disrustor(crates.io)', 'url': '/packages/disrustor.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36470', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36470'}, {'text': 'GHSA-w9r2-qrpm-4rmj', 'url': 'https://github.com/advisories/GHSA-w9r2-qrpm-4rmj'}]
references: [{'text': 'https://github.com/sklose/disrustor/issues/1', 'url': 'https://github.com/sklose/disrustor/issues/1'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3
description: TheRingBuffertype retrieves mutable references from theDataProviderin a
non-atomic manner, potentially allowing the creation of multiple mutable
references.RingBufferalso implements theSendandSynctraits for all
typesT. This allows undefined behavior from the aliased mutable references as well
as data races. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Data race and memory safety issue inIndex
reported: November 15, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'appendix(crates.io)', 'url': '/packages/appendix.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36469', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36469'}, {'text': 'GHSA-fvhr-7j8m-3cvc', 'url': 'https://github.com/advisories/GHSA-fvhr-7j8m-3cvc'}]
references: [{'text': 'https://github.com/krl/appendix/issues/6', 'url': 'https://github.com/krl/appendix/issues/6'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Theappendixcrate implements a key-value mapping data structure calledIndex<K, V>that is stored on disk. The crate allows for any type to inhabit
the genericKandVtype parameters and implements Send and Sync for them
unconditionally. Using a type that is not marked asSendorSyncwithIndexcan allow it
to be used across multiple threads leading to data races. Additionally using
reference types for the keys or values will lead to the segmentation faults
in the crate's code. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Multiple soundness issues inPtr
reported: December 10, 2020
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'cgc(crates.io)', 'url': '/packages/cgc.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36466', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36466'}, {'text': 'CVE-2020-36467', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36467'}, {'text': 'CVE-2020-36468', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36468'}, {'text': 'GHSA-f3mq-99jr-ww4r', 'url': 'https://github.com/advisories/GHSA-f3mq-99jr-ww4r'}, {'text': 'GHSA-f9xr-3m55-5q2v', 'url': 'https://github.com/advisories/GHSA-f9xr-3m55-5q2v'}, {'text': 'GHSA-pwhf-7427-9vv2', 'url': 'https://github.com/advisories/GHSA-pwhf-7427-9vv2'}]
references: [{'text': 'https://github.com/playXE/cgc/issues/5', 'url': 'https://github.com/playXE/cgc/issues/5'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate have the following issues: Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: XSS incomrak
reported: February 21, 2021
issued: February 21, 2021(last modified: June 13, 2023)
package: {'name': 'comrak(crates.io)', 'url': '/packages/comrak.html'}
type: Vulnerability
categories: ['format-injection']
keywords: []
aliases: [{'text': 'CVE-2021-27671', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27671'}, {'text': 'GHSA-xmr7-v725-2jjr', 'url': 'https://github.com/advisories/GHSA-xmr7-v725-2jjr'}]
references: [{'text': 'https://github.com/kivikakk/comrak/releases/tag/0.9.1', 'url': 'https://github.com/kivikakk/comrak/releases/tag/0.9.1'}]
cvss score: 6.1MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: Required
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
patched: >=0.9.1
description: Thecomrakwe were matching unsafe URL prefixes, such asdata:orjavascript:, in a case-sensitive manner. This meant prefixes likeData:were untouched. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: insert_slice_clone can double drop if Clone panics.
reported: February  3, 2021
issued: February  4, 2021(last modified: June 13, 2023)
package: {'name': 'qwutils(crates.io)', 'url': '/packages/qwutils.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-26954', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26954'}, {'text': 'GHSA-68p4-pjpf-xwcq', 'url': 'https://github.com/advisories/GHSA-68p4-pjpf-xwcq'}]
references: [{'text': 'https://github.com/qwertz19281/rust_utils/issues/3', 'url': 'https://github.com/qwertz19281/rust_utils/issues/3'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L
patched: >=0.3.1
affected functions: Version
qwutils::imp::vec::vecext::insert_slice_clone: <0.3.1
description: Affected versions of this crate usedptr::copywhen inserting into the middle
of aVec. When ownership was temporarily duplicated during this copy, it calls
the clone method of a user provided element. This issue can result in an element being double-freed if the clone call panics. Commit20cb73dfixed this issue by adding aset_len(0)call before
operating on the vector to avoid dropping the elements during a panic. Advisory available underCC0-1.0license.
affected_functions: qwutils;;imp;;vec;;vecext;;insert_slice_clone
version_of_Affected: <0.3.1

---
classification: MEDIUM
subtitle: Demuxercan carry non-Send types across thread boundaries
reported: December 22, 2020
issued: January 21, 2021(last modified: June 13, 2023)
package: {'name': 'va-ts(crates.io)', 'url': '/packages/va-ts.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36220', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36220'}, {'text': 'GHSA-3hj2-hh36-hv9v', 'url': 'https://github.com/advisories/GHSA-3hj2-hh36-hv9v'}]
references: [{'text': 'https://github.com/video-audio/va-ts/issues/4', 'url': 'https://github.com/video-audio/va-ts/issues/4'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.0.4
description: In the affected versions of this crate,Demuxer<T>unconditionally implementedSendwith no trait bounds onT. This allows sending a non-Send typeTacross thread boundaries, which can cause undefined behavior like unlocking a mutex from a thread that didn't lock the mutex, or memory corruption from data race. The flaw was corrected in commit 0562cbf by adding aT: Sendbound to theSendimpl forDemuxer<T>. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: may_queue's Queue lacks Send/Sync bound for its Send/Sync trait.
reported: November 10, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'may_queue(crates.io)', 'url': '/packages/may_queue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36217', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36217'}, {'text': 'GHSA-pphf-f93w-gc84', 'url': 'https://github.com/advisories/GHSA-pphf-f93w-gc84'}]
references: [{'text': 'https://github.com/Xudong-Huang/may/issues/88', 'url': 'https://github.com/Xudong-Huang/may/issues/88'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions ofmay_queueimplementsSend/Syncfor itsQueuetype without restricting it toSendable types andSyncable types. This allows non-Synctypes such asCellto be shared across threads leading to undefined behavior and memory corruption in concurrent programs. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: ButtplugFutureStateShared allows data race to (!Send|!Sync) objects
reported: December 18, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'buttplug(crates.io)', 'url': '/packages/buttplug.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36218', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36218'}, {'text': 'GHSA-r7rv-2rph-hvhj', 'url': 'https://github.com/advisories/GHSA-r7rv-2rph-hvhj'}]
references: [{'text': 'https://github.com/buttplugio/buttplug-rs/issues/225', 'url': 'https://github.com/buttplugio/buttplug-rs/issues/225'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0.4
description: ButtplugFutureStateShared<T>implementsSend&Syncregardless ofT. IfT: !SendforButtplugFutureStateShared<T>, it is possible to move non-Send types across thread boundaries (e.g.T=Rc<T>) and lead to undefined behavior.
IfT: !SyncforButtplugFutureStateShared<T>, it is possible to cause data race toT(e.g.T=Arc<Cell<_>>) and lead to undefined behavior. The flaw was corrected in version 1.0.4 by removing manual implementations ofSend/SyncforButtplugFutureStateShared<T>to let rustc generate auto trait implementations with correct trait bounds onT. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: AtomicOption should have Send + Sync bound on its type argument.
reported: October 31, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'atomic-option(crates.io)', 'url': '/packages/atomic-option.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36219', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36219'}, {'text': 'GHSA-8gf5-q9p9-wvmc', 'url': 'https://github.com/advisories/GHSA-8gf5-q9p9-wvmc'}]
references: [{'text': 'https://github.com/reem/rust-atomic-option/issues/4', 'url': 'https://github.com/reem/rust-atomic-option/issues/4'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: In the affected versions of this crate,AtomicOption<T>unconditionally implementsSync. This allows programmers to move non-Sync types across thread boundaries (e.g.Rc<T>,Arc<Cell<T>>), which can lead to data races and undefined behavior.
It is also possible to send non-Send types likestd::sync::MutexGuardto other threads, which can lead to undefined behavior. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Queues allow non-Send types to be sent to other threads, allowing data races
reported: December 19, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'multiqueue2(crates.io)', 'url': '/packages/multiqueue2.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36214', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36214'}, {'text': 'GHSA-jphw-p3m6-pj3c', 'url': 'https://github.com/advisories/GHSA-jphw-p3m6-pj3c'}]
references: [{'text': 'https://github.com/abbychau/multiqueue2/issues/10', 'url': 'https://github.com/abbychau/multiqueue2/issues/10'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.1.7
description: Affected versions of this crate unconditionally implementedSendfor types used in queue implementations (InnerSend<RW, T>,InnerRecv<RW, T>,FutInnerSend<RW, T>,FutInnerRecv<RW, T>). This allows users to send non-Send types to other threads, which can lead to data race bugs or other undefined behavior. The flaw was corrected in v0.1.7 by addingT: Sendbound to to theSendimpl of four data types explained above. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Soundness issue: Inputcan be misused to create data race to an object
reported: December 20, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'eventio(crates.io)', 'url': '/packages/eventio.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36216', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36216'}, {'text': 'GHSA-69vj-xx27-g45w', 'url': 'https://github.com/advisories/GHSA-69vj-xx27-g45w'}]
references: [{'text': 'https://github.com/petabi/eventio/issues/33', 'url': 'https://github.com/petabi/eventio/issues/33'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.5.1
description: Input<R>implementsSendwithout requiringR: Send. Affected versions of this crate allows users to send non-Send types to other threads,
which can lead to undefined behavior such as data race and memory corruption. The flaw was corrected in version 0.5.1 by addingR: Sendbound to theSendimpl ofInput<R>. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: TreeFocus lacks bounds on its Send and Sync traits
reported: November  9, 2020
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'im(crates.io)', 'url': '/packages/im.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-36204', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36204'}, {'text': 'GHSA-q9h2-4xhf-23xx', 'url': 'https://github.com/advisories/GHSA-q9h2-4xhf-23xx'}]
references: [{'text': 'https://github.com/bodil/im-rs/issues/157', 'url': 'https://github.com/bodil/im-rs/issues/157'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=15.1.0
unaffected: <12.0.0
description: Affected versions ofimcontainsTreeFocusthat unconditionally implementsSendandSync. This allows a data race in safe Rust code ifTreeFocusis extracted fromFocustype.
Typical users that only useFocustype are not affected. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Missing Send bound for Lazy
reported: January 17, 2021
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'lazy-init(crates.io)', 'url': '/packages/lazy-init.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25901', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25901'}, {'text': 'GHSA-w47j-hqpf-qw9w', 'url': 'https://github.com/advisories/GHSA-w47j-hqpf-qw9w'}]
references: [{'text': 'https://github.com/khuey/lazy-init/issues/9', 'url': 'https://github.com/khuey/lazy-init/issues/9'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L
patched: >0.4.0
description: All current versions of this crate allow causing data races in safe code. The flaw will be fixed in the next release. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Soundness issue with base::Error
reported: December 10, 2020
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'xcb(crates.io)', 'url': '/packages/xcb.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36205', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36205'}, {'text': 'GHSA-c8hq-x4mm-p6q6', 'url': 'https://github.com/advisories/GHSA-c8hq-x4mm-p6q6'}]
references: [{'text': 'https://github.com/rust-x-bindings/rust-xcb/issues/93', 'url': 'https://github.com/rust-x-bindings/rust-xcb/issues/93'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0
description: base::Errortype contains public field namedptr.
With this definition, it is possible to create abase::Errorwith an invalid pointer and trigger memory safety errors
such as use-after-free or double-free with safe Rust. The users ofxcbcrate are advised not to manipulate the field. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Unsound: can makeARefsscontain a !Send, !Sync object.
reported: December  1, 2020
issued: January  6, 2021(last modified: June 13, 2023)
package: {'name': 'reffers(crates.io)', 'url': '/packages/reffers.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36203', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36203'}, {'text': 'GHSA-39xg-8p43-h76x', 'url': 'https://github.com/advisories/GHSA-39xg-8p43-h76x'}]
references: [{'text': 'https://github.com/diwic/reffers-rs/issues/7', 'url': 'https://github.com/diwic/reffers-rs/issues/7'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.1
description: ARefss<'a, V>is a type that is assumed to contain objects that areSend + Sync. In the affected versions of this crate,Send/Synctraits are unconditionally implemented forARefss<'a, V>. By using theARefss::map()API, we can insert a!Sendor!Syncobject intoARefss<'a, V>. After that, it is possible to create a data race to the inner object ofARefss<'a, V>, which can lead to undefined behavior & memory corruption. The flaw was corrected in commit 6dd7ca0 (https://github.com/diwic/reffers-rs/commit/6dd7ca0d50f2464df708975cdafcfaeeb6d41c66) by adding trait boundV: Send + SynctoARefss::map()API. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: XSS in mdBook's search page
reported: January  4, 2021
issued: January  4, 2021(last modified: October 19, 2021)
package: {'name': 'mdbook(crates.io)', 'url': '/packages/mdbook.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2020-26297', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26297'}]
references: [{'text': 'https://groups.google.com/g/rustlang-security-announcements/c/3-sO6of29O0', 'url': 'https://groups.google.com/g/rustlang-security-announcements/c/3-sO6of29O0'}]
cvss score: 6.1MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: Required
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
patched: >=0.4.5
unaffected: <=0.1.3
description: The Rust Security Response Working Group was recently notified of a security
issue affecting the search feature of mdBook, which could allow an attacker to
execute arbitrary JavaScript code on the page. The CVE for this vulnerability isCVE-2020-26297. The search feature of mdBook (introduced in version 0.1.4) was affected by a
cross site scripting vulnerability that allowed an attacker to execute
arbitrary JavaScript code on an user's browser by tricking the user into typing
a malicious search query, or tricking the user into clicking a link to the
search page with the malicious search query prefilled. mdBook 0.4.5 fixes the vulnerability by properly escaping the search query. Owners of websites built with mdBook have to upgrade to mdBook 0.4.5 or greater
and rebuild their website contents with it. It's possible to install mdBook
0.4.5 on the local system with: Thanks to Kamil Vavra for responsibly disclosing the vulnerability to us
according toour security policy. All times are listed in UTC. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Send/Sync bound needed on V inimpl Send/Sync for ARCache<K, V>
reported: November 13, 2020
issued: December 17, 2020(last modified: June 13, 2023)
package: {'name': 'concread(crates.io)', 'url': '/packages/concread.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35928', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35928'}, {'text': 'GHSA-4xj5-vv9x-63jp', 'url': 'https://github.com/advisories/GHSA-4xj5-vv9x-63jp'}]
references: [{'text': 'https://github.com/kanidm/concread/issues/48', 'url': 'https://github.com/kanidm/concread/issues/48'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.6
description: Affected versions of this crate unconditionally implementedSend/Synctraits forARCache<K, V>type. This allows users to send/access types that do not implementSend/Sync, which can cause a data race. The flaw was corrected in the 0.2.6 release by adding boundsK: Send + Sync&V: Send + Syncto affectedSend/Synctrait implementations. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: nanorand 0.5.0 - RNGs failed to generate properly for non-64-bit numbers
reported: December  9, 2020
issued: December  9, 2020(last modified: June 13, 2023)
package: {'name': 'nanorand(crates.io)', 'url': '/packages/nanorand.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2020-35926', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35926'}, {'text': 'GHSA-m9m5-cg5h-r582', 'url': 'https://github.com/advisories/GHSA-m9m5-cg5h-r582'}]
references: [{'text': 'https://twitter.com/aspenluxxxy/status/1336684692284772352', 'url': 'https://twitter.com/aspenluxxxy/status/1336684692284772352'}]
cvss score: 5.1MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N
patched: >=0.5.1
description: In versions ofnanorandprior to 0.5.1,RandomGenimplementations for standard unsigned integers could
fail to properly generate numbers, due to using bit-shifting to truncate a 64-bit number, rather than just
anasconversion. This often manifested as RNGs returning nothing but 0, including the cryptographically secureChaCharandom
number generator.. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Thexallows data races of non-Send types across threads
reported: December  8, 2020
issued: December  9, 2020(last modified: June 13, 2023)
package: {'name': 'thex(crates.io)', 'url': '/packages/thex.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35927', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35927'}, {'text': 'GHSA-j42v-6wpm-r847', 'url': 'https://github.com/advisories/GHSA-j42v-6wpm-r847'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: thex::Thex<T>implementsSyncfor all typesT. However, it is missing a
bound forT: Send. This allows non-Send types such asRcto be sent across thread boundaries
which can trigger undefined behavior and memory corruption. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: TryMutexallows sending non-Send type across threads
reported: November 17, 2020
issued: December  7, 2020(last modified: June 13, 2023)
package: {'name': 'try-mutex(crates.io)', 'url': '/packages/try-mutex.html'}
type: Vulnerability
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35924', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35924'}, {'text': 'GHSA-64j8-7gp2-xjx5', 'url': 'https://github.com/advisories/GHSA-64j8-7gp2-xjx5'}]
references: [{'text': 'https://github.com/mpdn/try-mutex/issues/2', 'url': 'https://github.com/mpdn/try-mutex/issues/2'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.0
description: Affected versions of this crate unconditionally implemented Sync trait forTryMutex<T>type. This allows users to put non-SendTtype inTryMutexand send it to another thread, which can cause a data race. The flaw was corrected in the 0.3.0 release by addingT: Sendbound for the Sync trait implementation. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: MPMCConsumer/Producer allows sending non-Send type across threads
reported: November 29, 2020
issued: December  7, 2020(last modified: June 13, 2023)
package: {'name': 'magnetic(crates.io)', 'url': '/packages/magnetic.html'}
type: Vulnerability
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35925', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35925'}, {'text': 'GHSA-wv4p-jp67-jr97', 'url': 'https://github.com/advisories/GHSA-wv4p-jp67-jr97'}]
references: [{'text': 'https://github.com/johnshaw/magnetic/issues/9', 'url': 'https://github.com/johnshaw/magnetic/issues/9'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.1
description: Affected versions of this crate unconditionally implementedSyncandSendtraits forMPMCConsumerandMPMCProducertypes. This allows users to send types that do not implementSendtrait across thread boundaries, which can cause a data race. The flaw was corrected in the 2.0.1 release by addingT: Sendbound to affected Sync/Send trait implementations. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: ordered_float:NotNan may contain NaN after panic in assignment operators
reported: December  6, 2020
issued: December  6, 2020(last modified: June 13, 2023)
package: {'name': 'ordered-float(crates.io)', 'url': '/packages/ordered-float.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35923', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35923'}, {'text': 'GHSA-566x-hhrf-qf8m', 'url': 'https://github.com/advisories/GHSA-566x-hhrf-qf8m'}]
references: [{'text': 'https://github.com/reem/rust-ordered-float/pull/71', 'url': 'https://github.com/reem/rust-ordered-float/pull/71'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: ^1.1.1>=2.0.1
unaffected: <0.2.2
description: After using an assignment operators such asNotNan::add_assign,NotNan::mul_assign, etc., it was possible for the resultingNotNanvalue to contain aNaN.  This could cause undefined behavior in safe code, because the safeNotNan::cmpmethod contains internal unsafe code that assumes the value is neverNaN.  (It could also cause undefined behavior in third-party unsafe code that makes the same assumption, as well as logic errors in safe code.) This was mitigated starting in version 0.4.0, by panicking if the assigned value is NaN.  However, in affected versions from 0.4.0 onward, code that uses theNotNanvalue during unwinding, or that continues after catching the panic, could still observe the invalid value and trigger undefined behavior. The flaw is fully corrected in versions 1.1.1 and 2.0.1, by ensuring that the assignment operators panic without modifying the operand, if the result would beNaN. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: miowinvalidly assumes the memory layout of std::net::SocketAddr
reported: November 13, 2020
issued: December  2, 2020(last modified: June 13, 2023)
package: {'name': 'miow(crates.io)', 'url': '/packages/miow.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35921', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35921'}, {'text': 'GHSA-jrcf-4jp8-m28v', 'url': 'https://github.com/advisories/GHSA-jrcf-4jp8-m28v'}]
references: [{'text': 'https://github.com/yoshuawuyts/miow/issues/38', 'url': 'https://github.com/yoshuawuyts/miow/issues/38'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: ^0.2.2>=0.3.6
description: Themiowcrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: net2invalidly assumes the memory layout of std::net::SocketAddr
reported: November  7, 2020
issued: December  2, 2020(last modified: July  8, 2023)
package: {'name': 'net2(crates.io)', 'url': '/packages/net2.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35919', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35919'}, {'text': 'CVE-2020-35920', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35920'}, {'text': 'GHSA-458v-4hrf-g3m4', 'url': 'https://github.com/advisories/GHSA-458v-4hrf-g3m4'}, {'text': 'GHSA-c79c-gwph-gqfm', 'url': 'https://github.com/advisories/GHSA-c79c-gwph-gqfm'}]
references: [{'text': 'https://github.com/deprecrated/net2-rs/issues/105', 'url': 'https://github.com/deprecrated/net2-rs/issues/105'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.36
description: Thenet2crate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: socket2invalidly assumes the memory layout of std::net::SocketAddr
reported: November  6, 2020
issued: December  2, 2020(last modified: February 10, 2024)
package: {'name': 'socket2(crates.io)', 'url': '/packages/socket2.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35919', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35919'}, {'text': 'CVE-2020-35920', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35920'}, {'text': 'GHSA-458v-4hrf-g3m4', 'url': 'https://github.com/advisories/GHSA-458v-4hrf-g3m4'}, {'text': 'GHSA-c79c-gwph-gqfm', 'url': 'https://github.com/advisories/GHSA-c79c-gwph-gqfm'}]
references: [{'text': 'https://github.com/rust-lang/socket2-rs/issues/119', 'url': 'https://github.com/rust-lang/socket2-rs/issues/119'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.16
description: Thesocket2crate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: mioinvalidly assumes the memory layout of std::net::SocketAddr
reported: November  2, 2020
issued: December  2, 2020(last modified: June 13, 2023)
package: {'name': 'mio(crates.io)', 'url': '/packages/mio.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35922', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35922'}, {'text': 'GHSA-pf3p-x6qj-6j7q', 'url': 'https://github.com/advisories/GHSA-pf3p-x6qj-6j7q'}]
references: [{'text': 'https://github.com/tokio-rs/mio/issues/1386', 'url': 'https://github.com/tokio-rs/mio/issues/1386'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.7.6
unaffected: <0.7.0
description: Themiocrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Unexpected panic when decoding tokens
reported: November 29, 2020
issued: November 29, 2020(last modified: June 13, 2023)
package: {'name': 'branca(crates.io)', 'url': '/packages/branca.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35918', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35918'}, {'text': 'GHSA-c9rv-3jmq-527w', 'url': 'https://github.com/advisories/GHSA-c9rv-3jmq-527w'}]
references: [{'text': 'https://github.com/return/branca/issues/24', 'url': 'https://github.com/return/branca/issues/24'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.10.0
affected functions: Version
branca::branca::decode: <0.10.0
branca::decode: <0.10.0
description: Prior to0.10.0it was possible to have both decoding functions panic unexpectedly,
by supplying tokens with an incorrect base62 encoding. The documentation stated that an error should have been reported instead. Advisory available underCC0-1.0license.
affected_functions: branca;;branca;;decode
version_of_Affected: <0.10.0

---
classification: MEDIUM
subtitle: Reference counting error inFrom<Py<T>>
reported: November 28, 2020
issued: November 28, 2020(last modified: June 13, 2023)
package: {'name': 'pyo3(crates.io)', 'url': '/packages/pyo3.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35917', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35917'}, {'text': 'GHSA-2vx6-fcw6-hpr6', 'url': 'https://github.com/advisories/GHSA-2vx6-fcw6-hpr6'}]
references: [{'text': 'https://github.com/PyO3/pyo3/pull/1297', 'url': 'https://github.com/PyO3/pyo3/pull/1297'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.12.4
unaffected: <0.12.0
description: A bug inFrom<Py<T>>would lead to an extra reference count decrement, often
leading to use-after-free issues. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Mutable reference with immutable provenance
reported: November 12, 2020
issued: November 20, 2020(last modified: June 13, 2023)
package: {'name': 'image(crates.io)', 'url': '/packages/image.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35916', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35916'}, {'text': 'GHSA-9wgh-vjj7-7433', 'url': 'https://github.com/advisories/GHSA-9wgh-vjj7-7433'}]
references: [{'text': 'https://github.com/image-rs/image/issues/1357', 'url': 'https://github.com/image-rs/image/issues/1357'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.23.12
affected functions: Version
image::bgr::from_slice_mut: <0.23.12
image::bgra::from_slice_mut: <0.23.12
image::luma::from_slice_mut: <0.23.12
image::lumaa::from_slice_mut: <0.23.12
image::rgb::from_slice_mut: <0.23.12
image::rgba::from_slice_mut: <0.23.12
description: A mutable reference to a struct was constructed by dereferencing a pointer
obtained fromslice::as_ptr. Instead,slice::as_mut_ptrshould have been
called on the mutable slice argument. The former performs an implicit reborrow
as an immutable shared reference which does not allow writing through the
derived pointer. There is no evidence for miscompilation, exploitable or otherwise, caused by
this bug.Further investigation on Zulipsuggests that the unoptimized
generated LLVM IR does not contain any UB itself, effectively mitigating
further effects. Advisory available underCC0-1.0license.
affected_functions: image;;bgr;;from_slice_mut
version_of_Affected: <0.23.12

---
classification: MEDIUM
subtitle: Potential segfault in the time crate
reported: November 18, 2020
issued: November 18, 2020(last modified: June  5, 2024)
package: {'name': 'time(crates.io)', 'url': '/packages/time.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-26235', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26235'}, {'text': 'GHSA-wcg3-cvx6-7396', 'url': 'https://github.com/advisories/GHSA-wcg3-cvx6-7396'}]
references: [{'text': 'https://github.com/time-rs/time/issues/293', 'url': 'https://github.com/time-rs/time/issues/293'}]
cvss score: 6.2MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.23
unaffected: ["The affected functions set environment variables without synchronization. On Unix-like operating systems, this can crash in multithreaded programs. Programs may segfault due to dereferencing a dangling pointer if an environment variable is read in a different thread than the affected functions. This may occur without the user's knowledge, notably in the Rust standard library or third-party libraries.", 'The affected functions from time 0.2.7 through 0.2.22 are:', 'time::UtcOffset::local_offset_at', 'time::UtcOffset::try_local_offset_at', 'time::UtcOffset::current_local_offset', 'time::UtcOffset::try_current_local_offset', 'time::OffsetDateTime::now_local', 'time::OffsetDateTime::try_now_local', 'The affected functions in time 0.1 (all versions) are:', 'time::at_utc', 'time::at', 'time::now', 'time::tzset', 'Non-Unix targets (including Windows and wasm) are unaffected.']
affected oses: linuxredoxsolarisandroidiosmacosnetbsdopenbsdfreebsd
affected functions: Version
time::offsetdatetime::now_local: <0.2.23
time::offsetdatetime::try_now_local: <0.2.23
time::utcoffset::current_local_offset: <0.2.23
time::utcoffset::local_offset_at: <0.2.23
time::utcoffset::try_current_local_offset: <0.2.23
time::utcoffset::try_local_offset_at: <0.2.23
time::at: ^0.1
time::at_utc: ^0.1
time::now: ^0.1
description: 
References: ['A possible workaround for crates affected through the transitive dependency inchrono, is to avoid using the defaultoldtimefeature dependency of thechronocrate by disabling itsdefault-featuresand manually specifying the required features instead.', 'Cargo.toml:', 'Commandline:', 'Sources:', 'chronotope/chrono#602 (comment)', {'text': 'chronotope/chrono#602 (comment)', 'url': 'https://github.com/chronotope/chrono/issues/602#issuecomment-1242149249'}, 'vityafx/serde-aux#21', {'text': 'vityafx/serde-aux#21', 'url': 'https://github.com/vityafx/serde-aux/issues/21'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: time;;offsetdatetime;;now_local
version_of_Affected: <0.2.23

---
classification: MEDIUM
subtitle: GenericMutexGuard allows data races of non-Sync types across threads
reported: October 31, 2020
issued: November 18, 2020(last modified: June 13, 2023)
package: {'name': 'futures-intrusive(crates.io)', 'url': '/packages/futures-intrusive.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35915', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35915'}, {'text': 'GHSA-4hjg-cx88-g9f9', 'url': 'https://github.com/advisories/GHSA-4hjg-cx88-g9f9'}]
references: [{'text': 'https://github.com/Matthias247/futures-intrusive/issues/53', 'url': 'https://github.com/Matthias247/futures-intrusive/issues/53'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.0
description: GenericMutexGuard<T>was given theSyncauto trait as long asTisSenddue to its contained members. However, since the guard is supposed to represent
anacquired lockand allows concurrent access to the underlying data from
different threads, it should only beSyncwhen the underlying data is. This is a soundness issue and allows data races, potentially leading to crashes
and segfaults from safe Rust code. The flaw was corrected by adding aT: Send + Syncbound forGenericMutexGuard'sSynctrait. This bug issimilar to oneinstd::sync::Mutex. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Argument injection in sendmail transport
reported: November 11, 2020
issued: November 11, 2020(last modified: June 13, 2023)
package: {'name': 'lettre(crates.io)', 'url': '/packages/lettre.html'}
type: Vulnerability
categories: ['code-execution', 'file-disclosure']
keywords: []
aliases: [{'text': 'CVE-2020-28247', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-28247'}, {'text': 'GHSA-vc2p-r46x-m3vx', 'url': 'https://github.com/advisories/GHSA-vc2p-r46x-m3vx'}]
references: [{'text': 'https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b', 'url': 'https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.10.0-alpha.4<0.10.0-alpha.1, >=0.9.5<0.9.0, >=0.8.4<0.8.0, >=0.7.1
unaffected: <0.7.0
affected functions: Version
lettre::sendmail::sendmailtransport::send: <0.10.0-alpha.1
lettre::transport::sendmail::sendmailtransport::send: >=0.10.0-alpha.1, <=0.10.0-alpha.3
lettre::transport::sendmail::sendmailtransport::send_raw: >=0.10.0-alpha.1, <=0.10.0-alpha.3
description: Affected versions of lettre allowed argument injection
to the sendmail command. It was possible, using forgedtoaddresses,
to pass arbitrary arguments to the sendmail executable. Depending on the implementation (original sendmail, postfix, exim, etc.)
it could be possible in some cases to write email data into arbitrary files (using sendmail's
logging features). The flaw is corrected by modifying the executed command to stop parsing arguments
before passing the destination addresses. NOTE: This vulnerability only affects thesendmailtransport. Others, includingsmtp, are not
affected. This vulnerability was reported by vin01. Advisory available underCC0-1.0license.
affected_functions: lettre;;sendmail;;sendmailtransport;;send
version_of_Affected: <0.10.0-alpha.1

---
classification: MEDIUM
subtitle: futures_task::noop_waker_ref can segfault due to dereferencing a NULL pointer
reported: May  3, 2020
issued: October 31, 2020(last modified: June 13, 2023)
package: {'name': 'futures-task(crates.io)', 'url': '/packages/futures-task.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35907', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35907'}, {'text': 'GHSA-p9m5-3hj7-cp5r', 'url': 'https://github.com/advisories/GHSA-p9m5-3hj7-cp5r'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/issues/2091', 'url': 'https://github.com/rust-lang/futures-rs/issues/2091'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.5
affected functions: Version
futures_task::noop_waker_ref: >=0.3.0
description: Affected versions of the crate used aUnsafeCellin thread-local storage to return a noop waker reference,
assuming that the reference would never be returned from another thread. This resulted in a segmentation fault crash ifWaker::wake_by_ref()was called on a waker returned from another thread due to
it attempting to dereference a pointer that wasn't accessible from the main thread. Reproduction Example (from issue): The flaw was corrected by using aOnceCell::Lazy<>wrapper around the noop waker instead of thread-local storage. Advisory available underCC0-1.0license.
affected_functions: futures_task;;noop_waker_ref
version_of_Affected: >=0.3.0

---
classification: MEDIUM
subtitle: ImproperSyncimplementation onFuturesUnorderedin futures-utils can cause data corruption
reported: January 24, 2020
issued: October 31, 2020(last modified: June 13, 2023)
package: {'name': 'futures-util(crates.io)', 'url': '/packages/futures-util.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35908', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35908'}, {'text': 'GHSA-5r9g-j7jj-hw6c', 'url': 'https://github.com/advisories/GHSA-5r9g-j7jj-hw6c'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/issues/2050', 'url': 'https://github.com/rust-lang/futures-rs/issues/2050'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.2
unaffected: <0.3.0
affected functions: Version
futures_util::stream::futuresunordered: >=0.3.0
description: Affected versions of the crate had an unsoundSyncimplementation on theFuturesUnorderedstructure, which used aCellfor
interior mutability without any code to handle synchronized access to the underlying task list's length and head safely. This could of lead to data corruption since two threads modifying the list at once could see incorrect values due to the lack
of access synchronization. The issue was fixed by adding access synchronization code around insertion of tasks into the list. Advisory available underCC0-1.0license.
affected_functions: futures_util;;stream;;futuresunordered
version_of_Affected: >=0.3.0

---
classification: MEDIUM
subtitle: MutexGuard::map can cause a data race in safe code
reported: October 22, 2020
issued: October 30, 2020(last modified: June 13, 2023)
package: {'name': 'futures-util(crates.io)', 'url': '/packages/futures-util.html'}
type: Vulnerability
categories: ['thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35905', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35905'}, {'text': 'GHSA-rh4w-94hh-9943', 'url': 'https://github.com/advisories/GHSA-rh4w-94hh-9943'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/issues/2239', 'url': 'https://github.com/rust-lang/futures-rs/issues/2239'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.7
unaffected: <0.3.2
affected functions: Version
futures_util::lock::mutexguard::map: >=0.3.2
description: Affected versions of the crate had a Send/Sync implementation for MappedMutexGuard that only considered variance on T, while MappedMutexGuard dereferenced to U. This could of led to data races in safe Rust code when a closure used in MutexGuard::map() returns U that is unrelated to T. The issue was fixed by fixingSendandSyncimplementations, and by adding aPhantomData<&'a mut U>marker to theMappedMutexGuardtype to tell the compiler that the guard is over
U too. Advisory available underCC0-1.0license.
affected_functions: futures_util;;lock;;mutexguard;;map
version_of_Affected: >=0.3.2

---
classification: MEDIUM
subtitle: Possible use-after-free withproplist::Iterator
reported: December 22, 2018
issued: October 22, 2020(last modified: February 10, 2024)
package: {'name': 'libpulse-binding(crates.io)', 'url': '/packages/libpulse-binding.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2018-25001', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-25001'}, {'text': 'GHSA-6gvc-4jvj-pwq4', 'url': 'https://github.com/advisories/GHSA-6gvc-4jvj-pwq4'}, {'text': 'GHSA-f56g-chqp-22m9', 'url': 'https://github.com/advisories/GHSA-f56g-chqp-22m9'}]
references: [{'text': 'https://github.com/advisories/GHSA-6gvc-4jvj-pwq4', 'url': 'https://github.com/advisories/GHSA-6gvc-4jvj-pwq4'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N
patched: >=2.5.0
unaffected: <1.0.5
description: Affected versions contained a possible use-after-free issue with property list iteration
due to a lack of a lifetime constraint tying the lifetime of aproplist::Iteratorto theProplistobject for which it was created. This made it possible for users, without
experiencing a compiler error/warning, to destroy theProplistobject before the iterator,
thus destroying the underlying C object the iterator works upon, before the iterator may be
finished with it. This impacts all versions of the crate before2.5.0back to1.0.5. Before version1.0.5the function that produces the iterator was broken to the point of being useless. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: bespoke Cell implementation allows obtaining several mutable references to the same data
reported: January  8, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-service(crates.io)', 'url': '/packages/actix-service.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35899', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35899'}, {'text': 'GHSA-whc7-5p35-4ww2', 'url': 'https://github.com/advisories/GHSA-whc7-5p35-4ww2'}]
references: [{'text': 'https://github.com/actix/actix-net/pull/158', 'url': 'https://github.com/actix/actix-net/pull/158'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0.6
description: The custom implementation of a Cell primitive in the affected versions of this crate
does not keep track of mutable references to the underlying data. This allows obtaining several mutable references to the same object
which may result in arbitrary memory corruption, most likely use-after-free. The flaw was corrected by switching from a bespokeCell<T>implementation toRc<RefCell<T>>. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Malicious input could cause uninitialized memory to be exposed
reported: August 25, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'claxon(crates.io)', 'url': '/packages/claxon.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20992', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20992'}, {'text': 'GHSA-8c6g-4xc5-w96c', 'url': 'https://github.com/advisories/GHSA-8c6g-4xc5-w96c'}]
references: [{'text': 'https://github.com/ruuda/claxon/commit/8f28ec275e412dd3af4f3cda460605512faf332c', 'url': 'https://github.com/ruuda/claxon/commit/8f28ec275e412dd3af4f3cda460605512faf332c'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N
patched: ^0.3.2>=0.4.1
description: Affected versions of Claxon made an invalid assumption about the decode buffer
size being a multiple of a value read from the bitstream. This could cause parts
of the decode buffer to not be overwritten. If the decode buffer was newly
allocated and uninitialized, this uninitialized memory could be exposed. This allows an attacker to observe parts of the uninitialized memory in the
decoded audio stream. The flaw was corrected by checking that the value read from the bitstream divides
the decode buffer size, and returning a format error if it does not. If an error
is returned, the decode buffer is not exposed. Regression tests and an
additional fuzzer have been added to prevent similar flaws in the future. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: HTTP download and execution allows MitM RCE
reported: August  1, 2016
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'portaudio(crates.io)', 'url': '/packages/portaudio.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2016-10933', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10933'}, {'text': 'GHSA-pq6v-x7gp-7776', 'url': 'https://github.com/advisories/GHSA-pq6v-x7gp-7776'}]
references: [{'text': 'https://github.com/RustAudio/rust-portaudio/issues/144', 'url': 'https://github.com/RustAudio/rust-portaudio/issues/144'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: no patched versions
description: The build script in the portaudio crate will attempt to download via HTTP
the portaudio source and build it. A Mallory in the middle can intercept the download with their own archive
and get RCE. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: scalarmult() vulnerable to degenerate public keys
reported: January 26, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'sodiumoxide(crates.io)', 'url': '/packages/sodiumoxide.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-1000168', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-1000168'}, {'text': 'GHSA-2wc6-2rcj-8v76', 'url': 'https://github.com/advisories/GHSA-2wc6-2rcj-8v76'}]
references: [{'text': 'https://github.com/dnaq/sodiumoxide/issues/154', 'url': 'https://github.com/dnaq/sodiumoxide/issues/154'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N
patched: >=0.0.14
description: Thescalarmult()function included in previous versions of this crate
accepted all-zero public keys, for which the resulting Diffie-Hellman shared
secret will always be zero regardless of the private key used. This issue was fixed by checking for this class of keys and rejecting them
if they are used. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Compiler optimisation for next_with_timeout in pnet::transport::IcmpTransportChannelIterator flaws to SEGFAULT
reported: June 11, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'pnet(crates.io)', 'url': '/packages/pnet.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-25054', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25054'}, {'text': 'GHSA-24g6-5rx7-58wj', 'url': 'https://github.com/advisories/GHSA-24g6-5rx7-58wj'}, {'text': 'GHSA-r6ff-2q3c-v3pv', 'url': 'https://github.com/advisories/GHSA-r6ff-2q3c-v3pv'}]
references: [{'text': 'https://github.com/libpnet/libpnet/issues/449', 'url': 'https://github.com/libpnet/libpnet/issues/449'}]
cvss score: 6MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'High', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: High
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H
patched: >=0.27.2
affected functions: Version
pnet::transport::icmptransportchanneliterator: <0.27.2
description: Affected versions of this crate were optimized out by compiler,
which caused dereference of uninitialized file descriptor which caused segfault. Advisory available underCC0-1.0license.
affected_functions: pnet;;transport;;icmptransportchanneliterator
version_of_Affected: <0.27.2

---
classification: MEDIUM
subtitle: Hostname verification skipped when custom root certs used
reported: March 15, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'security-framework(crates.io)', 'url': '/packages/security-framework.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-18588', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18588'}, {'text': 'GHSA-jqqr-c2r2-9cvr', 'url': 'https://github.com/advisories/GHSA-jqqr-c2r2-9cvr'}]
references: [{'text': 'https://github.com/sfackler/rust-security-framework/pull/27', 'url': 'https://github.com/sfackler/rust-security-framework/pull/27'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.1.12
description: If custom root certificates were registered with aClientBuilder, the
hostname of the target server would not be validated against its presented leaf
certificate. This issue was fixed by properly configuring the trust evaluation logic to
perform that check. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Unsafe Send implementation in Atom allows data races
reported: September 21, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'atom(crates.io)', 'url': '/packages/atom.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35897', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35897'}, {'text': 'GHSA-9cg2-2j2h-59v9', 'url': 'https://github.com/advisories/GHSA-9cg2-2j2h-59v9'}]
references: [{'text': 'https://github.com/slide-rs/atom/issues/13', 'url': 'https://github.com/slide-rs/atom/issues/13'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.6
description: Theatomcrate contains a security issue revolving around its implementation
of the Send trait. It incorrectly allows any arbitrary type to be sent across
threads potentially leading to use-after-free issues through memory races. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: HTTP Request smuggling through malformed Transfer Encoding headers
reported: June 16, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'tiny_http(crates.io)', 'url': '/packages/tiny_http.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35884', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35884'}, {'text': 'GHSA-7v2r-wxmg-mgvc', 'url': 'https://github.com/advisories/GHSA-7v2r-wxmg-mgvc'}]
references: [{'text': 'https://github.com/tiny-http/tiny-http/issues/173', 'url': 'https://github.com/tiny-http/tiny-http/issues/173'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N
patched: >=0.8.0^0.6.3
description: HTTP pipelining issues and request smuggling attacks are possible due to incorrect
Transfer encoding header parsing. It is possible conduct HTTP request smuggling attacks (CL:TE/TE:TE) by sending invalid Transfer Encoding headers. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack, or obtain sensitive information
from requests other than their own. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: VecCopy allows misaligned access to elements
reported: September 27, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'dync(crates.io)', 'url': '/packages/dync.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35903', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35903'}, {'text': 'GHSA-qxjq-v4wf-ppvh', 'url': 'https://github.com/advisories/GHSA-qxjq-v4wf-ppvh'}]
references: [{'text': 'https://github.com/elrnv/dync/issues/4', 'url': 'https://github.com/elrnv/dync/issues/4'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.5.0
description: VecCopy::datais created as a Vec of u8 but can be used to store and retrieve
elements of different types leading to misaligned access. The issue was resolved in v0.5.0 by replacing data being stored byVec<u8>with a custom managed
pointer.  Elements are now stored and retrieved using types with proper alignment corresponding to
original types. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: HTTPS MitM vulnerability due to lack of hostname verification
reported: May  9, 2016
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2016-10932', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10932'}, {'text': 'GHSA-9xjr-m6f3-v5wm', 'url': 'https://github.com/advisories/GHSA-9xjr-m6f3-v5wm'}]
references: [{'text': 'https://github.com/hyperium/hyper/blob/master/CHANGELOG.md#v094-2016-05-09', 'url': 'https://github.com/hyperium/hyper/blob/master/CHANGELOG.md#v094-2016-05-09'}]
related: RUSTSEC-2016-0001
cvss score: 4.8MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N
patched: >=0.9.4
affected oses: windows
description: When used on Windows platforms, all versions of Hyper prior to 0.9.4 did not
perform hostname verification when making HTTPS requests. This allows an attacker to perform MitM attacks by preventing any valid
CA-issued certificate, even if there's a hostname mismatch. The problem was addressed by leveraging rust-openssl's built-in support for
hostname verification. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: headers containing newline characters can split messages
reported: January 23, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2017-18587', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18587'}, {'text': 'GHSA-q89x-f52w-6hj2', 'url': 'https://github.com/advisories/GHSA-q89x-f52w-6hj2'}]
references: [{'text': 'https://github.com/hyperium/hyper/wiki/Security-001', 'url': 'https://github.com/hyperium/hyper/wiki/Security-001'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.10.2<0.10.0, >=0.9.18
description: Serializing of headers to the socket did not filter the values for newline bytes (\ror\n),
which allowed for header values to split a request or response. People would not likely include
newlines in the headers in their own applications, so the way for most people to exploit this
is if an application constructs headers based on unsanitized user input. This issue was fixed by replacing all newline characters with a space during serialization of
a header value. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: array_queue pop_back() may cause a use-after-free
reported: September 26, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'array-queue(crates.io)', 'url': '/packages/array-queue.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35900', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35900'}, {'text': 'GHSA-75cq-g75g-rxff', 'url': 'https://github.com/advisories/GHSA-75cq-g75g-rxff'}]
references: [{'text': 'https://github.com/raviqqe/array-queue/issues/2', 'url': 'https://github.com/raviqqe/array-queue/issues/2'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N
patched: no patched versions
unaffected: <0.3.0
description: array_queue implements a circular queue that wraps around an array. However, it
fails to properly index into the array in thepop_backfunction allowing the
reading of previously dropped or uninitialized memory. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Reduced entropy due to inadequate character set usage
reported: June  3, 2024
issued: June  3, 2024(last modified: June 15, 2024)
package: {'name': 'nano-id(crates.io)', 'url': '/packages/nano-id.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'GHSA-2hfw-w739-p7x5', 'url': 'https://github.com/advisories/GHSA-2hfw-w739-p7x5'}, {'text': 'GHSA-9hc7-6w9r-wj94', 'url': 'https://github.com/advisories/GHSA-9hc7-6w9r-wj94'}, {'text': 'CVE-2024-36400', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-36400'}]
cvss score: 9.4CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L
patched: >=0.4.0
affected functions: Version
nano_id::base58: <0.4.0
nano_id::base62: <0.4.0
nano_id::gen: <0.4.0
description: Affected versions of the nano-id crate incorrectly generated IDs using a reduced character set in thenano_id::base62andnano_id::base58functions. Specifically, thebase62function used a character set of 32 symbols instead of the intended 62 symbols, and thebase58function used a character set of 16 symbols instead of the intended 58 symbols. Additionally, thenano_id::genmacro is also affected when a custom character set that is not a power of 2 in size is specified. It should be noted thatnano_id::base64is not affected by this vulnerability. This can result in a significant reduction in entropy, making the generated IDs predictable and vulnerable to brute-force attacks when the IDs are used in security-sensitive contexts such as session tokens or unique identifiers. The flaws were corrected in commita9022772b2f1ce38929b5b81eccc670ac9d3ab23by updating the thenano_id::genmacro to use all specified characters correctly. Advisory available underCC0-1.0license.
affected_functions: nano_id;;base58
version_of_Affected: <0.4.0

---
classification: CRITICAL
subtitle: Memory corruption in liblz4
reported: August 25, 2022
issued: August 26, 2022(last modified: June 13, 2023)
package: {'name': 'lz4-sys(crates.io)', 'url': '/packages/lz4-sys.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-9q5j-jm53-v7vr', 'url': 'https://github.com/advisories/GHSA-9q5j-jm53-v7vr'}]
references: [{'text': 'https://github.com/lz4/lz4/pull/972', 'url': 'https://github.com/lz4/lz4/pull/972'}]
related: CVE-2021-3520
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.9.4
description: lz4-sys up to v1.9.3 bundles a version of liblz4 that is vulnerable toCVE-2021-3520. Attackers could craft a payload that triggers an integer overflow upon
decompression, causing an out-of-bounds write. The flaw has been corrected in version v1.9.4 of liblz4, which is included
in lz4-sys 1.9.4. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Generated code can read and write out of bounds in safe code
reported: October 31, 2021
issued: November  7, 2021(last modified: June 13, 2023)
package: {'name': 'flatbuffers(crates.io)', 'url': '/packages/flatbuffers.html'}
type: Vulnerability
aliases: [{'text': 'GHSA-3jch-9qgp-4844', 'url': 'https://github.com/advisories/GHSA-3jch-9qgp-4844'}]
references: [{'text': 'https://github.com/google/flatbuffers/issues/6627', 'url': 'https://github.com/google/flatbuffers/issues/6627'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=22.9.29
description: Code generated by flatbuffers' compiler isunsafebut not marked as such.
See https://github.com/google/flatbuffers/issues/6627 for details. For example, if generated code is used to decode malformed or untrusted input,
undefined behavior (and thus security vulnerabilities) is possible even without
the use of theunsafekeyword,violating the the meaning of "safe"code; All users that use generated code byflatbufferscompiler are recommended to: Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: SM2 Decryption Buffer Overflow
reported: August 24, 2021
issued: August 24, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2021-3711', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3711'}, {'text': 'GHSA-5ww6-px42-wc85', 'url': 'https://github.com/advisories/GHSA-5ww6-px42-wc85'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210824.txt', 'url': 'https://www.openssl.org/news/secadv/20210824.txt'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=111.16
description: In order to decrypt SM2 encrypted data an application is expected to call the
API functionEVP_PKEY_decrypt(). Typically an application will call this
function twice. The first time, on entry, the "out" parameter can be NULL and,
on exit, the "outlen" parameter is populated with the buffer size required to
hold the decrypted plaintext. The application can then allocate a sufficiently
sized buffer and callEVP_PKEY_decrypt()again, but this time passing a non-NULL
value for the "out" parameter. A bug in the implementation of the SM2 decryption code means that the
calculation of the buffer size required to hold the plaintext returned by the
first call toEVP_PKEY_decrypt()can be smaller than the actual size required by
the second call. This can lead to a buffer overflow whenEVP_PKEY_decrypt()is
called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an
application could cause attacker chosen data to overflow the buffer by up to a
maximum of 62 bytes altering the contents of other data held after the
buffer, possibly changing application behaviour or causing the application to
crash. The location of the buffer is application dependent but is typically
heap allocated. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Data race in crossbeam-deque
reported: July 30, 2021
issued: August 21, 2021(last modified: October 19, 2021)
package: {'name': 'crossbeam-deque(crates.io)', 'url': '/packages/crossbeam-deque.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-pqqp-xmhj-wgcw', 'url': 'https://github.com/advisories/GHSA-pqqp-xmhj-wgcw'}, {'text': 'CVE-2021-32810', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32810'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-pqqp-xmhj-wgcw', 'url': 'https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-pqqp-xmhj-wgcw'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.7.4, <0.8.0>=0.8.1
description: In the affected version of this crate, the result of the race condition is that one or more tasks in the worker queue can be popped twice instead of other tasks that are forgotten and never popped. If tasks are allocated on the heap, this can cause double free and a memory leak. If not, this still can cause a logical bug. Crates usingStealer::steal,Stealer::steal_batch, orStealer::steal_batch_and_popare affected by this issue. Credits to @kmaork for discovering, reporting and fixing the bug. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Integer overflow inhyper's parsing of theTransfer-Encodingheader leads to data loss
reported: July  7, 2021
issued: August  8, 2021(last modified: October 19, 2021)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-32714', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32714'}, {'text': 'GHSA-5h46-h7hh-c6x9', 'url': 'https://github.com/advisories/GHSA-5h46-h7hh-c6x9'}]
references: [{'text': 'https://github.com/hyperium/hyper/security/advisories/GHSA-5h46-h7hh-c6x9', 'url': 'https://github.com/hyperium/hyper/security/advisories/GHSA-5h46-h7hh-c6x9'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H
patched: >=0.14.10
description: When decoding chunk sizes that are too large,hyper's code would encounter an integer overflow. Depending on the situation,
this could lead to data loss from an incorrect total size, or in rarer cases, a request smuggling attack. To be vulnerable, you must be usinghyperfor any HTTP/1 purpose, including as a client or server, and consumers must send
requests or responses that specify a chunk size greater than 18 exabytes. For a possible request smuggling attack to be possible,
any upstream proxies must accept a chunk size greater than 64 bits. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: grep-climay run arbitrary executables on Windows
reported: June 12, 2021
issued: June 15, 2021(last modified: June 13, 2023)
package: {'name': 'grep-cli(crates.io)', 'url': '/packages/grep-cli.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2021-3013', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3013'}, {'text': 'GHSA-g4xg-fxmg-vcg5', 'url': 'https://github.com/advisories/GHSA-g4xg-fxmg-vcg5'}]
references: [{'text': 'https://github.com/BurntSushi/ripgrep/issues/1773', 'url': 'https://github.com/BurntSushi/ripgrep/issues/1773'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.6
affected oses: windows
affected functions: Version
grep_cli::decompressionreader::new: <0.1.6
description: On Windows in versions ofgrep-cliprior to0.1.6, it's possible for some
of the routines to execute arbitrary executables. In particular, a quirk of
the Windows process execution API is that it will automatically consider the
current directory before other directories when resolving relative binary
names. Therefore, if you usegrep-clito read decompressed files in an
untrusted directory with that directory as the CWD, a malicious actor to could
put, e.g., agz.exebinary in that directory andgrep-cliwill use the
malicious actor's version ofgz.exeinstead of the system's. This is also technically possible on Unix as well, but only if thePATHvariable contains.. Conventionally, they do not. ADecompressionReaderhas been fixed to automatically resolve binary names
usingPATH, instead of relying on the Windows API to do it. If you usegrep-cli'sCommandReaderwith astd::process::Commandvalue
on Windows, then it is recommended to either construct theCommandwith an
absolute binary name, or usegrep-cli's newresolve_binaryhelper function. To be clear,grep-cli 0.1.6mitigates this issue in two ways: While the first mitigation fixes this issue for sensible values ofPATHwhen doing decompression search, the second mitigation is imperfect. The more
fundamental issue is thatstd::process::Commandis itself vulnerable to this. Advisory available underCC0-1.0license.
affected_functions: grep_cli;;decompressionreader;;new
version_of_Affected: <0.1.6

---
classification: CRITICAL
subtitle: KeyValueReader passes uninitialized memory to Read instance
reported: January 31, 2021
issued: April  2, 2021(last modified: June 13, 2023)
package: {'name': 'outer_cgi(crates.io)', 'url': '/packages/outer_cgi.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-30454', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-30454'}, {'text': 'GHSA-6vmq-jh76-hq43', 'url': 'https://github.com/advisories/GHSA-6vmq-jh76-hq43'}]
references: [{'text': 'https://github.com/SolraBizna/outer_cgi/issues/1', 'url': 'https://github.com/SolraBizna/outer_cgi/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.1
description: TheKeyValueReadertype in affected versions of this crate set up an
uninitialized memory buffer and passed them to be read in to a user-providedReadinstance. TheReadinstance could read uninitialized memory and cause undefined
behavior and miscompilations. This issue was fixed in commitdd59b30by zero-initializing the buffers before passing them. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: throughandthrough_andcauses a double free if the map function panics
reported: February 18, 2021
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'through(crates.io)', 'url': '/packages/through.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29940', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29940'}, {'text': 'GHSA-5hpj-m323-cphm', 'url': 'https://github.com/advisories/GHSA-5hpj-m323-cphm'}]
references: [{'text': 'https://github.com/gretchenfrage/through/issues/1', 'url': 'https://github.com/gretchenfrage/through/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: throughandthrough_andtake a mutable reference as well as a mapping
function to change the provided reference. They do this by callingptr::readon the reference which duplicates ownership and then calling the mapping
function. If the mapping function panics, both the original object and the one
duplicated byptr::readget dropped, causing a double free. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: misc::vec_with_size() can drop uninitialized memory if clone panics
reported: February 17, 2021
issued: March 29, 2021(last modified: June 13, 2023)
package: {'name': 'telemetry(crates.io)', 'url': '/packages/telemetry.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29937', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29937'}, {'text': 'GHSA-hpcx-3pw8-g3j2', 'url': 'https://github.com/advisories/GHSA-hpcx-3pw8-g3j2'}]
references: [{'text': 'https://github.com/Yoric/telemetry.rs/issues/45', 'url': 'https://github.com/Yoric/telemetry.rs/issues/45'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: misc::vec_with_sizecreates a vector of the providedsizeand immediately
callsvec.set_len(size)on it, initially filling it with uninitialized memory.
It then inserts elements usingvec[i] = value.clone(). If thevalue.clone()call panics, uninitialized items in the vector will be
dropped leading to undefined behavior. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: FromIterator implementation for Vector/Matrix can drop uninitialized memory
reported: January 11, 2021
issued: March 29, 2021(last modified: June 13, 2023)
package: {'name': 'adtensor(crates.io)', 'url': '/packages/adtensor.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29936', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29936'}, {'text': 'GHSA-rg4m-gww5-7p47', 'url': 'https://github.com/advisories/GHSA-rg4m-gww5-7p47'}]
references: [{'text': 'https://github.com/charles-r-earp/adtensor/issues/4', 'url': 'https://github.com/charles-r-earp/adtensor/issues/4'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: TheFromIterator<T>methods forVectorandMatrixrely on the type
parameterNto allocate space in the iterable. If the passed inNtype parameter is larger than the number of items returned
by the iterator, it can lead to uninitialized memory being left in theVectororMatrixtype which gets dropped. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Fix a use-after-free bug in diesels Sqlite backend
reported: March  5, 2021
issued: March  5, 2021(last modified: June 13, 2023)
package: {'name': 'diesel(crates.io)', 'url': '/packages/diesel.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28305', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28305'}, {'text': 'GHSA-j8q9-5rp9-4mv9', 'url': 'https://github.com/advisories/GHSA-j8q9-5rp9-4mv9'}]
references: [{'text': 'https://github.com/diesel-rs/diesel/pull/2663', 'url': 'https://github.com/diesel-rs/diesel/pull/2663'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.4.6
affected functions: Version
diesel::sqliteconnection::query_by_name: <1.4.6
description: We've misusedsqlite3_column_name. TheSQLitedocumentation
states that the following: As part of ourquery_by_nameinfrastructure we've first received all
field names for the prepared statement and stored them as string slices
for later use. After that we calledsqlite3_step()for the first time,
which invalids the pointer and therefore the stored string slice. Advisory available underCC0-1.0license.
affected_functions: diesel;;sqliteconnection;;query_by_name
version_of_Affected: <1.4.6

---
classification: CRITICAL
subtitle: Intern: Data race allowed on T
reported: March  3, 2021
issued: March  4, 2021(last modified: June 13, 2023)
package: {'name': 'internment(crates.io)', 'url': '/packages/internment.html'}
type: Vulnerability
categories: ['thread-safety']
aliases: [{'text': 'CVE-2021-28037', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28037'}, {'text': 'GHSA-gppw-3h6h-v6q2', 'url': 'https://github.com/advisories/GHSA-gppw-3h6h-v6q2'}]
references: [{'text': 'https://github.com/droundy/internment/issues/20', 'url': 'https://github.com/droundy/internment/issues/20'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.2
description: Affected versions of this crate unconditionally implementsSyncforIntern<T>.
This allows users to create data race onT: !Sync, which may lead to undefined behavior
(for example, memory corruption). The flaw was corrected in commit 2928a87 by adding the trait boundT: Syncin theSyncimpl ofIntern<T>. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: push_cloned can drop uninitialized memory or double free on panic
reported: February 22, 2021
issued: March  3, 2021(last modified: June 13, 2023)
package: {'name': 'stack_dst(crates.io)', 'url': '/packages/stack_dst.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28034', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28034'}, {'text': 'CVE-2021-28035', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28035'}, {'text': 'GHSA-45w7-7g63-2m5w', 'url': 'https://github.com/advisories/GHSA-45w7-7g63-2m5w'}, {'text': 'GHSA-8mjx-h23h-w2pg', 'url': 'https://github.com/advisories/GHSA-8mjx-h23h-w2pg'}]
references: [{'text': 'https://github.com/thepowersgang/stack_dst-rs/issues/5', 'url': 'https://github.com/thepowersgang/stack_dst-rs/issues/5'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
affected functions: Version
stack_dst::stacka::push_cloned: <0.6.1
description: Affected versions ofstack_dstused apush_innerfunction that increased
the internal length of the array and then calledval.clone(). If theval.clone()call panics, the stack could drop an already dropped
element or drop uninitialized memory. This issue was fixed in2a4d538by increasing the length of the array after
elements are cloned. Advisory available underCC0-1.0license.
affected_functions: stack_dst;;stacka;;push_cloned
version_of_Affected: <0.6.1

---
classification: CRITICAL
subtitle: split_at allows obtaining multiple mutable references to the same data
reported: January 31, 2021
issued: March  2, 2021(last modified: June 13, 2023)
package: {'name': 'nano_arena(crates.io)', 'url': '/packages/nano_arena.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28032', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28032'}, {'text': 'GHSA-wp34-mqw5-jj85', 'url': 'https://github.com/advisories/GHSA-wp34-mqw5-jj85'}]
references: [{'text': 'https://github.com/bennetthardwick/nano-arena/issues/1', 'url': 'https://github.com/bennetthardwick/nano-arena/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.2
affected functions: Version
nano_arena::arena::split_at: <0.5.2
nano_arena::arenasplit::split_at: <0.5.2
description: Affected versions of this crate assumed thatBorrow<Idx>was guaranteed to
return the same value on.borrow(). The borrowed index value was used to
retrieve a mutable reference to a value. If theBorrow<Idx>implementation returned a different index, the split arena
would allow retrieving the index as a mutable reference creating two mutable
references to the same element. This violates Rust's aliasing rules and allows
for memory safety issues such as writing out of bounds and use-after-frees. The flaw was corrected in commit6b83f9dby storing the.borrow()value in
a temporary variable. Advisory available underCC0-1.0license.
affected_functions: nano_arena;;arena;;split_at
version_of_Affected: <0.5.2

---
classification: CRITICAL
subtitle: Deserializing an array can drop uninitialized memory on panic
reported: March  1, 2021
issued: March  2, 2021(last modified: June 13, 2023)
package: {'name': 'byte_struct(crates.io)', 'url': '/packages/byte_struct.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28033', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28033'}, {'text': 'GHSA-8fgg-5v78-6g76', 'url': 'https://github.com/advisories/GHSA-8fgg-5v78-6g76'}]
references: [{'text': 'https://github.com/wwylele/byte-struct-rs/issues/1', 'url': 'https://github.com/wwylele/byte-struct-rs/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
description: Theread_bytes_default_lefunction for[T; n]arrays, used to deserialize
arrays ofTfrom bytes created a[T; n]array withstd::mem::uninitializedand then calledT's deserialization method. IfT's deserialization method panicked, the uninitialized memory could drop
invalid objects. This flaw was corrected ina535678by removing the unsafe block and using
a.mapfunction to deserialize each element of the array instead. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: move_elements can double-free objects on panic
reported: February 18, 2021
issued: March  2, 2021(last modified: June 13, 2023)
package: {'name': 'scratchpad(crates.io)', 'url': '/packages/scratchpad.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28031', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28031'}, {'text': 'GHSA-3qm2-rfqw-fmrw', 'url': 'https://github.com/advisories/GHSA-3qm2-rfqw-fmrw'}]
references: [{'text': 'https://github.com/okready/scratchpad/issues/1', 'url': 'https://github.com/okready/scratchpad/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.3.1
affected functions: Version
scratchpad::slicemovesource::move_elements: <1.3.1
description: Affected versions ofscratchpadusedptr::readto read elements while
calling a user provided functionfon them. Since the pointer read duplicates ownership, a panic inside the user providedffunction could cause a double free when unwinding. The flaw was fixed in commit891561beaby removing the unsafe block and using
a plain iterator. Advisory available underCC0-1.0license.
affected_functions: scratchpad;;slicemovesource;;move_elements
version_of_Affected: <1.3.1

---
classification: CRITICAL
subtitle: Loading a bgzip block can write out of bounds if size overflows.
reported: January  7, 2021
issued: March  1, 2021(last modified: June 13, 2023)
package: {'name': 'bam(crates.io)', 'url': '/packages/bam.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-28027', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28027'}, {'text': 'GHSA-cpqj-r29q-chrh', 'url': 'https://github.com/advisories/GHSA-cpqj-r29q-chrh'}]
references: [{'text': 'https://gitlab.com/tprodanov/bam/-/issues/4', 'url': 'https://gitlab.com/tprodanov/bam/-/issues/4'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.3
affected functions: Version
bam::bgzip::block::load: <0.1.3
description: Affected versions ofbamset the length of an internal buffer usingself.compressed.set_len(block_size - HEADER_SIZE - MIN_EXTRA_SIZE)and then
wrote into it. Whileblock_sizewas constrained to a proper maximum, when it
was too small the subtraction could overflow negatively to a large number past
the capacity ofself.compressed. This can result in memory corruption in the form of writing out of bounds when
loading abgzipfile with a smallblock_size. Commit061eee38d4fixed this issue by checking for the underflow when setting
the buffer size. Advisory available underCC0-1.0license.
affected_functions: bam;;bgzip;;block;;load
version_of_Affected: <0.1.3

---
classification: CRITICAL
subtitle: Incorrect check on buffer length when seeding RNGs
reported: February 12, 2021
issued: February 15, 2021(last modified: June 13, 2023)
package: {'name': 'rand_core(crates.io)', 'url': '/packages/rand_core.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2021-27378', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27378'}, {'text': 'GHSA-w7j2-35mf-95p7', 'url': 'https://github.com/advisories/GHSA-w7j2-35mf-95p7'}]
references: [{'text': 'https://github.com/rust-random/rand/pull/1096', 'url': 'https://github.com/rust-random/rand/pull/1096'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.2
unaffected: <0.6.0
affected functions: Version
rand_core::le::read_u32_into: <0.6.2, >=0.6.0
rand_core::le::read_u64_into: <0.6.2, >=0.6.0
description: Summary: rand_core::le::read_u32_into and read_u64_into have incorrect checks on the source buffer length, allowing the destination buffer to be under-filled. Implications: some downstream RNGs, including Hc128Rng (but not the more widely used ChaCha*Rng), allow seeding using the SeedableRng::from_seed trait-function with too short keys. Advisory available underCC0-1.0license.
affected_functions: rand_core;;le;;read_u32_into
version_of_Affected: <0.6.2, >=0.6.0

---
classification: CRITICAL
subtitle: Use-after-free insubscript_nextandsubscript_prevwrappers
reported: February  9, 2021
issued: February 15, 2021(last modified: June 13, 2023)
package: {'name': 'yottadb(crates.io)', 'url': '/packages/yottadb.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-27377', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27377'}, {'text': 'GHSA-9658-c26v-7qvf', 'url': 'https://github.com/advisories/GHSA-9658-c26v-7qvf'}]
references: [{'text': 'https://gitlab.com/YottaDB/Lang/YDBRust/-/issues/40', 'url': 'https://gitlab.com/YottaDB/Lang/YDBRust/-/issues/40'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.2.0
affected functions: Version
yottadb::key::sub_next_self_st: <1.2.0
yottadb::key::sub_prev_self_st: <1.2.0
yottadb::keycontext::sub_next_self_st: <1.2.0
yottadb::keycontext::sub_prev_self_st: <1.2.0
description: Affected versions of this crate had an unsound implementation which could pass
a pointer to freed memory toydb_subscript_next_standydb_subscript_prev_stif the variable and subscripts did not have enough
memory allocated on the first call to hold the next variable in the database. For example, the following code had undefined behavior: yottadbhas no reverse-dependencies on crates.io and there are no known
instances of this API being used incorrectly in practice. The fix is backwards
compatible. The flaw was corrected by recalculating the pointer each time it was reallocated. Advisory available underCC0-1.0license.
affected_functions: yottadb;;key;;sub_next_self_st
version_of_Affected: <1.2.0

---
classification: CRITICAL
subtitle: nb-connectinvalidly assumes the memory layout of std::net::SocketAddr
reported: February 14, 2021
issued: February 14, 2021(last modified: June 13, 2023)
package: {'name': 'nb-connect(crates.io)', 'url': '/packages/nb-connect.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2021-27376', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27376'}, {'text': 'GHSA-rm4w-6696-r77p', 'url': 'https://github.com/advisories/GHSA-rm4w-6696-r77p'}]
references: [{'text': 'https://github.com/smol-rs/nb-connect/issues/1', 'url': 'https://github.com/smol-rs/nb-connect/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.0.3
description: Thenb-connectcrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: FixedCapacityDequeLike::clone()can cause dropping uninitialized memory
reported: December 31, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'array-tools(crates.io)', 'url': '/packages/array-tools.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36452', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36452'}, {'text': 'GHSA-6wp2-fw3v-mfmc', 'url': 'https://github.com/advisories/GHSA-6wp2-fw3v-mfmc'}]
references: [{'text': 'https://github.com/L117/array-tools/issues/2', 'url': 'https://github.com/L117/array-tools/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.2
description: Affected versions of this crate don't guard against panics, so that partially uninitialized buffer is dropped when user-providedT::clone()panics inFixedCapacityDequeLike<T, A>::clone(). This causes memory corruption. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Sectors::getaccesses unclaimed/uninitialized memory
reported: January  6, 2021
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'calamine(crates.io)', 'url': '/packages/calamine.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
aliases: [{'text': 'CVE-2021-26951', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26951'}, {'text': 'GHSA-ppqp-78xx-3r38', 'url': 'https://github.com/advisories/GHSA-ppqp-78xx-3r38'}]
references: [{'text': 'https://github.com/tafia/calamine/issues/199', 'url': 'https://github.com/tafia/calamine/issues/199'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.17.0
description: Affected versions of this crate arbitrarily callsVec::set_lento increase length of a vector without claiming more memory for the vector. Affected versions of this crate
also calls user-providedReadon the uninitialized memory of the vector that was
extended withVec::set_len. This can overwrite active entities in adjacent heap memory and seems to be a major security issue. Also, calling user-providedReadon uninitialized memory is defined as UB in Rust. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Contents of uninitialized memory exposed in DeflateOutput's AsyncRead implementation
reported: January 24, 2020
issued: January 27, 2021(last modified: June 13, 2023)
package: {'name': 'libp2p-deflate(crates.io)', 'url': '/packages/libp2p-deflate.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36443', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36443'}, {'text': 'GHSA-gvcp-948f-8f2p', 'url': 'https://github.com/advisories/GHSA-gvcp-948f-8f2p'}]
references: [{'text': 'https://github.com/libp2p/rust-libp2p/issues/1932', 'url': 'https://github.com/libp2p/rust-libp2p/issues/1932'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.27.1
description: Affected versions of this crate passes an uninitialized buffer to a user-provided trait functionAsyncRead::poll_read(). ArbitraryAsyncRead::poll_read()implementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. The flaw was fixed in commit 5ba266a by ensuring the newly allocated part of the buffer is zero-initialized before passing it to a user-providedAsyncRead::poll_read(). Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Reading uninitialized memory can cause UB (Deserializer::read_vec)
reported: January  2, 2021
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'cdr(crates.io)', 'url': '/packages/cdr.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26305', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26305'}, {'text': 'GHSA-37jj-wp7g-7wj4', 'url': 'https://github.com/advisories/GHSA-37jj-wp7g-7wj4'}]
references: [{'text': 'https://github.com/hrektts/cdr-rs/issues/10', 'url': 'https://github.com/hrektts/cdr-rs/issues/10'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.4
description: Deserializer::read_vec()created an uninitialized buffer and passes it to a user-providedReadimplementation (Deserializer.reader.read_exact()). Passing an uninitialized buffer to an arbitraryReadimplementation is currently defined as undefined behavior in Rust. Official documentation for theReadtrait explains the following: "It is your responsibility to make sure that buf is initialized before calling read. Calling read with an uninitialized buf (of the kind one obtains via MaybeUninit) is not safe, and can lead to undefined behavior." The flaw was corrected in commit ce310f7 by zero-initializing the newly allocated buffer before handing it toDeserializer.reader.read_exact(). Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: reading on uninitialized buffer can cause UB (impl<R> BufRead for GreedyAccessReader<R>)
reported: January  2, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'bra(crates.io)', 'url': '/packages/bra.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-25905', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25905'}, {'text': 'GHSA-j8qq-58cr-8cc7', 'url': 'https://github.com/advisories/GHSA-j8qq-58cr-8cc7'}]
references: [{'text': 'https://github.com/Enet4/bra-rs/issues/1', 'url': 'https://github.com/Enet4/bra-rs/issues/1'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H
patched: >=0.1.1
description: Affected versions of this crate creates an uninitialized buffer and passes it to user-providedReadimplementation. This is unsound, because it allows safe Rust code to exhibit an undefined behavior (read from uninitialized memory). The flaw was corrected in version 0.1.1 by zero-initializing a newly allocated buffer
before handing it to a user-providedReadimplementation. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: panic safety: double drop may happen withinutil::{mutate, mutate2}
reported: January 12, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'containers(crates.io)', 'url': '/packages/containers.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25907', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25907'}, {'text': 'GHSA-cv7x-6rc6-pq5v', 'url': 'https://github.com/advisories/GHSA-cv7x-6rc6-pq5v'}]
references: [{'text': 'https://github.com/strake/containers.rs/issues/2', 'url': 'https://github.com/strake/containers.rs/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.9.11
description: Upon panic in a user-provided functionf,fn mutate()&fn mutate2drops twice a same object. Affected versions of this crate did not guard against double drop while temporarily duplicating an object's ownership withptr::read(). Dropping a same object can result in memory corruption. The flaw was corrected in version "0.9.11" by fixing the code to abort upon panic. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Double free when callingsys_info::disk_infofrom multiple threads
reported: May 31, 2020
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'sys-info(crates.io)', 'url': '/packages/sys-info.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36434', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36434'}, {'text': 'GHSA-2f5j-3mhq-xv58', 'url': 'https://github.com/advisories/GHSA-2f5j-3mhq-xv58'}]
references: [{'text': 'https://github.com/FillZpp/sys-info-rs/issues/63', 'url': 'https://github.com/FillZpp/sys-info-rs/issues/63'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.8.0
affected oses: linux
affected functions: Version
sys_info::disk_info: <=0.1.1
description: Affected versions ofsys-infouse a static, global, list to store temporary disk information while running. The function that cleans up this list,DFCleanup, assumes a single threaded environment and will try to free the same memory twice in a multithreaded environment. This results in consistent double-frees and segfaults when callingsys_info::disk_infofrom multiple threads at once. The issue was fixed by moving the global variable into a local scope. Advisory available underCC0-1.0license.
affected_functions: sys_info;;disk_info
version_of_Affected: <=0.1.1

---
classification: CRITICAL
subtitle: Buffer overflow in SmallVec::insert_many
reported: January  8, 2021
issued: January  8, 2021(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-25900', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25900'}, {'text': 'GHSA-43w2-9j62-hq99', 'url': 'https://github.com/advisories/GHSA-43w2-9j62-hq99'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/252', 'url': 'https://github.com/servo/rust-smallvec/issues/252'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.14, <1.0.0>=1.6.1
unaffected: <0.6.3
affected functions: Version
smallvec::smallvec::insert_many: >=0.6.3, <0.6.14>=1.0.0, <1.6.1
description: A bug in theSmallVec::insert_manymethod caused it to allocate a buffer that was smaller than needed.  It then wrote past the end of the buffer, causing a buffer overflow and memory corruption on the heap. This bug was only triggered if the iterator passed toinsert_manyyielded more items than the lower bound returned from itssize_hintmethod. The flaw was corrected in smallvec 0.6.14 and 1.6.1, by ensuring that additional space is always reserved for each item inserted.  The fix also simplified the implementation ofinsert_manyto use less unsafe code, so it is easier to verify its correctness. Thank you to Yechan Bae (@Qwaz) and the Rust group at Georgia Tech’s SSLab for finding and reporting this bug. Advisory available underCC0-1.0license.
affected_functions: smallvec;;smallvec;;insert_many
version_of_Affected: >=0.6.3, <0.6.14>=1.0.0, <1.6.1

---
classification: CRITICAL
subtitle: sigstack allocation bug can cause memory corruption or leak
reported: January 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'lucet-runtime-internals(crates.io)', 'url': '/packages/lucet-runtime-internals.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
aliases: [{'text': 'CVE-2020-35859', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35859'}, {'text': 'GHSA-3933-wvjf-pcvc', 'url': 'https://github.com/advisories/GHSA-3933-wvjf-pcvc'}]
references: [{'text': 'https://github.com/bytecodealliance/lucet/pull/401', 'url': 'https://github.com/bytecodealliance/lucet/pull/401'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H
patched: <0.5.0, >=0.4.3>=0.5.1
description: An embedding using affected versions of lucet-runtime configured to use
non-default Wasm globals sizes of more than 4KiB, or compiled in debug mode
without optimizations, could leak data from the signal handler stack to guest
programs. This can potentially cause data from the embedding host to leak to
guest programs or cause corruption of guest program memory. This flaw was resolved by correcting the sigstack allocation logic. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: traitobject assumes the layout of fat pointers
reported: June  1, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'traitobject(crates.io)', 'url': '/packages/traitobject.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35881', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35881'}, {'text': 'GHSA-j79j-cx3h-g27h', 'url': 'https://github.com/advisories/GHSA-j79j-cx3h-g27h'}]
references: [{'text': 'https://github.com/reem/rust-traitobject/issues/7', 'url': 'https://github.com/reem/rust-traitobject/issues/7'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
affected functions: Version
traitobject::data: 
traitobject::data_mut: 
description: This crate gets the data pointer from fat pointers assuming that the first
element in a fat pointer is the data pointer. This is currently true, but
it may change in a future Rust version, leading to memory corruption. This has been fixed in the master branch of the crate, but is has not
been released into crates.io. Advisory available underCC0-1.0license.
affected_functions: traitobject;;data
version_of_Affected: 

---
classification: CRITICAL
subtitle: Bug in SliceDeque::move_head_unchecked corrupts its memory
reported: May  7, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15543', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15543'}, {'text': 'GHSA-c3m3-c39q-pv23', 'url': 'https://github.com/advisories/GHSA-c3m3-c39q-pv23'}]
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/57', 'url': 'https://github.com/gnzlbg/slice_deque/issues/57'}]
related: RUSTSEC-2018-0008
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.0
description: Affected versions of this crate entered a corrupted state ifmem::size_of::<T>() % allocation_granularity() != 0and a specific allocation
pattern was used: sufficiently shifting the deque elements over the mirrored
page boundary. This allows an attacker that controls controls both element insertion and
removal to corrupt the deque, such that reading elements from it would read
bytes corresponding to other elements in the deque. (e.g. a read of T could read
some bytes from one value and some bytes from an adjacent one, resulting in a T
whose value representation is not meaningful). This is undefined behavior. The flaw was corrected by using a pair of pointers to track the head and tail of
the deque instead of a pair of indices. This pair of pointers are represented
using a Rust slice. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Bug in SliceDeque::move_head_unchecked allows read of corrupted memory
reported: December  5, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20995', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20995'}, {'text': 'GHSA-hr3c-6mmp-6m39', 'url': 'https://github.com/advisories/GHSA-hr3c-6mmp-6m39'}]
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/57', 'url': 'https://github.com/gnzlbg/slice_deque/issues/57'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.16
description: Affected versions of this crate did not properly update the
head and tail of the deque when inserting and removing elements from the front
if, before insertion or removal, the tail of the deque was in the mirrored
memory region, and if, after insertion or removal, the head of the deque is
exactly at the beginning of the mirrored memory region. An attacker that controls both element insertion and removal into the deque
could put it in a corrupted state. Once the deque enters such an state, its head
and tail are corrupted, but in bounds of the allocated memory. This can result
in partial reads and writes, reads of uninitialized memory, reads of memory
containing previously dropped objects, etc. An attacker could exploit this to
alter program execution. The flaw was corrected by properly updating the head and tail of the deque in
this case. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: linked-hash-map creates uninitialized NonNull pointer
reported: June 23, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'linked-hash-map(crates.io)', 'url': '/packages/linked-hash-map.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-25573', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25573'}, {'text': 'GHSA-r43h-gmrm-h5c9', 'url': 'https://github.com/advisories/GHSA-r43h-gmrm-h5c9'}]
references: [{'text': 'https://github.com/contain-rs/linked-hash-map/pull/100', 'url': 'https://github.com/contain-rs/linked-hash-map/pull/100'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.3
description: Affected versions of this crate calledmem::uninitialized()to create aNonNull<T>,
which is undefined behavior. The flaw was corrected by avoiding the use ofmem::uninitialized(). Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Parsing a specially crafted message can result in a stack overflow
reported: January 16, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'prost(crates.io)', 'url': '/packages/prost.html'}
type: Vulnerability
categories: ['denial-of-service', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-35858', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35858'}, {'text': 'GHSA-gv73-9mwv-fwgq', 'url': 'https://github.com/advisories/GHSA-gv73-9mwv-fwgq'}]
references: [{'text': 'https://github.com/danburkert/prost/issues/267', 'url': 'https://github.com/danburkert/prost/issues/267'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
description: Affected versions of this crate contained a bug in which decoding untrusted
input could overflow the stack. On architectures with stack probes (like x86), this can be used for denial of
service attacks, while on architectures without stack probes (like ARM)
overflowing the stack is unsound and can result in potential memory corruption
(or even RCE). The flaw was quickly corrected by @danburkert and released in version 0.6.1. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: generichash::Digest::eq always return true
reported: October 11, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'sodiumoxide(crates.io)', 'url': '/packages/sodiumoxide.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-25002', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25002'}, {'text': 'GHSA-wrvc-72w7-xpmj', 'url': 'https://github.com/advisories/GHSA-wrvc-72w7-xpmj'}]
references: [{'text': 'https://github.com/sodiumoxide/sodiumoxide/pull/381', 'url': 'https://github.com/sodiumoxide/sodiumoxide/pull/381'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.5
affected functions: Version
sodiumoxide::crypto::generichash::digest::eq: <0.2.5, >=0.2.0
sodiumoxide::crypto::generichash::digest::ne: <0.2.5, >=0.2.0
description: PartialEq implementation for generichash::Digest has compared itself to itself. Digest::eq always returns true and Digest::ne always returns false. Advisory available underCC0-1.0license.
affected_functions: sodiumoxide;;crypto;;generichash;;digest;;eq
version_of_Affected: <0.2.5, >=0.2.0

---
classification: CRITICAL
subtitle: Allows viewing and modifying arbitrary structs as bytes
reported: June 14, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rgb(crates.io)', 'url': '/packages/rgb.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-25016', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25016'}, {'text': 'GHSA-g4rw-8m5q-6453', 'url': 'https://github.com/advisories/GHSA-g4rw-8m5q-6453'}]
references: [{'text': 'https://github.com/kornelski/rust-rgb/issues/35', 'url': 'https://github.com/kornelski/rust-rgb/issues/35'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: >=0.8.20
unaffected: <0.5.4
description: Affected versions of rgb crate allow viewing and modifying data of any typeTwrapped inRGB<T>as bytes,
and do not correctly constrainRGB<T>and other wrapper structures to the types for which it is safe to do so. Safety violation possible for a type wrapped inRGB<T>and similar wrapper structures: The issue was resolved by requiring all types wrapped in structures provided by RGB crate to implement an unsafe marker trait. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: failure is officially deprecated/unmaintained
reported: May  2, 2020
issued: October  1, 2020(last modified: February 10, 2024)
package: {'name': 'failure(crates.io)', 'url': '/packages/failure.html'}
type: INFOUnmaintained
aliases: [{'text': 'CVE-2019-25010', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25010'}, {'text': 'CVE-2020-25575', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25575'}, {'text': 'GHSA-jq66-xh47-j9f3', 'url': 'https://github.com/advisories/GHSA-jq66-xh47-j9f3'}, {'text': 'GHSA-r98r-j25q-rmpr', 'url': 'https://github.com/advisories/GHSA-r98r-j25q-rmpr'}]
references: [{'text': 'https://github.com/rust-lang-nursery/failure/pull/347', 'url': 'https://github.com/rust-lang-nursery/failure/pull/347'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Thefailurecrate is officially end-of-life: it has been marked as deprecated
by the former maintainer, who has announced that there will be no updates or
maintenance work on it going forward. The following are some suggested actively developed alternatives to switch to: Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Type confusion ifprivate_get_type_idis overridden
reported: November 13, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'failure(crates.io)', 'url': '/packages/failure.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2019-25010', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25010'}, {'text': 'CVE-2020-25575', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25575'}, {'text': 'GHSA-jq66-xh47-j9f3', 'url': 'https://github.com/advisories/GHSA-jq66-xh47-j9f3'}, {'text': 'GHSA-r98r-j25q-rmpr', 'url': 'https://github.com/advisories/GHSA-r98r-j25q-rmpr'}]
references: [{'text': 'https://github.com/rust-lang-nursery/failure/issues/336', 'url': 'https://github.com/rust-lang-nursery/failure/issues/336'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
affected functions: Version
failure::fail::__private_get_type_id__: >=0.1.0
description: Safe Rust code can implement malfunctioning__private_get_type_id__and cause
type confusion when downcasting, which is an undefined behavior. Users who deriveFailtrait are not affected. Advisory available underCC0-1.0license.
affected_functions: failure;;fail;;__private_get_type_id__
version_of_Affected: >=0.1.0

---
classification: CRITICAL
subtitle: HeaderMap::Drain API is unsound
reported: November 16, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'http(crates.io)', 'url': '/packages/http.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-25009', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25009'}, {'text': 'GHSA-6rhx-hqxm-8p36', 'url': 'https://github.com/advisories/GHSA-6rhx-hqxm-8p36'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.20
affected functions: Version
http::header::headermap::drain: <0.1.20
description: Affected versions of this crate incorrectly used raw pointer,
which introduced unsoundness in its public safe API. Failing to drop the Drain struct causes double-free,
andit is possible to violate Rust's alias rule and cause data race with Drain's Iterator implementation. The flaw was corrected in 0.1.20 release ofhttpcrate. Advisory available underCC0-1.0license.
affected_functions: http;;header;;headermap;;drain
version_of_Affected: <0.1.20

---
classification: CRITICAL
subtitle: Unsoundimpl Follow for bool
reported: October 20, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'flatbuffers(crates.io)', 'url': '/packages/flatbuffers.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2019-25004', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25004'}, {'text': 'GHSA-gx73-2498-r55c', 'url': 'https://github.com/advisories/GHSA-gx73-2498-r55c'}]
references: [{'text': 'https://github.com/google/flatbuffers/issues/5530', 'url': 'https://github.com/google/flatbuffers/issues/5530'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
unaffected: <0.4.0
affected functions: Version
flatbuffers::follow::follow: >=0.4.0<=0.6.0
description: The implementation ofimpl Follow for boolallows to reinterpret arbitrary bytes as abool. In Rustboolhas stringent requirements for its in-memory representation. Use of this function
allows to violate these requirements and invoke undefined behaviour in safe code. Advisory available underCC0-1.0license.
affected_functions: flatbuffers;;follow;;follow
version_of_Affected: >=0.4.0<=0.6.0

---
classification: CRITICAL
subtitle: Integer overflow leads to heap-based buffer overflow in encode_config_buf
reported: May  3, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'base64(crates.io)', 'url': '/packages/base64.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-1000430', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-1000430'}, {'text': 'GHSA-x67x-vg9m-65c3', 'url': 'https://github.com/advisories/GHSA-x67x-vg9m-65c3'}]
references: [{'text': 'https://github.com/alicemaz/rust-base64/commit/24ead980daf11ba563e4fb2516187a56a71ad319', 'url': 'https://github.com/alicemaz/rust-base64/commit/24ead980daf11ba563e4fb2516187a56a71ad319'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.2
description: Affected versions of this crate suffered from an integer overflow bug when
calculating the size of a buffer to use when encoding base64 using theencode_config_bufandencode_configfunctions.  If the input string
was large, this would cause a buffer to be allocated that was too small.
Since this function writes to the buffer using unsafe code, it would
allow an attacker to write beyond the buffer, causing memory corruption
and possibly the execution of arbitrary code. This flaw was corrected by using checked arithmetic to calculate
the size of the buffer. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Ozone contains several memory safety issues
reported: July  4, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ozone(crates.io)', 'url': '/packages/ozone.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35877', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35877'}, {'text': 'CVE-2020-35878', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35878'}, {'text': 'GHSA-m3ww-7hrp-gw9w', 'url': 'https://github.com/advisories/GHSA-m3ww-7hrp-gw9w'}, {'text': 'GHSA-p2q9-9cq6-h3jw', 'url': 'https://github.com/advisories/GHSA-p2q9-9cq6-h3jw'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Ozone contains several memory safety issues includingout-of-bound accessand dropping ofuninitialized memory. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: CBox API allows to de-reference raw pointers withoutunsafecode
reported: March 19, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'cbox(crates.io)', 'url': '/packages/cbox.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35860', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35860'}, {'text': 'GHSA-3vjm-36rr-7qrq', 'url': 'https://github.com/advisories/GHSA-3vjm-36rr-7qrq'}]
references: [{'text': 'https://github.com/TomBebbington/cbox-rs/issues/2', 'url': 'https://github.com/TomBebbington/cbox-rs/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: CBoxandCSemiBoxare part of the public API of the cbox crate
and they allow to create smart pointers from raw pointers and de-reference
them without the need ofunsafecode. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: HMAC-BLAKE2 algorithms compute incorrect results
reported: August 25, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'blake2(crates.io)', 'url': '/packages/blake2.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2019-16143', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16143'}, {'text': 'GHSA-4x25-pvhw-5224', 'url': 'https://github.com/advisories/GHSA-4x25-pvhw-5224'}]
references: [{'text': 'https://github.com/RustCrypto/MACs/issues/19', 'url': 'https://github.com/RustCrypto/MACs/issues/19'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.8.1
description: When used in conjunction with the Hash-based Message Authentication Code (HMAC),
the BLAKE2b and BLAKE2s implementations inblake2crate versions prior to
v0.8.1 used an incorrect block size (32-bytes instead of 64-bytes for BLAKE2s,
and 64-bytes instead of 128-bytes for BLAKE2b), causing them to miscompute theMacResult. The v0.8.1 release of theblake2crate uses the correct block sizes. Note that this advisory only impacts usage of BLAKE2 with HMAC, and does not
impactDigestfunctionality. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Enum repr causing potential memory corruption
reported: December 18, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'arrayfire(crates.io)', 'url': '/packages/arrayfire.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2018-20998', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20998'}, {'text': 'GHSA-69fv-gw6g-8ccg', 'url': 'https://github.com/advisories/GHSA-69fv-gw6g-8ccg'}]
references: [{'text': 'https://github.com/arrayfire/arrayfire-rust/pull/177', 'url': 'https://github.com/arrayfire/arrayfire-rust/pull/177'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=3.6.0
unaffected: <=3.5.0
affected architectures: x86_64
affected oses: windows
description: The attribute repr() added to enums to be compatible with C-FFI caused
memory corruption on MSVC toolchain. arrayfire crates <= version 3.5.0 do not have this issue when used with
Rust versions 1.27 or earlier. The issue only started to appear since
Rust version 1.28. The issue seems to be interlinked with which version of Rust is being used. The issue was fixed in crate 3.6.0. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: bespoke Cell implementation allows obtaining several mutable references to the same data
reported: January  8, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-utils(crates.io)', 'url': '/packages/actix-utils.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35898', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35898'}, {'text': 'GHSA-hhw2-pqhf-vmx2', 'url': 'https://github.com/advisories/GHSA-hhw2-pqhf-vmx2'}]
references: [{'text': 'https://github.com/actix/actix-net/issues/160', 'url': 'https://github.com/actix/actix-net/issues/160'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H
patched: >=2.0.0
description: The custom implementation of a Cell primitive in the affected versions of this crate
does not keep track of mutable references to the underlying data. This allows obtaining several mutable references to the same object
which may result in arbitrary memory corruption, most likely use-after-free. The flaw was corrected by switching from a bespokeCell<T>implementation toRc<RefCell<T>>. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Matrix::new() drops uninitialized memory
reported: August 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'alg_ds(crates.io)', 'url': '/packages/alg_ds.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-36432', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36432'}, {'text': 'GHSA-3vv3-frrq-6486', 'url': 'https://github.com/advisories/GHSA-3vv3-frrq-6486'}]
references: [{'text': 'https://gitlab.com/dvshapkin/alg-ds/-/issues/1', 'url': 'https://gitlab.com/dvshapkin/alg-ds/-/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Matrix::new()internally callsMatrix::fill_with()which uses*ptr = valuepattern to initialize the buffer.
This pattern assumes that there is an initialized struct at the address and drops it, which results in dropping of uninitialized struct. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: bigint is unmaintained, use uint instead
reported: May  7, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'bigint(crates.io)', 'url': '/packages/bigint.html'}
type: INFOUnmaintained
aliases: [{'text': 'CVE-2020-35880', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35880'}, {'text': 'GHSA-wgx2-6432-j3fw', 'url': 'https://github.com/advisories/GHSA-wgx2-6432-j3fw'}]
references: [{'text': 'https://github.com/paritytech/bigint/commit/7e71521a61b009afc94c91135353102658550d42', 'url': 'https://github.com/paritytech/bigint/commit/7e71521a61b009afc94c91135353102658550d42'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Thebigintcrate is not maintained any more and contains several known bugs (including a soundness bug);
useuintinstead. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Unaligned memory access
reported: April 19, 2019
issued: October  1, 2020(last modified: October 19, 2021)
package: {'name': 'rand_core(crates.io)', 'url': '/packages/rand_core.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-mmc9-pwm7-qj5w', 'url': 'https://github.com/advisories/GHSA-mmc9-pwm7-qj5w'}, {'text': 'CVE-2020-25576', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25576'}]
references: [{'text': 'https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06', 'url': 'https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: ^0.3.1>=0.4.2
affected functions: Version
rand_core::blockrng::fill_bytes: <0.4.2
rand_core::blockrng::next_u64: <0.4.2
description: Affected versions of this crate violated alignment when casting byte slices to
integer slices, resulting in undefined behavior. The flaw was corrected by Ralf Jung and Diggory Hardy. Advisory available underCC0-1.0license.
affected_functions: rand_core;;blockrng;;fill_bytes
version_of_Affected: <0.4.2

---
classification: CRITICAL
subtitle: Use-after-free in Framed due to lack of pinning
reported: January 30, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-codec(crates.io)', 'url': '/packages/actix-codec.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35902', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35902'}, {'text': 'GHSA-rqgx-hpg4-456r', 'url': 'https://github.com/advisories/GHSA-rqgx-hpg4-456r'}]
references: [{'text': 'https://github.com/actix/actix-net/issues/91', 'url': 'https://github.com/actix/actix-net/issues/91'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.0-beta.1
description: Affected versions of this crate did not require the buffer wrapped inFramedto be pinned,
but treated it as if it had a fixed location in memory. This may result in a use-after-free. The flaw was corrected by making the affected functions acceptPin<&mut Self>instead of&mut self. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: MsQueue and SegQueue suffer from double-free
reported: December  9, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'crossbeam(crates.io)', 'url': '/packages/crossbeam.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20996', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20996'}, {'text': 'GHSA-c3cw-c387-pj65', 'url': 'https://github.com/advisories/GHSA-c3cw-c387-pj65'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam-epoch/issues/82', 'url': 'https://github.com/crossbeam-rs/crossbeam-epoch/issues/82'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.1
unaffected: <0.4.0
description: Even if an element is popped from a queue, crossbeam would run its
destructor inside the epoch-based garbage collector. This is a source
of double frees. The flaw was corrected by wrapping elements inside queues in aManuallyDrop. Thanks to @c0gent for reporting the issue. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Use after free in CMS Signing
reported: June  1, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'openssl(crates.io)', 'url': '/packages/openssl.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20997', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20997'}, {'text': 'GHSA-xjxc-vfw2-cg96', 'url': 'https://github.com/advisories/GHSA-xjxc-vfw2-cg96'}]
references: [{'text': 'https://github.com/sfackler/rust-openssl/pull/942', 'url': 'https://github.com/sfackler/rust-openssl/pull/942'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.10.9
unaffected: <0.10.8
description: Affected versions of the OpenSSL crate used structures after they'd been freed. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Use-after-free in buffer conversion implementation
reported: September  1, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'chttp(crates.io)', 'url': '/packages/chttp.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16140', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16140'}, {'text': 'GHSA-5rrv-m36h-qwf8', 'url': 'https://github.com/advisories/GHSA-5rrv-m36h-qwf8'}]
references: [{'text': 'https://github.com/sagebind/isahc/issues/2', 'url': 'https://github.com/sagebind/isahc/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.3
unaffected: <0.1.1
description: The Fromimplementation for Vecwas not properly implemented,
returning a vector backed by freed memory. This could lead to memory corruption
or be exploited to cause undefined behavior. A fix was published in version 0.1.3. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Possible double free during unwinding in SmallVec::insert_many
reported: July 19, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20991', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20991'}, {'text': 'GHSA-rxr4-x558-x7hw', 'url': 'https://github.com/advisories/GHSA-rxr4-x558-x7hw'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/96', 'url': 'https://github.com/servo/rust-smallvec/issues/96'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.3^0.3.4^0.4.5^0.5.1
unaffected: <0.3.2
description: If an iterator passed toSmallVec::insert_manypanicked inIterator::next,
destructors were run during unwinding while the vector was in an inconsistent
state, possibly causing a double free (a destructor running on two copies of
the same value). This is fixed in smallvec 0.6.3 by ensuring that the vector's length is not
updated to include moved items until they have been removed from their
original positions.  Items may now be leaked ifIterator::nextpanics, but
they will not be dropped more than once. Thank you to @Vurich for reporting this bug. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Double-free and use-after-free in SmallVec::grow()
reported: June  6, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15551', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15551'}, {'text': 'GHSA-mm7v-vpv8-xfc3', 'url': 'https://github.com/advisories/GHSA-mm7v-vpv8-xfc3'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/148', 'url': 'https://github.com/servo/rust-smallvec/issues/148'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.10
unaffected: <0.6.5
affected functions: Version
smallvec::smallvec::grow: <0.6.10, >=0.6.5
description: Attempting to callgrowon a spilled SmallVec with a value equal to the current capacity causes it to free the existing data. This performs a double free immediately and may lead to use-after-free on subsequent accesses to the SmallVec contents. An attacker that controls the value passed togrowmay exploit this flaw to obtain memory contents or gain remote code execution. Credits to @ehuss for discovering, reporting and fixing the bug. Advisory available underCC0-1.0license.
affected_functions: smallvec;;smallvec;;grow
version_of_Affected: <0.6.10, >=0.6.5

---
classification: CRITICAL
subtitle: Memory corruption in SmallVec::grow()
reported: July 19, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
aliases: [{'text': 'CVE-2019-15554', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15554'}, {'text': 'GHSA-69gw-hgj3-45m7', 'url': 'https://github.com/advisories/GHSA-69gw-hgj3-45m7'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/149', 'url': 'https://github.com/servo/rust-smallvec/issues/149'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.10
unaffected: <0.6.3
affected functions: Version
smallvec::smallvec::grow: <0.6.10, >=0.6.3
description: Attempting to callgrowon a spilled SmallVec with a value less than the current capacity causes corruption of memory allocator data structures. An attacker that controls the value passed togrowmay exploit this flaw to obtain memory contents or gain remote code execution. Credits to @ehuss for discovering, reporting and fixing the bug. Advisory available underCC0-1.0license.
affected_functions: smallvec;;smallvec;;grow
version_of_Affected: <0.6.10, >=0.6.3

---
classification: CRITICAL
subtitle: Lifetime boundary forraw_sliceandraw_slice_mutare incorrect
reported: February 11, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rulinalg(crates.io)', 'url': '/packages/rulinalg.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35879', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35879'}, {'text': 'GHSA-q2gj-9r85-p832', 'url': 'https://github.com/advisories/GHSA-q2gj-9r85-p832'}]
references: [{'text': 'https://github.com/AtheMathmo/rulinalg/issues/201', 'url': 'https://github.com/AtheMathmo/rulinalg/issues/201'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
unaffected: <0.4.0
affected functions: Version
rulinalg::matrix::rowmut::raw_slice: >=0.4.0
rulinalg::matrix::rowmut::raw_slice_mut: >=0.4.0
description: The affected version ofrulinalghas incorrect lifetime boundary definitions
forRowMut::raw_sliceandRowMut::raw_slice_mut. They do not conform with
Rust's borrowing rule and allows the user to create multiple mutable references
to the same location. This may result in unexpected calculation result and data
race if both references are used at the same time. Advisory available underCC0-1.0license.
affected_functions: rulinalg;;matrix;;rowmut;;raw_slice
version_of_Affected: >=0.4.0

---
classification: CRITICAL
subtitle: MultiDecoder::read() drops uninitialized memory of arbitrary type on panic in client code
reported: July  4, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'libflate(crates.io)', 'url': '/packages/libflate.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15552', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15552'}, {'text': 'GHSA-rpcm-whqc-jfw8', 'url': 'https://github.com/advisories/GHSA-rpcm-whqc-jfw8'}]
references: [{'text': 'https://github.com/sile/libflate/issues/35', 'url': 'https://github.com/sile/libflate/issues/35'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.25
unaffected: <0.1.14
affected functions: Version
libflate::gzip::multidecoder::read: <0.1.25, >=0.1.14
description: Affected versions of libflate have set a field of an internal structure with a generic type to an uninitialized value inMultiDecoder::read()and reverted it to the original value after the function completed. However, execution ofMultiDecoder::read()could be interrupted by a panic in caller-suppliedReadimplementation. This would causedrop()to be called on uninitialized memory of a generic type implementingRead. This is equivalent to a use-after-free vulnerability and could allow an attacker to gain arbitrary code execution. The flaw was corrected by aborting immediately instead of unwinding the stack in case of panic withinMultiDecoder::read(). The issue was discovered and fixed by Shnatsel. Advisory available underCC0-1.0license.
affected_functions: libflate;;gzip;;multidecoder;;read
version_of_Affected: <0.1.25, >=0.1.14

---
classification: CRITICAL
subtitle: rio allows a use-after-free buffer access when a future is leaked
reported: May 11, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rio(crates.io)', 'url': '/packages/rio.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
aliases: [{'text': 'CVE-2020-35876', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35876'}, {'text': 'GHSA-8rc5-mr4f-m243', 'url': 'https://github.com/advisories/GHSA-8rc5-mr4f-m243'}]
references: [{'text': 'https://github.com/spacejam/rio/issues/11', 'url': 'https://github.com/spacejam/rio/issues/11'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: When ario::Completionis leaked, its drop code will not run. The drop code
is responsible for waiting until the kernel completes the I/O operation into, or
out of, the buffer borrowed byrio::Completion. Leaking the struct will allow
one to access and/or drop the buffer, which can lead to a use-after-free,
data races or leaking secrets. Upstream is not interested in fixing the issue. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Flaw in generativity allows out-of-bounds access
reported: May 21, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'compact_arena(crates.io)', 'url': '/packages/compact_arena.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-16139', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16139'}, {'text': 'GHSA-7j36-gc4r-9x3r', 'url': 'https://github.com/advisories/GHSA-7j36-gc4r-9x3r'}]
references: [{'text': 'https://github.com/llogiq/compact_arena/issues/22', 'url': 'https://github.com/llogiq/compact_arena/issues/22'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
affected functions: Version
compact_arena::smallarena::new: <0.4.0
description: Affected versions of this crate did not properly implement the generativity,
because the invariant lifetimes were not necessarilydropped. This allows an attacker to mix up two arenas, using indices created from one
arena with another one. This might lead to an out-of-bounds read or write
access into the memory reserved for the arena. The flaw was corrected by implementing generativity correctly in version 0.4.0. Advisory available underCC0-1.0license.
affected_functions: compact_arena;;smallarena;;new
version_of_Affected: <0.4.0

---
classification: CRITICAL
subtitle: StrcCtx deallocates a memory region that it doesn't own
reported: August 20, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'alpm-rs(crates.io)', 'url': '/packages/alpm-rs.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35885', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35885'}, {'text': 'GHSA-qc4m-gc8r-mg8m', 'url': 'https://github.com/advisories/GHSA-qc4m-gc8r-mg8m'}]
references: [{'text': 'https://github.com/pigeonhands/rust-arch/issues/2', 'url': 'https://github.com/pigeonhands/rust-arch/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: StrcCtxdeallocate a memory region that it doesn't own whenStrcCtxis created without usingStrcCtx::new.
This can introduce memory safety issues such as double-free and use-after-free to client programs. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Matrix::zip_elementscauses double free
reported: September 14, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'linea(crates.io)', 'url': '/packages/linea.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-16880', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16880'}, {'text': 'GHSA-j52m-489x-v634', 'url': 'https://github.com/advisories/GHSA-j52m-489x-v634'}]
references: [{'text': 'https://github.com/strake/linea.rs/issues/2', 'url': 'https://github.com/strake/linea.rs/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >0.9.4
description: Affected versions of this crate did not properly implements theMatrix::zip_elementsmethod, which causes an double free when the given trait implementation might panic. This allows an attacker to corrupt or take control of the memory. The flaw was corrected by Phosphorus15. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Stream callback function is not unwind safe
reported: September 14, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'portaudio-rs(crates.io)', 'url': '/packages/portaudio-rs.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-16881', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16881'}, {'text': 'GHSA-qpjr-ch72-2qq4', 'url': 'https://github.com/advisories/GHSA-qpjr-ch72-2qq4'}]
references: [{'text': 'https://github.com/mvdnes/portaudio-rs/issues/20', 'url': 'https://github.com/mvdnes/portaudio-rs/issues/20'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >0.3.1
description: Affected versions of this crate is not panic safe within callback functionsstream_callbackandstream_finished_callback. The call to user-provided closure might panic before amem::forgetcall, which then causes a use after free that grants attacker to control the callback function pointer. This allows an attacker to construct an arbitrary code execution . The flaw was reported by Phosphorus15. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Internally mutating methods take immutable ref self
reported: September  2, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'renderdoc(crates.io)', 'url': '/packages/renderdoc.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16142', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16142'}, {'text': 'GHSA-vhfr-v4w9-45v8', 'url': 'https://github.com/advisories/GHSA-vhfr-v4w9-45v8'}]
references: [{'text': 'https://github.com/ebkalderon/renderdoc-rs/pull/32', 'url': 'https://github.com/ebkalderon/renderdoc-rs/pull/32'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.0
affected functions: Version
renderdoc::api::renderdocv110::trigger_multi_frame_capture: <0.5.0
renderdoc::api::renderdocv120::set_capture_file_comments: <0.5.0
description: Affected versions of this crate exposed several methods which tookselfby
immutable reference, despite the requesting the RenderDoc API to set a mutable
value internally. This is technically unsound and calling these methods from multiple threads
without synchronization could lead to unexpected and unpredictable behavior. The flaw was corrected in release 0.5.0. Advisory available underCC0-1.0license.
affected_functions: renderdoc;;api;;renderdocv110;;trigger_multi_frame_capture
version_of_Affected: <0.5.0

---
classification: CRITICAL
subtitle: Missing sanitization in mozwire allows local file overwrite of files ending in .conf
reported: August 18, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'mozwire(crates.io)', 'url': '/packages/mozwire.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35883', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35883'}, {'text': 'GHSA-4vhw-4rw7-jfpv', 'url': 'https://github.com/advisories/GHSA-4vhw-4rw7-jfpv'}]
references: [{'text': 'https://github.com/NilsIrl/MozWire/issues/14', 'url': 'https://github.com/NilsIrl/MozWire/issues/14'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H
patched: >0.4.1
description: The client software downloaded a list of servers from mozilla's servers and created local files named
after the hostname field in the json document. No verification of the content of the string was made, and it could therefore have included '../' leading to path traversal. This allows an attacker in control of mozilla's servers to overwrite/create local files named .conf. The flaw was corrected by sanitizing the hostname field. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Flaw in interface may drop uninitialized instance of arbitrary types
reported: August 21, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'image(crates.io)', 'url': '/packages/image.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16138', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16138'}, {'text': 'GHSA-m2pf-hprp-3vqm', 'url': 'https://github.com/advisories/GHSA-m2pf-hprp-3vqm'}]
references: [{'text': 'https://github.com/image-rs/image/pull/985', 'url': 'https://github.com/image-rs/image/pull/985'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.21.3
unaffected: <0.10.2
affected functions: Version
image::hdr::hdrdecoder::read_image_transform: <0.21.3, >=0.10.2
description: Affected versions of this crate would callVec::set_lenon an uninitialized
vector with user-provided type parameter, in an interface of the HDR image
format decoder. They would then also call other code that could panic before
initializing all instances. This could run Drop implementations on uninitialized types, equivalent to
use-after-free, and allow an attacker arbitrary code execution. Two different fixes were applied. It is possible to conserve the interface by
ensuring proper initialization before callingVec::set_len. Drop is no longer
called in case of panic, though. Starting from version0.22, a breaking change to the interface requires
callers to pre-allocate the output buffer and pass a mutable slice instead,
avoiding all unsafe code. Advisory available underCC0-1.0license.
affected_functions: image;;hdr;;hdrdecoder;;read_image_transform
version_of_Affected: <0.21.3, >=0.10.2

---
classification: CRITICAL
subtitle: Vec-to-vec transmutations could lead to heap overflow/corruption
reported: November 27, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'safe-transmute(crates.io)', 'url': '/packages/safe-transmute.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-21000', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-21000'}, {'text': 'GHSA-2v78-j59h-fmpf', 'url': 'https://github.com/advisories/GHSA-2v78-j59h-fmpf'}]
references: [{'text': 'https://github.com/nabijaczleweli/safe-transmute-rs/pull/36', 'url': 'https://github.com/nabijaczleweli/safe-transmute-rs/pull/36'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.10.1
unaffected: <0.4.0
description: Affected versions of this crate switched the length and capacity arguments in the Vec::from_raw_parts() constructor,
which could lead to memory corruption or data leakage. The flaw was corrected by using the constructor correctly. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Flaw in hyper allows request smuggling by sending a body in GET requests
reported: March 19, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
categories: ['format-injection']
keywords: []
aliases: [{'text': 'CVE-2020-35863', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35863'}, {'text': 'GHSA-h3qr-rq2j-74w4', 'url': 'https://github.com/advisories/GHSA-h3qr-rq2j-74w4'}]
references: [{'text': 'https://github.com/hyperium/hyper/issues/1925', 'url': 'https://github.com/hyperium/hyper/issues/1925'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.12.34
unaffected: <0.11.0
description: Vulnerable versions of hyper allow GET requests to have bodies, even if there is
no Transfer-Encoding or Content-Length header.  As per the HTTP 1.1
specification, such requests do not have bodies, so the body will be interpreted
as a separate HTTP request. This allows an attacker who can control the body and method of an HTTP request
made by hyper to inject a request with headers that would not otherwise be
allowed, as demonstrated by sending a malformed HTTP request from a Substrate
runtime.  This allows bypassing CORS restrictions.  In combination with other
vulnerabilities, such as an exploitable web server listening on loopback, it may
allow remote code execution. The flaw was corrected in hyper version 0.12.34. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Missing check in ArrayVec leads to out-of-bounds write.
reported: September 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'stack(crates.io)', 'url': '/packages/stack.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35895', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35895'}, {'text': 'GHSA-h45v-vgvp-3h5v', 'url': 'https://github.com/advisories/GHSA-h45v-vgvp-3h5v'}]
references: [{'text': 'https://github.com/arcnmx/stack-rs/issues/4', 'url': 'https://github.com/arcnmx/stack-rs/issues/4'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.1
description: ArrayVec::insert allows insertion of an element into the array object into the
specified index. Due to a missing check on the upperbound of this index, it is
possible to write out of bounds. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: use-after or double free of allocated memory
reported: March 27, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'bitvec(crates.io)', 'url': '/packages/bitvec.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35862', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35862'}, {'text': 'GHSA-7cjc-hvxf-gqh7', 'url': 'https://github.com/advisories/GHSA-7cjc-hvxf-gqh7'}]
references: [{'text': 'https://github.com/myrrlyn/bitvec/issues/55', 'url': 'https://github.com/myrrlyn/bitvec/issues/55'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.17.4
unaffected: <0.11.0
affected functions: Version
bitvec::vec::bitvec::into_boxed_bitslice: <0.17.4, >=0.11.0
description: Conversion ofBitVectoBitBoxdid not account for allocation movement. The flaw was corrected by using the address after resizing, rather than the original base address. Advisory available underCC0-1.0license.
affected_functions: bitvec;;vec;;bitvec;;into_boxed_bitslice
version_of_Affected: <0.17.4, >=0.11.0

---
classification: CRITICAL
subtitle: Buffer overflow vulnerability in str::repeat()
reported: September 21, 2018
issued: October  1, 2020
package: {'name': 'std', 'url': '/packages/std.html'}
type: Vulnerability
categories: ['denial-of-service', 'memory-corruption']
references: [{'text': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/CmSuTm-SaU0', 'url': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/CmSuTm-SaU0'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.29.1
unaffected: <1.26.0
affected functions: Version
std::str::repeat: <1.29.1, >=1.26.0
description: The Rust team was recently notified of a security vulnerability affecting
thestr::repeatfunction in the standard library. If your code does not
use this function, it is not affected. This vulnerability is an instance of CWE-680: Integer Overflow to Buffer
Overflow1. Thestr::repeatfunction in the standard library allows repeating a
string a fixed number of times, returning an owned version of the final
string. The capacity of the final string is calculated by multiplying
the length of the string being repeated by the number of copies. This
calculation can overflow, and this case was not properly checked for. The rest of the implementation ofstr::repeatcontains unsafe code
that relies on a preallocated vector having the capacity calculated
earlier. On integer overflow the capacity will be less than required,
and which then writes outside of the allocated buffer, leading to
buffer overflow. While thestr::repeatfunction has been in Rust since 1.16.0, this
vulnerability was introduced into the standard library in pull
request #486572. The pull request was merged on March 6, 2018 and
was first part of the 1.26.0 stable released on May 10, 2018. As such, this vulnerability affects: This bug can be mitigated manually by auditing for calls tostr::repeatand testing if the resulting vector's capacity will overflow. If it does,
then the program should panic. For Rust 1.29, we'll be releasing a 1.29.1 on 2018-09-25 with the fix,
which consists of checking for overflow and deterministically panicking
if it happens. Nightlies and betas produced after 2019-09-21 will also
contain a fix for this issue. We will not be releasing our own fixes for previous versions of Rust.
The patch to fix 1.29 should roughly applicable to older versions, although
the implementation has seen a few refactorings since it was introduced.
The patch for 1.29 is included at the end of this email. If you
need assistance patching an older version of Rust on your own, please reach
out to our security mailing list, security@rust-lang.org, and we'll be happy
to help. The current beta and nightly channels will be updated with a fix for this
issue as well. Thanks to Scott McMurray, who found this bug and reported it to us in
accordance with our security policy https://www.rust-lang.org/security.html. Advisory available underCC0-1.0license.
affected_functions: std;;str;;repeat
version_of_Affected: <1.29.1, >=1.26.0

---
classification: HIGH
subtitle: phonenumber:  panic on parsing crafted phonenumber inputs
reported: July  7, 2024
issued: September  5, 2024
package: {'name': 'phonenumber(crates.io)', 'url': '/packages/phonenumber.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2024-39697', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697'}, {'text': 'GHSA-mjw4-jj88-v687', 'url': 'https://github.com/advisories/GHSA-mjw4-jj88-v687'}]
references: [{'text': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687', 'url': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.3.6
unaffected: ['The phonenumber parsing code may panic due to a reachableassert!guard on the phonenumber string.', 'In a typical deployment of rust-phonenumber, this may get triggered by feeding a maliciously crafted phonenumber, e.g. over the network, specifically strings of the form+dwPAA;phone-context=AA, where the "number" part potentially parses as a number larger than 2^56.', 'Since f69abee1/0.3.4/#52.', '0.2.x series is not affected.']
affected functions: Version
phonenumber::parse: *
description: 
References: ['Patches have been published as version0.3.6+8.13.36.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: phonenumber;;parse
version_of_Affected: *

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-index(crates.io)', 'url': '/packages/gix-index.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.33.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-worktree(crates.io)', 'url': '/packages/gix-worktree.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.34.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-fs(crates.io)', 'url': '/packages/gix-fs.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.11.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Slow loris vulnerability with default configuration
reported: March 15, 2024
issued: May 20, 2024(last modified: May 21, 2024)
package: {'name': 'tls-listener(crates.io)', 'url': '/packages/tls-listener.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2024-28854', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28854'}, {'text': 'GHSA-2qph-qpvm-2qf7', 'url': 'https://github.com/advisories/GHSA-2qph-qpvm-2qf7'}]
references: [{'text': 'https://github.com/tmccombs/tls-listener/security/advisories/GHSA-2qph-qpvm-2qf7', 'url': 'https://github.com/tmccombs/tls-listener/security/advisories/GHSA-2qph-qpvm-2qf7'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.10.0
affected functions: Version
tls_listener::tlslistener::new: <0.10.0
description: tls-listener is a rust lang wrapper around a connection listener to support TLS. With the default configuration of tls-listener, a malicious user can open 6.4TcpStreams a second, sending 0 bytes, and can trigger a DoS. The default configuration options make any public service usingTlsListener::new()vulnerable to a slow-loris DoS attack. This impacts any publicly accessible service using the default configuration of tls-listener in versions prior to 0.10.0. Users are advised to upgrade. Users unable to upgrade may mitigate this by passing a large value, such asusize::MAXas the parameter toBuilder::max_handshakes. Advisory available underCC0-1.0license.
affected_functions: tls_listener;;tlslistener;;new
version_of_Affected: <0.10.0

---
classification: HIGH
subtitle: rustls::ConnectionCommon::complete_iocould fall into an infinite loop based on network input
reported: April 19, 2024
issued: April 19, 2024
package: {'name': 'rustls(crates.io)', 'url': '/packages/rustls.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2024-32650', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32650'}, {'text': 'GHSA-6g7w-8wpp-frhj', 'url': 'https://github.com/advisories/GHSA-6g7w-8wpp-frhj'}]
references: [{'text': 'https://github.com/rustls/rustls/security/advisories/GHSA-6g7w-8wpp-frhj', 'url': 'https://github.com/rustls/rustls/security/advisories/GHSA-6g7w-8wpp-frhj'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.23.5>=0.22.4, <0.23.0>=0.21.11, <0.22.0
affected functions: Version
rustls::connectioncommon::complete_io: <=0.23.4<=0.22.3<=0.21.10^0.20
description: If aclose_notifyalert is received during a handshake,complete_iodoes not terminate. Callers which do not callcomplete_ioare not affected. rustls-tokioandrustls-ffido not callcomplete_ioand are not affected. rustls::Streamandrustls::StreamOwnedtypes usecomplete_ioand are affected. Advisory available underCC0-1.0license.
affected_functions: rustls;;connectioncommon;;complete_io
version_of_Affected: <=0.23.4<=0.22.3<=0.21.10^0.20

---
classification: HIGH
subtitle: blurhash: panic on parsing crafted blurhash inputs
reported: September 19, 2023
issued: March  2, 2024
package: {'name': 'blurhash(crates.io)', 'url': '/packages/blurhash.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-42447', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447'}]
references: [{'text': 'https://github.com/whisperfish/blurhash-rs/security/advisories/GHSA-cxvp-82cq-57h2', 'url': 'https://github.com/whisperfish/blurhash-rs/security/advisories/GHSA-cxvp-82cq-57h2'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.2.0
affected functions: Version
blurhash::decode: *
description: The blurhash parsing code may panic due to multiple panic-guarded out-of-bounds accesses on untrusted input. In a typical deployment, this may get triggered by feeding a maliciously crafted blurhashes over the network. These may include: The patches were released under version 0.2.0, which may require user intervention because of slight API churn. Advisory available underCC0-1.0license.
affected_functions: blurhash;;decode
version_of_Affected: *

---
classification: HIGH
subtitle: phonenumber:  panic on parsing crafted RF3966 phonenumber inputs
reported: September 19, 2023
issued: February 29, 2024
package: {'name': 'phonenumber(crates.io)', 'url': '/packages/phonenumber.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-42444', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444'}]
references: [{'text': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2', 'url': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.2.5, <0.3.0>=0.3.3
affected functions: Version
phonenumber::parse: *
description: 
unaffected: ['The phonenumber parsing code may panic due to a panic-guarded out-of-bounds access on the phonenumber string.', 'In a typical deployment ofrust-phonenumber, this may get triggered by feeding a maliciously crafted phonenumber over the network, specifically the string.;phone-context=.']
References: ['Patches will be published as version0.3.3+8.13.9and backported as0.2.5+8.11.3.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: phonenumber;;parse
version_of_Affected: *

---
classification: HIGH
subtitle: Memory corruption, denial of service, and arbitrary code execution in libgit2
reported: February  6, 2024
issued: February  9, 2024(last modified: February 14, 2024)
package: {'name': 'libgit2-sys(crates.io)', 'url': '/packages/libgit2-sys.html'}
type: Vulnerability
categories: ['denial-of-service', 'code-execution', 'memory-corruption']
aliases: [{'text': 'GHSA-22q8-ghmq-63vf', 'url': 'https://github.com/advisories/GHSA-22q8-ghmq-63vf'}]
references: [{'text': 'https://github.com/rust-lang/git2-rs/pull/1017', 'url': 'https://github.com/rust-lang/git2-rs/pull/1017'}, {'text': 'https://github.com/libgit2/libgit2/releases/tag/v1.7.2', 'url': 'https://github.com/libgit2/libgit2/releases/tag/v1.7.2'}]
related: CVE-2024-24575CVE-2024-24577GHSA-54mf-x2rh-hq9vGHSA-j2v7-4f6v-gpg8
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L
patched: >=0.16.2
affected functions: Version
libgit2_sys::git_index_add: <0.16.2
libgit2_sys::git_revparse_single: <0.16.2, >=0.13.0
description: Thelibgit2project fixed three security issues in the 1.7.2 release. These issues are: Thelibgit2-syscrate bundles libgit2, or optionally links to a system libgit2 library. In either case, versions of the libgit2 library less than 1.7.2 are vulnerable. The 0.16.2 release oflibgit2-sysbundles the fixed version of 1.7.2, and requires a system libgit2 version of at least 1.7.2. It is recommended that all users upgrade. Advisory available underCC0-1.0license.
affected_functions: libgit2_sys;;git_index_add
version_of_Affected: <0.16.2

---
classification: HIGH
subtitle: KyberSlash: division timings depending on secrets
reported: December  1, 2023
issued: February  9, 2024(last modified: April 12, 2024)
package: {'name': 'pqc_kyber(crates.io)', 'url': '/packages/pqc_kyber.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'GHSA-x5j2-g63m-f8g4', 'url': 'https://github.com/advisories/GHSA-x5j2-g63m-f8g4'}]
references: [{'text': 'https://github.com/Argyle-Software/kyber/issues/108', 'url': 'https://github.com/Argyle-Software/kyber/issues/108'}, {'text': 'https://kyberslash.cr.yp.to/faq.html', 'url': 'https://kyberslash.cr.yp.to/faq.html'}, {'text': 'https://kyberslash.cr.yp.to/libraries.html', 'url': 'https://kyberslash.cr.yp.to/libraries.html'}, {'text': 'https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6', 'url': 'https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: no patched versions
description: Various Kyber software libraries in various environments leak secret information into timing, specifically because The KyberSlash pages track which Kyberlibrarieshave this issue, and include aFAQabout the issue. The KyberSlash pages were written by Daniel J. Bernstein. The FAQ originally said "I", but some people seemed to have trouble finding this authorship statement, so the FAQ now says "Bernstein" instead. The permanent link for the KyberSlash pages ishttps://kyberslash.cr.yp.to. The issue has not been resolved in the upstreampqc_kybercrate. A third-party fork that mitigates this attack vector has been published assafe_pqc_kyber. Theml-kemcrate is a maintained
alternative pure Rust implementation of ML-KEM / Kyber. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Infinite decoding loop through specially crafted payload
reported: December  8, 2023
issued: December  9, 2023
package: {'name': 'candid(crates.io)', 'url': '/packages/candid.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-6245', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6245'}, {'text': 'GHSA-7787-p7x6-fq3j', 'url': 'https://github.com/advisories/GHSA-7787-p7x6-fq3j'}]
references: [{'text': 'https://github.com/dfinity/candid/pull/478', 'url': 'https://github.com/dfinity/candid/pull/478'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.9.10
unaffected: ['Rust canisters using candid< 0.9.0or>= 0.9.10', 'Rust canister interfaces of type other thanrecord { * }', 'Motoko based canisters', 'dfx (for asset canister)<= 0.14.3or>= 0.15.2']
affected functions: Version
candid::decode: >=0.9.0, <0.9.10
description: The Candid library causes a Denial of Service while parsing a specially crafted payload withemptydata type. For example, if the payload isrecord { * ; empty }and  the canister interface expectsrecord { * }then the rust candid decoder treatsemptyas an extra field required by the type.  The problem with typeemptyis that the candid rust library wrongly categorizesemptyas a recoverable error when skipping the field and thus causing an infinite decoding loop. Canisters using affected versions of candid are exposed to denial of service by causing the decoding to run indefinitely until the canister traps due to reaching maximum instruction limit per execution round. Repeated exposure to the payload will result in degraded performance of the canister. For asset canister users,dfxversions>= 0.14.4to<= 0.15.2-beta.0ships asset canister with an affected version of candid.
References: ['GitHub Security Advisory (GHSA-7787-p7x6-fq3j)', {'text': 'GitHub Security Advisory (GHSA-7787-p7x6-fq3j)', 'url': 'https://github.com/dfinity/candid/security/advisories/GHSA-7787-p7x6-fq3j'}, 'dfinity/candid/pull/478', {'text': 'dfinity/candid/pull/478', 'url': 'https://github.com/dfinity/candid/pull/478'}, 'Candid Library Reference', {'text': 'Candid Library Reference', 'url': 'https://internetcomputer.org/docs/current/references/candid-ref'}, 'Candid Specification', {'text': 'Candid Specification', 'url': 'https://github.com/dfinity/candid/blob/master/spec/Candid.md'}, 'Internet Computer Specification', {'text': 'Internet Computer Specification', 'url': 'https://internetcomputer.org/docs/current/references/ic-interface-spec'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: candid;;decode
version_of_Affected: >=0.9.0, <0.9.10

---
classification: HIGH
subtitle: Tungstenite allows remote attackers to cause a denial of service
reported: September 25, 2023
issued: September 29, 2023
package: {'name': 'tungstenite(crates.io)', 'url': '/packages/tungstenite.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2023-43669', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-43669'}, {'text': 'GHSA-9mcr-873m-xcxp', 'url': 'https://github.com/advisories/GHSA-9mcr-873m-xcxp'}]
references: [{'text': 'https://github.com/snapview/tungstenite-rs/issues/376', 'url': 'https://github.com/snapview/tungstenite-rs/issues/376'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.20.1
description: The Tungstenite crate through 0.20.0 for Rust allows remote attackers to cause
a denial of service (minutes of CPU consumption) via an excessive length of an
HTTP header in a client handshake. The length affects both how many times a parse
is attempted (e.g., thousands of times) and the average amount of data for each
parse attempt (e.g., millions of bytes). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service in Quinn servers
reported: September 21, 2023
issued: September 21, 2023(last modified: February 10, 2024)
package: {'name': 'quinn-proto(crates.io)', 'url': '/packages/quinn-proto.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-42805', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42805'}, {'text': 'GHSA-q8wc-j5m9-27w3', 'url': 'https://github.com/advisories/GHSA-q8wc-j5m9-27w3'}]
references: [{'text': 'https://github.com/quinn-rs/quinn/pull/1667', 'url': 'https://github.com/quinn-rs/quinn/pull/1667'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: ^0.9.5>=0.10.5
description: Receiving QUIC frames containing a frame with unknown frame type could lead to a panic.
Unfortunately this is issue was not found by our fuzzing infrastructure. Thanks to the QUIC Tester research group for reporting this issue. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: BER/CER/DER decoder panics on invalid input
reported: September 13, 2023
issued: September 13, 2023(last modified: February 10, 2024)
package: {'name': 'bcder(crates.io)', 'url': '/packages/bcder.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-39914', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-39914'}, {'text': 'GHSA-6jmw-6mxw-w4jc', 'url': 'https://github.com/advisories/GHSA-6jmw-6mxw-w4jc'}]
references: [{'text': 'https://nlnetlabs.nl/downloads/bcder/CVE-2023-39914.txt', 'url': 'https://nlnetlabs.nl/downloads/bcder/CVE-2023-39914.txt'}, {'text': 'https://github.com/NLnetLabs/bcder/pull/74', 'url': 'https://github.com/NLnetLabs/bcder/pull/74'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.7.3
description: Due to insufficient checking of input data, decoding certain data sequences
can lead tobcderpanicking rather than returning an error. This can affect
both the actual decoding stage as well as accessing content of types that
utilized delayed decoding. bcder 0.7.3 fixes these issues by more thoroughly checking inputs and
returning errors as expected. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: rustls-webpki: CPU denial of service in certificate path building
reported: August 22, 2023
issued: August 22, 2023(last modified: August 27, 2023)
package: {'name': 'rustls-webpki(crates.io)', 'url': '/packages/rustls-webpki.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'GHSA-fh2r-99q2-6mmg', 'url': 'https://github.com/advisories/GHSA-fh2r-99q2-6mmg'}]
related: CVE-2018-16875
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.100.2, <0.101.0>=0.101.4
description: When this crate is given a pathological certificate chain to validate, it will
spend CPU time exponential with the number of candidate certificates at each
step of path building. Both TLS clients and TLS servers that accept client certificate are affected. We now give each path building operation a budget of 100 signature verifications. The originalwebpkicrate is also affected. This was previously reported in the original cratehttps://github.com/briansmith/webpki/issues/69and re-reported to us
recently by Luke Malinowski. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: webpki: CPU denial of service in certificate path building
reported: August 22, 2023
issued: August 22, 2023(last modified: September 30, 2023)
package: {'name': 'webpki(crates.io)', 'url': '/packages/webpki.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'GHSA-8qv2-5vq6-g2g7', 'url': 'https://github.com/advisories/GHSA-8qv2-5vq6-g2g7'}]
related: CVE-2018-16875
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.22.2
description: When this crate is given a pathological certificate chain to validate, it will
spend CPU time exponential with the number of candidate certificates at each
step of path building. Both TLS clients and TLS servers that accept client certificate are affected. This was previously reported inhttps://github.com/briansmith/webpki/issues/69and re-reported recently
by Luke Malinowski. webpki 0.22.1 included a partial fix and webpki 0.22.2 added further fixes. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: libsqlite3-sysvia C SQLite CVE-2022-35737
reported: August  3, 2022
issued: February 14, 2023(last modified: June 13, 2023)
package: {'name': 'libsqlite3-sys(crates.io)', 'url': '/packages/libsqlite3-sys.html'}
type: Vulnerability
categories: ['denial-of-service', 'code-execution']
aliases: [{'text': 'CVE-2022-35737', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-35737'}, {'text': 'GHSA-jw36-hf63-69r9', 'url': 'https://github.com/advisories/GHSA-jw36-hf63-69r9'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2022-35737', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2022-35737'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.25.1
description: It was sometimes possible for SQLite versions >= 1.0.12, < 3.39.2 to allow an array-bounds overflow when large string were input into SQLite'sprintffunction. Aslibsqlite3-sysbundles SQLite, it is susceptible to the vulnerability.libsqlite3-syswas updated to bundle the patched version of SQLitehere. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: evm incorrect state transition
reported: October 25, 2022
issued: February  2, 2023
package: {'name': 'evm(crates.io)', 'url': '/packages/evm.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-39354', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39354'}, {'text': 'GHSA-hhc4-47rh-cr34', 'url': 'https://github.com/advisories/GHSA-hhc4-47rh-cr34'}]
references: [{'text': 'https://github.com/rust-blockchain/evm/pull/133', 'url': 'https://github.com/rust-blockchain/evm/pull/133'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.36.0
description: SputnikVM, also called evm, is a Rust implementation of Ethereum Virtual Machine. A custom stateful precompile can use theis_staticparameter to determine if
the call is executed in a static context (viaSTATICCALL), and thus decide
if stateful operations should be done. Prior to version 0.36.0, the passedis_staticparameter was incorrect -- it
was only set totrueif the call came from a directSTATICCALLopcode. However, once a static call context is entered, it should stay static. The issue
only impacts custom precompiles that actually usesis_static. For those affected, the issue can lead to possible incorrect state transitions. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Slack OAuth Secrets leak in debug logs
reported: July 22, 2022
issued: February  2, 2023
package: {'name': 'slack-morphism(crates.io)', 'url': '/packages/slack-morphism.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2022-31162', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-31162'}, {'text': 'GHSA-99j7-mhfh-w84p', 'url': 'https://github.com/advisories/GHSA-99j7-mhfh-w84p'}]
references: [{'text': 'https://github.com/abdolence/slack-morphism-rust/pull/133', 'url': 'https://github.com/abdolence/slack-morphism-rust/pull/133'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.41.0
description: Debug log formatting made it possible to leak OAuth secrets into debug logs. The patched version has introduced more strict checks to avoid this. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: matrix-sdk Impersonation of room keys
reported: September 29, 2022
issued: February  2, 2023
package: {'name': 'matrix-sdk-crypto(crates.io)', 'url': '/packages/matrix-sdk-crypto.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2022-39252', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39252'}, {'text': 'GHSA-vp68-2wrm-69qm', 'url': 'https://github.com/advisories/GHSA-vp68-2wrm-69qm'}]
references: [{'text': 'https://github.com/matrix-org/matrix-rust-sdk/commit/093fb5d0aa21c0b5eaea6ec96b477f1075271cbb', 'url': 'https://github.com/matrix-org/matrix-rust-sdk/commit/093fb5d0aa21c0b5eaea6ec96b477f1075271cbb'}, {'text': 'https://github.com/matrix-org/matrix-rust-sdk/commit/41449d2cc360e347f5d4e1c154ec1e3185f11acd', 'url': 'https://github.com/matrix-org/matrix-rust-sdk/commit/41449d2cc360e347f5d4e1c154ec1e3185f11acd'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.6.0
description: When the user receives a forwarded room key, the software accepts it without
checking who the room key came from. This allows homeservers to try to insert
room keys of questionable validity, potentially mounting an impersonation attack. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: libp2p Lack of resource management DoS
reported: July 12, 2022
issued: February  2, 2023
package: {'name': 'libp2p(crates.io)', 'url': '/packages/libp2p.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2022-23486', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23486'}, {'text': 'GHSA-jvgw-gccv-q5p8', 'url': 'https://github.com/advisories/GHSA-jvgw-gccv-q5p8'}]
references: [{'text': 'https://github.com/libp2p/rust-libp2p/security/advisories/GHSA-jvgw-gccv-q5p8', 'url': 'https://github.com/libp2p/rust-libp2p/security/advisories/GHSA-jvgw-gccv-q5p8'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.45.1
description: libp2p allows a potential attacker to cause victim p2p node to run out of memory The out of memory failure can cause crashes where libp2p is intended to be used
within large scale networks leading to potential Denial of Service (DoS) vector Users should upgrade or reference theDoS mitigation strategies. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Bug in Wasmtime implementation of pooling instance allocator
reported: November 10, 2022
issued: January 12, 2023(last modified: March 16, 2023)
package: {'name': 'wasmtime(crates.io)', 'url': '/packages/wasmtime.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2022-39392', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39392'}, {'text': 'GHSA-44mr-8vmm-wjhg', 'url': 'https://github.com/advisories/GHSA-44mr-8vmm-wjhg'}]
references: [{'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-44mr-8vmm-wjhg', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-44mr-8vmm-wjhg'}, {'text': 'https://github.com/bytecodealliance/wasmtime/commit/e60c3742904ccbb3e26da201c9221c38a4981d72', 'url': 'https://github.com/bytecodealliance/wasmtime/commit/e60c3742904ccbb3e26da201c9221c38a4981d72'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: >=1.0.2, <2.0.0>=2.0.2
affected functions: Version
wasmtime::config::allocation_strategy: <1.0.2
wasmtime::poolingallocationconfig::instance_memory_pages: >=2.0.0, <2.0.2
description: Bug in Wasmtime's implementation of its pooling instance allocator when the allocator is configured to give WebAssembly instances a maximum of zero pages of memory. In this configuration, the virtual memory mapping for WebAssembly memories did not meet the compiler-required configuration requirements for safely executing WebAssembly modules. Wasmtime's default settings require virtual memory page faults to indicate that wasm reads/writes are out-of-bounds, but the pooling allocator's configuration would not create an appropriate virtual memory mapping for this meaning out of bounds reads/writes can successfully read/write memory unrelated to the wasm sandbox within range of the base address of the memory mapping created by the pooling allocator. This bug is not applicable with the default settings of thewasmtimecrate. This bug can only be triggered by settingInstanceLimits::memory_pagesto zero. This is expected to be a very rare configuration since this means that wasm modules cannot allocate any pages of linear memory. All wasm modules produced by all current toolchains are highly likely to use linear memory, so it's expected to be unlikely that this configuration is set to zero by any production embedding of Wasmtime. Advisory available underCC0-1.0license.
affected_functions: wasmtime;;config;;allocation_strategy
version_of_Affected: <1.0.2

---
classification: HIGH
subtitle: Denial of Service from unchecked request length
reported: October 30, 2022
issued: November  3, 2022
package: {'name': 'conduit-hyper(crates.io)', 'url': '/packages/conduit-hyper.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'GHSA-9398-5ghf-7pr6', 'url': 'https://github.com/advisories/GHSA-9398-5ghf-7pr6'}, {'text': 'CVE-2022-39294', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39294'}]
references: [{'text': 'https://github.com/conduit-rust/conduit-hyper/security/advisories/GHSA-9398-5ghf-7pr6', 'url': 'https://github.com/conduit-rust/conduit-hyper/security/advisories/GHSA-9398-5ghf-7pr6'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.2
unaffected: <0.2.0-alpha.3
description: Prior to version 0.4.2,conduit-hyperdid not check any limit on a request's
length before callinghyper::body::to_bytes. An attacker could send a
malicious request with an abnormally largeContent-Length, which could lead
to a panic if memory allocation failed for that request. In version 0.4.2,conduit-hypersets an internal limit of 128 MiB per
request, otherwise returning status 400 ("Bad Request"). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Multiple vulnerabilities resulting in out-of-bounds writes
reported: September  7, 2022
issued: October 30, 2022(last modified: June 13, 2023)
package: {'name': 'linked_list_allocator(crates.io)', 'url': '/packages/linked_list_allocator.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2022-36086', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36086'}, {'text': 'GHSA-xg8p-34w2-j49j', 'url': 'https://github.com/advisories/GHSA-xg8p-34w2-j49j'}]
references: [{'text': 'https://github.com/advisories/GHSA-xg8p-34w2-j49j', 'url': 'https://github.com/advisories/GHSA-xg8p-34w2-j49j'}]
cvss score: 8.4HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.10.2
description: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service on deeply nested fragment requests
reported: July 21, 2022
issued: August  3, 2022(last modified: August  6, 2022)
package: {'name': 'async-graphql(crates.io)', 'url': '/packages/async-graphql.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'GHSA-xq3c-8gqm-v648', 'url': 'https://github.com/advisories/GHSA-xq3c-8gqm-v648'}]
references: [{'text': 'https://github.com/async-graphql/async-graphql/commit/521769b80039fc8043d1c9883e3d6e5b57359072', 'url': 'https://github.com/async-graphql/async-graphql/commit/521769b80039fc8043d1c9883e3d6e5b57359072'}]
related: GHSA-4rx6-g5vg-5f3j
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=4.0.6
description: Deeply nested fragments in a GraphQL request may cause a stack overflow in the server. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service on deeply nested fragment requests
reported: July 28, 2022
issued: August  3, 2022
package: {'name': 'juniper(crates.io)', 'url': '/packages/juniper.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'GHSA-4rx6-g5vg-5f3j', 'url': 'https://github.com/advisories/GHSA-4rx6-g5vg-5f3j'}, {'text': 'CVE-2022-31173', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-31173'}]
references: [{'text': 'https://github.com/graphql-rust/juniper/security/advisories/GHSA-4rx6-g5vg-5f3j', 'url': 'https://github.com/graphql-rust/juniper/security/advisories/GHSA-4rx6-g5vg-5f3j'}]
related: GHSA-xq3c-8gqm-v648
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.15.10
description: Deeply nested fragments in a GraphQL request may cause a stack overflow in the server. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Resource leakage when decoding certificates and keys
reported: May  3, 2022
issued: May 19, 2022(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2022-1473', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1473'}, {'text': 'GHSA-g323-fr93-4j3c', 'url': 'https://github.com/advisories/GHSA-g323-fr93-4j3c'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20220503.txt', 'url': 'https://www.openssl.org/news/secadv/20220503.txt'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=300.0.6
unaffected: <300.0
description: TheOPENSSL_LH_flush()function, which empties a hash table, contains
a bug that breaks reuse of the memory occupied by the removed hash
table entries. This function is used when decoding certificates or keys. If a long lived
process periodically decodes certificates or keys its memory usage will
expand without bounds and the process might be terminated by the operating
system causing a denial of service. Also traversing the empty hash table
entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers
configured to accept client certificate authentication. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Regexes with large repetitions on empty sub-expressions take a very long time to parse
reported: March  8, 2022
issued: March  8, 2022(last modified: June 13, 2023)
package: {'name': 'regex(crates.io)', 'url': '/packages/regex.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2022-24713', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24713'}, {'text': 'GHSA-m5pq-gvj9-9vr8', 'url': 'https://github.com/advisories/GHSA-m5pq-gvj9-9vr8'}]
references: [{'text': 'https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw', 'url': 'https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.5.5
description: The Rust Security Response WG was notified that theregexcrate did not
properly limit the complexity of the regular expressions (regex) it parses. An
attacker could use this security issue to perform a denial of service, by
sending a specially crafted regex to a service accepting untrusted regexes. No
known vulnerability is present when parsing untrusted input with trusted
regexes. This issue has been assigned CVE-2022-24713. The severity of this vulnerability
is "high" when theregexcrate is used to parse untrusted regexes. Other uses
of theregexcrate are not affected by this vulnerability. Theregexcrate features built-in mitigations to prevent denial of service
attacks caused by untrusted regexes, or untrusted input matched by trusted
regexes. Those (tunable) mitigations already provide sane defaults to prevent
attacks. This guarantee is documented and it's considered part of the crate's
API. Unfortunately a bug was discovered in the mitigations designed to prevent
untrusted regexes to take an arbitrary amount of time during parsing, and it's
possible to craft regexes that bypass such mitigations. This makes it possible
to perform denial of service attacks by sending specially crafted regexes to
services accepting user-controlled, untrusted regexes. All versions of theregexcrate before or equal to 1.5.4 are affected by this
issue. The fix is include starting fromregex1.5.5. We recommend everyone accepting user-controlled regexes to upgrade immediately
to the latest version of theregexcrate. Unfortunately there is no fixed set of problematic regexes, as there are
practically infinite regexes that could be crafted to exploit this
vulnerability. Because of this, we do not recommend denying known problematic
regexes. We want to thank Addison Crump for responsibly disclosing this to us according
to theRust security policy, and for helping review the fix. We also want to thank Andrew Gallant for developing the fix, and Pietro Albini
for coordinating the disclosure and writing this advisory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Time-of-check time-of-use race condition can allow attacker to delete files they do not have access to delete
reported: January 16, 2022
issued: January 21, 2022
package: {'name': 'std', 'url': '/packages/std.html'}
type: Vulnerability
categories: ['file-disclosure']
references: [{'text': 'https://blog.rust-lang.org/2022/01/20/cve-2022-21658.html', 'url': 'https://blog.rust-lang.org/2022/01/20/cve-2022-21658.html'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityHigh
privileges required: Low
user interaction: None
scope: Changed
confidentiality: None
integrity: Low
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:N/I:L/A:H
patched: >=1.58.1
affected functions: Version
std::fs::remove_dir_all: <1.58.1
description: In the standard library in Rust before 1.58.1, an attacker with unprivileged access to a system could trick a privileged program usingstd::fs::remove_dir_allinto deleting files they don't have access to delete by creating a symlink in a directory that would be removed by astd::fs::remove_dir_allcall due to a Time-of-check time-of-use race condition around this function's check for symbolic links. The function should remove the symbolic links rather than recursively deleting the linked file or directory. Advisory available underCC0-1.0license.
affected_functions: std;;fs;;remove_dir_all
version_of_Affected: <1.58.1

---
classification: HIGH
subtitle: Improper Synchronization and Race Condition in vm-memory
reported: June  2, 2020
issued: September 10, 2021
package: {'name': 'vm-memory(crates.io)', 'url': '/packages/vm-memory.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-13759', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-13759'}, {'text': 'GHSA-mm4m-qg48-f7wc', 'url': 'https://github.com/advisories/GHSA-mm4m-qg48-f7wc'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2020-13759', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2020-13759'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.1^0.1.1
description: rust-vmm vm-memory before 0.1.1 and 0.2.x before 0.2.1 allows attackers to cause a denial of service (loss of IP networking) because read_obj and write_obj do not properly access memory. This affects aarch64 (with musl or glibc) and x86_64 (with musl). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Permissions bypass in pleaser
reported: May 27, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2021-31155', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31155'}, {'text': 'GHSA-vc5p-j8vw-mc6x', 'url': 'https://github.com/advisories/GHSA-vc5p-j8vw-mc6x'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31155', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31155'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4
description: Failure to normalize the umask in pleaser before 0.4 allows a local attacker to gain full root privileges if they are allowed to execute at least one command. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Permissions bypass in pleaser
reported: May 27, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2021-31154', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31154'}, {'text': 'GHSA-pp74-39w2-v4w9', 'url': 'https://github.com/advisories/GHSA-pp74-39w2-v4w9'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31154', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31154'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4
description: pleaseedit in pleaser before 0.4 uses predictable temporary filenames in /tmp and the target directory. This allows a local attacker to gain full root privileges by staging a symlink attack. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Uncontrolled Search Path Element in sharkdp/bat
reported: July 15, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'bat(crates.io)', 'url': '/packages/bat.html'}
type: Vulnerability
categories: ['code-execution']
aliases: [{'text': 'CVE-2021-36753', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36753'}, {'text': 'GHSA-p24j-h477-76q3', 'url': 'https://github.com/advisories/GHSA-p24j-h477-76q3'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36753', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36753'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.18.2
affected oses: windows
description: bat on windows before 0.18.2 executes programs named less.exe from the current working directory. This can lead to unintended code execution. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Relative Path Traversal in git-delta
reported: July 12, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'git-delta(crates.io)', 'url': '/packages/git-delta.html'}
type: Vulnerability
categories: ['file-disclosure']
aliases: [{'text': 'CVE-2021-36376', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36376'}, {'text': 'GHSA-5xg3-j2j6-rcx4', 'url': 'https://github.com/advisories/GHSA-5xg3-j2j6-rcx4'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36376', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-36376'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.8.3
affected oses: windows
description: git-delta before 0.8.3 on Windows resolves an executable's pathname as a relative path from the current directory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Read buffer overruns processing ASN.1 strings
reported: August 24, 2021
issued: August 24, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service', 'crypto-failure']
aliases: [{'text': 'CVE-2021-3712', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3712'}, {'text': 'GHSA-q9wj-f4qw-6vfj', 'url': 'https://github.com/advisories/GHSA-q9wj-f4qw-6vfj'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210824.txt', 'url': 'https://www.openssl.org/news/secadv/20210824.txt'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H
patched: >=111.16
description: ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING
structure which contains a buffer holding the string data and a field holding
the buffer length. This contrasts with normal C strings which are represented as
a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's
own "d2i" functions (and other similar parsing functions) as well as any string
whose value has been set with the ASN1_STRING_set() function will additionally
NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING
structures which do not NUL terminate the byte array by directly setting the
"data" and "length" fields in the ASN1_STRING array. This can also happen by
using theASN1_STRING_set0()function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that
the ASN1_STRING byte array will be NUL terminated, even though this is not
guaranteed for strings that have been directly constructed. Where an application
requests an ASN.1 structure to be printed, and where that ASN.1 structure
contains ASN1_STRINGs that have been directly constructed by the application
without NUL terminating the "data" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates
(for example if a certificate has been directly constructed by the application
instead of loading it via the OpenSSL parsing functions, and the certificate
contains non NUL terminated ASN1_STRING structures). It can also occur in theX509_get1_email(),X509_REQ_get1_email()andX509_get1_ocsp()functions. If a malicious actor can cause an application to directly construct an
ASN1_STRING and then process it through one of the affected OpenSSL functions
then this issue could be hit. This might result in a crash (causing a Denial of
Service attack). It could also result in the disclosure of private memory
contents (such as private keys, or sensitive plaintext). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Potential request smuggling capabilities due to lack of input validation
reported: June 16, 2021
issued: August 10, 2021(last modified: June 13, 2023)
package: {'name': 'actix-http(crates.io)', 'url': '/packages/actix-http.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-38512', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38512'}, {'text': 'GHSA-8928-2fgm-6x9x', 'url': 'https://github.com/advisories/GHSA-8928-2fgm-6x9x'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: ^2.2.1>=3.0.0-beta.9
description: Affected versions of this crate did not properly detect invalid requests that could allow HTTP/1 request smuggling (HRS) attacks when running alongside a vulnerable front-end proxy server. This can result in leaked internal and/or user data, including credentials, when the front-end proxy is also vulnerable. Popular front-end proxies and load balancers already mitigate HRS attacks so it is recommended that they are also kept up to date; check your specific set up. You should upgrade even if the front-end proxy receives exclusively HTTP/2 traffic and connects to the back-end using HTTP/1; several downgrade attacks are known that can also expose HRS vulnerabilities. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Links in archive can create arbitrary directories
reported: July 19, 2021
issued: August  8, 2021(last modified: June 13, 2023)
package: {'name': 'tar(crates.io)', 'url': '/packages/tar.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2021-38511', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38511'}, {'text': 'GHSA-62jx-8vmh-4mcw', 'url': 'https://github.com/advisories/GHSA-62jx-8vmh-4mcw'}]
references: [{'text': 'https://github.com/alexcrichton/tar-rs/issues/238', 'url': 'https://github.com/alexcrichton/tar-rs/issues/238'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.4.36
affected functions: Version
tar::archive::unpack: <0.4.36
description: When unpacking a tarball that contains a symlink thetarcrate may create
directories outside of the directory it's supposed to unpack into. The function errors when it's trying to create a file, but the folders are
already created at this point. This has been fixed in https://github.com/alexcrichton/tar-rs/pull/259 and is
published astar0.4.36. Thanks to Martin Michaelis (@mgjm) for discovering
and reporting this, and Nikhil Benesch (@benesch) for the fix! Advisory available underCC0-1.0license.
affected_functions: tar;;archive;;unpack
version_of_Affected: <0.4.36

---
classification: HIGH
subtitle: Memory access due to code generation flaw in Cranelift module
reported: May 21, 2021
issued: May 22, 2021(last modified: October 19, 2021)
package: {'name': 'cranelift-codegen(crates.io)', 'url': '/packages/cranelift-codegen.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2021-32629', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32629'}, {'text': 'GHSA-hpqh-2wqx-7qp5', 'url': 'https://github.com/advisories/GHSA-hpqh-2wqx-7qp5'}]
references: [{'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-hpqh-2wqx-7qp5', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-hpqh-2wqx-7qp5'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Changed
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H
patched: >=0.73.1
affected architectures: x86
description: There is a bug in 0.73.0 of the Cranelift x64 backend that can create a
scenario that could result in a potential sandbox escape in a WebAssembly
module. Users of versions 0.73.0 of Cranelift should upgrade to either 0.73.1
or 0.74 to remediate this vulnerability. Users of Cranelift prior to 0.73.0
should update to 0.73.1 or 0.74 if they were not using the old default backend. More details can be found in the GitHub Security Advisory at: https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-hpqh-2wqx-7qp5 Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Integer overflow in CipherUpdate
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2021-23840', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-23840'}, {'text': 'GHSA-qgm6-9472-pwq7', 'url': 'https://github.com/advisories/GHSA-qgm6-9472-pwq7'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210216.txt', 'url': 'https://www.openssl.org/news/secadv/20210216.txt'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.14
description: Calls toEVP_CipherUpdate,EVP_EncryptUpdateandEVP_DecryptUpdatemay overflow
the output length argument in some cases where the input length is close to the
maximum permissable length for an integer on the platform. In such cases the
return value from the function call will be 1 (indicating success), but the
output length value will be negative. This could cause applications to behave
incorrectly or crash. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: CA certificate check bypass with X509_V_FLAG_X509_STRICT
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2021-3450', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3450'}, {'text': 'GHSA-8hfj-xrj2-pm22', 'url': 'https://github.com/advisories/GHSA-8hfj-xrj2-pm22'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210325.txt', 'url': 'https://www.openssl.org/news/secadv/20210325.txt'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: >=111.15
unaffected: <111.11
description: The X509_V_FLAG_X509_STRICT flag enables additional security checks of the
certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in
the chain that have explicitly encoded elliptic curve parameters was added
as an additional strict check. An error in the implementation of this check meant that the result of a
previous check to confirm that certificates in the chain are valid CA
certificates was overwritten. This effectively bypasses the check
that non-CA certificates must not be able to issue other certificates. If a "purpose" has been configured then there is a subsequent opportunity
for checks that the certificate is a valid CA.  All of the named "purpose"
values implemented in libcrypto perform this check.  Therefore, where
a purpose is set the certificate chain will still be rejected even when the
strict flag has been used. A purpose is set by default in libssl client and
server certificate verification routines, but it can be overridden or
removed by an application. In order to be affected, an application must explicitly set the
X509_V_FLAG_X509_STRICT verification flag and either not set a purpose
for the certificate verification or, in the case of TLS client or server
applications, override the default purpose. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Archives may contain uninitialized memory
reported: April 28, 2021
issued: April 29, 2021(last modified: June 13, 2023)
package: {'name': 'rkyv(crates.io)', 'url': '/packages/rkyv.html'}
type: Vulnerability
categories: ['memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2021-31919', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31919'}, {'text': 'GHSA-w5cr-frph-hw7f', 'url': 'https://github.com/advisories/GHSA-w5cr-frph-hw7f'}]
references: [{'text': 'https://github.com/djkoloski/rkyv/issues/113', 'url': 'https://github.com/djkoloski/rkyv/issues/113'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.6.0
affected functions: Version
rkyv::archive::resolve: <0.6.0
description: rkyvis a serialization framework that writes struct-compatible memory to be stored or
transmitted. During serialization, struct padding bytes and unused enum bytes may not be
initialized. These bytes may be written to disk or sent over unsecured channels. Advisory available underCC0-1.0license.
affected_functions: rkyv;;archive;;resolve
version_of_Affected: <0.6.0

---
classification: HIGH
subtitle: swap_index can write out of bounds and return uninitialized memory
reported: February 24, 2021
issued: March 31, 2021(last modified: June 13, 2023)
package: {'name': 'reorder(crates.io)', 'url': '/packages/reorder.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-29941', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29941'}, {'text': 'CVE-2021-29942', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29942'}, {'text': 'GHSA-3h87-v52r-p9rg', 'url': 'https://github.com/advisories/GHSA-3h87-v52r-p9rg'}, {'text': 'GHSA-jpwg-6gf5-5vh9', 'url': 'https://github.com/advisories/GHSA-jpwg-6gf5-5vh9'}]
references: [{'text': 'https://github.com/tiby312/reorder/issues/1', 'url': 'https://github.com/tiby312/reorder/issues/1'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=1.1.0
description: swap_indextakes an iterator and swaps the items with their corresponding
indexes. It reserves capacity and sets the length of the vector based on the.len()method of the iterator. If thelen()returned by the iterator is larger than the actual number of
elements yielded, thenswap_indexcreates a vector containing uninitialized
members. If thelen()returned by the iterator is smaller than the actual
number of members yielded, thenswap_indexcan write out of bounds past
its allocated vector. As noted by the Rust documentation,len()andsize_hint()are primarily meant for optimization and incorrect values
from their implementations should not lead to memory safety violations. A new version crate was pushed that marks this function as unsafe. reorder = "1.1.0" Previous versions have also been yanked from crates.io. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SliceDeque::drain_filter can double drop an element if the predicate panics
reported: February 19, 2021
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29938', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29938'}, {'text': 'GHSA-p9gf-gmfv-398m', 'url': 'https://github.com/advisories/GHSA-p9gf-gmfv-398m'}]
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/90', 'url': 'https://github.com/gnzlbg/slice_deque/issues/90'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of the crate incremented the current index of the drain filter
iteratorbeforecalling the predicate functionself.pred. If the predicate function panics, it is possible for the last element in the
iterator to be dropped twice. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: StackVec::extend can write out of bounds when size_hint is incorrect
reported: February 19, 2021
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'stackvector(crates.io)', 'url': '/packages/stackvector.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-29939', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29939'}, {'text': 'GHSA-9frf-r7c7-j2vg', 'url': 'https://github.com/advisories/GHSA-9frf-r7c7-j2vg'}]
references: [{'text': 'https://github.com/Alexhuszagh/rust-stackvector/issues/2', 'url': 'https://github.com/Alexhuszagh/rust-stackvector/issues/2'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=1.0.9
description: StackVec::extendused the lower and upper bounds from an Iterator'ssize_hintto determine how many items to push into the stack based vector. If thesize_hintimplementation returned a lower bound that was larger than
the upper bound,StackVecwould write out of bounds and overwrite memory
on the stack. As mentioned by thesize_hintdocumentation,size_hintis mainly for optimization and incorrect
implementations should not lead to memory safety issues. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use after free possible inuri::Formatteron panic
reported: February  9, 2021
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'rocket(crates.io)', 'url': '/packages/rocket.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29935', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29935'}, {'text': 'GHSA-vcw4-8ph6-7vw8', 'url': 'https://github.com/advisories/GHSA-vcw4-8ph6-7vw8'}]
references: [{'text': 'https://github.com/SergioBenitez/Rocket/issues/1534', 'url': 'https://github.com/SergioBenitez/Rocket/issues/1534'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=0.4.7
description: Affected versions of this crate transmuted a&strto a&'static strbefore
pushing it into aStackVec, this value was then popped later in the same
function. This was assumed to be safe because the reference would be valid while the
method's stack was active. In between the push and the pop, however, a functionfwas called that could invoke a user provided function. If the user provided panicked, then the assumption used by the function was no
longer true and the transmute to&'staticwould create an illegal static
reference to the string. This could result in a freed string being used during
(such as in aDropimplementation) or after (e.g throughcatch_unwind) the
panic unwinding. This flaw was corrected in commite325e2fby using a guard object to ensure that the&'static strwas dropped inside
the function. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: PartialReader passes uninitialized memory to user-provided Read
reported: February 17, 2021
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'uu_od(crates.io)', 'url': '/packages/uu_od.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-29934', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29934'}, {'text': 'GHSA-w9vv-q986-vj7x', 'url': 'https://github.com/advisories/GHSA-w9vv-q986-vj7x'}]
references: [{'text': 'https://github.com/uutils/coreutils/issues/1729', 'url': 'https://github.com/uutils/coreutils/issues/1729'}]
cvss score: 7.3HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L
patched: >=0.0.4
description: Affected versions of this crate passed an uniniitalized buffer to a
user-providedReadinstance inPartialReader::read. This can result in safeReadimplementations reading from the uninitialized
buffer leading to undefined behavior. The flaw was fixed in commit39d62c6by zero-initializing the passed buffer. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: insert_many can drop elements twice on panic
reported: January 26, 2021
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'insert_many(crates.io)', 'url': '/packages/insert_many.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29933', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29933'}, {'text': 'GHSA-29hg-r7c7-54fr', 'url': 'https://github.com/advisories/GHSA-29hg-r7c7-54fr'}]
references: [{'text': 'https://github.com/rphmeier/insert_many/issues/1', 'url': 'https://github.com/rphmeier/insert_many/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions ofinsert_manyusedptr::copyto move over items in a
vector to make space before inserting, duplicating their ownership. It then
iterated over a providedIteratorto insert the new items. If the iterator's.next()method panics then the vector would drop the same
elements twice. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Denial of service through parsing payloads with too big exponent
reported: March 18, 2021
issued: March 24, 2021(last modified: June 13, 2023)
package: {'name': 'parse_duration(crates.io)', 'url': '/packages/parse_duration.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2021-29932', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29932'}, {'text': 'GHSA-qpgv-g792-wh6x', 'url': 'https://github.com/advisories/GHSA-qpgv-g792-wh6x'}]
references: [{'text': 'https://github.com/zeta12ti/parse_duration/issues/21', 'url': 'https://github.com/zeta12ti/parse_duration/issues/21'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
affected functions: Version
parse_duration::parse: *
description: Theparse_duration::parsefunction allows for parsing duration strings with exponents like5e5swhere under the hood, theBigInttype along with thepowfunction are used for such payloads. Passing an arbitrarily big exponent makes theparse_duration::parsefunction to process the payload for a very long time taking up CPU and memory. This allows an attacker to cause a DoS if theparse_duration::parsefunction is used to process untrusted input. Advisory available underCC0-1.0license.
affected_functions: parse_duration;;parse
version_of_Affected: *

---
classification: HIGH
subtitle: panic in user-providedEndianimpl triggers double drop of T
reported: January  4, 2021
issued: March  7, 2021(last modified: June 13, 2023)
package: {'name': 'endian_trait(crates.io)', 'url': '/packages/endian_trait.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-29929', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29929'}, {'text': 'GHSA-vpw8-43wm-rxw5', 'url': 'https://github.com/advisories/GHSA-vpw8-43wm-rxw5'}]
references: [{'text': 'https://gitlab.com/myrrlyn/endian_trait/-/issues/1', 'url': 'https://gitlab.com/myrrlyn/endian_trait/-/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of the crate does not guard against panic from user-provided impl ofEndiantrait, which is a safe trait that users can implement.
If a user-provided implementation of theEndiantrait panics, double-drop is triggered due to the duplicated ownership ofTcreated byptr::read(). Double-drop (or double free) can cause memory corruption in the heap. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: panic safety: double drop or uninitialized drop of T upon panic
reported: January 12, 2021
issued: March  7, 2021(last modified: June 13, 2023)
package: {'name': 'arenavec(crates.io)', 'url': '/packages/arenavec.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-29930', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29930'}, {'text': 'CVE-2021-29931', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29931'}, {'text': 'GHSA-327x-39hh-65wf', 'url': 'https://github.com/advisories/GHSA-327x-39hh-65wf'}, {'text': 'GHSA-955p-rc5h-hg6h', 'url': 'https://github.com/advisories/GHSA-955p-rc5h-hg6h'}]
references: [{'text': 'https://github.com/ibabushkin/arenavec/issues/1', 'url': 'https://github.com/ibabushkin/arenavec/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate did not guard against potential panics that may happen from user-provided functionsT::default()andT::drop(). Panic withinT::default()leads to dropping uninitializedT, when it is invoked fromcommon::Slice::<T, H>::new().
Panic withinT::drop()leads to double drop ofT, when it is invoked either fromcommon::SliceVec::<T, H>::resize_with()orcommon::SliceVec::<T, H>::resize() Either case causes memory corruption in the heap memory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: quinninvalidly assumes the memory layout of std::net::SocketAddr
reported: March  4, 2021
issued: March  4, 2021(last modified: June 13, 2023)
package: {'name': 'quinn(crates.io)', 'url': '/packages/quinn.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2021-28036', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28036'}, {'text': 'GHSA-fhv4-fx3v-77w6', 'url': 'https://github.com/advisories/GHSA-fhv4-fx3v-77w6'}]
references: [{'text': 'https://github.com/quinn-rs/quinn/issues/968', 'url': 'https://github.com/quinn-rs/quinn/issues/968'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: ^0.5.4^0.6.2>=0.7.0
description: Thequinncrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Tape::take_bytes exposes uninitialized memory to a user-provided Read
reported: February 17, 2021
issued: March  1, 2021(last modified: June 13, 2023)
package: {'name': 'truetype(crates.io)', 'url': '/packages/truetype.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-28030', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28030'}, {'text': 'GHSA-v7q4-97x4-4qw2', 'url': 'https://github.com/advisories/GHSA-v7q4-97x4-4qw2'}]
references: [{'text': 'https://github.com/bodoni/truetype/issues/11', 'url': 'https://github.com/bodoni/truetype/issues/11'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.30.1
description: Affected versions of this crate passed an unininitialized buffer to a
user-providedReadinstance inTape::take_bytes. This can result in safeReadimplementations reading from the uninitialized
buffer leading to undefined behavior. The flaw was corrected in commit1f2dc7f37ddby removing the unsafe block
and zero-initializing the buffer. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: arr! macro erases lifetimes
reported: April  9, 2020
issued: March  1, 2021(last modified: June 13, 2023)
package: {'name': 'generic-array(crates.io)', 'url': '/packages/generic-array.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36465', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36465'}, {'text': 'GHSA-3358-4f7f-p4j4', 'url': 'https://github.com/advisories/GHSA-3358-4f7f-p4j4'}]
references: [{'text': 'https://github.com/fizyk20/generic-array/issues/98', 'url': 'https://github.com/fizyk20/generic-array/issues/98'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.8.4, <0.9.0>=0.9.1, <0.10.0>=0.10.1, <0.11.0>=0.11.2, <0.12.0>=0.12.4, <0.13.0>=0.13.3
unaffected: <0.8.0
description: Affected versions of this crate allowed unsoundly extending
lifetimes usingarr!macro. This may result in a variety of
memory corruption scenarios, most likely use-after-free. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use-after-free when cloning a partially consumedVeciterator
reported: November  2, 2020
issued: February 27, 2021(last modified: June 13, 2023)
package: {'name': 'heapless(crates.io)', 'url': '/packages/heapless.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2020-36464', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36464'}, {'text': 'GHSA-qgwf-r2jj-2ccv', 'url': 'https://github.com/advisories/GHSA-qgwf-r2jj-2ccv'}]
references: [{'text': 'https://github.com/japaric/heapless/issues/181', 'url': 'https://github.com/japaric/heapless/issues/181'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.1
affected functions: Version
heapless::vec::intoiter::clone: <=0.6
description: TheIntoIterCloneimplementation clones the whole underlyingVec.
If the iterator is partially consumed the consumed items will be copied, thus creating a use-after-free access. A proof of concept is available in the original bug report. Advisory available underCC0-1.0license.
affected_functions: heapless;;vec;;intoiter;;clone
version_of_Affected: <=0.6

---
classification: HIGH
subtitle: Multiple Transfer-Encoding headers misinterprets request payload
reported: February  5, 2021
issued: February  5, 2021(last modified: October 19, 2021)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
categories: ['format-injection']
keywords: []
aliases: [{'text': 'CVE-2021-21299', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21299'}, {'text': 'GHSA-6hfq-h8hq-87mf', 'url': 'https://github.com/advisories/GHSA-6hfq-h8hq-87mf'}]
references: [{'text': 'https://github.com/hyperium/hyper/security/advisories/GHSA-6hfq-h8hq-87mf', 'url': 'https://github.com/hyperium/hyper/security/advisories/GHSA-6hfq-h8hq-87mf'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.14.3^0.13.10^0.12.36
unaffected: <0.12.0
description: hyper's HTTP server code had a flaw that incorrectly understands some requests
with multiple transfer-encoding headers to have a chunked payload, when it
should have been rejected as illegal. This combined with an upstream HTTP proxy
that understands the request payload boundary differently can result in
"request smuggling" or "desync attacks". Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Queues allow non-Send types to be sent to other threads, allowing data races
reported: December 25, 2020
issued: February  4, 2021(last modified: June 13, 2023)
package: {'name': 'multiqueue(crates.io)', 'url': '/packages/multiqueue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36463', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36463'}, {'text': 'GHSA-jf43-3v8j-qwwr', 'url': 'https://github.com/advisories/GHSA-jf43-3v8j-qwwr'}, {'text': 'GHSA-r2x6-vrxx-jgv4', 'url': 'https://github.com/advisories/GHSA-r2x6-vrxx-jgv4'}]
references: [{'text': 'https://github.com/schets/multiqueue/issues/31', 'url': 'https://github.com/schets/multiqueue/issues/31'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implementedSendfor types used in queue implementations (InnerSend<RW, T>,InnerRecv<RW, T>,FutInnerSend<RW, T>,FutInnerRecv<RW, T>). This allows users to send non-Send types to other threads, which can lead to data race bugs or other undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Send bound needed on T (for Send impl ofBucket2)
reported: November 29, 2020
issued: February  2, 2021(last modified: June 13, 2023)
package: {'name': 'syncpool(crates.io)', 'url': '/packages/syncpool.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36462', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36462'}, {'text': 'GHSA-r88h-6987-g79f', 'url': 'https://github.com/advisories/GHSA-r88h-6987-g79f'}, {'text': 'GHSA-vp6r-mrq9-8f4h', 'url': 'https://github.com/advisories/GHSA-vp6r-mrq9-8f4h'}]
references: [{'text': 'https://github.com/Chopinsky/byte_buffer/issues/2', 'url': 'https://github.com/Chopinsky/byte_buffer/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.6
description: Affected versions of this crate unconditionally implementsSendforBucket2. This allows sending non-Send types to other threads. This can lead to data races when non Send types likeCell<T>orRc<T>are contained insideBucket2and sent across thread boundaries. The data races can potentially lead to memory corruption (as demonstrated in the PoC from the original report issue). The flaw was corrected in commit 15b2828 by adding aT: Sendbound to theSendimpl ofBucket2<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: MvccRwLock allows data races & aliasing violations
reported: December 10, 2020
issued: February  1, 2021(last modified: June 13, 2023)
package: {'name': 'noise_search(crates.io)', 'url': '/packages/noise_search.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36461', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36461'}, {'text': 'GHSA-wxjf-9f4g-3v44', 'url': 'https://github.com/advisories/GHSA-wxjf-9f4g-3v44'}]
references: [{'text': 'https://github.com/pipedown/noise/issues/72', 'url': 'https://github.com/pipedown/noise/issues/72'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forMvccRwLock.
This can lead to data races when types that are either!Sendor!Sync(e.g.Rc<T>,Arc<Cell<_>>) are contained insideMvccRwLockand sent across thread boundaries. The data races can potentially lead to memory corruption (as demonstrated in the PoC from the original report issue). Also, safe APIs ofMvccRwLockallow aliasing violations by allowing&TandLockResult<MutexGuard<Box<T>>>to co-exist in conflicting lifetime regions. The APIs ofMvccRwLockshould either be marked asunsafeorMbccRwLockshould be changed to private or pub(crate). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: IoReader::read(): user-providedReadon uninitialized buffer may cause UB
reported: January 26, 2021
issued: January 31, 2021(last modified: June 13, 2023)
package: {'name': 'ms3d(crates.io)', 'url': '/packages/ms3d.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26952', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26952'}, {'text': 'GHSA-9f5r-vqm5-m342', 'url': 'https://github.com/advisories/GHSA-9f5r-vqm5-m342'}]
references: [{'text': 'https://github.com/andrewhickman/ms3d/issues/1', 'url': 'https://github.com/andrewhickman/ms3d/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.1.3
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. The flaw was fixed in commit 599313b by zero-initializing the buffer (viaself.buf.resize(len, 0)) before passing it toRead. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Readon uninitialized buffer may cause UB (impl Walue for Vec<u8>)
reported: January 30, 2021
issued: January 31, 2021(last modified: June 13, 2023)
package: {'name': 'postscript(crates.io)', 'url': '/packages/postscript.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26953', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26953'}, {'text': 'GHSA-fhvc-gp6c-h2wx', 'url': 'https://github.com/advisories/GHSA-fhvc-gp6c-h2wx'}]
references: [{'text': 'https://github.com/bodoni/postscript/issues/1', 'url': 'https://github.com/bodoni/postscript/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.14.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. This flaw was fixed in commit 8026286 by zero-initializing the buffer before handing to a user-providedRead. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ArcGuard's Send and Sync should have bounds on RC
reported: December  8, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'async-coap(crates.io)', 'url': '/packages/async-coap.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36444', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36444'}, {'text': 'GHSA-9j8q-m9x5-9g6j', 'url': 'https://github.com/advisories/GHSA-9j8q-m9x5-9g6j'}]
references: [{'text': 'https://github.com/google/rust-async-coap/issues/33', 'url': 'https://github.com/google/rust-async-coap/issues/33'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate implement Send/Sync forArcGuard<RC, T>with no trait bounds onRC. This allows users to sendRC: !Sendto other threads and also allows users to concurrently accessRc: !Syncfrom multiple threads. This can result in memory corruption from data race or other undefined behavior caused by sendingT: !Sendto other threads (e.g. droppingMutexGuard<T>in another thread that didn't lock its mutex). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: convec::ConVecunconditionally implements Send/Sync
reported: November 24, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'convec(crates.io)', 'url': '/packages/convec.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36445', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36445'}, {'text': 'GHSA-rpxm-vmr7-5f5f', 'url': 'https://github.com/advisories/GHSA-rpxm-vmr7-5f5f'}]
references: [{'text': 'https://github.com/krl/convec/issues/2', 'url': 'https://github.com/krl/convec/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forConVec<T>.
This allows users to insertTthat is not Send or not Sync. This allows users to create data races by using non-Send types likeArc<Cell<_>>orRc<_>asTinConVec<T>. It is also possible to create data races by using types likeCell<_>orRefCell<_>asT(types that areSendbut notSync).
Such data races can lead to memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: LockWeak<T>allows to create data race toT.
reported: November 14, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'parc(crates.io)', 'url': '/packages/parc.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36454', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36454'}, {'text': 'GHSA-29v7-3v4c-gf38', 'url': 'https://github.com/advisories/GHSA-29v7-3v4c-gf38'}, {'text': 'GHSA-xwxc-j97j-84gf', 'url': 'https://github.com/advisories/GHSA-xwxc-j97j-84gf'}]
references: [{'text': 'https://github.com/hyyking/rustracts/pull/6', 'url': 'https://github.com/hyyking/rustracts/pull/6'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: In the affected versions of this crate,LockWeak<T>unconditionally implementedSendwith no trait bounds onT.LockWeak<T>doesn't ownTand only provides&T. This allows concurrent access to a non-SyncT, which can cause undefined behavior like data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Sharedcan cause a data race
reported: November 10, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'model(crates.io)', 'url': '/packages/model.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-36460', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36460'}, {'text': 'GHSA-mxv6-q98x-h958', 'url': 'https://github.com/advisories/GHSA-mxv6-q98x-h958'}]
references: [{'text': 'https://github.com/spacejam/model/issues/3', 'url': 'https://github.com/spacejam/model/issues/3'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Shareddata structure inmodelcrate implementsSendandSynctraits regardless of the inner type.
This allows safe Rust code to trigger a data race, which is undefined behavior in Rust. Users are advised to treatSharedas an unsafe type.
It should not be used outside of the testing context,
and care must be taken so that the testing code does not have a data race
besides a race condition that is expected to be caught by the test. Checkthe Rustonomiconfor the difference between
a data race and a general race condition. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: dces' World type can cause data races
reported: December  9, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'dces(crates.io)', 'url': '/packages/dces.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36459', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36459'}, {'text': 'GHSA-hxw9-jxqw-jc8j', 'url': 'https://github.com/advisories/GHSA-hxw9-jxqw-jc8j'}]
references: [{'text': 'https://gitlab.redox-os.org/redox-os/dces-rust/-/issues/8', 'url': 'https://gitlab.redox-os.org/redox-os/dces-rust/-/issues/8'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: TheWorldtype indcesis marked asSendwithout bounds on itsEntityStoreandComponentStore. This allows non-thread safeEntityStoreandComponentStores to be sent
across threads and cause data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SyncChannelcan move 'T: !Send' to other threads
reported: November 15, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'signal-simple(crates.io)', 'url': '/packages/signal-simple.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36446', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36446'}, {'text': 'GHSA-36cg-4jff-5863', 'url': 'https://github.com/advisories/GHSA-36cg-4jff-5863'}, {'text': 'GHSA-8892-84wf-cg8f', 'url': 'https://github.com/advisories/GHSA-8892-84wf-cg8f'}]
references: [{'text': 'https://github.com/kitsuneninetails/signal-rust/issues/2', 'url': 'https://github.com/kitsuneninetails/signal-rust/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forSyncChannel<T>.SyncChannel<T>doesn't provide access to&Tbut merely serves as a channel that consumes and returns ownedT. Users can create UB in safe Rust by sendingT: !Sendto other threads withSyncChannel::send/recvAPIs. UsingT = Arc<Cell<_>allows to create data races (which can lead to memory corruption), and usingT = MutexGuard<T>allows to unlock a mutex from a thread that didn't lock the mutex. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Bunchunconditionally implements Send/Sync
reported: November 12, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'bunch(crates.io)', 'url': '/packages/bunch.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36450', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36450'}, {'text': 'GHSA-jwph-qp5h-f9wj', 'url': 'https://github.com/advisories/GHSA-jwph-qp5h-f9wj'}]
references: [{'text': 'https://github.com/krl/bunch/issues/1', 'url': 'https://github.com/krl/bunch/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implementsSend/SyncforBunch<T>.
This allows users to insertT: !SynctoBunch<T>. It is possible to create a data race to aT: !Syncby invoking theBunch::get()API (which returns&T) from multiple threads. It is also possible to sendT: !Sendto other threads by insertingTinsideBunch<T>and sendingBunch<T>to another thread, allowing to create a data race by inserting types likeT = Rc<_>. Such data races can lead to memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: CopyCell lacks bounds on its Send trait allowing for data races
reported: November 15, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'toolshed(crates.io)', 'url': '/packages/toolshed.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36456', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36456'}, {'text': 'GHSA-2r6q-6c8c-g762', 'url': 'https://github.com/advisories/GHSA-2r6q-6c8c-g762'}]
references: [{'text': 'https://github.com/ratel-rust/toolshed/issues/12', 'url': 'https://github.com/ratel-rust/toolshed/issues/12'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: CopyCell<T>is aCell-like type that is implemented for any typeTthat
isCopyable. It'sSendtrait has no bounds on the contained type. As not allCopyable types are thread safe, for example non-mutable references
implement theCopytrait, it is possible to send references to types with
interior mutability such asCellacross threads and cause data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Queueshould have a Send bound on its Send/Sync traits
reported: November 15, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'scottqueue(crates.io)', 'url': '/packages/scottqueue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36453', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36453'}, {'text': 'GHSA-gvvv-w559-2hg6', 'url': 'https://github.com/advisories/GHSA-gvvv-w559-2hg6'}]
references: [{'text': 'https://github.com/rossdylan/rust-scottqueue/issues/1', 'url': 'https://github.com/rossdylan/rust-scottqueue/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implementsSend/SyncforQueue<T>. This allows (1) creating data races to aT: !Syncand (2) sendingT: !Sendto other threads, resulting in memory corruption or other undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Cache: Send/Sync impls needs trait bounds onK
reported: November 24, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'cache(crates.io)', 'url': '/packages/cache.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36448', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36448'}, {'text': 'GHSA-g78p-g85h-q6ww', 'url': 'https://github.com/advisories/GHSA-g78p-g85h-q6ww'}]
references: [{'text': 'https://github.com/krl/cache/issues/1', 'url': 'https://github.com/krl/cache/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forCache<K>.
This allows users to insertKthat is not Send or not Sync. This allows users to create data races by using non-Send types likeArc<Cell<T>>orRc<T>asKinCache<K>. It is also possible to create data races by using types likeCell<T>orRefCell<T>(types that areSendbut notSync).
Such data races can lead to memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Send/Sync bound needed on T  for Send/Sync impl of RcuCell
reported: November 14, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'rcu_cell(crates.io)', 'url': '/packages/rcu_cell.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36451', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36451'}, {'text': 'GHSA-686h-j8r8-wmfm', 'url': 'https://github.com/advisories/GHSA-686h-j8r8-wmfm'}]
references: [{'text': 'https://github.com/Xudong-Huang/rcu_cell/issues/3', 'url': 'https://github.com/Xudong-Huang/rcu_cell/issues/3'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate unconditionally implement Send/Sync forRcuCell<T>.
This allows users to sendT: !Sendto other threads (whileTenclosed withinRcuCell<T>), and allows users to concurrently accessT: !Syncby using the APIs ofRcuCell<T>that provide access to&T. This can result in memory corruption caused by data races. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ReaderResult should be bounded by Sync
reported: November 10, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'lexer(crates.io)', 'url': '/packages/lexer.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36458', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36458'}, {'text': 'GHSA-f997-8gxg-r354', 'url': 'https://github.com/advisories/GHSA-f997-8gxg-r354'}]
references: [{'text': 'https://gitlab.com/nathanfaucett/rs-lexer/-/issues/2', 'url': 'https://gitlab.com/nathanfaucett/rs-lexer/-/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Affected versions of this crate implementsSyncforReaderResult<T, E>with the trait boundT: Send, E: Send. Since matching on the public enumReaderResult<T, E>provides access to&T&&E,
allowing data race to a non-Sync typeTorE.
This can result in a memory corruption when multiple threads concurrently access&Tor&E. Suggested fix for the bug is change the trait bounds imposed onT&Eto beT: Sync, E: Sync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SyncRef's clone() and debug() allow data races
reported: December 18, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'v9(crates.io)', 'url': '/packages/v9.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36447', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36447'}, {'text': 'GHSA-3837-87vh-xq3w', 'url': 'https://github.com/advisories/GHSA-3837-87vh-xq3w'}, {'text': 'GHSA-pfjq-935c-4895', 'url': 'https://github.com/advisories/GHSA-pfjq-935c-4895'}]
references: [{'text': 'https://github.com/purpleposeidon/v9/issues/1', 'url': 'https://github.com/purpleposeidon/v9/issues/1'}, {'text': 'https://github.com/purpleposeidon/v9/commit/18847c50e5d36561cc91c996c3539ddb1eacf6c7', 'url': 'https://github.com/purpleposeidon/v9/commit/18847c50e5d36561cc91c996c3539ddb1eacf6c7'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.43
description: Affected versions of this crate unconditionally implementSyncforSyncRef<T>.
This definition allows data races if&Tis accessible through&SyncRef. SyncRef<T>derivesCloneandDebug, and the default implementations of those traits access&Tby invokingT::clone()&T::fmt(). It is possible to create data races & undefined behavior by concurrently invokingSyncRef<T>::clone()orSyncRef<T>::fmt()from multiple threads withT: !Sync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ShmWriter allows sending non-Send type across threads
reported: December 18, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'kekbit(crates.io)', 'url': '/packages/kekbit.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36449', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36449'}, {'text': 'GHSA-g83m-67wh-whpw', 'url': 'https://github.com/advisories/GHSA-g83m-67wh-whpw'}]
references: [{'text': 'https://github.com/motoras/kekbit/issues/34', 'url': 'https://github.com/motoras/kekbit/issues/34'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.4
description: Affected versions of this crate implementSendforShmWriter<H>without requiringH: Send. This allows users to sendH: !Sendto other threads, which can potentially lead to data races and undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Slockallows sending non-Send types across thread boundaries
reported: November 17, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'slock(crates.io)', 'url': '/packages/slock.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36455', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36455'}, {'text': 'GHSA-83r8-p8v6-6gfm', 'url': 'https://github.com/advisories/GHSA-83r8-p8v6-6gfm'}, {'text': 'GHSA-mc36-5m36-hjh5', 'url': 'https://github.com/advisories/GHSA-mc36-5m36-hjh5'}]
references: [{'text': 'https://github.com/BrokenLamp/slock-rs/issues/2', 'url': 'https://github.com/BrokenLamp/slock-rs/issues/2'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.0
description: Slock<T>unconditionally implementsSend/Sync. Affected versions of this crate allows sending non-Send types to other threads,
which can lead to data races and memory corruption due to the data race. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: AtomicBoxlacks bound on its Send and Sync traits allowing data races
reported: November 10, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'lever(crates.io)', 'url': '/packages/lever.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36457', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36457'}, {'text': 'GHSA-9pp4-8p8v-g78w', 'url': 'https://github.com/advisories/GHSA-9pp4-8p8v-g78w'}]
references: [{'text': 'https://github.com/vertexclique/lever/issues/15', 'url': 'https://github.com/vertexclique/lever/issues/15'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.1
description: AtomicBox<T>is aBoxtype designed to be used across threads, however, it
implements theSendandSynctraits for all typesT. This allows non-Send types such asRcand non-Sync types such asCellto
be used across thread boundaries which can trigger undefined behavior and
memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Record::read : CustomReadon uninitialized buffer may cause UB
reported: January 26, 2021
issued: January 27, 2021(last modified: June 13, 2023)
package: {'name': 'marc(crates.io)', 'url': '/packages/marc.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26308', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26308'}, {'text': 'GHSA-3mf3-2gv9-h39j', 'url': 'https://github.com/advisories/GHSA-3mf3-2gv9-h39j'}]
references: [{'text': 'https://github.com/blackbeam/rust-marc/issues/7', 'url': 'https://github.com/blackbeam/rust-marc/issues/7'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=2.0.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. (Record::read()) ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. This flaw was fixed in commit 6299af0 by zero-initializing the newly allocated memory (viadata.resize(len, 0)) instead of exposing uninitialized memory (unsafe { data.set_len(len) }). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: beef::Cow lacks a Sync bound on its Send trait allowing for data races
reported: October 28, 2020
issued: January 26, 2021(last modified: June 13, 2023)
package: {'name': 'beef(crates.io)', 'url': '/packages/beef.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36442', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36442'}, {'text': 'GHSA-m7w4-8wp8-m2xq', 'url': 'https://github.com/advisories/GHSA-m7w4-8wp8-m2xq'}]
references: [{'text': 'https://github.com/maciejhirsz/beef/issues/37', 'url': 'https://github.com/maciejhirsz/beef/issues/37'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.0
description: Affected versions of this crate did not have aT: Syncbound in theSendimpl forCow<'_, T, U>. This allows users to create data races by makingCowcontain types that are (Send && !Sync) likeCell<_>orRefCell<_>. Such data races can lead to memory corruption. The flaw was corrected in commit d1c7658 by adding trait boundsT: SyncandT::Owned: Sendto theSendimpl forCow<'_, T, U>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: AtomicBoximplements Send/Sync for anyT: Sized
reported: November 10, 2020
issued: January 25, 2021(last modified: June 13, 2023)
package: {'name': 'abox(crates.io)', 'url': '/packages/abox.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36441', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36441'}, {'text': 'GHSA-r626-fc64-3q28', 'url': 'https://github.com/advisories/GHSA-r626-fc64-3q28'}]
references: [{'text': 'https://github.com/SonicFrog/abox/issues/1', 'url': 'https://github.com/SonicFrog/abox/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.1
description: Affected versions of this crate implementsSend/SyncforAtomicBox<T>without requiringT: Send/T: Sync. This allows to create data races toT: !Syncand sendT: !Sendto another thread. Such behavior breaks the compile-time thread safety guarantees of Rust, and allows users to incur undefined behavior using safe Rust (e.g. memory corruption from data race). The flaw was corrected in commit 34c2b9e by adding trait boundT: SendtoSendimpl forAtomicBox<T>and trait boundT: SynctoSyncimpl forAtomicBox<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ReadTicket and WriteTicket should only be sendable when T is Send
reported: November 17, 2020
issued: January 25, 2021(last modified: June 13, 2023)
package: {'name': 'ticketed_lock(crates.io)', 'url': '/packages/ticketed_lock.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36439', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36439'}, {'text': 'GHSA-77m6-x95j-75r5', 'url': 'https://github.com/advisories/GHSA-77m6-x95j-75r5'}, {'text': 'GHSA-gq4h-f254-7cw9', 'url': 'https://github.com/advisories/GHSA-gq4h-f254-7cw9'}]
references: [{'text': 'https://github.com/kvark/ticketed_lock/issues/7', 'url': 'https://github.com/kvark/ticketed_lock/issues/7'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.0
description: Affected versions of this crate unconditionally implementedSendforReadTicket<T>&WriteTicket<T>.
This allows to send non-SendTto other threads. This can allows creating data races by cloning types with internal mutability and sending them to other threads (asTofReadTicket<T>/WriteTicket<T>). Such data races can cause memory corruption or other undefined behavior. The flaw was corrected in commit a986a93 by addingT: Sendbounds toSendimpls ofReadTicket<T>/WriteTicket<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Decoder<R>can carryR: !Sendto other threads
reported: November 10, 2020
issued: January 25, 2021(last modified: June 13, 2023)
package: {'name': 'libsbc(crates.io)', 'url': '/packages/libsbc.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36440', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36440'}, {'text': 'GHSA-f6g6-54hm-fhxv', 'url': 'https://github.com/advisories/GHSA-f6g6-54hm-fhxv'}]
references: [{'text': 'https://github.com/mvertescher/libsbc-rs/issues/4', 'url': 'https://github.com/mvertescher/libsbc-rs/issues/4'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.5
description: Affected versions of this crate implementsSendforDecoder<R>for anyR: Read. This allowsDecoder<R>to containR: !Sendand carry (move) it to another thread. This can result in undefined behavior such as memory corruption from data race onR, or droppingR = MutexGuard<_>from a thread that didn't lock the mutex. The flaw was corrected in commit a34d6e1 by adding trait boundR: Sendto theSendimpl forDecoder<R>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Futurelacks bounds on Send and Sync.
reported: December  8, 2020
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'tiny_future(crates.io)', 'url': '/packages/tiny_future.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36438', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36438'}, {'text': 'GHSA-fg42-vwxx-xx5j', 'url': 'https://github.com/advisories/GHSA-fg42-vwxx-xx5j'}, {'text': 'GHSA-m296-j53x-xv95', 'url': 'https://github.com/advisories/GHSA-m296-j53x-xv95'}]
references: [{'text': 'https://github.com/KizzyCode/tiny_future/issues/1', 'url': 'https://github.com/KizzyCode/tiny_future/issues/1'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
description: tiny_futurecontains a light-weight implementation ofFutures. TheFuturetype it has lacked bound on itsSendandSynctraits. This allows for a bug where non-thread safe types such asCellcan be used inFutures and cause data races in concurrent programs. The flaw was corrected in commitc791919by adding trait bounds toFuture'sSendandSync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: PinSlaband Unordered<T, S> need bounds on their Send/Sync traits
reported: November 15, 2020
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'unicycle(crates.io)', 'url': '/packages/unicycle.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36436', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36436'}, {'text': 'GHSA-686f-ch3r-xwmh', 'url': 'https://github.com/advisories/GHSA-686f-ch3r-xwmh'}]
references: [{'text': 'https://github.com/udoprog/unicycle/issues/8', 'url': 'https://github.com/udoprog/unicycle/issues/8'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.7.1
description: Affected versions of this crate unconditionally implementedSend&Syncfor typesPinSlab<T>&Unordered<T, S>. This allows sending non-Send types to other threads and concurrently accessing non-Sync types from multiple threads. This can result in a data race & memory corruption when types that provide internal mutability without synchronization are contained withinPinSlab<T>orUnordered<T, S>and accessed concurrently from multiple threads. The flaw was corrected in commits 92f40b4 & 6a6c367 by adding trait boundT: SendtoSendimpls forPinSlab<T>&Unordered<T, S>and addingT: SynctoSyncimpls forPinSlab<T>&Unordered<T, S>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: QueueSender/QueueReceiver: Send/Sync impls needT: Send
reported: November 24, 2020
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'conqueue(crates.io)', 'url': '/packages/conqueue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36437', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36437'}, {'text': 'GHSA-368f-29c3-4f2r', 'url': 'https://github.com/advisories/GHSA-368f-29c3-4f2r'}]
references: [{'text': 'https://github.com/longshorej/conqueue/issues/9', 'url': 'https://github.com/longshorej/conqueue/issues/9'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
description: Affected versions of this crate unconditionally implementedSend/SyncforQueueSender<T>,
allowing to send non-SendTto other threads by invoking(&QueueSender<T>).send(). This fails to prevent users from creating data races by sending types likeRc<T>orArc<Cell<T>>to other threads, which can lead to memory corruption. The flaw was corrected in commit 1e462c3 by imposingT: Sendto bothSend/Syncimpls forQueueSender<T>/QueueReceiver<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Singleton lacks bounds on Send and Sync.
reported: November 16, 2020
issued: January 22, 2021(last modified: June 13, 2023)
package: {'name': 'ruspiro-singleton(crates.io)', 'url': '/packages/ruspiro-singleton.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36435', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36435'}, {'text': 'GHSA-fqq2-xp7m-xvm8', 'url': 'https://github.com/advisories/GHSA-fqq2-xp7m-xvm8'}]
references: [{'text': 'https://github.com/RusPiRo/ruspiro-singleton/issues/10', 'url': 'https://github.com/RusPiRo/ruspiro-singleton/issues/10'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.1
description: Singleton<T>is meant to be a static object that can be initialized lazily. In
order to satisfy the requirement thatstaticitems must implementSync,Singletonimplemented bothSyncandSendunconditionally. This allows for a bug where non-Synctypes such asCellcan be used in
singletons and cause data races in concurrent programs. The flaw was corrected in commitb0d2bd20eby adding trait bounds, requiring
the contaiend type to implementSync. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: LateStatic has incorrect Sync bound
reported: November 10, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'late-static(crates.io)', 'url': '/packages/late-static.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36209', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36209'}, {'text': 'GHSA-wr55-mf5c-hhwm', 'url': 'https://github.com/advisories/GHSA-wr55-mf5c-hhwm'}]
references: [{'text': 'https://github.com/Richard-W/late-static/issues/1', 'url': 'https://github.com/Richard-W/late-static/issues/1'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
description: Affected versions of this crate implementedSyncforLateStaticwithT: Send, so that it is possible to create a data race to a typeT: Send + !Sync(e.g.Cell<T>). This can result in a memory corruption or other kinds of undefined behavior. The flaw was corrected in commit 11f396c by replacing theT: Sendbound toT: Syncbound in theSyncimpl forLateStatic<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: panic safety issue inimpl TransformContent<S, D> for [S; (2|3|4)]
reported: January 10, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'basic_dsp_matrix(crates.io)', 'url': '/packages/basic_dsp_matrix.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25906', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25906'}, {'text': 'GHSA-fjr6-hm39-4cf9', 'url': 'https://github.com/advisories/GHSA-fjr6-hm39-4cf9'}]
references: [{'text': 'https://github.com/liebharc/basic_dsp/issues/47', 'url': 'https://github.com/liebharc/basic_dsp/issues/47'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.9.2
description: Affected versions of this crate did not guard against double drop while temporarily duplicating objects' ownership usingptr::read(). Upon panic in a user-provided functionconversion, objects that are copied byptr::read()are dropped twice, leading to memory corruption. The flaw was corrected in v0.9.2 by usingManuallyDrop<T>to enclose objects that are to be temporarily duplicated. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: EventList's Fromconversions can double drop on panic.
reported: January  4, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'fil-ocl(crates.io)', 'url': '/packages/fil-ocl.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-25908', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25908'}, {'text': 'GHSA-x3v2-fgr6-3wmm', 'url': 'https://github.com/advisories/GHSA-x3v2-fgr6-3wmm'}]
references: [{'text': 'https://github.com/cogciprocate/ocl/issues/194', 'url': 'https://github.com/cogciprocate/ocl/issues/194'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
unaffected: <0.12.0
description: Affected versions of this crate read from a container usingptr::readinFrom<EventList>, and then call a user specifiedInto<Event>function. This issue can result in a double-free if the user provided function panics. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: conquer-once's OnceCell lacks Send bound for its Sync trait.
reported: December 22, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'conquer-once(crates.io)', 'url': '/packages/conquer-once.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36208', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36208'}, {'text': 'GHSA-3jc5-5hc5-33gj', 'url': 'https://github.com/advisories/GHSA-3jc5-5hc5-33gj'}]
references: [{'text': 'https://github.com/oliver-giersch/conquer-once/issues/3', 'url': 'https://github.com/oliver-giersch/conquer-once/issues/3'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.2
description: Affected versions ofconquer-onceimplementsSyncfor itsOnceCelltype
without restricting it toSendable types. This allows non-SendbutSynctypes such asMutexGuardto be sent across
threads leading to undefined behavior and memory corruption in concurrent
programs. The issue was fixed by adding aSendconstraint toOnceCell. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Update unsound DrainFilter and RString::retain
reported: December 21, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'abi_stable(crates.io)', 'url': '/packages/abi_stable.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36212', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36212'}, {'text': 'CVE-2020-36213', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36213'}, {'text': 'GHSA-vq23-5h4f-vwpv', 'url': 'https://github.com/advisories/GHSA-vq23-5h4f-vwpv'}, {'text': 'GHSA-wqxc-qrq4-w5v4', 'url': 'https://github.com/advisories/GHSA-wqxc-qrq4-w5v4'}]
references: [{'text': 'https://github.com/rodrimati1992/abi_stable_crates/issues/44', 'url': 'https://github.com/rodrimati1992/abi_stable_crates/issues/44'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.9.1
description: Affected versions of this crate contained code from the Rust standard library that contained soundness bugs rust-lang/rust#60977 (double drop) & rust-lang/rust#78498 (create invalid utf-8 string). The flaw was corrected in v0.9.1 by making a similar fix to the one made in the Rust standard library. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: impl Randomon arrays can lead to dropping uninitialized memory
reported: December 31, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'autorand(crates.io)', 'url': '/packages/autorand.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36210', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36210'}, {'text': 'GHSA-cgmg-2v6m-fjg7', 'url': 'https://github.com/advisories/GHSA-cgmg-2v6m-fjg7'}]
references: [{'text': 'https://github.com/mersinvald/autorand-rs/issues/5', 'url': 'https://github.com/mersinvald/autorand-rs/issues/5'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.3
description: Affected versions of this crate had a panic safety issue to drop partially uninitialized array ofTupon panic in a user provided functionT::random(). Dropping uninitializedTcan potentially cause memory corruption or undefined behavior. The flaw was corrected in commit 565d508 by usingMaybeUninit<T>to avoid possible dropping of uninitialized memory upon panic. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: hashconsing's HConsed lacks Send/Sync bound for its Send/Sync trait.
reported: November 10, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'hashconsing(crates.io)', 'url': '/packages/hashconsing.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36215', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36215'}, {'text': 'GHSA-rw2c-c256-3r53', 'url': 'https://github.com/advisories/GHSA-rw2c-c256-3r53'}]
references: [{'text': 'https://github.com/AdrienChampion/hashconsing/issues/1', 'url': 'https://github.com/AdrienChampion/hashconsing/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.1.0
description: Affected versions ofhashconsingimplementsSend/Syncfor itsHConsedtype without restricting it toSendable types andSyncable types. This allows non-Synctypes such asCellto be shared across threads leading to undefined behavior and memory corruption in concurrent programs. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ImageChunkMut needs bounds on its Send and Sync traits
reported: December  8, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'gfwx(crates.io)', 'url': '/packages/gfwx.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36211', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36211'}, {'text': 'GHSA-xp6v-qx65-4pp7', 'url': 'https://github.com/advisories/GHSA-xp6v-qx65-4pp7'}]
references: [{'text': 'https://github.com/Devolutions/gfwx-rs/issues/7', 'url': 'https://github.com/Devolutions/gfwx-rs/issues/7'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.0
description: In the affected versions of this crate,ImageChunkMut<'_, T>unconditionally implementsSendandSync, allowing to create data races. This can result in a memory corruption or undefined behavior when non thread-safe types are moved and referenced across thread boundaries. The flaw was corrected in commit e7fb2f5 by addingT: Sendbound to theSendimpl and addingT: Syncbound to theSyncimpl. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Aoveclacks bound on its Send and Sync traits allowing data races
reported: December 10, 2020
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'aovec(crates.io)', 'url': '/packages/aovec.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36207', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36207'}, {'text': 'GHSA-g489-xrw3-3v8w', 'url': 'https://github.com/advisories/GHSA-g489-xrw3-3v8w'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: aovec::Aovec<T>is a vector type that implementsSendandSyncfor all
typesT. This allows non-Send types such asRcand non-Sync types such asCellto
be used across thread boundaries which can trigger undefined behavior and
memory corruption. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Exposes internally used raw pointer
reported: January  1, 2021
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'cache(crates.io)', 'url': '/packages/cache.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-25903', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25903'}, {'text': 'GHSA-gh87-6jr3-8q47', 'url': 'https://github.com/advisories/GHSA-gh87-6jr3-8q47'}]
references: [{'text': 'https://github.com/krl/cache/issues/2', 'url': 'https://github.com/krl/cache/issues/2'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate dereference a raw pointer that can be modified
without usingunsafecode. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Frame::copy_from_raw_partscan lead to segfault withoutunsafe
reported: January  7, 2021
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'av-data(crates.io)', 'url': '/packages/av-data.html'}
type: Vulnerability
categories: ['memory-exposure', 'privilege-escalation']
aliases: [{'text': 'CVE-2021-25904', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25904'}, {'text': 'GHSA-352p-rhvq-7g78', 'url': 'https://github.com/advisories/GHSA-352p-rhvq-7g78'}]
references: [{'text': 'https://github.com/rust-av/rust-av/issues/136', 'url': 'https://github.com/rust-av/rust-av/issues/136'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.0
description: fn Frame::copy_from_raw_parts()is a safe API that can take a
raw pointer and dereference it. It is possible to read arbitrary memory address
with an arbitrarily fed pointer. This allows the safe API to access & read
arbitrary address in memory. Feeding an invalid memory address pointer to
the API may also cause the program to segfault. The flaw was corrected in https://github.com/rust-av/rust-av/pull/137,
by removing the APIfn Frame::copy_from_raw_parts(). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Double drop upon panic in 'fn map_array()'
reported: January 10, 2021
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'glsl-layout(crates.io)', 'url': '/packages/glsl-layout.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25902', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25902'}, {'text': 'GHSA-cx4j-fxr7-jxg8', 'url': 'https://github.com/advisories/GHSA-cx4j-fxr7-jxg8'}]
references: [{'text': 'https://github.com/rustgd/glsl-layout/pull/10', 'url': 'https://github.com/rustgd/glsl-layout/pull/10'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.0
description: Affected versions of this crate did not guard against panic within the user-provided functionf(2nd parameter offn map_array), and thus panic withinfcauses double drop of a single object. The flaw was corrected in the 0.4.0 release by wrapping the object vulnerable
to a double drop withinManuallyDrop<T>. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: UsbContext trait did not require implementers to be Send and Sync.
reported: December 18, 2020
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'rusb(crates.io)', 'url': '/packages/rusb.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36206', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36206'}, {'text': 'GHSA-9mxw-4856-9cm5', 'url': 'https://github.com/advisories/GHSA-9mxw-4856-9cm5'}]
references: [{'text': 'https://github.com/a1ien/rusb/issues/44', 'url': 'https://github.com/a1ien/rusb/issues/44'}]
cvss score: 7HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.7.0
description: Affected versions ofrusbdid not requireUsbContextto implementSendandSync. However, throughDeviceandDeviceHandleit is possible to useUsbContexts across threads. This issue allows non-thread safeUsbContexttypes to be used concurrently
leading to data races and memory corruption. The issue was fixed by addingSendandSyncbounds toUsbContext. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Dangling reference inaccess::Mapwith Constant
reported: December 10, 2020
issued: December 11, 2020(last modified: June 13, 2023)
package: {'name': 'arc-swap(crates.io)', 'url': '/packages/arc-swap.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-35711', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35711'}, {'text': 'GHSA-9pqx-g3jh-qpqq', 'url': 'https://github.com/advisories/GHSA-9pqx-g3jh-qpqq'}]
references: [{'text': 'https://github.com/vorner/arc-swap/issues/45', 'url': 'https://github.com/vorner/arc-swap/issues/45'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.8, <1.0.0-0>=1.1.0
unaffected: <0.4.2
affected functions: Version
arc_swap::access::mapguard::deref: <1.1.0
description: Using thearc_swap::access::Mapwith theConstanttest helper (or with
user-provided implementation of theAccesstrait) could sometimes lead to the
map returning dangling references. Replaced by implementation withoutunsafe, at the cost of addedClonebound
on the closure and small penalty on performance. Advisory available underCC0-1.0license.
affected_functions: arc_swap;;access;;mapguard;;deref
version_of_Affected: <1.1.0

---
classification: HIGH
subtitle: Unexpected panic in multihashfrom_sliceparsing code
reported: November  8, 2020
issued: November  9, 2020(last modified: June 13, 2023)
package: {'name': 'multihash(crates.io)', 'url': '/packages/multihash.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35909', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35909'}, {'text': 'GHSA-h7qh-3h6f-w79p', 'url': 'https://github.com/advisories/GHSA-h7qh-3h6f-w79p'}]
references: [{'text': 'https://github.com/multiformats/rust-multihash/pull/72', 'url': 'https://github.com/multiformats/rust-multihash/pull/72'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.11.3
affected functions: Version
multihash::digests::multihashgeneric::from_bytes: <0.11.3
multihash::digests::multihashrefgeneric::from_slice: <0.11.3
description: In versions prior 0.11.3 it's possible to makefrom_slicepanic by feeding it certain malformed input.
It's never documented thatfrom_slice(andfrom_byteswhich wraps it) can panic, and its' return type (Result<Self, DecodeError>) suggests otherwise. In practice,from_slice/from_bytesis frequently used in networking code (for examplein rust-libp2p) and is being called with unsanitized data from untrusted sources.
This can allow attackers to cause DoS by causing an unexpectedpanicin the network client's code. Advisory available underCC0-1.0license.
affected_functions: multihash;;digests;;multihashgeneric;;from_bytes
version_of_Affected: <0.11.3

---
classification: HIGH
subtitle: futures_task::waker may cause a use-after-free if used on a type that isn't 'static
reported: September  4, 2020
issued: October 31, 2020(last modified: June 13, 2023)
package: {'name': 'futures-task(crates.io)', 'url': '/packages/futures-task.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-35906', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35906'}, {'text': 'GHSA-r93v-9p5q-vhpf', 'url': 'https://github.com/advisories/GHSA-r93v-9p5q-vhpf'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/pull/2206', 'url': 'https://github.com/rust-lang/futures-rs/pull/2206'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.6
unaffected: <=0.2.1
affected functions: Version
futures_task::waker: >=0.3.0
description: Affected versions of the crate did not properly implement a'staticlifetime bound on thewakerfunction.
This resulted in a use-after-free ifWaker::wake()is called after original data had been dropped. The flaw was corrected by adding'staticlifetime bound to the datawakertakes. Advisory available underCC0-1.0license.
affected_functions: futures_task;;waker
version_of_Affected: >=0.3.0

---
classification: HIGH
subtitle: Obstack generates unaligned references
reported: September  3, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'obstack(crates.io)', 'url': '/packages/obstack.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35894', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35894'}, {'text': 'GHSA-85j6-f8j6-q26x', 'url': 'https://github.com/advisories/GHSA-85j6-f8j6-q26x'}]
references: [{'text': 'https://github.com/petertodd/rust-obstack/issues/4', 'url': 'https://github.com/petertodd/rust-obstack/issues/4'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.1.4
description: Obstack generates unaligned references for types that require a large alignment. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: LocalRequest::clonecreates multiple mutable references to the same object
reported: May 27, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rocket(crates.io)', 'url': '/packages/rocket.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35882', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35882'}, {'text': 'GHSA-8q2v-67v7-6vc6', 'url': 'https://github.com/advisories/GHSA-8q2v-67v7-6vc6'}]
references: [{'text': 'https://github.com/SergioBenitez/Rocket/issues/1312', 'url': 'https://github.com/SergioBenitez/Rocket/issues/1312'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.5
unaffected: <0.4.0
affected functions: Version
rocket::local::localrequest::clone: <0.4.5, >=0.4.0
description: The affected version ofrocketcontains aClonetrait implementation ofLocalRequestthat reuses the pointer to innerRequestobject.
This causes data race in rare combinations of APIs if the original and the
cloned objects are modified at the same time. Advisory available underCC0-1.0license.
affected_functions: rocket;;local;;localrequest;;clone
version_of_Affected: <0.4.5, >=0.4.0

---
classification: HIGH
subtitle: Out of Memory in stream::read_raw_bytes_into()
reported: June  8, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'protobuf(crates.io)', 'url': '/packages/protobuf.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2019-15544', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15544'}, {'text': 'GHSA-mh6h-f25p-98f8', 'url': 'https://github.com/advisories/GHSA-mh6h-f25p-98f8'}]
references: [{'text': 'https://github.com/stepancheg/rust-protobuf/issues/411', 'url': 'https://github.com/stepancheg/rust-protobuf/issues/411'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: ^1.7.5>=2.6.0
affected functions: Version
protobuf::stream::read_raw_bytes_into: <2.6.0
description: Affected versions of this crate called Vec::reserve() on user-supplied input. This allows an attacker to cause an Out of Memory condition while calling the
vulnerable method on untrusted data. Advisory available underCC0-1.0license.
affected_functions: protobuf;;stream;;read_raw_bytes_into
version_of_Affected: <2.6.0

---
classification: HIGH
subtitle: Uncontrolled recursion leads to abort in HTML serialization
reported: April 27, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ammonia(crates.io)', 'url': '/packages/ammonia.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15542', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15542'}, {'text': 'GHSA-5hp8-35wj-m525', 'url': 'https://github.com/advisories/GHSA-5hp8-35wj-m525'}]
references: [{'text': 'https://github.com/rust-ammonia/ammonia/blob/master/CHANGELOG.md#210', 'url': 'https://github.com/rust-ammonia/ammonia/blob/master/CHANGELOG.md#210'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.1.0
affected functions: Version
ammonia::document::to_string: <2.1.0
ammonia::document::write_to: <2.1.0
ammonia::clean: <2.1.0
description: Affected versions of this crate did use recursion for serialization of HTML
DOM trees. This allows an attacker to cause abort due to stack overflow by providing
a pathologically nested input. The flaw was corrected by serializing the DOM tree iteratively instead. Advisory available underCC0-1.0license.
affected_functions: ammonia;;document;;to_string
version_of_Affected: <2.1.0

---
classification: HIGH
subtitle: tokio-rustls reads may cause excessive memory usage
reported: May 19, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'tokio-rustls(crates.io)', 'url': '/packages/tokio-rustls.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35875', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35875'}, {'text': 'GHSA-2jfv-g3fh-xq3v', 'url': 'https://github.com/advisories/GHSA-2jfv-g3fh-xq3v'}]
references: [{'text': 'https://github.com/tokio-rs/tls/pull/14', 'url': 'https://github.com/tokio-rs/tls/pull/14'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.12.3, <0.13.0>=0.13.1
unaffected: <0.12
description: tokio-rustlsdoes not callprocess_new_packetsimmediately afterread,
so the expected termination conditionwants_readalways returns true.
As long as new incoming data arrives faster than it is processed
and the reader does not return pending, data will be buffered. This may cause DoS. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Cloned interners may read already dropped strings
reported: August 24, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'string-interner(crates.io)', 'url': '/packages/string-interner.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16882', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16882'}, {'text': 'GHSA-49fq-pw77-6qxj', 'url': 'https://github.com/advisories/GHSA-49fq-pw77-6qxj'}]
references: [{'text': 'https://github.com/Robbepop/string-interner/issues/9', 'url': 'https://github.com/Robbepop/string-interner/issues/9'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: ^0.6.4>=0.7.1
description: Affected versions of this crate did not clone contained strings when an interner is cloned.
Interners have raw pointers to the contained strings, and they keep pointing the strings which the old interner owns, after the interner is cloned.
If a new cloned interner is alive and the old original interner is dead, the new interner has dangling pointers to the old interner's storage, which is already dropped. This allows an attacker to read the already freed memory.
The dangling pointers are used by the interners to check a string is already interned.
An attacker can do brute force attack to get the data pointed by the dangling pointer. The flaw was corrected byhttps://github.com/Robbepop/string-interner/pull/10.
This patch implementsClonemanually to the interner type, so that the internal raw pointers always point the strings owned by the same interner. PR #10 was also backported to the 0.6 release line inhttps://github.com/Robbepop/string-interner/pull/14and was released in 0.6.4. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Processing of maliciously crafted length fields causes memory allocation SIGABRTs
reported: June 13, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'asn1_der(crates.io)', 'url': '/packages/asn1_der.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15549', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15549'}, {'text': 'GHSA-v5r6-6r3c-wqxc', 'url': 'https://github.com/advisories/GHSA-v5r6-6r3c-wqxc'}]
references: [{'text': 'https://github.com/KizzyCode/asn1_der/issues/1', 'url': 'https://github.com/KizzyCode/asn1_der/issues/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.2
description: Affected versions of this crate tried to preallocate a vector for an arbitrary amount of bytes announced by the ASN.1-DER length field without further checks. This allows an attacker to trigger a SIGABRT by creating length fields that announce more bytes than the allocator can provide. The flaw was corrected by not preallocating memory. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in Scalar::check_overflow allows side-channel timing attack
reported: October 14, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'libsecp256k1(crates.io)', 'url': '/packages/libsecp256k1.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2019-25003', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25003'}, {'text': 'GHSA-hrjm-c879-pp86', 'url': 'https://github.com/advisories/GHSA-hrjm-c879-pp86'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.3.1
affected functions: Version
libsecp256k1::scalar::check_overflow: <0.3.1
description: Versions oflibsecp256k1prior to0.3.1did not execute
Scalar::check_overflow in constant time. This allows an attacker to potentially leak information via a timing attack. The flaw was corrected by modifying Scalar::check_overflow to execute in
constant time. Advisory available underCC0-1.0license.
affected_functions: libsecp256k1;;scalar;;check_overflow
version_of_Affected: <0.3.1

---
classification: HIGH
subtitle: Integer Overflow in HeaderMap::reserve() can cause Denial of Service
reported: November 16, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'http(crates.io)', 'url': '/packages/http.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2019-25008', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25008'}, {'text': 'CVE-2020-25574', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25574'}, {'text': 'GHSA-x7vr-c387-8w57', 'url': 'https://github.com/advisories/GHSA-x7vr-c387-8w57'}, {'text': 'GHSA-xvc9-xwgj-4cq9', 'url': 'https://github.com/advisories/GHSA-xvc9-xwgj-4cq9'}]
references: [{'text': 'https://github.com/hyperium/http/issues/352', 'url': 'https://github.com/hyperium/http/issues/352'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.1.20
affected functions: Version
http::header::headermap::reserve: <0.1.20
description: HeaderMap::reserve()usedusize::next_power_of_two()to calculate the increased capacity.
However,next_power_of_two()silently overflows to 0 if given a sufficiently large number
in release mode. If the map was not empty when the overflow happens,
the library will invokeself.grow(0)and start infinite probing.
This allows an attacker who controls the argument toreserve()to cause a potential denial of service (DoS). The flaw was corrected in 0.1.20 release ofhttpcrate. Advisory available underCC0-1.0license.
affected_functions: http;;header;;headermap;;reserve
version_of_Affected: <0.1.20

---
classification: HIGH
subtitle: Memory safety issues incompact::Vec
reported: September  3, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ordnung(crates.io)', 'url': '/packages/ordnung.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35890', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35890'}, {'text': 'CVE-2020-35891', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35891'}, {'text': 'GHSA-4wj3-p7hj-cvx8', 'url': 'https://github.com/advisories/GHSA-4wj3-p7hj-cvx8'}, {'text': 'GHSA-qrwc-jxf5-g8x6', 'url': 'https://github.com/advisories/GHSA-qrwc-jxf5-g8x6'}]
references: [{'text': 'https://github.com/maciejhirsz/ordnung/issues/8', 'url': 'https://github.com/maciejhirsz/ordnung/issues/8'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: compact::Veccontains multiple memory safety issues. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: fix unsound APIs that could lead to UB
reported: September  6, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'generator(crates.io)', 'url': '/packages/generator.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16144', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16144'}, {'text': 'GHSA-6c65-xcf5-299x', 'url': 'https://github.com/advisories/GHSA-6c65-xcf5-299x'}]
references: [{'text': 'https://github.com/Xudong-Huang/generator-rs/issues/9', 'url': 'https://github.com/Xudong-Huang/generator-rs/issues/9'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.18
description: Affected versions of this crate API could use uninitialized memory with some APIs in special
cases, like use the API in none generator context. This could lead to UB.
The flaw was corrected byhttps://github.com/Xudong-Huang/generator-rs/issues/9https://github.com/Xudong-Huang/generator-rs/issues/11https://github.com/Xudong-Huang/generator-rs/issues/13https://github.com/Xudong-Huang/generator-rs/issues/14This patch fixes all those issues above. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in offset_of and span_of causes SIGILL, drops uninitialized memory of arbitrary type on panic in client code
reported: July 16, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'memoffset(crates.io)', 'url': '/packages/memoffset.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2019-15553', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15553'}, {'text': 'GHSA-rh89-x75f-rh3c', 'url': 'https://github.com/advisories/GHSA-rh89-x75f-rh3c'}]
references: [{'text': 'https://github.com/Gilnaa/memoffset/issues/9#issuecomment-505461490', 'url': 'https://github.com/Gilnaa/memoffset/issues/9#issuecomment-505461490'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.5.0
description: Affected versions of this crate caused traps and/or memory unsafety by zero-initializing references.
They also could lead to uninitialized memory being dropped if the field for which the offset is requested was behind a deref coercion, and that deref coercion caused a panic. The flaw was corrected by usingMaybeUninit. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw inreallocallows reading unknown memory
reported: March 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'bumpalo(crates.io)', 'url': '/packages/bumpalo.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-35861', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35861'}, {'text': 'GHSA-vqx7-pw4r-29rr', 'url': 'https://github.com/advisories/GHSA-vqx7-pw4r-29rr'}]
references: [{'text': 'https://github.com/fitzgen/bumpalo/issues/69', 'url': 'https://github.com/fitzgen/bumpalo/issues/69'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=3.2.1
unaffected: <3.0.0
description: Whenreallocing, if we allocate new space, we need to copy the old
allocation's bytes into the new space. There areold_sizenumber of bytes in
the old allocation, but we were accidentally copyingnew_sizenumber of bytes,
which could lead to copying bytes into the realloc'd space from past the chunk
that we're bump allocating out of, from unknown memory. If an attacker can causereallocs, and can read therealoced data back,
this could allow them to read things from other regions of memory that they
shouldn't be able to. For example, if some crypto keys happened to live in
memory right after a chunk we were bump allocating out of, this could allow
the attacker to read the crypto keys. Beyond just fixing the bug and adding a regression test, I've also taken two
additional steps: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: read_scalarandread_scalar_atallow transmuting values withoutunsafeblocks
reported: April 11, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'flatbuffers(crates.io)', 'url': '/packages/flatbuffers.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35864', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35864'}, {'text': 'GHSA-c9h5-hf8r-m97x', 'url': 'https://github.com/advisories/GHSA-c9h5-hf8r-m97x'}]
references: [{'text': 'https://github.com/google/flatbuffers/issues/5825', 'url': 'https://github.com/google/flatbuffers/issues/5825'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.0
unaffected: <0.4.0
affected functions: Version
flatbuffers::read_scalar: >=0.4.0
flatbuffers::read_scalar_at: >=0.4.0
description: Theread_scalarandread_scalar_atfunctions are unsound
because they allow transmuting values withoutunsafeblocks. The following example shows how to create a dangling reference: Advisory available underCC0-1.0license.
affected_functions: flatbuffers;;read_scalar
version_of_Affected: >=0.4.0

---
classification: HIGH
subtitle: Format string vulnerabilities inpancurses
reported: June 15, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'pancurses(crates.io)', 'url': '/packages/pancurses.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2019-15546', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15546'}, {'text': 'GHSA-m57c-4vvx-gjgq', 'url': 'https://github.com/advisories/GHSA-m57c-4vvx-gjgq'}]
references: [{'text': 'https://github.com/RustSec/advisory-db/issues/106', 'url': 'https://github.com/RustSec/advisory-db/issues/106'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: no patched versions
affected functions: Version
pancurses::mvprintw: >=0
pancurses::printw: >=0
description: pancurses::mvprintwandpancurses::printwpasses a pointer from a rust&strto C,
allowing hostile input to execute a format string attack, which trivially allows writing
arbitrary data to stack memory. Advisory available underCC0-1.0license.
affected_functions: pancurses;;mvprintw
version_of_Affected: >=0

---
classification: HIGH
subtitle: Wrong memory orderings in RwLock potentially violates mutual exclusion
reported: August 27, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'spin(crates.io)', 'url': '/packages/spin.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16137', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16137'}, {'text': 'GHSA-hv7x-f3pv-gpwr', 'url': 'https://github.com/advisories/GHSA-hv7x-f3pv-gpwr'}]
references: [{'text': 'https://github.com/mvdnes/spin-rs/issues/65', 'url': 'https://github.com/mvdnes/spin-rs/issues/65'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.5.2
affected functions: Version
spin::rwlock::new: <0.5.2
description: Wrong memory orderings inside the RwLock implementation allow for two writers to acquire the lock at the same time. The drop implementation used Ordering::Relaxed, which allows the compiler or CPU to reorder a mutable access on the locked data after the lock has been yielded. Only users of the RwLock implementation are affected. Users of Once (including users of lazy_static with thespin_no_stdfeature enabled) are NOT affected. On strongly ordered CPU architectures like x86, the only real way that this would lead to a memory corruption is if the compiler reorders an access after the lock is yielded, which is possible but in practice unlikely. It is a more serious issue on weakly ordered architectures such as ARM which, except in the presence of certain instructions, allow the hardware to decide which accesses are seen at what times. Therefore on an ARM system it is likely that using the wrong memory ordering would result in a memory corruption, even if the compiler itself doesn't reorder the memory accesses in a buggy way. The flaw was corrected by https://github.com/mvdnes/spin-rs/pull/66. Advisory available underCC0-1.0license.
affected_functions: spin;;rwlock;;new
version_of_Affected: <0.5.2

---
classification: HIGH
subtitle: Insufficient size checks in outgoing buffer in ws allows remote attacker to run the process out of memory
reported: September 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ws(crates.io)', 'url': '/packages/ws.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35896', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35896'}, {'text': 'GHSA-rh7x-ppxx-p34c', 'url': 'https://github.com/advisories/GHSA-rh7x-ppxx-p34c'}]
references: [{'text': 'https://github.com/housleyjk/ws-rs/issues/291', 'url': 'https://github.com/housleyjk/ws-rs/issues/291'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate did not properly check and cap the growth of the outgoing buffer. This allows a remote attacker to take down the process by growing the buffer of their (single) connection until the process runs out of memory it can allocate and is killed. The flaw was corrected in theparity-wsfork(>=0.10.0) bydisconnecting a client when the buffer runs full. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: ChaCha20 counter overflow can expose repetitions in the keystream
reported: October 22, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'chacha20(crates.io)', 'url': '/packages/chacha20.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2019-25005', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25005'}, {'text': 'GHSA-j2r6-2m5c-vgh5', 'url': 'https://github.com/advisories/GHSA-j2r6-2m5c-vgh5'}]
references: [{'text': 'https://github.com/RustCrypto/stream-ciphers/pull/64', 'url': 'https://github.com/RustCrypto/stream-ciphers/pull/64'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.2.3
description: The ChaCha20 stream cipher can produce a maximum of 2^32 blocks (~256GB)
before the 32-bit counter overflows. Releases of thechacha20crate prior
to v0.2.3 allow generating keystreams larger than this, including seeking
past the limit. When this occurs, the keystream is duplicated, with failure
modes similar to nonce reuse (i.e. exposure of the XOR of two plaintexts). The v0.2.3 release now panics in this event, rather than exposing the
duplicated keystream. Note this is a "hot fix" solution to the problem
and future releases will pursue returning an error in this case. Users of thechacha20poly1305crate are unaffected by this as this crate
properly asserts the length of the plaintext is less than the maximum allowed
(P_MAXas described in RFC 8439 Section 2.8). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Stack overflow when parsing malicious DNS packet
reported: October  9, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'trust-dns-proto(crates.io)', 'url': '/packages/trust-dns-proto.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20994', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20994'}, {'text': 'GHSA-369h-pjr2-6wrh', 'url': 'https://github.com/advisories/GHSA-369h-pjr2-6wrh'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.3
description: There's a stack overflow leading to a crash when Trust-DNS's parses a
malicious DNS packet. Affected versions of this crate did not properly handle parsing of DNS message
compression (RFC1035 section 4.1.4). The parser could be tricked into infinite
loop when a compression offset pointed back to the same domain name to be
parsed. This allows an attacker to craft a malicious DNS packet which when consumed
with Trust-DNS could cause stack overflow and crash the affected software. The flaw was corrected by trust-dns-proto 0.4.3 and upcoming 0.5.0 release. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: SSL/TLS MitM vulnerability due to insecure defaults
reported: November  5, 2016
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'openssl(crates.io)', 'url': '/packages/openssl.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2016-10931', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10931'}, {'text': 'GHSA-34p9-f4q3-c4r7', 'url': 'https://github.com/advisories/GHSA-34p9-f4q3-c4r7'}]
references: [{'text': 'https://github.com/sfackler/rust-openssl/releases/tag/v0.9.0', 'url': 'https://github.com/sfackler/rust-openssl/releases/tag/v0.9.0'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.9.0
description: All versions of rust-openssl prior to 0.9.0 contained numerous insecure defaults
including off-by-default certificate verification and no API to perform hostname
verification. Unless configured correctly by a developer, these defaults could allow an attacker
to perform man-in-the-middle attacks. The problem was addressed in newer versions by enabling certificate verification
by default and exposing APIs to perform hostname verification. Use theSslConnectorandSslAcceptortypes to take advantage of these new features
(as opposed to the lower-levelSslContexttype). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in string parsing can lead to crashes due to invalid memory access.
reported: June 24, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'simd-json(crates.io)', 'url': '/packages/simd-json.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15550', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15550'}, {'text': 'GHSA-gwfj-pw2x-h6c2', 'url': 'https://github.com/advisories/GHSA-gwfj-pw2x-h6c2'}]
references: [{'text': 'https://github.com/Licenser/simdjson-rs/pull/27', 'url': 'https://github.com/Licenser/simdjson-rs/pull/27'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.1.15
unaffected: <=0.1.13
affected architectures: x86x86_64
description: The affected version of this crate did not guard against accessing memory
beyond the range of its input data. A pointer cast to read the data into
a 256-bit register could lead to a segmentation fault when the end plus
the 32 bytes (256 bit) read would overlap into the next page during string
parsing. This allows an attacker to eventually crash a service. The flaw was corrected by using a padding buffer for the last read from the
input. So that we are we never read over the boundary of the input data. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Panic during initialization of Lazymight trigger undefined behavior
reported: September  1, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'once_cell(crates.io)', 'url': '/packages/once_cell.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16141', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16141'}, {'text': 'GHSA-7j44-fv4x-79g9', 'url': 'https://github.com/advisories/GHSA-7j44-fv4x-79g9'}]
references: [{'text': 'https://github.com/matklad/once_cell/issues/46', 'url': 'https://github.com/matklad/once_cell/issues/46'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0.1
unaffected: <0.2.5
affected functions: Version
once_cell::sync::lazy::deref: <1.0.1, >=0.2.5
once_cell::sync::lazy::force: <1.0.1, >=0.2.5
once_cell::unsync::lazy::deref: <1.0.1, >=0.2.5
once_cell::unsync::lazy::force: <1.0.1, >=0.2.5
description: If during the first dereference of Lazythe initialization function panics,
subsequent dereferences will executestd::hints::unreachable_unchecked. Applications withpanic = "abort"are not affected, as there will be no
subsequent dereferences. Advisory available underCC0-1.0license.
affected_functions: once_cell;;sync;;lazy;;deref
version_of_Affected: <1.0.1, >=0.2.5

---
classification: HIGH
subtitle: Flaw in streaming state reset() functions can create incorrect results.
reported: December 20, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'orion(crates.io)', 'url': '/packages/orion.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2018-20999', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20999'}, {'text': 'GHSA-gffv-5hr2-f9gj', 'url': 'https://github.com/advisories/GHSA-gffv-5hr2-f9gj'}]
references: [{'text': 'https://github.com/brycx/orion/issues/46', 'url': 'https://github.com/brycx/orion/issues/46'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.11.2
description: Affected versions of this crate did not properly reset a streaming state. Resetting a streaming state, without finalising it first, creates incorrect results. The flaw was corrected by not first checking if the state had already been reset, when calling reset(). Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Stack overflow when resolving additional records from MX or SRV null targets
reported: January  6, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'trust-dns-server(crates.io)', 'url': '/packages/trust-dns-server.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35857', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35857'}, {'text': 'GHSA-4cww-f7w5-x525', 'url': 'https://github.com/advisories/GHSA-4cww-f7w5-x525'}]
references: [{'text': 'https://github.com/bluejekyll/trust-dns/issues/980', 'url': 'https://github.com/bluejekyll/trust-dns/issues/980'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.18.1
unaffected: <0.16.0
description: There's a stack overflow leading to a crash and potential DOS when processing
additional records for return of MX or SRV record types from the server. This is only possible when a zone is configured with a null target for MX or SRV records, i.e. '.'. Example effected zone record: Prior to 0.16.0 the additional record processing was not supported by trust-dns-server. There
Are no known issues with upgrading from 0.16 or 0.17 to 0.18.1. The remidy should be to upgrade to
0.18.1. If unable to do so, MX, SRV or other record types with a target to the null type, should be avoided. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Failure to properly verify ed25519 signatures makes any signature valid
reported: May 15, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'libp2p-core(crates.io)', 'url': '/packages/libp2p-core.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2019-15545', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15545'}, {'text': 'GHSA-4q4x-67hx-5mpg', 'url': 'https://github.com/advisories/GHSA-4q4x-67hx-5mpg'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: ^0.7.1>=0.8.1
unaffected: <0.3
description: Affected versions of this crate did not properly verify ed25519 signatures.
Any signature with a correct length was considered valid. This allows an attacker to impersonate any node identity. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Chunk API does not respect align requirement
reported: August 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'chunky(crates.io)', 'url': '/packages/chunky.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-36433', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36433'}, {'text': 'GHSA-qg24-8xj4-gj2h', 'url': 'https://github.com/advisories/GHSA-qg24-8xj4-gj2h'}]
references: [{'text': 'https://github.com/aeplay/chunky/issues/2', 'url': 'https://github.com/aeplay/chunky/issues/2'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: no patched versions
description: Chunk API does not respect the align requirement of types. Unaligned reference can be created with the API, which is an undefined behavior. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use-after-free in BodyStream due to lack of pinning
reported: January 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-http(crates.io)', 'url': '/packages/actix-http.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35901', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35901'}, {'text': 'GHSA-v3j6-xf77-8r9c', 'url': 'https://github.com/advisories/GHSA-v3j6-xf77-8r9c'}]
references: [{'text': 'https://github.com/actix/actix-web/issues/1321', 'url': 'https://github.com/actix/actix-web/issues/1321'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.0-alpha.1
description: Affected versions of this crate did not require the buffer wrapped inBodyStreamto be pinned,
but treated it as if it had a fixed location in memory. This may result in a use-after-free. The flaw was corrected by making the traitMessageBodyrequireUnpinand makingpoll_next()function acceptPin<&mut Self>instead of&mut self. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Links in archives can overwrite any existing file
reported: June 29, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'tar(crates.io)', 'url': '/packages/tar.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20990', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20990'}, {'text': 'GHSA-2367-c296-3mp2', 'url': 'https://github.com/advisories/GHSA-2367-c296-3mp2'}]
references: [{'text': 'https://github.com/alexcrichton/tar-rs/pull/156', 'url': 'https://github.com/alexcrichton/tar-rs/pull/156'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=0.4.16
description: When unpacking a tarball with theunpack_in-family of functions it's intended
that only files within the specified directory are able to be written. Tarballs
with hard links or symlinks, however, can be used to overwrite any file on the
filesystem. Tarballs can contain multiple entries for the same file. A tarball which first
contains an entry for a hard link or symlink pointing to any file on the
filesystem will have the link created, and then afterwards if the same file is
listed in the tarball the hard link will be rewritten and any file can be
rewritten on the filesystem. This has been fixed in https://github.com/alexcrichton/tar-rs/pull/156 and is
published astar0.4.16. Thanks to Max Justicz for discovering this and
emailing about the issue! Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: MisbehavingHandleLikeimplementation can lead to memory safety violation
reported: August 31, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'crayon(crates.io)', 'url': '/packages/crayon.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35889', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35889'}, {'text': 'GHSA-m833-jv95-mfjh', 'url': 'https://github.com/advisories/GHSA-m833-jv95-mfjh'}]
references: [{'text': 'https://github.com/shawnscode/crayon/issues/87', 'url': 'https://github.com/shawnscode/crayon/issues/87'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Unsafe code inObjectPoolhas time-of-check to time-of-use (TOCTOU) bug that
can eventually lead to a memory safety violation.ObjectPoolandHandlePoolimplicitly assumes thatHandleLiketrait methods are pure, i.e., they always
return the same value. However, this assumption is unsound sinceHandleLikeis a safe, public trait that allows a custom implementation. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: An integer underflow could lead to panic
reported: June 21, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'untrusted(crates.io)', 'url': '/packages/untrusted.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20989', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20989'}, {'text': 'GHSA-wq8f-46ww-6c2h', 'url': 'https://github.com/advisories/GHSA-wq8f-46ww-6c2h'}]
references: [{'text': 'https://github.com/briansmith/untrusted/pull/20', 'url': 'https://github.com/briansmith/untrusted/pull/20'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.2
description: A mistake in error handling in untrusted before 0.6.2 could lead to an integer
underflow and panic if a user of the crate didn't properly check for errors
returned by untrusted. Combination of these two programming errors (one in untrusted and another by
user of this crate) could lead to a panic and maybe a denial of service of
affected software. The error in untrusted is fixed in release 0.6.2 released 2018-06-21. It's also
advisable that users of untrusted check for their sources for cases where errors
returned by untrusted are not handled correctly. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Uncontrolled recursion leads to abort in deserialization
reported: September 17, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'yaml-rust(crates.io)', 'url': '/packages/yaml-rust.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20993', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20993'}, {'text': 'GHSA-hv87-47h9-jcvq', 'url': 'https://github.com/advisories/GHSA-hv87-47h9-jcvq'}]
references: [{'text': 'https://github.com/chyh1990/yaml-rust/pull/109', 'url': 'https://github.com/chyh1990/yaml-rust/pull/109'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.1
description: Affected versions of this crate did not prevent deep recursion while
deserializing data structures. This allows an attacker to make a YAML file with deeply nested structures
that causes an abort while deserializing it. The flaw was corrected by checking the recursion depth. Note:clap 2.33is not affected by this because it usesyaml-rustin a way that doesn't trigger the vulnerability. More specifically: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Improper uniqueness verification of signature threshold
reported: July  9, 2020
issued: October  1, 2020(last modified: October 19, 2021)
package: {'name': 'tough(crates.io)', 'url': '/packages/tough.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-15093', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15093'}, {'text': 'GHSA-5q2r-92f9-4m49', 'url': 'https://github.com/advisories/GHSA-5q2r-92f9-4m49'}]
references: [{'text': 'https://github.com/awslabs/tough/security/advisories/GHSA-5q2r-92f9-4m49', 'url': 'https://github.com/awslabs/tough/security/advisories/GHSA-5q2r-92f9-4m49'}]
related: CVE-2020-6174
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N
patched: >=0.7.1
description: The tough library, prior to 0.7.1, does not properly verify the uniqueness of
keys in the signatures provided to meet the threshold of cryptographic
signatures. It allows someone with access to a valid signing key to create
multiple valid signatures in order to circumvent TUF requiring a minimum
threshold of unique keys before the metadata is considered valid. AWS would like to thank Erick Tryzelaar of the Google Fuchsia Team for
reporting this issue. A fix is available in version 0.7.1. CVE-2020-6174 is assigned to the same issue in the TUF reference
implementation. If you have any questions or comments about this advisory, contact AWS Security
at aws-security@amazon.com. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Flaw in CBOR deserializer allows stack overflow
reported: October  3, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'serde_cbor(crates.io)', 'url': '/packages/serde_cbor.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2019-25001', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25001'}, {'text': 'GHSA-xr7r-88qv-q7hm', 'url': 'https://github.com/advisories/GHSA-xr7r-88qv-q7hm'}]
references: [{'text': 'https://github.com/pyfisch/cbor/releases/tag/v0.10.2', 'url': 'https://github.com/pyfisch/cbor/releases/tag/v0.10.2'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.10.2
description: Affected versions of this crate did not properly check if semantic tags were nested excessively during deserialization. This allows an attacker to craft small (< 1 kB) CBOR documents that cause a stack overflow. The flaw was corrected by limiting the allowed number of nested tags. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Crash causing Denial of Service attack
reported: April 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2020-1967', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1967'}, {'text': 'GHSA-jq65-29v4-4x35', 'url': 'https://github.com/advisories/GHSA-jq65-29v4-4x35'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20200421.txt', 'url': 'https://www.openssl.org/news/secadv/20200421.txt'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.9
unaffected: <111.6
description: Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3
handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the
"signature_algorithms_cert" TLS extension. The crash occurs if an invalid or unrecognised signature
algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of
Service attack. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Relies on undefined behavior ofchar::from_u32_unchecked
reported: April 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'os_str_bytes(crates.io)', 'url': '/packages/os_str_bytes.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35865', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35865'}, {'text': 'GHSA-q948-x8rf-888m', 'url': 'https://github.com/advisories/GHSA-q948-x8rf-888m'}]
references: [{'text': 'https://github.com/dylni/os_str_bytes/pull/1', 'url': 'https://github.com/dylni/os_str_bytes/pull/1'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.0
affected oses: windows
description: The Windows implementation of this crate relied on the behavior ofstd::char::from_u32_uncheckedwhen its safety clause is violated.
Even though this worked with Rust versions up to 1.42 (at least),
that behavior could change with any new Rust version, possibly leading
a security issue. The flaw was corrected in version 2.0.0. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Use after free in ArcIntern::drop
reported: May 28, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'internment(crates.io)', 'url': '/packages/internment.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35874', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35874'}, {'text': 'GHSA-96w3-p368-4h8c', 'url': 'https://github.com/advisories/GHSA-96w3-p368-4h8c'}]
references: [{'text': 'https://github.com/droundy/internment/issues/11', 'url': 'https://github.com/droundy/internment/issues/11'}]
cvss score: 8.1HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
unaffected: <0.3.12
affected functions: Version
internment::arcintern::drop: >=0.3.12
description: ArcIntern::drophas a race condition where it can release memory
which is about to get another user. The new user will get a reference
to freed memory. This was fixed by serializing access to an interned object while it
is being deallocated. Versions prior to 0.3.12 used stronger locking which avoided the problem. Advisory available underCC0-1.0license.
affected_functions: internment;;arcintern;;drop
version_of_Affected: >=0.3.12

---
classification: HIGH
subtitle: Multiple soundness issues in Chunk and InlineArray
reported: September  6, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'sized-chunks(crates.io)', 'url': '/packages/sized-chunks.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-25791', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25791'}, {'text': 'CVE-2020-25792', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25792'}, {'text': 'CVE-2020-25793', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25793'}, {'text': 'CVE-2020-25794', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25794'}, {'text': 'CVE-2020-25795', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25795'}, {'text': 'CVE-2020-25796', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25796'}, {'text': 'GHSA-64gv-qg2v-vxv6', 'url': 'https://github.com/advisories/GHSA-64gv-qg2v-vxv6'}, {'text': 'GHSA-9p9m-9xww-qjcx', 'url': 'https://github.com/advisories/GHSA-9p9m-9xww-qjcx'}, {'text': 'GHSA-fqpx-cq8x-9wp4', 'url': 'https://github.com/advisories/GHSA-fqpx-cq8x-9wp4'}, {'text': 'GHSA-mp6f-p9gp-vpj9', 'url': 'https://github.com/advisories/GHSA-mp6f-p9gp-vpj9'}, {'text': 'GHSA-rfgg-vccr-m46m', 'url': 'https://github.com/advisories/GHSA-rfgg-vccr-m46m'}, {'text': 'GHSA-x54v-qxxr-93qc', 'url': 'https://github.com/advisories/GHSA-x54v-qxxr-93qc'}]
references: [{'text': 'https://github.com/bodil/sized-chunks/issues/11', 'url': 'https://github.com/bodil/sized-chunks/issues/11'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.3
description: Chunk: InlineArray: Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Large cookie Max-Age values can cause a denial of service
reported: May  6, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'cookie(crates.io)', 'url': '/packages/cookie.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-18589', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18589'}, {'text': 'GHSA-vjrq-cg9x-rfjp', 'url': 'https://github.com/advisories/GHSA-vjrq-cg9x-rfjp'}]
references: [{'text': 'https://github.com/alexcrichton/cookie-rs/pull/86', 'url': 'https://github.com/alexcrichton/cookie-rs/pull/86'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: <0.6.0^0.6.2>=0.7.6
description: Affected versions of this crate use thetimecrate and the methodDuration::secondsto parse theMax-Ageduration cookie setting. This method
will panic if the value is greater than 2^64/1000 and less than or equal to
2^64, which can result in denial of service for a client or server. This flaw was corrected by explicitly checking for theMax-Agebeing in this
integer range and clamping the value to the maximum duration value. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Uncontrolled search path element vulnerability in rustdoc plugins
reported: July  5, 2018
issued: October  1, 2020
package: {'name': 'rustdoc', 'url': '/packages/rustdoc.html'}
type: Vulnerability
categories: ['code-execution']
references: [{'text': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/4ybxYLTtXuM', 'url': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/4ybxYLTtXuM'}]
cvss score: 7.8HIGH
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >1.27.0
description: Rustdoc, if not passed the--plugin-pathargument, defaults to/tmp/rustdoc/plugins./tmpis world-writable on many systems, and so an
attacker could craft a malicious plugin, place it in that directory, and the
victim would end up executing their code. This only occurs when the--pluginargument is also passed. If you're not using that argument, then
the loading, and therefore the bug, will not happen. Because this feature is very difficult to use, and has been deprecated for
almost a year2with no comments on its usage, we don't expect this to
affect many users. For more details, read on. Rustdoc has a "plugins" feature that lets you extend rustdoc. To write a
plugin, you create a library with a specific exposed symbol. You instruct
rustdoc to use this plugin, and it will load it, and execute the function as
a callback to modify rustdoc's AST. This feature is quite hard to use, because the function needs to take as
input and return as output Rustdoc's AST type. The Rust project does not ship
a copy oflibrustdocto end users, and so they would have to synthesize
this type on their own. Furthermore, Rust's ABI is unstable, and so
dynamically loading a plugin is only guaranteed to work if the plugin is
compiled with the same compiler revision as the rustdoc that you're using.
Beyond that, the feature and how to use it are completely undocumented. Given all of this, we're not aware of any usage of plugins in the wild,
though the functionality still exists in the codebase. If you pass the--pluginsparameter, let's say with "foo", anddo notpass the--plugin-pathparameter, rustdoc will look for the "foo" plugin
in /tmp/rustdoc/plugins. Given that /tmp is world-writable on many systems,
an attacker with access to your machine could place a maliciously crafted
plugin into /tmp/rustdoc/plugins, and rustdoc would then load the plugin,
and execute the attacker's callback, running arbitrary Rust code as your
user instead of theirs. This functionality was introduced into rustdoc on December 31, 2013, in commit
14f59e890207f3b7a70bcfffaea7ad88656041113. That change was to rename/tmp/rustdoc_ng/pluginsto/tmp/rustdoc/plugins; The addition of this
search path generally came with the first commit to this iteration of rustdoc,
on September 22, 2013, in commit 7b24efd6f333620ed2559d70b32da8f6f99573854. To prevent this bug from happening on any version of Rust, you can always
pass the--plugin-pathflag to control the path. This only applies if
you use the--pluginflag in the first place. For Rust 1.27, we'll be releasing a 1.27.1 on Tuesday with the fix, which
consists of requiring--plugin-pathto be passed whenever--pluginis passed. We will not be releasing our own fixes for previous versions of Rust, given
the low severity and impact of this bug. The patch to fix 1.27 should be
trivially applicable to previous versions, as this code has not changed in
a very long time. The patch is included at the end of this email. If you
need assistance patching an older version of Rust on your own, please reach
out to Steve Klabnik, st...@steveklabnik.com, and he'll be happy to help. On beta and nightly we will be removing plugins entirely. Thanks to Red Hat Product Security, which found this bug. And specifically to
Josh Stone, who took their findings and reported it to us in accordance with
our security policy https://www.rust-lang.org/security.html, as well as providing
feedback on the patch itself. You can find their bug at5. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: proc-macro-error is unmaintained
reported: September  1, 2024
issued: September  5, 2024
package: {'name': 'proc-macro-error(crates.io)', 'url': '/packages/proc-macro-error.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20', 'url': 'https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20'}]
patched: no patched versions
description: proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email. proc-macro-error also depends onsyn 1.x, which may be bringing duplicate dependencies into dependant build trees. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: XmpFile::closecan trigger UB
reported: July 26, 2024
issued: July 26, 2024
package: {'name': 'xmp_toolkit(crates.io)', 'url': '/packages/xmp_toolkit.html'}
type: INFOUnsound
keywords: []
references: [{'text': 'https://github.com/adobe/xmp-toolkit-rs/issues/233', 'url': 'https://github.com/adobe/xmp-toolkit-rs/issues/233'}]
patched: >=1.9.0
affected functions: Version
xmp_toolkit::xmpfile::close: <1.9.0
description: Affected versions of the crate failed to catch C++ exceptions raised within theXmpFile::closefunction. If such an exception occured, it would trigger undefined behavior, typically a process abort. This is best demonstrated inissue #230, where a race condition causes theclosecall to fail due to file I/O errors. This was fixed inPR #232(released as crate version 1.9.0), which now safely handles the exception. For backward compatibility, the existing API ignores the error. A new APIXmpFile::try_closewas added to allow callers to receive and process the error result. Users of all prior versions ofxmp_toolkitare encouraged to update to version 1.9.0 to avoid undefined behavior. Advisory available underCC0-1.0license.
affected_functions: xmp_toolkit;;xmpfile;;close
version_of_Affected: <1.9.0

---
classification: INFO
subtitle: The kstring integration in gix-attributes is unsound
reported: July 24, 2024
issued: July 25, 2024
package: {'name': 'gix-attributes(crates.io)', 'url': '/packages/gix-attributes.html'}
type: INFOUnsound
references: [{'text': 'https://github.com/Byron/gitoxide/issues/1460', 'url': 'https://github.com/Byron/gitoxide/issues/1460'}]
patched: >=0.22.3
description: gix-attributes(instate::ValueRef) unsafely creates a&strfrom a&[u8]containing non-UTF8 data, with the justification that so long as nothing reads the&strand relies on it being UTF-8 in the&str, there is no UB: The problem is that the non-UTF8strisexposed to outside code: first to thekstringcrate itself, which requires UTF-8 in its documentation and may have UB as a consequence of this, but also toserde, where it propagates to e.g.serde_json,serde_yaml, etc., where the same problems occur. This is not sound, and it could cause further UB down the line in these places that can view the&str. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: The cratezip_nexthas been renamed tozip.
reported: April 20, 2024
issued: April 24, 2024
package: {'name': 'zip_next(crates.io)', 'url': '/packages/zip_next.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/zip-rs/zip/issues/446', 'url': 'https://github.com/zip-rs/zip/issues/446'}]
patched: no patched versions
description: Please switch to the new name.zip_nextwill receive no further releases. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rsa-exportis unmaintained
reported: April  6, 2024
issued: April 12, 2024
package: {'name': 'rsa-export(crates.io)', 'url': '/packages/rsa-export.html'}
type: INFOUnmaintained
references: [{'text': 'https://crates.io/crates/rsa-export/0.3.3', 'url': 'https://crates.io/crates/rsa-export/0.3.3'}, {'text': 'https://gitlab.com/smallglitch/rsa-export/-/commit/e29f17170d655a6f62eca8bf1f64ef0ce5807058', 'url': 'https://gitlab.com/smallglitch/rsa-export/-/commit/e29f17170d655a6f62eca8bf1f64ef0ce5807058'}]
patched: no patched versions
description: This crate has been deprecated in favour of using the native support for exporting RSA keys into the standard PEM format.Seedocs.rs documentation. In addition to that, the operations in this crate (arithmetic and Base64 encoding) are not done in constant-time,
potentiallyexposing the user to sidechannel attacks. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: libp2p-tokio-socks5is unmaintained
reported: April  5, 2024
issued: April 12, 2024
package: {'name': 'libp2p-tokio-socks5(crates.io)', 'url': '/packages/libp2p-tokio-socks5.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/comit-network/rust-libp2p-tokio-socks5/commit/e1fdc92ca69ffd254824ab80fbad5660f4aac911', 'url': 'https://github.com/comit-network/rust-libp2p-tokio-socks5/commit/e1fdc92ca69ffd254824ab80fbad5660f4aac911'}]
patched: no patched versions
description: Note the repository was archived without an issue so we link directly
to the commit that marked the repository as unmaintained. To the best of the original authors knowledge the crate has no
vulnerabilities as of the last release, it is just unmaintained due to
laziness - new maintainer welcome. Advisory available underCC-BY-4.0license.

    
      
      
          Source:https://github.com/comit-network/rust-libp2p-tokio-socks5/commit/e1fdc92ca69ffd254824ab80fbad5660f4aac911

---
classification: INFO
subtitle: Puccinier is unmainted.
reported: March 31, 2024
issued: March 31, 2024
package: {'name': 'puccinier(crates.io)', 'url': '/packages/puccinier.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/catppuccin/toolbox/issues/66', 'url': 'https://github.com/catppuccin/toolbox/issues/66'}]
patched: no patched versions
description: The tool has been deprecated in favor of Catppuccin's new tool,whiskers(crates.io). Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: yaml-rust is unmaintained.
reported: March 20, 2024
issued: March 25, 2024
package: {'name': 'yaml-rust(crates.io)', 'url': '/packages/yaml-rust.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rustsec/advisory-db/issues/1921', 'url': 'https://github.com/rustsec/advisory-db/issues/1921'}]
patched: no patched versions
description: The maintainer seemsunreachable. Many issues and pull requests have been submitted over the years
without anyresponse. Consider switching to the actively maintainedyaml-rust2fork of the original project: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: hpackis unmaintained
reported: September 15, 2023
issued: March  6, 2024
package: {'name': 'hpack(crates.io)', 'url': '/packages/hpack.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/mlalic/hpack-rs/issues/8', 'url': 'https://github.com/mlalic/hpack-rs/issues/8'}]
patched: no patched versions
description: Thehpackcrate is no longer maintained. Consider usingfluke-hpackorhttlib-huffman. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Non-idiomatic use of iterators leads to use after free
reported: February 28, 2024
issued: February 28, 2024(last modified: April 11, 2024)
package: {'name': 'cassandra-cpp(crates.io)', 'url': '/packages/cassandra-cpp.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2024-27284', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27284'}, {'text': 'GHSA-x9xc-63hg-vcfq', 'url': 'https://github.com/advisories/GHSA-x9xc-63hg-vcfq'}]
references: [{'text': 'https://github.com/Metaswitch/cassandra-rs/security/advisories/GHSA-x9xc-63hg-vcfq', 'url': 'https://github.com/Metaswitch/cassandra-rs/security/advisories/GHSA-x9xc-63hg-vcfq'}]
patched: >=3.0.0
description: Code that attempts to use an item (e.g., a row) returned by an iterator after the iterator has advanced to the next item will be accessing freed memory and experience undefined behaviour. Code that uses the item and then advances the iterator is unaffected. This problem has always existed. This is a use-after-free bug, so it's rated high severity. If your code uses a pre-3.0.0 version of cassandra-rs, and uses an item returned by a cassandra-rs iterator after callingnext()on that iterator, then it is vulnerable. However, such code will almost always fail immediately - so we believe it is unlikely that any code using this pattern would have reached production. For peace of mind, we recommend you upgrade anyway. The problem has been fixed in version 3.0.0 (commit 299e6ac50f87eb2823a373baec37b590a74994ee). Users should upgrade to ensure their code cannot use the problematic pattern. There is an upgrade guide in the project README. Ensure all usage fits the expected pattern. For example, useget_first_row()rather than an iterator, or completely process an item before advancing the iterator withnext(). Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: safemem is unmaintained
reported: February 14, 2023
issued: February 22, 2024(last modified: March  4, 2024)
package: {'name': 'safemem(crates.io)', 'url': '/packages/safemem.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/abonander/safemem', 'url': 'https://github.com/abonander/safemem'}]
patched: no patched versions
description: The latest crates.io release was in 2019. The repository has been archived by the author. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: filesystem-rs may be implicitly unmaintained
reported: January 25, 2024
issued: February 18, 2024
package: {'name': 'filesystem(crates.io)', 'url': '/packages/filesystem.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/iredelmeier/filesystem-rs/pull/29', 'url': 'https://github.com/iredelmeier/filesystem-rs/pull/29'}]
patched: no patched versions
description: The last release was over 5 years ago, and the last commit was over 4 years ago. The maintainer(s) have not responded to a pull request to update dependencies that are themselves unmaintained, and which poses the question of maintenance. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: generational-arenais unmaintained
reported: February 11, 2024
issued: February 18, 2024
package: {'name': 'generational-arena(crates.io)', 'url': '/packages/generational-arena.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/fitzgen/generational-arena/issues/55', 'url': 'https://github.com/fitzgen/generational-arena/issues/55'}]
patched: no patched versions
description: Thegenerational-arenacrate's repository has been archived and is no longer maintained. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Use-after-free when setting the locale
reported: January 19, 2024
issued: January 23, 2024(last modified: February 10, 2024)
package: {'name': 'rust-i18n-support(crates.io)', 'url': '/packages/rust-i18n-support.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-c8v3-jhv9-4ppc', 'url': 'https://github.com/advisories/GHSA-c8v3-jhv9-4ppc'}]
references: [{'text': 'https://github.com/longbridgeapp/rust-i18n/issues/71', 'url': 'https://github.com/longbridgeapp/rust-i18n/issues/71'}, {'text': 'https://github.com/longbridgeapp/rust-i18n/pull/72', 'url': 'https://github.com/longbridgeapp/rust-i18n/pull/72'}, {'text': 'https://github.com/longbridgeapp/rust-i18n/releases/tag/v3.0.1', 'url': 'https://github.com/longbridgeapp/rust-i18n/releases/tag/v3.0.1'}]
patched: >=3.0.1
unaffected: <3.0.0
affected functions: Version
rust_i18n_support::atomicstr::as_str: <3.0.1, >=3.0.0
description: Version 3.0.0 introduced anAtomicStrtype, that is used to store the current locale.
It stores the locale as a raw pointer to anArc<String>.
The locale can be read withAtomicStr::as_str().AtomicStr::as_str()does not increment the usage counter of theArc. If the locale is changed in one thread, another thread can have a stale -- possibly already freed --
reference to the stored string. Advisory available underCC0-1.0license.
affected_functions: rust_i18n_support;;atomicstr;;as_str
version_of_Affected: <3.0.1, >=3.0.0

---
classification: INFO
subtitle: Unsound sending of non-Send types across threads
reported: January  7, 2024
issued: January 22, 2024(last modified: February 10, 2024)
package: {'name': 'threadalone(crates.io)', 'url': '/packages/threadalone.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-w59h-378f-2frm', 'url': 'https://github.com/advisories/GHSA-w59h-378f-2frm'}]
references: [{'text': 'https://github.com/cr0sh/threadalone/issues/1', 'url': 'https://github.com/cr0sh/threadalone/issues/1'}]
patched: >=0.2.1
description: Affected versions can run theDropimpl of a non-Send type on a different
thread than it was created on. The flaw occurs when a stderr write performed by thethreadalonecrate fails,
for example because stderr is redirected to a location on a filesystem that is
full, or because stderr is a pipe that has been closed by the reader. Dropping a non-Send type on the wrong thread is unsound. If used with a type
such as a pthread-basedMutexGuard,the consequence is undefined
behavior. If used withRc, there would be a data race on the
reference count, which is likewise undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cosmwasmis unmaintained
reported: January 20, 2024
issued: January 21, 2024
package: {'name': 'cosmwasm(crates.io)', 'url': '/packages/cosmwasm.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/CosmWasm/cosmwasm/issues/1430', 'url': 'https://github.com/CosmWasm/cosmwasm/issues/1430'}]
patched: no patched versions
description: The cratecosmwasmisnot used anymoresince spring 2020.
The functionality was split in multiple different crates, such as the standard librarycosmwasm-stdand the virtual machinecosmwasm-vm. An overview can be found in thecosmwasm repository. If you have this crate in your dependency tree, this is very likely by mistake and should be corrected. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Potential stack use-after-free inInstrumented::into_inner
reported: October 19, 2023
issued: January 13, 2024(last modified: February 10, 2024)
package: {'name': 'tracing(crates.io)', 'url': '/packages/tracing.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-8f24-6m29-wm2r', 'url': 'https://github.com/advisories/GHSA-8f24-6m29-wm2r'}]
references: [{'text': 'https://github.com/tokio-rs/tracing/pull/2765', 'url': 'https://github.com/tokio-rs/tracing/pull/2765'}]
patched: >=0.1.40
unaffected: <=0.1.37
affected functions: Version
tracing::instrument::instrumented::into_inner: >=0.1.38<0.1.40
description: The implementation of theInstrumented::into_innermethod in affected
versions of this crate contains undefined behavior due to incorrect use ofstd::mem::forgetThe function creates*constpointers toself, callsmem::forget(self), and then moves values out of those
pointers usingstd::ptr::read. However, themem::forgetdocumentationstates: This means that these pointers are no longer valid. This could result in a stack
use-after-free if LLVM chooses to reuseself's stack slot for a rebinding
after the call tostd::mem::forget. This undefined behavior has not been observed to cause miscompilation as of Rust
1.73.0. However, any use of this method with the affected versions oftracingare unsound. The flaw was corrected in commit20a1762(PR #2765) by replacing the use ofstd::mem::forgetwithstd::mem::ManuallyDrop, ensuring that the stack slot
is not reused and the pointers remain valid when they are read. The fix is
published intracingv0.1.40. Affected versions have been yanked from
crates.io. Thanks toTaylor CramerandManish Goregaokarfor finding and correcting
this issue! Advisory available underCC0-1.0license.
affected_functions: tracing;;instrument;;instrumented;;into_inner
version_of_Affected: >=0.1.38<0.1.40

---
classification: INFO
subtitle: Unsound use of str::from_utf8_unchecked on bytes which are not UTF-8
reported: January 13, 2024
issued: January 13, 2024(last modified: February 10, 2024)
package: {'name': 'ferris-says(crates.io)', 'url': '/packages/ferris-says.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-v363-rrf2-5fmj', 'url': 'https://github.com/advisories/GHSA-v363-rrf2-5fmj'}]
references: [{'text': 'https://github.com/rust-lang/ferris-says/pull/21', 'url': 'https://github.com/rust-lang/ferris-says/pull/21'}]
patched: >=0.3.1
unaffected: <=0.1.2
description: Affected versions receive a&[u8]from the caller through a safe API, and pass
it directly to the unsafestr::from_utf8_uncheckedfunction. The behavior offerris_says::sayis undefined if the bytes from the caller
don't happen to be valid UTF-8. The flaw was corrected inferris-says#21by using the safestr::from_utf8instead, and returning an error on invalid input. However this fix has not yet
been published to crates.io as a patch version for 0.2. Separately,ferris-says#32has introduced a different API for version 0.3
which accepts input as&strrather than&[u8], so is unaffected by this bug. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cpythonis unmaintained
reported: November 14, 2023
issued: December 20, 2023
package: {'name': 'cpython(crates.io)', 'url': '/packages/cpython.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dgrunwald/rust-cpython/commit/e815555', 'url': 'https://github.com/dgrunwald/rust-cpython/commit/e815555'}, {'text': 'https://github.com/dgrunwald/rust-cpython/issues/265', 'url': 'https://github.com/dgrunwald/rust-cpython/issues/265'}, {'text': 'https://github.com/dgrunwald/rust-cpython/issues/294', 'url': 'https://github.com/dgrunwald/rust-cpython/issues/294'}]
patched: no patched versions
description: Thecpythoncrate and the underlyingpython3-sysandpython27-syscrates have been marked asno longer actively maintainedby the developer. There are also open issues for unsound code that is currently in these crates: Thepyo3crate is actively maintained. Preliminary support for Python 3.12 was added in version 0.19.2, and version 0.20.0 was released with full support for Python 3.12. Both versions implement string functions correctly on big-endian architectures. The endianness issue affecting thecpythoncrate was fixed in recent versions ofpyo3. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unaligned write of u64 on 32-bit and 16-bit platforms
reported: December 20, 2023
issued: December 20, 2023(last modified: February 10, 2024)
package: {'name': 'unsafe-libyaml(crates.io)', 'url': '/packages/unsafe-libyaml.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-r24f-hg58-vfrw', 'url': 'https://github.com/advisories/GHSA-r24f-hg58-vfrw'}]
references: [{'text': 'https://github.com/dtolnay/unsafe-libyaml/issues/21', 'url': 'https://github.com/dtolnay/unsafe-libyaml/issues/21'}]
patched: >=0.2.10
description: Affected versions allocate memory using the alignment ofusizeand write data
to it of typeu64, without usingcore::ptr::write_unaligned. In platforms
with sub-64bit alignment forusize(including wasm32 and x86) these writes
are insufficiently aligned some of the time. If using an ordinary optimized standard library, the bug exhibits Undefined
Behavior so may or may not behave in any sensible way, depending on
optimization settings and hardware and other things. If using a Rust standard
library built with debug assertions enabled, the bug manifests deterministically
in a crash (non-unwinding panic) saying"ptr::write requires that the pointer
argument is aligned and non-null". No 64-bit platform is impacted by the bug. The flaw was corrected by allocating with adequately high alignment on all
platforms. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: opensslX509StoreRef::objectsis unsound
reported: November 23, 2023
issued: November 28, 2023(last modified: February 10, 2024)
package: {'name': 'openssl(crates.io)', 'url': '/packages/openssl.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-xphf-cx8h-7q9g', 'url': 'https://github.com/advisories/GHSA-xphf-cx8h-7q9g'}]
references: [{'text': 'https://github.com/sfackler/rust-openssl/issues/2096', 'url': 'https://github.com/sfackler/rust-openssl/issues/2096'}]
patched: >=0.10.60
affected functions: Version
openssl::x509::store::x509storeref::objects: <0.10.60, >=0.10.29
description: This function returned a shared reference into an OpenSSL datastructure but did not account for interior mutability. OpenSSL may modify the data behind this reference, meaning accesses can race and the reference is unsound. Use of this function should be replaced withX509StoreRef::all_certificates. Advisory available underCC0-1.0license.
affected_functions: openssl;;x509;;store;;x509storeref;;objects
version_of_Affected: <0.10.60, >=0.10.29

---
classification: INFO
subtitle: fehleris unmaintained; useculpainstead
reported: October 12, 2023
issued: October 14, 2023
package: {'name': 'fehler(crates.io)', 'url': '/packages/fehler.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/withoutboats/fehler/issues/66', 'url': 'https://github.com/withoutboats/fehler/issues/66'}]
patched: no patched versions
description: Thefehlercrate is no longer maintained.
Consider usingculpainstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unaligned read of*const *const c_charpointer
reported: September 10, 2023
issued: September 10, 2023(last modified: February 10, 2024)
package: {'name': 'users(crates.io)', 'url': '/packages/users.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-jcr6-4frq-9gjj', 'url': 'https://github.com/advisories/GHSA-jcr6-4frq-9gjj'}]
references: [{'text': 'https://github.com/ogham/rust-users/issues/55', 'url': 'https://github.com/ogham/rust-users/issues/55'}]
patched: no patched versions
description: Affected versions dereference a potentially unaligned pointer. The pointer is
commonly unaligned in practice, resulting in undefined behavior. In some build modes, this is observable as a panic followed by abort. In other
build modes the UB may manifest in some other way, including the possibility of
working correctly in some architectures. The crate is not currently maintained, so a patched version is not available. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Fails to prohibit standard library access prior to initialization of Rust standard library runtime
reported: September 10, 2023
issued: September 10, 2023(last modified: February 10, 2024)
package: {'name': 'inventory(crates.io)', 'url': '/packages/inventory.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-ghc8-5cgm-5rpf', 'url': 'https://github.com/advisories/GHSA-ghc8-5cgm-5rpf'}]
references: [{'text': 'https://github.com/dtolnay/inventory/pull/43', 'url': 'https://github.com/dtolnay/inventory/pull/43'}]
patched: >=0.2.0
description: Affected versions allow arbitrary caller-provided code to execute before the
lifetime ofmain. If the caller-provided code accesses particular pieces of the standard library
that require an initialized Rust runtime, such asstd::ioorstd::thread,
these may not behave as documented. Panics are likely; UB is possible. The flaw was corrected by enforcing that only code written within theinventorycrate, which is guaranteed not to access runtime-dependent parts of
the standard library, runs beforemain. Caller-provided code is restricted to
running at compile time. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Exposes reference to non-Sync data to an arbitrary thread
reported: September 10, 2023
issued: September 10, 2023(last modified: February 10, 2024)
package: {'name': 'inventory(crates.io)', 'url': '/packages/inventory.html'}
type: INFOUnsound
categories: ['thread-safety']
keywords: []
aliases: [{'text': 'GHSA-36xm-35qq-795w', 'url': 'https://github.com/advisories/GHSA-36xm-35qq-795w'}]
references: [{'text': 'https://github.com/dtolnay/inventory/pull/42', 'url': 'https://github.com/dtolnay/inventory/pull/42'}]
patched: >=0.2.0
description: Affected versions do not enforce aSyncbound on the type of caller-provided
value held in the plugin registry. References to these values are made
accessible to arbitrary threads other than the one that constructed them. A caller could use this flaw to submit thread-unsafe data into inventory, then
access it as a reference simultaneously from multiple threads. The flaw was corrected by enforcing that data submitted by the caller into
inventory isSync. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Multiple soundness issues
reported: September  3, 2023
issued: September  3, 2023(last modified: July  2, 2024)
package: {'name': 'lexical(crates.io)', 'url': '/packages/lexical.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-c2hm-mjxv-89r4', 'url': 'https://github.com/advisories/GHSA-c2hm-mjxv-89r4'}]
references: [{'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/102', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/102'}, {'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/101', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/101'}, {'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/95', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/95'}, {'text': 'https://github.com/Alexhuszagh/rust-lexical/issues/104', 'url': 'https://github.com/Alexhuszagh/rust-lexical/issues/104'}]
patched: no patched versions
description: lexicalcontains multiple soundness issues: The crate also has some correctness issues and appears to be unmaintained. For quickly parsing floating-point numbers third-party crates are no longer needed. A fast float parsing algorithm by the author oflexicalhas beenmergedinto libcore. For quickly parsing integers, consideratoiandbtoicrates (100% safe code).atoi_radix10provides even faster parsing, but only with-C target-cpu=native, and at the cost of someunsafe. For formatting integers in a#[no_std]context consider thenumtoacrate. For working with big numbers considernum-bigintandnum-traits. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: dlopen_deriveis unmaintained
reported: July 30, 2023
issued: August 19, 2023
package: {'name': 'dlopen_derive(crates.io)', 'url': '/packages/dlopen_derive.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/szymonwieloch/rust-dlopen/issues/47', 'url': 'https://github.com/szymonwieloch/rust-dlopen/issues/47'}]
patched: no patched versions
description: dlopen_derivehasn't been updated since June 9, 2019. dlopen_derivedepends onquote = "0.6.12"andsyn = "0.15.34". Versions1.0.0of these dependencies were published on August 13, 2019. The0.*versions haven't received updates since. Note thatdlopenis an unmaintained crate from the same repository asdlopen_derive. However, migrating away fromdlopen_deriveimplies migrating away fromdlopen, as well. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: multipart is Unmaintained
reported: April 11, 2023
issued: August 18, 2023
package: {'name': 'multipart(crates.io)', 'url': '/packages/multipart.html'}
type: INFOUnmaintained
patched: no patched versions
description: Themultipartcrate is unmaintained. The author has archived the github
repository. Alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tuiis unmaintained; useratatuiinstead
reported: August  7, 2023
issued: August  7, 2023
package: {'name': 'tui(crates.io)', 'url': '/packages/tui.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/fdehau/tui-rs/issues/654', 'url': 'https://github.com/fdehau/tui-rs/issues/654'}]
patched: no patched versions
description: Thetuicrate is no longer maintained. Consider using theratatuicrate instead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsoundness ininternmethods onintagliosymbol interners
reported: July 26, 2023
issued: July 27, 2023(last modified: July 29, 2023)
package: {'name': 'intaglio(crates.io)', 'url': '/packages/intaglio.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-gch5-hwqf-mxhp', 'url': 'https://github.com/advisories/GHSA-gch5-hwqf-mxhp'}]
references: [{'text': 'https://github.com/artichoke/intaglio/pull/236', 'url': 'https://github.com/artichoke/intaglio/pull/236'}, {'text': 'https://github.com/artichoke/intaglio/issues/235', 'url': 'https://github.com/artichoke/intaglio/issues/235'}, {'text': 'https://github.com/artichoke/intaglio/pull/236', 'url': 'https://github.com/artichoke/intaglio/pull/236'}, {'text': 'https://github.com/artichoke/intaglio/releases/tag/v1.9.0', 'url': 'https://github.com/artichoke/intaglio/releases/tag/v1.9.0'}]
patched: >=1.9.0
affected functions: Version
intaglio::symboltable::intern: <1.9.0
intaglio::bytes::symboltable::intern: <1.9.0
intaglio::cstr::symboltable::intern: <1.9.0, >=1.5.0
intaglio::osstr::symboltable::intern: <1.9.0, >=1.5.0
intaglio::path::symboltable::intern: <1.9.0, >=1.5.0
description: Affected versions of this crate have a stacked borrows violation when creating
references to interned contents. All interner types are affected. The flaw was corrected in version 1.9.0 by reordering move and borrowing
operations and storing interned contents by raw pointer instead of as aBox. Advisory available underCC0-1.0license.
affected_functions: intaglio;;symboltable;;intern
version_of_Affected: <1.9.0

---
classification: INFO
subtitle: implFromMdbValuefor bool is unsound
reported: June 26, 2023
issued: July 18, 2023(last modified: July 29, 2023)
package: {'name': 'lmdb-rs(crates.io)', 'url': '/packages/lmdb-rs.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-f9g6-fp84-fv92', 'url': 'https://github.com/advisories/GHSA-f9g6-fp84-fv92'}]
references: [{'text': 'https://github.com/vhbit/lmdb-rs/issues/67', 'url': 'https://github.com/vhbit/lmdb-rs/issues/67'}]
patched: no patched versions
description: The implementation ofFromMdbValuehave several unsoundness issues. First of all, it allows to reinterpret arbitrary bytes as a bool and could make undefined behavior happen with safe function. Secondly, it allows transmuting pointer without taking memory layout into consideration. The details of reproducing the bug were included in url above. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Misaligned pointer dereference inChunkId::new
reported: June 15, 2023
issued: June 22, 2023(last modified: July  8, 2023)
package: {'name': 'cyfs-base(crates.io)', 'url': '/packages/cyfs-base.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-g753-ghr7-q33w', 'url': 'https://github.com/advisories/GHSA-g753-ghr7-q33w'}]
references: [{'text': 'https://github.com/buckyos/CYFS/issues/275', 'url': 'https://github.com/buckyos/CYFS/issues/275'}]
patched: no patched versions
description: The functionChunkId::newcreates a misaligned pointer by casting mutable pointer ofu8slice which has alignment 1 to the mutable pointer ofu32which has alignment 4, and dereference the misaligned pointer leading UB, which should not be allowed in safe function. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: memoffset allows reading uninitialized memory
reported: June 21, 2023
issued: June 21, 2023(last modified: July  8, 2023)
package: {'name': 'memoffset(crates.io)', 'url': '/packages/memoffset.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-wfg4-322g-9vqv', 'url': 'https://github.com/advisories/GHSA-wfg4-322g-9vqv'}]
references: [{'text': 'https://github.com/Gilnaa/memoffset/issues/24', 'url': 'https://github.com/Gilnaa/memoffset/issues/24'}]
patched: >=0.6.2
affected functions: Version
memoffset::offset_of: <0.6.2
description: memoffset allows attempt of reading data from address0with arbitrary type. This behavior is an undefined behavior because address0tostd::mem::size_of<T>may not have valid bit-pattern withT. Old implementation dereferences uninitialized memory obtained fromstd::mem::align_of. Older implementation prior to it allows using uninitialized data obtained fromstd::mem::uninitializedwith arbitrary type then compute offset by taking the address of field-projection. This may also result in an undefined behavior for "father" that includes (directly or transitively) type thatdoes not allow to be uninitialized. This flaw was corrected by usingstd::ptr::addr_ofinhttps://github.com/Gilnaa/memoffset/pull/50. Advisory available underCC0-1.0license.
affected_functions: memoffset;;offset_of
version_of_Affected: <0.6.2

---
classification: INFO
subtitle: ftp is unmaintained, use suppaftp instead
reported: February 20, 2023
issued: June 14, 2023
package: {'name': 'ftp(crates.io)', 'url': '/packages/ftp.html'}
type: INFOUnmaintained
keywords: []
references: [{'text': 'https://github.com/mattnenterprise/rust-ftp/pull/92', 'url': 'https://github.com/mattnenterprise/rust-ftp/pull/92'}, {'text': 'https://github.com/mattnenterprise/rust-ftp/issues/91', 'url': 'https://github.com/mattnenterprise/rust-ftp/issues/91'}, {'text': 'https://github.com/mattnenterprise/rust-ftp/issues/84', 'url': 'https://github.com/mattnenterprise/rust-ftp/issues/84'}]
patched: no patched versions
description: Theftpcrate is not maintained any more;
usesuppaftpinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Ouroboros is Unsound
reported: June 11, 2023
issued: June 12, 2023(last modified: July  8, 2023)
package: {'name': 'ouroboros(crates.io)', 'url': '/packages/ouroboros.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-87mf-9wg6-ppf8', 'url': 'https://github.com/advisories/GHSA-87mf-9wg6-ppf8'}]
references: [{'text': 'https://github.com/joshua-maros/ouroboros/issues/88', 'url': 'https://github.com/joshua-maros/ouroboros/issues/88'}]
patched: >=0.16.0
description: Ouroboros has a soundness problem, but a fix has been implemented in 0.16.0. In 0.15.0, Ouroboros works internally by creating a struct where all
uses of 'this are replaced by 'static. However, a recent addition to
Miri checks that references passed to functions are valid during the
entire execution of the function, even when those references are
passed inside a struct. This poses an issue for dropping
self-referencing values, as the reference becomes invalid during the
dropping process. Effectively, since self-referencing structs are
not allowed in vanilla Rust, there is no allowance for dropping data
during a function that has also been given a reference to that data.
There's usually no way to pass a and &a to the same function. A fix was attempted, where the struct would be turned in to a raw
byte array and only transformed back into the underlying data type
inside each function. This is allowable as a reference can be
created and die over the body of a function, as long as the
reference was created inside the function. However, this is also
not sound if the original struct contains padding. There is no
way to initialize padding bytes to a known value that Miri will
accept, so when it is cast to an array some of the bytes contain
uninitialized values. This is not acceptable (despite the fact
that these bytes are never read) due to the potential for
optimizations that may read from the uninitialized bytes. Besides
which, this fix does not allow for template or constant parameters
as there is no way to check the size of a templated type without
giving specific, concrete values for the template parameters. The final solution was to use this fix while wrapping the raw byte
array inMaybeUninit<>. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: userscrate is unmaintained
reported: June  1, 2023
issued: June  1, 2023(last modified: August 21, 2023)
package: {'name': 'users(crates.io)', 'url': '/packages/users.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/ogham/rust-users/issues/54', 'url': 'https://github.com/ogham/rust-users/issues/54'}]
patched: no patched versions
description: Theuserscrate hasn't seen any action since 2020-10-08. The developer seemsMIAsince. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tocrypto_secretbox
reported: May 16, 2023
issued: May 16, 2023
package: {'name': 'xsalsa20poly1305(crates.io)', 'url': '/packages/xsalsa20poly1305.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/AEADs/pull/525', 'url': 'https://github.com/RustCrypto/AEADs/pull/525'}]
patched: no patched versions
description: This crate has been forked/renamed fromxsalsa20poly1305tocrypto_secretbox. The new repository location is at: https://github.com/RustCrypto/nacl-compat/tree/master/crypto_secretbox Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tree_magic is Unmaintained
reported: April 11, 2023
issued: April 24, 2023
package: {'name': 'tree_magic(crates.io)', 'url': '/packages/tree_magic.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/aahancoc/tree_magic/issues/16', 'url': 'https://github.com/aahancoc/tree_magic/issues/16'}]
patched: no patched versions
description: Thetree_magiccrate is unmaintained. The author has archived the github
repository. Alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Adverserial use ofmake_bitflags!macro can cause undefined behavior
reported: April 17, 2023
issued: April 23, 2023(last modified: June 13, 2023)
package: {'name': 'enumflags2(crates.io)', 'url': '/packages/enumflags2.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-qvc4-78gw-pv8p', 'url': 'https://github.com/advisories/GHSA-qvc4-78gw-pv8p'}]
references: [{'text': 'https://github.com/meithecatte/enumflags2/releases/tag/v0.7.7', 'url': 'https://github.com/meithecatte/enumflags2/releases/tag/v0.7.7'}]
patched: >=0.7.7
unaffected: <0.7.0
description: The macro relied on an expression of the formEnum::Variantalways being a
variant of the enum. However, it may also be an associated integer constant, in
which case there's no guarantee that the value of said constant consists only of
bits valid for this bitflag type. Thus, code like this could create an invalidBitFlags<Test>, which would cause
iterating over it to trigger undefined behavior. As the debug formatter
internally iterates over the value, it is also affected. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Parsing borsh messages with ZST which are not-copy/clone is unsound
reported: April 12, 2023
issued: April 13, 2023(last modified: September 28, 2023)
package: {'name': 'borsh(crates.io)', 'url': '/packages/borsh.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-fjx5-qpf4-xjf2', 'url': 'https://github.com/advisories/GHSA-fjx5-qpf4-xjf2'}]
references: [{'text': 'https://github.com/near/borsh-rs/issues/19', 'url': 'https://github.com/near/borsh-rs/issues/19'}, {'text': 'https://github.com/near/borsh-rs/pull/136', 'url': 'https://github.com/near/borsh-rs/pull/136'}]
patched: >=1.0.0-alpha.1
description: Affected versions of borsh cause undefined behavior when zero-sized-types (ZST)
are parsed and the Copy/Clone traits are not implemented/derived.
For instance if 1000 instances of a ZST are deserialized, and the ZST is not copy
(this can be achieved through a singleton), then accessing/writing to deserialized
data will cause a segmentation fault. There is currently no way for borsh to read data without also providing a Rust type.
Therefore, if not ZST are used for serialization, then you are not affected by this issue. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsound FFI: Wrong API usage causes write past allocated area
reported: March 22, 2023
issued: April  6, 2023(last modified: June 13, 2023)
package: {'name': 'ntru(crates.io)', 'url': '/packages/ntru.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-fq33-vmhv-48xh', 'url': 'https://github.com/advisories/GHSA-fq33-vmhv-48xh'}]
references: [{'text': 'https://github.com/FrinkGlobal/ntru-rs/issues/8', 'url': 'https://github.com/FrinkGlobal/ntru-rs/issues/8'}]
patched: no patched versions
affected functions: Version
ntru::types::privatekey::export: >=0.4.3
ntru::types::publickey::export: >=0.4.3
description: The following usage causes undefined behavior. When compiled with debug assertions, the code above will trigger aattempt to subtract with overflowpanic before UB occurs.
Other mistakes (e.g. usingEncParamsfrom a different key) may always trigger UB. Likely, older versions of this crate are also affected, but have not been tested. Advisory available underCC0-1.0license.
affected_functions: ntru;;types;;privatekey;;export
version_of_Affected: >=0.4.3

---
classification: INFO
subtitle: Initialisation failure inOnce::try_call_oncecan lead to undefined behaviour for other initialisers
reported: March 31, 2023
issued: April  4, 2023(last modified: June 13, 2023)
package: {'name': 'spin(crates.io)', 'url': '/packages/spin.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-2qv5-7mw5-j3cg', 'url': 'https://github.com/advisories/GHSA-2qv5-7mw5-j3cg'}]
references: [{'text': 'https://github.com/mvdnes/spin-rs/issues/148', 'url': 'https://github.com/mvdnes/spin-rs/issues/148'}]
patched: >=0.9.8
unaffected: <0.9.3
description: Once::try_call_onceis unsound if invoked more than once concurrently and any call fails to initialise successfully. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Gitoxide has renamed its crates.
reported: March 14, 2023
issued: March 25, 2023
package: {'name': 'git-path(crates.io)', 'url': '/packages/git-path.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Byron/gitoxide/pull/741', 'url': 'https://github.com/Byron/gitoxide/pull/741'}]
patched: no patched versions
description: All crates in the gitoxide project have been renamed from git-to
gix-. The git- prefixed crates are no longer being updated. Switch
to using gix-path to continue receiving updates. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Gitoxide has renamed its crates.
reported: March 14, 2023
issued: March 25, 2023
package: {'name': 'git-hash(crates.io)', 'url': '/packages/git-hash.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Byron/gitoxide/pull/741', 'url': 'https://github.com/Byron/gitoxide/pull/741'}]
patched: no patched versions
description: All crates in the gitoxide project have been renamed from git-to
gix-. The git- prefixed crates are no longer being updated. Switch
to using gix-hash to continue receiving updates. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: buf_redux is Unmaintained
reported: January 24, 2023
issued: March 25, 2023
package: {'name': 'buf_redux(crates.io)', 'url': '/packages/buf_redux.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/abonander/buf_redux/issues', 'url': 'https://github.com/abonander/buf_redux/issues'}]
patched: no patched versions
description: Last release was over three years ago. The maintainer(s) have been unreachable to respond to any issues that may or may not include security issues. The repository is now archived and there is no security policy in place to contact the maintainer(s) otherwise. The safety-undocumented unsafe in the crate may or may not be safe to use. The crate also has a current future incompatibility warningbuf_redux/23. The below may or may not provide alternative(s) Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rmp-serdeRawandRawRefunsound
reported: April 13, 2022
issued: March 22, 2023(last modified: June 13, 2023)
package: {'name': 'rmp-serde(crates.io)', 'url': '/packages/rmp-serde.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-255r-3prx-mf99', 'url': 'https://github.com/advisories/GHSA-255r-3prx-mf99'}]
references: [{'text': 'https://github.com/3Hren/msgpack-rust/issues/305', 'url': 'https://github.com/3Hren/msgpack-rust/issues/305'}]
patched: >=1.1.1
description: It was found thatRaw::from_utf8expects valid UTF-8. If invalid UTF-8 is received it can cause the process to crash. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: const-cstr is Unmaintained
reported: March 12, 2023
issued: March 13, 2023
package: {'name': 'const-cstr(crates.io)', 'url': '/packages/const-cstr.html'}
type: INFOUnsound
references: [{'text': 'https://github.com/abonander/const-cstr', 'url': 'https://github.com/abonander/const-cstr'}]
patched: no patched versions
description: Last release was about five years ago. The maintainer(s) have been unreachable to respond to any issues that may or may not include security issues. The repository is now archived and there is no security policy in place to contact the maintainer(s) otherwise. No direct fork exist. The crate violates the safety contract offfi::CStr::from_bytes_with_nul_uncheckedused inConstCStr::as_cstr No interior nul bytes checking is done either by the constructor or the canonical macro to create theConstCStr Additionally the crate may cause runtime panics if statically compiled and ran with any untrusted data that is not nul-terminated. This is however unlikely but the the crate should not be used for untrusted data in context where panic may create a DoS vector. The below may or may not provide alternative(s) Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: encodingis unmaintained
reported: December  5, 2021
issued: March 12, 2023
package: {'name': 'encoding(crates.io)', 'url': '/packages/encoding.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/lifthrasiir/rust-encoding/issues/127', 'url': 'https://github.com/lifthrasiir/rust-encoding/issues/127'}]
patched: no patched versions
description: Last release was on 2016-08-28. Theissueinquiring as to the status of the crate has gone unanswered by the maintainer. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: boxfnonceobsolete with release of Rust 1.35.0
reported: June 20, 2019
issued: March 12, 2023
package: {'name': 'boxfnonce(crates.io)', 'url': '/packages/boxfnonce.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/stbuehler/rust-boxfnonce/commit/058ac7e1a7d732076da9d8a37baa66bcb67758d8', 'url': 'https://github.com/stbuehler/rust-boxfnonce/commit/058ac7e1a7d732076da9d8a37baa66bcb67758d8'}]
patched: no patched versions
description: Thiscommit marks theboxfnoncecrate as obsolete and the GitHub repo has since been archived. The functionality ofboxfnoncehas been added to Rust since 1.35.0. UseBox<dyn FnOnce(...) -> ...>. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: nphysics2d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'nphysics2d(crates.io)', 'url': '/packages/nphysics2d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/nphysics', 'url': 'https://github.com/dimforge/nphysics'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theRapierproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mach is unmaintained
reported: July 14, 2020
issued: March 12, 2023
package: {'name': 'mach(crates.io)', 'url': '/packages/mach.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/fitzgen/mach/issues/63', 'url': 'https://github.com/fitzgen/mach/issues/63'}]
patched: no patched versions
description: Last release was almost 4 years ago. Maintainer(s) seem to be completely unreachable. These may or may not be suitable alternatives and have not been vetted in any way; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: ncollide2d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'ncollide2d(crates.io)', 'url': '/packages/ncollide2d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/ncollide', 'url': 'https://github.com/dimforge/ncollide'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theParryproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: out_reference::Out::from_rawshould beunsafe
reported: January 20, 2021
issued: March 12, 2023(last modified: June 13, 2023)
package: {'name': 'out-reference(crates.io)', 'url': '/packages/out-reference.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-p7mj-xvxg-grff', 'url': 'https://github.com/advisories/GHSA-p7mj-xvxg-grff'}]
references: [{'text': 'https://github.com/RustyYato/out-ref/issues/1', 'url': 'https://github.com/RustyYato/out-ref/issues/1'}]
patched: >=0.2.0
unaffected: <0.1.0
affected functions: Version
out_reference::out::from_raw: >=0.1.0, <0.2.0
description: Out::from_rawin affected versions allows writing a value to invalid memory address without requiringunsafe. The soundness issue has been addressed by makingOut::from_rawan unsafe function. Advisory available underCC0-1.0license.
affected_functions: out_reference;;out;;from_raw
version_of_Affected: >=0.1.0, <0.2.0

---
classification: INFO
subtitle: nphysics3d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'nphysics3d(crates.io)', 'url': '/packages/nphysics3d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/nphysics', 'url': 'https://github.com/dimforge/nphysics'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theRapierproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: ncollide3d is unmaintained
reported: January 29, 2021
issued: March 12, 2023
package: {'name': 'ncollide3d(crates.io)', 'url': '/packages/ncollide3d.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dimforge/ncollide', 'url': 'https://github.com/dimforge/ncollide'}]
patched: no patched versions
description: The maintainer has advised that this crate is passively-maintained and that it
is being superseded by theParryproject. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: kuchikiis unmaintained
reported: January 21, 2023
issued: March  7, 2023(last modified: May 23, 2023)
package: {'name': 'kuchiki(crates.io)', 'url': '/packages/kuchiki.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/kuchiki-rs/kuchiki/commit/f92e4c047fdc30619555da282ac7ccce1d313aa6', 'url': 'https://github.com/kuchiki-rs/kuchiki/commit/f92e4c047fdc30619555da282ac7ccce1d313aa6'}]
patched: no patched versions
description: Thekuchikirepo was marked as archived inthiscommit. Possible alternatives may include: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: maligned::align_firstcauses incorrect deallocation
reported: March  4, 2023
issued: March  4, 2023(last modified: June 13, 2023)
package: {'name': 'maligned(crates.io)', 'url': '/packages/maligned.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-wm8x-php5-hvq6', 'url': 'https://github.com/advisories/GHSA-wm8x-php5-hvq6'}]
references: [{'text': 'https://github.com/tylerhawkes/maligned/issues/5', 'url': 'https://github.com/tylerhawkes/maligned/issues/5'}]
patched: no patched versions
affected functions: Version
maligned::align_first: *
maligned::align_first_boxed: *
maligned::align_first_boxed_cloned: *
maligned::align_first_boxed_default: *
description: maligned::align_firstmanually allocates with an alignment larger than T, and then usesVec::from_raw_partson that allocation to get aVec<T>. GlobalAlloc::deallocrequires that thelayoutargument must be the same layout that was used to allocate that block of memory. When deallocating,BoxandVecmay not respect the specified alignment and can cause undefined behavior. Advisory available underCC0-1.0license.
affected_functions: maligned;;align_first
version_of_Affected: *

---
classification: INFO
subtitle: Ascii allows out-of-bounds array indexing in safe code
reported: February 25, 2023
issued: February 25, 2023(last modified: June 13, 2023)
package: {'name': 'ascii(crates.io)', 'url': '/packages/ascii.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-mrrw-grhq-86gf', 'url': 'https://github.com/advisories/GHSA-mrrw-grhq-86gf'}]
references: [{'text': 'https://github.com/tomprogrammer/rust-ascii/issues/64', 'url': 'https://github.com/tomprogrammer/rust-ascii/issues/64'}]
patched: >=0.9.3
unaffected: <=0.6.0
description: Affected version of this crate had implementation ofFrom<&mut AsciiStr>for&mut [u8]and&mut str. This can result in out-of-bounds array indexing in safe code. The flaw was corrected in commit8a6c779by removing those impls. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Possible out-of-bounds read in release mode
reported: February 20, 2023
issued: February 25, 2023(last modified: June 13, 2023)
package: {'name': 'partial_sort(crates.io)', 'url': '/packages/partial_sort.html'}
type: INFOUnsound
categories: ['memory-exposure']
keywords: []
aliases: [{'text': 'GHSA-5x36-7567-3cw6', 'url': 'https://github.com/advisories/GHSA-5x36-7567-3cw6'}]
references: [{'text': 'https://github.com/sundy-li/partial_sort/issues/7', 'url': 'https://github.com/sundy-li/partial_sort/issues/7'}]
patched: >=0.2.0
description: Affected versions of this crate were using a debug assertion to validate thelastparameter ofpartial_sort(). This would allow invalid inputs to cause
an out-of-bounds read instead of immediately panicking, when compiled without
debug assertions. All writes are bounds-checked, so the out-of-bounds memory access is read-only.
This also means that the first attempted out-of-bounds write will panic,
limiting the possible reads. The accessible region is further limited by an initial bounds-checked read
at(last / 2) - 1, i.e., it is proportional to the size of the vector. This bug has been fixed in v0.2.0. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Miscompilation in cortex-m-rt 0.7.1 and 0.7.2
reported: February 13, 2023
issued: February 14, 2023(last modified: June 13, 2023)
package: {'name': 'cortex-m-rt(crates.io)', 'url': '/packages/cortex-m-rt.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-xw5j-gv2g-mjm2', 'url': 'https://github.com/advisories/GHSA-xw5j-gv2g-mjm2'}]
references: [{'text': 'https://github.com/rust-embedded/cortex-m/discussions/469', 'url': 'https://github.com/rust-embedded/cortex-m/discussions/469'}]
patched: >=0.7.3
unaffected: <=0.7.0
description: Version 0.7.1 of thecortex-m-rtcrate introduced a regression causing the stack to NOT be eight-byte aligned prior to callingmain(or any other specified entrypoint), violating thestack ABI of AAPCS32, the default ABI used by all Cortex-M targets. This regression is also present in version 0.7.2 of thecortex-m-rtcrate. This regression can cause certain compiler optimizations (which assume the eight-byte alignment) to produce incorrect behavior at runtime. This incorrect behavior has beenobserved in real-world applications. It is advised that ALL users ofv0.7.1andv0.7.2of thecortex-m-rtcrate update to the latest version (v0.7.3), AS SOON AS POSSIBLE.Users ofv0.7.0and prior versions ofcortex-m-rtare not affected by this regression. It will be necessary to rebuild all affected firmware binaries, and flash or deploy the new firmware binaries to affected devices. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tokio::io::ReadHalf<T>::unsplitis Unsound
reported: January 11, 2023
issued: February  3, 2023(last modified: June 13, 2023)
package: {'name': 'tokio(crates.io)', 'url': '/packages/tokio.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-4q83-7cq4-p6wg', 'url': 'https://github.com/advisories/GHSA-4q83-7cq4-p6wg'}]
references: [{'text': 'https://github.com/tokio-rs/tokio/issues/5372', 'url': 'https://github.com/tokio-rs/tokio/issues/5372'}]
patched: >=1.18.5, <1.19.0>=1.20.4, <1.21.0>=1.24.2
unaffected: <0.2.0
description: tokio::io::ReadHalf<T>::unsplitcan violate thePincontract The soundness issue is described in thetokio/issues#5372 Specific set of conditions needed to trigger an issue (a !Unpin type in ReadHalf)
is unusual, combined with the difficulty of making any arbitrary use-after-free
exploitable in Rust without doing a lot of careful alignment of data types in
the surrounding code. Thetokiofeatureio-utilis also required to be enabled to trigger this
soundness issue. Thanks to zachs18 reporting the issue to Tokio team responsibly and taiki-e
and carllerche appropriately responding and fixing the soundness bug. Tokio before 0.2.0 usedfutures0.1 that did not havePin, so it is not
affected by this issue. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: personnummer Input validation error
reported: September  4, 2020
issued: February  2, 2023
package: {'name': 'personnummer(crates.io)', 'url': '/packages/personnummer.html'}
type: INFONotice
aliases: [{'text': 'GHSA-28r9-pq4c-wp3c', 'url': 'https://github.com/advisories/GHSA-28r9-pq4c-wp3c'}]
references: [{'text': 'https://github.com/personnummer/rust/pull/4', 'url': 'https://github.com/personnummer/rust/pull/4'}]
patched: >=3.0.1
description: Swedish personal identity is in the form of YYMMDD-XXXX An issue arises from the regular expression allowing the first three digits in
the last four digits of the personnummer to be 000, which is invalid. To mitigate this without upgrading, a check on the last four digits can be made
to make sure it's not 000x. The affected version should not be relied on without the mitigation to check
that the swedish personal identity number is valid. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: json is unmaintained
reported: February  1, 2022
issued: January 19, 2023(last modified: August 25, 2023)
package: {'name': 'json(crates.io)', 'url': '/packages/json.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maciejhirsz/json-rust/issues/205', 'url': 'https://github.com/maciejhirsz/json-rust/issues/205'}, {'text': 'https://github.com/maciejhirsz/json-rust/issues/196', 'url': 'https://github.com/maciejhirsz/json-rust/issues/196'}]
patched: no patched versions
description: Last release was almost 3 years ago. The maintainer is unresponsive with outstanding issues. One of the outstanding issues includea possible soundness issue. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: parity-util-mem Unmaintained
reported: November 30, 2022
issued: January 16, 2023
package: {'name': 'parity-util-mem(crates.io)', 'url': '/packages/parity-util-mem.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/paritytech/parity-common/pull/696', 'url': 'https://github.com/paritytech/parity-common/pull/696'}, {'text': 'https://github.com/paritytech/parity-common/issues/607', 'url': 'https://github.com/paritytech/parity-common/issues/607'}, {'text': 'https://github.com/paritytech/parity-common/pull/697', 'url': 'https://github.com/paritytech/parity-common/pull/697'}]
patched: no patched versions
description: The crate has been deprecated and will receive no updates with no repository source. The crate hasa warningsurrounding it's use related to global allocator use that may lead to UB. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Cratetwowaydeprecated by the author
reported: May 20, 2021
issued: January 15, 2023(last modified: February  9, 2023)
package: {'name': 'twoway(crates.io)', 'url': '/packages/twoway.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/bluss/twoway', 'url': 'https://github.com/bluss/twoway'}, {'text': 'https://github.com/bluss/twoway/commit/e99b3c718df1117ad7f54c33f6540c8f46cc17dd', 'url': 'https://github.com/bluss/twoway/commit/e99b3c718df1117ad7f54c33f6540c8f46cc17dd'}]
patched: no patched versions
description: The commite99b3c7releasing version 0.2.2 explicitly deprecatestwowayin favour ofmemchrcrate. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Use-after-free due to a lifetime error inVec::into_iter()
reported: January 14, 2022
issued: January 14, 2023(last modified: June 13, 2023)
package: {'name': 'bumpalo(crates.io)', 'url': '/packages/bumpalo.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'GHSA-f85w-wvc7-crwc', 'url': 'https://github.com/advisories/GHSA-f85w-wvc7-crwc'}]
references: [{'text': 'https://github.com/fitzgen/bumpalo/blob/main/CHANGELOG.md#3111', 'url': 'https://github.com/fitzgen/bumpalo/blob/main/CHANGELOG.md#3111'}]
patched: >=3.11.1
unaffected: <1.1.0
affected functions: Version
bumpalo::collections::vec::vec::into_iter: <3.11.1
description: In affected versions of this crate, the lifetime of the iterator produced byVec::into_iter()is not constrained to the lifetime of theBumpthat
allocated the vector's memory. Using the iterator after theBumpis dropped
causes use-after-free accesses. The following example demonstrates memory corruption arising from a misuse of
this unsoundness. The issue was corrected in version 3.11.1 by adding a lifetime to theIntoItertype, and updating the signature ofVec::into_iter()to constrain this
lifetime. Advisory available underCC0-1.0license.
affected_functions: bumpalo;;collections;;vec;;vec;;into_iter
version_of_Affected: <3.11.1

---
classification: INFO
subtitle: claimis Unmaintained
reported: December  4, 2022
issued: January 14, 2023(last modified: February  4, 2023)
package: {'name': 'claim(crates.io)', 'url': '/packages/claim.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/svartalf/rust-claim/issues/12', 'url': 'https://github.com/svartalf/rust-claim/issues/12'}]
patched: no patched versions
description: The last release was in February 2021, almost two years ago. The maintainer has been unresponsive regarding this crate for over a year. A pending issue withclaim's dependencies has made the cratedifficult to use. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Force cast a &Vecto &[T]
reported: December  2, 2022
issued: December 27, 2022(last modified: June 13, 2023)
package: {'name': 'prettytable-rs(crates.io)', 'url': '/packages/prettytable-rs.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-gfgm-chr3-x6px', 'url': 'https://github.com/advisories/GHSA-gfgm-chr3-x6px'}]
references: [{'text': 'https://github.com/phsym/prettytable-rs/issues/145', 'url': 'https://github.com/phsym/prettytable-rs/issues/145'}]
patched: >=0.10.0
description: In functionTable::as_ref, a reference of vector is force cast to slice. There are multiple problems here: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toembedded-alloc
reported: December 21, 2022
issued: December 23, 2022
package: {'name': 'alloc-cortex-m(crates.io)', 'url': '/packages/alloc-cortex-m.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rust-embedded/embedded-alloc/pull/56', 'url': 'https://github.com/rust-embedded/embedded-alloc/pull/56'}]
patched: no patched versions
description: This crate has been renamed fromalloc-cortex-mtoembedded-alloc. The new repository location is: https://github.com/rust-embedded/embedded-alloc Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Rusoto is unmaintained
reported: April 24, 2022
issued: December 18, 2022
package: {'name': 'rusoto_credential(crates.io)', 'url': '/packages/rusoto_credential.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rusoto/rusoto/issues/1651', 'url': 'https://github.com/rusoto/rusoto/issues/1651'}]
patched: no patched versions
description: The maintainers of Rusoto advise that all its crates are deprecated. This includes the common cratesrusoto_core,rusoto_signature,rusoto_credential, and service crates such asrusoto_s3andrusoto_ec2. Users should migrate to theAWS SDK for Rust, which is maintained by AWS. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsound API insecp256k1allows use-after-free and invalid deallocation from safe code
reported: November 30, 2022
issued: December  7, 2022(last modified: June 13, 2023)
package: {'name': 'secp256k1(crates.io)', 'url': '/packages/secp256k1.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-969w-q74q-9j8v', 'url': 'https://github.com/advisories/GHSA-969w-q74q-9j8v'}]
references: [{'text': 'https://github.com/rust-bitcoin/rust-secp256k1/issues/543', 'url': 'https://github.com/rust-bitcoin/rust-secp256k1/issues/543'}, {'text': 'https://github.com/rust-bitcoin/rust-secp256k1/pull/548', 'url': 'https://github.com/rust-bitcoin/rust-secp256k1/pull/548'}]
patched: >=0.22.2, <0.23.0>=0.23.5, <0.24.0>=0.24.2
unaffected: <0.14.0
affected functions: Version
secp256k1::secp256k1::preallocated_gen_new: <0.22.2>=0.23.0, <0.23.5>=0.24.0, <0.24.2
description: Because of incorrect bounds on methodSecp256k1::preallocated_gen_newit was possible to cause use-after-free from safe consumer code. It was also possible to "free" memory not allocated by the appropriate allocator. The method takes a place for storing the context as a mutable reference and returns context containing that reference. Because the code internally usesunsafeand the bounds were incorrect it was possible to create a context that outlived the passed reference (e.g.'static). Because the context can alternatively carry heap-allocated pointer freed on drop it was possible to "deallocate" a pointer that wasn't returned from appropriate allocator. The code decides whether to free the memory based on type parameter but because of missing bound it was possible to construct the context with invalid parameter. You are unaffected if you either The patched version uses correct bounds which means it is API-breaking. This effectively means adopting the policy of Rust lang itself allowing API-breaking changes to fix soundness bugs. Note however that valid straightforward usage of the code will continue to compile. Only unsound code or code that propagates the bound in custom generics will fail to compile. If the code is sound fixing the bounds should be sufficient to make the code compile. See theGitHub issuefor example "exploit" code and further discussion. Advisory available underCC0-1.0license.
affected_functions: secp256k1;;secp256k1;;preallocated_gen_new
version_of_Affected: <0.22.2>=0.23.0, <0.23.5>=0.24.0, <0.24.2

---
classification: INFO
subtitle: Potential unaligned read
reported: July  4, 2021
issued: November 22, 2022(last modified: July  8, 2023)
package: {'name': 'atty(crates.io)', 'url': '/packages/atty.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-g98v-hv3f-hcfr', 'url': 'https://github.com/advisories/GHSA-g98v-hv3f-hcfr'}]
references: [{'text': 'https://github.com/softprops/atty/issues/50', 'url': 'https://github.com/softprops/atty/issues/50'}, {'text': 'https://github.com/softprops/atty/pull/51', 'url': 'https://github.com/softprops/atty/pull/51'}, {'text': 'https://github.com/softprops/atty/issues/57', 'url': 'https://github.com/softprops/atty/issues/57'}]
patched: no patched versions
affected oses: windows
description: On windows,attydereferences a potentially unaligned pointer. In practice however, the pointer won't be unaligned unless a custom global allocator is used. In particular, theSystemallocator on windows usesHeapAlloc, which guarantees a large enough alignment. A Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable. Last release ofattywas almost 3 years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Invalid use ofmem::uninitializedcausesuse-of-uninitialized-value
reported: October 22, 2022
issued: November  7, 2022(last modified: June 13, 2023)
package: {'name': 'lzf(crates.io)', 'url': '/packages/lzf.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-5m39-wx2q-mxg3', 'url': 'https://github.com/advisories/GHSA-5m39-wx2q-mxg3'}]
references: [{'text': 'https://github.com/badboy/lzf-rs/issues/9', 'url': 'https://github.com/badboy/lzf-rs/issues/9'}]
patched: >=0.3.2
affected functions: Version
lzf::compress: <0.3.2
lzf::decompress: <0.3.2
description: The compression and decompression function usedmem:uninitializedto create an array of uninitialized values, to later write values into it.
This later leads to reads from uninitialized memory. The flaw was corrected in commit b633bf265e41c60dfce3be7eac4e4dd5e18d06cf
by using a heap-allocatedVecand removing out use ofmem::uninitialized.
The fix was released in v0.3.2 and v1.0.0 Subsequently the crate was deprecated and its use is discouraged. Advisory available underCC0-1.0license.
affected_functions: lzf;;compress
version_of_Affected: <0.3.2

---
classification: INFO
subtitle: Crateparity-wasmdeprecated by the author
reported: October  1, 2022
issued: October 23, 2022
package: {'name': 'parity-wasm(crates.io)', 'url': '/packages/parity-wasm.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/paritytech/parity-wasm/pull/334', 'url': 'https://github.com/paritytech/parity-wasm/pull/334'}]
patched: no patched versions
description: This PRexplicitly deprecatesparity-wasm.
The author recommends switching towasm-tools. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: orbtk is Unmaintained
reported: October 13, 2022
issued: October 19, 2022
package: {'name': 'orbtk(crates.io)', 'url': '/packages/orbtk.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/redox-os/orbtk/blob/eba9e77821551076bbf1d9f7ab44d788150e3446/README.md#orbtk-is-sunsetting', 'url': 'https://github.com/redox-os/orbtk/blob/eba9e77821551076bbf1d9f7ab44d788150e3446/README.md#orbtk-is-sunsetting'}]
patched: no patched versions
description: Theorbtkcrate is no longer maintained. Alternatives proposed by the authors: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Library exclusively intended to inject UB into safe Rust.
reported: September 28, 2022
issued: October 11, 2022
package: {'name': 'inconceivable(crates.io)', 'url': '/packages/inconceivable.html'}
type: INFONotice
references: [{'text': 'https://crates.io/crates/inconceivable', 'url': 'https://crates.io/crates/inconceivable'}]
patched: no patched versions
description: Quoting from the crate description: Specifically, theinconceivable!macro is insta-UB if theub_inconceivablefeature is enabled byanyreverse dependency.
The value this adds is questionable, and hidesunsafecode from naive analysis. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: badge is Unmaintained
reported: August 31, 2022
issued: October  4, 2022(last modified: February  9, 2023)
package: {'name': 'badge(crates.io)', 'url': '/packages/badge.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rust-lang/docs.rs/issues/1813#issuecomment-1232875809', 'url': 'https://github.com/rust-lang/docs.rs/issues/1813#issuecomment-1232875809'}]
patched: no patched versions
description: The maintainer has advised this crate is deprecated and will not receive any maintenance. The crate depends on the deprecatedrusttypecrate and won't receive updates
anymore. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: clipboard is Unmaintained
reported: June 25, 2022
issued: September 24, 2022
package: {'name': 'clipboard(crates.io)', 'url': '/packages/clipboard.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/aweinstock314/rust-clipboard/issues/91', 'url': 'https://github.com/aweinstock314/rust-clipboard/issues/91'}, {'text': 'https://github.com/aweinstock314/rust-clipboard/issues/90', 'url': 'https://github.com/aweinstock314/rust-clipboard/issues/90'}]
patched: no patched versions
description: Last release was almost 4 years ago and the repository with outstanding issues and pull requests seems to be abandoned by the maintainer. In addition the sole maintainer account may be abandoned that may represent account takeover risk. Current outstanding issues include vulnerable dependencies that all together may mean that security issues may not be addressed now or in the future. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: traitobject is Unmaintained
reported: October  4, 2021
issued: September  8, 2022(last modified: June 13, 2023)
package: {'name': 'traitobject(crates.io)', 'url': '/packages/traitobject.html'}
type: INFOUnmaintained
aliases: [{'text': 'GHSA-pp8r-vv2j-9j5v', 'url': 'https://github.com/advisories/GHSA-pp8r-vv2j-9j5v'}]
references: [{'text': 'https://github.com/reem/rust-traitobject/issues/7', 'url': 'https://github.com/reem/rust-traitobject/issues/7'}, {'text': 'https://rustsec.org/advisories/RUSTSEC-2020-0027', 'url': 'https://rustsec.org/advisories/RUSTSEC-2020-0027'}]
patched: no patched versions
description: Cratetraitobjecthas not had a release for over five years. In addition there is an existing security advisory that has not been addressed: The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: wee_alloc is Unmaintained
reported: May 11, 2022
issued: September  8, 2022(last modified: June 13, 2023)
package: {'name': 'wee_alloc(crates.io)', 'url': '/packages/wee_alloc.html'}
type: INFOUnmaintained
aliases: [{'text': 'GHSA-rc23-xxgq-x27g', 'url': 'https://github.com/advisories/GHSA-rc23-xxgq-x27g'}]
references: [{'text': 'https://github.com/rustwasm/wee_alloc/issues/107', 'url': 'https://github.com/rustwasm/wee_alloc/issues/107'}, {'text': 'https://www.reddit.com/r/rust/comments/x1cle0/dont_use_wee_alloc_in_production_code_targeting/', 'url': 'https://www.reddit.com/r/rust/comments/x1cle0/dont_use_wee_alloc_in_production_code_targeting/'}, {'text': 'https://github.com/rustwasm/wee_alloc/issues/85', 'url': 'https://github.com/rustwasm/wee_alloc/issues/85'}, {'text': 'https://github.com/rustwasm/wee_alloc/issues/106', 'url': 'https://github.com/rustwasm/wee_alloc/issues/106'}]
patched: no patched versions
description: Two of the maintainers have indicated that the crate may not be maintained. The crate has open issues including memory leaks and may not be suitable for production use. It may be best to switch to the default Rust standard allocator on wasm32 targets. Last release seems to have been three years ago. The below list has not been vetted in any way and may or may not contain alternatives; The below may serve to educate on potential future alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: typemap is Unmaintained
reported: April  6, 2019
issued: September  8, 2022(last modified: June 13, 2023)
package: {'name': 'typemap(crates.io)', 'url': '/packages/typemap.html'}
type: INFOUnmaintained
aliases: [{'text': 'GHSA-vfv3-9w6v-23jp', 'url': 'https://github.com/advisories/GHSA-vfv3-9w6v-23jp'}]
references: [{'text': 'https://github.com/reem/rust-typemap/issues/45', 'url': 'https://github.com/reem/rust-typemap/issues/45'}, {'text': 'https://github.com/rustsec/advisory-db/issues/1088', 'url': 'https://github.com/rustsec/advisory-db/issues/1088'}]
patched: no patched versions
description: The maintainer seems unreachable. The crate may or may not be usable as-is despite no maintenance and may not work in future versions of Rust. The last release seems to have been seven years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: dotenv is Unmaintained
reported: December 24, 2021
issued: August 31, 2022
package: {'name': 'dotenv(crates.io)', 'url': '/packages/dotenv.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dotenv-rs/dotenv/issues/74', 'url': 'https://github.com/dotenv-rs/dotenv/issues/74'}]
patched: no patched versions
description: dotenv by description is meant to be used in development or testing only. Using this in production may or may not be advisable. The below may or may not be feasible alternative(s): Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mozjpeg DecompressScanlines::read_scanlines is Unsound
reported: July  4, 2020
issued: August 31, 2022(last modified: June 13, 2023)
package: {'name': 'mozjpeg(crates.io)', 'url': '/packages/mozjpeg.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-v8gq-5grq-9728', 'url': 'https://github.com/advisories/GHSA-v8gq-5grq-9728'}]
references: [{'text': 'https://github.com/ImageOptim/mozjpeg-rust/issues/10', 'url': 'https://github.com/ImageOptim/mozjpeg-rust/issues/10'}, {'text': 'https://github.com/kornelski/rust-rgb/issues/35', 'url': 'https://github.com/kornelski/rust-rgb/issues/35'}, {'text': 'https://rustsec.org/advisories/RUSTSEC-2020-0029.html', 'url': 'https://rustsec.org/advisories/RUSTSEC-2020-0029.html'}]
patched: >=0.8.19
affected functions: Version
mozjpeg::decompressscanlines::read_scanlines: <0.8.19
description: This issue and vector is similar toRUSTSEC-2020-0029ofrgbcrate whichmozjpegdepends on. Affected versions ofmozjpegcrate allow creating instances of any typeTfrom bytes,
and do not correctly constrainTto the types for which it is safe to do so. Examples of safety violation possible for a typeT: The issue was fixed in 0.8.19 by using safer types and involvingrgbdependency bump. Advisory available underCC0-1.0license.
affected_functions: mozjpeg;;decompressscanlines;;read_scanlines
version_of_Affected: <0.8.19

---
classification: INFO
subtitle: rusttype is Unmaintained
reported: April  1, 2021
issued: August 31, 2022(last modified: February  9, 2023)
package: {'name': 'rusttype(crates.io)', 'url': '/packages/rusttype.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.redox-os.org/redox-os/rusttype/-/issues/148', 'url': 'https://gitlab.redox-os.org/redox-os/rusttype/-/issues/148'}]
patched: no patched versions
description: The maintainer has advised this crate is deprecated and will not
receive any maintenance. The maintainer has further advised to migrate over toab_glyph. Last release seems to have been over two years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cell-projectused incorrect variance when projecting through&Cell<T>
reported: August 27, 2020
issued: August 31, 2022(last modified: June 13, 2023)
package: {'name': 'cell-project(crates.io)', 'url': '/packages/cell-project.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-p75v-367r-2v23', 'url': 'https://github.com/advisories/GHSA-p75v-367r-2v23'}]
references: [{'text': 'https://github.com/RustyYato/cell-project/issues/3', 'url': 'https://github.com/RustyYato/cell-project/issues/3'}, {'text': 'https://github.com/RustyYato/cell-project/issues/3', 'url': 'https://github.com/RustyYato/cell-project/issues/3'}, {'text': 'https://github.com/RustyYato/cell-project/issues/4', 'url': 'https://github.com/RustyYato/cell-project/issues/4'}]
patched: >=0.1.4
affected functions: Version
cell_project::cell_project: <0.1.4
cell_project::nightly_cell_project: <0.1.4
description: The issue lies in the implementation of thecell_projectmacro which usedfield as *const _instead offield as *mut _.
The problem being that*const Tis covariant inTwhile*mut Tis invariant inT. Keep in mind that&Cell<T>is invariant inT,
so casting to*const Trelaxed the variance, and lead to unsoundness, as shown in the example below.
unaffected: ['All versions of the cell-project crate before0.1.4are affected.', 'This was fixed inIssues/4, and released as version0.1.4.\nSo just updating to the latest version will include the fix (which may result in a compile error on unsound usage).', {'text': 'Issues/4', 'url': 'https://github.com/RustyYato/cell-project/issues/4'}, 'This was discovered and fixed by @SoniEx2 in cell-project:Issues/3andIssues/4', {'text': 'Issues/3', 'url': 'https://github.com/RustyYato/cell-project/issues/3'}, {'text': 'Issues/4', 'url': 'https://github.com/RustyYato/cell-project/issues/4'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: cell_project;;cell_project
version_of_Affected: <0.1.4

---
classification: INFO
subtitle: dotenv is Unmaintained
reported: December 24, 2021
issued: August 31, 2022
package: {'name': 'dotenv_codegen(crates.io)', 'url': '/packages/dotenv_codegen.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dotenv-rs/dotenv/issues/74', 'url': 'https://github.com/dotenv-rs/dotenv/issues/74'}]
patched: no patched versions
description: dotenv by description is meant to be used in development or testing only. Using this in production may or may not be advisable. The below may or may not be feasible alternative(s): Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mapr is Unmaintained
reported: August 24, 2022
issued: August 27, 2022(last modified: February  9, 2023)
package: {'name': 'mapr(crates.io)', 'url': '/packages/mapr.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rustsec/advisory-db/pull/1381', 'url': 'https://github.com/rustsec/advisory-db/pull/1381'}]
patched: no patched versions
description: Themaprfork has been merged back into upstream forkmemmap2. The maintainer(s) have advisedmapris deprecated and will not
receive any maintenance in favor of usingmemmap2. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: os_socketaddrinvalidly assumes the memory layout of std::net::SocketAddr
reported: August 26, 2022
issued: August 27, 2022(last modified: June 13, 2023)
package: {'name': 'os_socketaddr(crates.io)', 'url': '/packages/os_socketaddr.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-c439-chv8-8g2j', 'url': 'https://github.com/advisories/GHSA-c439-chv8-8g2j'}]
references: [{'text': 'https://github.com/a-ba/os_socketaddr/issues/3', 'url': 'https://github.com/a-ba/os_socketaddr/issues/3'}]
patched: >=0.2.2
description: Theos_socketaddrcrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C
representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. These layout werechanged into idiomatic rust typesin nightlystd. Starting from rustc 1.64 the affected versions of this crate will have undefined
behaviour. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Interledger is Unmaintained
reported: August  4, 2022
issued: August 19, 2022
package: {'name': 'interledger-packet(crates.io)', 'url': '/packages/interledger-packet.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/interledger-rs/interledger-rs/issues/745', 'url': 'https://github.com/interledger-rs/interledger-rs/issues/745'}, {'text': 'https://github.com/interledger-rs/interledger-rs/pull/744', 'url': 'https://github.com/interledger-rs/interledger-rs/pull/744'}]
patched: no patched versions
description: Interledger family of crates is not being actively maintained anymore. The owner of the published crate does not appear to be responsive. There is an outstanding concern around username comparison. This concern may or may not be resolved by bumping up the dependencies of the project. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: ansi_term is Unmaintained
reported: August 18, 2021
issued: August 19, 2022(last modified: September  7, 2023)
package: {'name': 'ansi_term(crates.io)', 'url': '/packages/ansi_term.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/ogham/rust-ansi-term/issues/72', 'url': 'https://github.com/ogham/rust-ansi-term/issues/72'}]
patched: no patched versions
description: The maintainer has advised that this crate is deprecated and will not receive any maintenance. The crate does not seem to have much dependencies and may or may not be ok to use as-is. Last release seems to have been three years ago. The below list has not been vetted in any way and may or may not contain alternatives; Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Use after free in MacOS / iOS implementation
reported: August 15, 2022
issued: August 17, 2022(last modified: June 13, 2023)
package: {'name': 'iana-time-zone(crates.io)', 'url': '/packages/iana-time-zone.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-3fg9-hcq5-vxrc', 'url': 'https://github.com/advisories/GHSA-3fg9-hcq5-vxrc'}]
references: [{'text': 'https://github.com/strawlab/iana-time-zone/pull/54', 'url': 'https://github.com/strawlab/iana-time-zone/pull/54'}, {'text': 'https://github.com/strawlab/iana-time-zone/pull/50#discussion_r945353515', 'url': 'https://github.com/strawlab/iana-time-zone/pull/50#discussion_r945353515'}]
patched: >=0.1.45
unaffected: <0.1.43
affected oses: iosmacos
affected functions: Version
iana_time_zone::get_timezone: >0.1.42, <0.1.45
description: In iana-time-zone v0.1.43 a use-after-free bug in the MacOS / iOS implementation was introduced. The copied system time zone was released before its name was copied.
If the system time zone was changed between the call ofCFReleaseandstr::to_owned(),
random memory would be copied. Advisory available underCC0-1.0license.
affected_functions: iana_time_zone;;get_timezone
version_of_Affected: >0.1.42, <0.1.45

---
classification: INFO
subtitle: Incorrect use ofset_lenallows for un-initialized memory
reported: October 14, 2021
issued: August 13, 2022(last modified: June 13, 2023)
package: {'name': 'mz-avro(crates.io)', 'url': '/packages/mz-avro.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'GHSA-jwh2-vrr9-vcp2', 'url': 'https://github.com/advisories/GHSA-jwh2-vrr9-vcp2'}]
references: [{'text': 'https://github.com/MaterializeInc/materialize/issues/8669', 'url': 'https://github.com/MaterializeInc/materialize/issues/8669'}]
patched: >=0.7.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure)
and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke
undefined behavior. Note: there is only UB in the case where a user provides a struct whoseReadimplementation inspects the buffer passed toread_exactbefore writing to it.
This is an unidiomatic (albeit possible)Readimplementation. See https://github.com/MaterializeInc/materialize/issues/8669 for details. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: sodiumoxide is deprecated
reported: October 22, 2021
issued: August 10, 2022
package: {'name': 'sodiumoxide(crates.io)', 'url': '/packages/sodiumoxide.html'}
type: INFOUnmaintained
keywords: []
references: [{'text': 'https://github.com/sodiumoxide/sodiumoxide/commit/5bb1dfd2578539b89ffb0cbea25f21f00cfb963e', 'url': 'https://github.com/sodiumoxide/sodiumoxide/commit/5bb1dfd2578539b89ffb0cbea25f21f00cfb963e'}]
patched: no patched versions
description: Alternatives may be found - not in any specific order: Recommendations can be also found from: No direct maintained fork exists. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: markdown(1.0.0 and higher) is maintained
reported: January 17, 2022
issued: August  8, 2022(last modified: January 22, 2023)
package: {'name': 'markdown(crates.io)', 'url': '/packages/markdown.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/johannhof/markdown.rs/issues/48', 'url': 'https://github.com/johannhof/markdown.rs/issues/48'}]
patched: >=1.0.0-alpha.1
description: A newmarkdowncrate has been brought over by a new maintainer replacing the old crate. As of time of writing only pre-releases seem to be available for the 1.0.0 version of the crate. The crate GitHub repository is nowwooorm/markdown-rs The oldmarkdowncrate was no longer actively maintained. The crate GitHub repository wasjohannhof/markdown.rs Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Unsoundness of AtomicCell<64> arithmetics on 32-bit targets that support Atomic64
reported: February  5, 2022
issued: August  4, 2022
package: {'name': 'crossbeam-utils(crates.io)', 'url': '/packages/crossbeam-utils.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-qc84-gqf4-9926', 'url': 'https://github.com/advisories/GHSA-qc84-gqf4-9926'}, {'text': 'CVE-2022-23639', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23639'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/781', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/781'}]
patched: >=0.8.7
description: Affected versions of this crate incorrectly assumed that the alignment of {i,u}64 was always the same as Atomic{I,U}64. However, the alignment of {i,u}64 on a 32-bit target can be smaller than Atomic{I,U}64. This can cause the following problems: Crates using fetch_* methods with AtomicCell<{i,u}64> are affected by this issue. 32-bit targets without Atomic{I,U}64 and 64-bit targets are not affected by this issue. 32-bit targets with Atomic{I,U}64 and {i,u}64 have the same alignment are also not affected by this issue. The following is a complete list of the builtin targets that may be affected. (last update: nightly-2022-02-11) (script to get list) This has been fixed in crossbeam-utils 0.8.7. Affected 0.8.x releases have been yanked. Thanks to @taiki-e Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: project abandoned
reported: January 17, 2022
issued: August  3, 2022
package: {'name': 'r2d2_odbc(crates.io)', 'url': '/packages/r2d2_odbc.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Koka/r2d2-odbc/issues/128#issuecomment-958629171', 'url': 'https://github.com/Koka/r2d2-odbc/issues/128#issuecomment-958629171'}]
patched: no patched versions
description: Ther2d2-odbc-apicrate might be an alternative. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: term_sizeis unmaintained; useterminal_sizeinstead
reported: November  3, 2020
issued: August  3, 2022
package: {'name': 'term_size(crates.io)', 'url': '/packages/term_size.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/clap-rs/term_size-rs/pull/31', 'url': 'https://github.com/clap-rs/term_size-rs/pull/31'}]
patched: no patched versions
description: Theterm_sizecrate is no longer maintained. Consider usingterminal_sizeinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: project abandoned
reported: January 17, 2022
issued: August  3, 2022
package: {'name': 'odbc(crates.io)', 'url': '/packages/odbc.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Koka/odbc-rs/commit/f9e5f77fac0a6328f9759e6e0f9e10c16509aebb', 'url': 'https://github.com/Koka/odbc-rs/commit/f9e5f77fac0a6328f9759e6e0f9e10c16509aebb'}]
patched: no patched versions
description: Alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: sass-rshas been deprecated
reported: April  7, 2021
issued: August  3, 2022(last modified: February  9, 2023)
package: {'name': 'sass-rs(crates.io)', 'url': '/packages/sass-rs.html'}
type: INFOUnmaintained
keywords: []
references: [{'text': 'https://github.com/compass-rs/sass-rs/issues/83', 'url': 'https://github.com/compass-rs/sass-rs/issues/83'}]
patched: no patched versions
description: Thesass-rscrate is not maintained anymore as libsass is deprecated.
Consider using https://github.com/connorskees/grass or https://github.com/kaj/rsass instead.
(Author's recommendation.) Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Safety issues inpkcs11
reported: July 22, 2022
issued: July 25, 2022
package: {'name': 'pkcs11(crates.io)', 'url': '/packages/pkcs11.html'}
type: INFOUnsound
categories: ['code-execution', 'memory-corruption', 'crypto-failure']
keywords: []
references: [{'text': 'https://github.com/mheese/rust-pkcs11/issues/57', 'url': 'https://github.com/mheese/rust-pkcs11/issues/57'}]
patched: no patched versions
description: 
unaffected: ['The interface ofpkcs11is subject to a number of safety issues, mainly related to handling of raw pointers. Despite presenting a safe interface, many of the functions and methods that rely on inputs which contain pointers (attributes and mechanisms in particular) can lead to segmentation faults and undefined behaviour when those pointers get dereferenced. For more details see the issues referenced below.', 'Other problems that have been identified by the community include use-after-free (mheese/rust-pkcs11#53) and unsound uses oftransmute_copy(mheese/rust-pkcs11#55).', {'text': 'mheese/rust-pkcs11#53', 'url': 'https://github.com/mheese/rust-pkcs11/pull/53'}, {'text': 'mheese/rust-pkcs11#55', 'url': 'https://github.com/mheese/rust-pkcs11/issues/55'}]
References: ['mheese/rust-pkcs11#38', {'text': 'mheese/rust-pkcs11#38', 'url': 'https://github.com/mheese/rust-pkcs11/issues/38'}, 'mheese/rust-pkcs11#53', {'text': 'mheese/rust-pkcs11#53', 'url': 'https://github.com/mheese/rust-pkcs11/pull/53'}, 'mheese/rust-pkcs11#55', {'text': 'mheese/rust-pkcs11#55', 'url': 'https://github.com/mheese/rust-pkcs11/issues/55'}, 'mheese/rust-pkcs11#54', {'text': 'mheese/rust-pkcs11#54', 'url': 'https://github.com/mheese/rust-pkcs11/issues/54'}, 'mheese/rust-pkcs11#50', {'text': 'mheese/rust-pkcs11#50', 'url': 'https://github.com/mheese/rust-pkcs11/issues/50'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: INFO
subtitle: static_type_maphas been renamed toerased_set
reported: May 11, 2022
issued: May 11, 2022
package: {'name': 'static_type_map(crates.io)', 'url': '/packages/static_type_map.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/malobre/erased_set/issues/6', 'url': 'https://github.com/malobre/erased_set/issues/6'}]
patched: no patched versions
description: Please use theerased_setcrate going forward: https://github.com/malobre/erased_set There will be no further releases ofstatic_type_map. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: double-checked-cell is unmaintained
reported: May 11, 2022
issued: May 11, 2022
package: {'name': 'double-checked-cell(crates.io)', 'url': '/packages/double-checked-cell.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/niklasf/double-checked-cell/commit/9cf94d75316ef441033ce4c80def7c1a8c7643fe', 'url': 'https://github.com/niklasf/double-checked-cell/commit/9cf94d75316ef441033ce4c80def7c1a8c7643fe'}]
patched: no patched versions
description: The author recommends switching toonce_cell, which offers a superset
of the functionality. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: SegQueuecreates zero value of any type
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'crossbeam-queue(crates.io)', 'url': '/packages/crossbeam-queue.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-6888-wf7j-34jq', 'url': 'https://github.com/advisories/GHSA-6888-wf7j-34jq'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/458', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/458'}]
patched: >=0.2.3
description: Affected versions of this crate calledmem::zeroed()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null). The flaw was corrected by avoiding the use ofmem::zeroed(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Channel creates zero value of any type
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'crossbeam-channel(crates.io)', 'url': '/packages/crossbeam-channel.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-9g55-pg62-m8hh', 'url': 'https://github.com/advisories/GHSA-9g55-pg62-m8hh'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/458', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/458'}]
patched: >=0.4.3
description: Affected versions of this crate calledmem::zeroed()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null). The flaw was corrected by avoiding the use ofmem::zeroed(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: SegQueuecreates zero value of any type
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'crossbeam(crates.io)', 'url': '/packages/crossbeam.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-8gj8-hv75-gp94', 'url': 'https://github.com/advisories/GHSA-8gj8-hv75-gp94'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/pull/458', 'url': 'https://github.com/crossbeam-rs/crossbeam/pull/458'}]
patched: >=0.7.0
description: Affected versions of this crate calledmem::zeroed()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null). The flaw was corrected by avoiding the use ofmem::zeroed(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Parser creates invalid uninitialized value
reported: May 10, 2022
issued: May 10, 2022(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-f67m-9j94-qv9j', 'url': 'https://github.com/advisories/GHSA-f67m-9j94-qv9j'}]
references: [{'text': 'https://github.com/hyperium/hyper/pull/2545', 'url': 'https://github.com/hyperium/hyper/pull/2545'}]
patched: >=0.14.12
description: Affected versions of this crate calledmem::uninitialized()in the HTTP1 parser to create values of typehttparse::Header(from thehttparsecrate).
This is unsound, sinceHeadercontains references and thus must be non-null. The flaw was corrected by avoiding the use ofmem::uninitialized(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: array!macro is unsound when its length is impure constant
reported: April 27, 2022
issued: April 27, 2022(last modified: June 13, 2023)
package: {'name': 'array-macro(crates.io)', 'url': '/packages/array-macro.html'}
type: INFOUnsound
categories: ['code-execution', 'memory-corruption', 'memory-exposure']
aliases: [{'text': 'GHSA-7v4j-8wvr-v55r', 'url': 'https://github.com/advisories/GHSA-7v4j-8wvr-v55r'}]
references: [{'text': 'https://gitlab.com/KonradBorowski/array-macro/-/issues/5', 'url': 'https://gitlab.com/KonradBorowski/array-macro/-/issues/5'}]
patched: >=2.1.2
unaffected: <2.1.0
description: Affected versions of this crate did substitute the array length provided by an user at compile-time multiple times. When an impure constant expression is passed as an array length (such as a result of an impure procedural macro), this can result in the initialization of an array with uninitialized types, which in turn can allow an attacker to execute arbitrary code. The flaw was corrected in commitd5b63f72by making sure that array length is substituted just once. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: pty is unmaintained
reported: March 22, 2022
issued: March 22, 2022
package: {'name': 'pty(crates.io)', 'url': '/packages/pty.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/hibariya/pty-rs/issues/19', 'url': 'https://github.com/hibariya/pty-rs/issues/19'}]
patched: no patched versions
description: The repository hasn't received any updates since Jun 25, 2017 and the author is unresponsive. Maintained alternatives include: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: enum_map macro can cause UB whenEnumtrait is incorrectly implemented
reported: February 17, 2022
issued: February 18, 2022(last modified: June 13, 2023)
package: {'name': 'enum-map(crates.io)', 'url': '/packages/enum-map.html'}
type: INFOUnsound
categories: ['code-execution', 'memory-corruption', 'memory-exposure']
aliases: [{'text': 'GHSA-rxhx-9fj6-6h2m', 'url': 'https://github.com/advisories/GHSA-rxhx-9fj6-6h2m'}]
references: [{'text': 'https://gitlab.com/KonradBorowski/enum-map/-/blob/master/CHANGELOG.md#version-202', 'url': 'https://gitlab.com/KonradBorowski/enum-map/-/blob/master/CHANGELOG.md#version-202'}]
patched: >=2.0.2
unaffected: <2.0.0-2
description: Affected versions of this crate did not properly check the length of an enum when usingenum_map!macro, trusting user-provided length. When theLENGTHin theEnumtrait does not match the array length in theEnumArraytrait, this can result in the initialization of the enum map with uninitialized types, which in turn can allow an attacker to execute arbitrary code. This problem can only occur with a manual implementation of the Enum trait, it will never occur for enums that use#[derive(Enum)]. Example code that triggers this vulnerability looks like this: The flaw was corrected in commitb824e23by puttingLENGTHproperty on sealed trait for macro to read. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tokio-protois deprecated/unmaintained
reported: February  6, 2020
issued: February  7, 2022
package: {'name': 'tokio-proto(crates.io)', 'url': '/packages/tokio-proto.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/tokio-rs/tokio-proto/commit/56c720ea3c74efa8f39e36c24e609628222b16a1', 'url': 'https://github.com/tokio-rs/tokio-proto/commit/56c720ea3c74efa8f39e36c24e609628222b16a1'}]
patched: no patched versions
description: Thetokio-protocrate has been deprecated, andits GitHub repositoryhas been archived.
Users may be interested intokio-towerinstead, per https://github.com/tokio-rs/tokio/issues/118#issuecomment-452969665 Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Delegate functions are missingSendbound
reported: January  2, 2022
issued: February  4, 2022(last modified: June 13, 2023)
package: {'name': 'windows(crates.io)', 'url': '/packages/windows.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'GHSA-x4mq-m75f-mx8m', 'url': 'https://github.com/advisories/GHSA-x4mq-m75f-mx8m'}]
references: [{'text': 'https://github.com/microsoft/windows-rs/issues/1409', 'url': 'https://github.com/microsoft/windows-rs/issues/1409'}]
patched: >=0.32.0
unaffected: <0.1.2
affected oses: windows
description: Affected versions of this crate did not require event handlers to haveSendbound despite there being no guarantee of them being called on any particular thread, which can potentially lead to data races and undefined behavior. The flaw was corrected in commitafe3252by addingSendbounds. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: A malicious coder can get unsound access to TCell or TLCell memory
reported: January 24, 2022
issued: January 24, 2022(last modified: June 13, 2023)
package: {'name': 'qcell(crates.io)', 'url': '/packages/qcell.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'GHSA-9c9f-7x9p-4wqp', 'url': 'https://github.com/advisories/GHSA-9c9f-7x9p-4wqp'}]
references: [{'text': 'https://github.com/uazu/qcell/issues/20', 'url': 'https://github.com/uazu/qcell/issues/20'}]
patched: >=0.4.3
description: This is impossible to do by accident, but by carefully constructing
marker types to be covariant, a malicious coder can cheat the
singleton check inTCellOwnerandTLCellOwner, giving unsound
access to cell memory.  This could take the form of getting two
mutable references to the same memory, or a mutable reference and an
immutable reference. The fix is for the crate to internally force the marker type to be
invariant.  This blocks the conversion between covariant types which
Rust normally allows. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toftdi-embedded-hal
reported: January 22, 2022
issued: January 22, 2022
package: {'name': 'ftd2xx-embedded-hal(crates.io)', 'url': '/packages/ftd2xx-embedded-hal.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/newAM/ftd2xx-embedded-hal/pull/40', 'url': 'https://github.com/newAM/ftd2xx-embedded-hal/pull/40'}]
patched: no patched versions
description: This crate has been renamed fromftd2xx-embedded-haltoftdi-embedded-hal. The new repository location is: https://github.com/ftdi-rs/ftdi-embedded-hal Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: array!macro is unsound in presence of traits that implement methods it calls internally
reported: May  7, 2020
issued: January 21, 2022(last modified: June 13, 2023)
package: {'name': 'array-macro(crates.io)', 'url': '/packages/array-macro.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-83gg-pwxf-jr89', 'url': 'https://github.com/advisories/GHSA-83gg-pwxf-jr89'}]
references: [{'text': 'https://gitlab.com/KonradBorowski/array-macro/-/commit/01940637dd8f3bfeeee3faf9639fa9ae52f19f4d', 'url': 'https://gitlab.com/KonradBorowski/array-macro/-/commit/01940637dd8f3bfeeee3faf9639fa9ae52f19f4d'}]
patched: >=1.0.5
unaffected: <0.1.2
description: Affected versions of this crate called some methods using auto-ref. The affected code looked like this. In this case, the problem is thatas_mut_ptris a method of&mut MaybeUninit, notMaybeUninit. This made it possible for traits to hijack the method calls in order to cause unsoundness. The flaw was corrected by explicitly referencing variables in macro body in order to avoid auto-ref. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: lmdb is unmaintained, use lmdb-rkv instead
reported: January  5, 2022
issued: January  5, 2022
package: {'name': 'lmdb(crates.io)', 'url': '/packages/lmdb.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/danburkert/lmdb-rs', 'url': 'https://github.com/danburkert/lmdb-rs'}]
patched: no patched versions
description: The lmdb crate hasn't had any updates since August 2018. Mozilla'slmdb-rkvfork of the crate has received additional maintenance work beyond that and is the best available replacement. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rental is unmaintained, author has moved on
reported: December 27, 2021
issued: December 27, 2021(last modified: March  6, 2022)
package: {'name': 'rental(crates.io)', 'url': '/packages/rental.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/jpernst/rental/commit/213671ab3aab3452efd7e2290c6bb714ee327014', 'url': 'https://github.com/jpernst/rental/commit/213671ab3aab3452efd7e2290c6bb714ee327014'}]
patched: no patched versions
description: The author encourages users to explore other solutions, or maintain a fork. Maintained alternatives include: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cargo-download is unmaintained
reported: December 25, 2021
issued: December 25, 2021
package: {'name': 'cargo-download(crates.io)', 'url': '/packages/cargo-download.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Xion/cargo-download', 'url': 'https://github.com/Xion/cargo-download'}]
patched: no patched versions
description: The cargo download subcommand (via cargo-download crate) is broken and maintainer has disappeared from GitHub and hasn't had any commits for a year. Using this downloader will result to corrupted crates. Maintainer has not responded to maintenance takeover. Just use wget / curl directly. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: serde_cbor is unmaintained
reported: August 15, 2021
issued: November 30, 2021(last modified: December  1, 2021)
package: {'name': 'serde_cbor(crates.io)', 'url': '/packages/serde_cbor.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/pyfisch/cbor', 'url': 'https://github.com/pyfisch/cbor'}]
patched: no patched versions
description: Theserde_cborcrate is unmaintained. The author has archived the github repository. Alternatives proposed by the author: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Non-aligned u32 read in Chacha20 encryption and decryption
reported: October  8, 2021
issued: October 18, 2021(last modified: June 13, 2023)
package: {'name': 'crypto2(crates.io)', 'url': '/packages/crypto2.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2021-45709', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45709'}, {'text': 'GHSA-9hfg-pxr6-q4vp', 'url': 'https://github.com/advisories/GHSA-9hfg-pxr6-q4vp'}, {'text': 'GHSA-pmcv-mgcf-rvxg', 'url': 'https://github.com/advisories/GHSA-pmcv-mgcf-rvxg'}]
references: [{'text': 'https://github.com/shadowsocks/crypto2/issues/27', 'url': 'https://github.com/shadowsocks/crypto2/issues/27'}]
patched: no patched versions
affected functions: Version
crypto2::streamcipher::chacha20::decrypt_slice: *
crypto2::streamcipher::chacha20::encrypt_slice: *
crypto2::streamcipher::xor_si512_inplace: *
description: The implementation does not enforce alignment requirements on input slices while incorrectly assuming 4-byte alignment through an unsafe call tostd::slice::from_raw_parts_mut, which breaks the contract and introduces undefined behavior. This affects Chacha20 encryption and decryption in crypto2. Advisory available underCC0-1.0license.
affected_functions: crypto2;;streamcipher;;chacha20;;decrypt_slice
version_of_Affected: *

---
classification: INFO
subtitle: abomonation transmutes &T to and from &[u8] without sufficient constraints
reported: October 17, 2021
issued: October 17, 2021(last modified: June 13, 2023)
package: {'name': 'abomonation(crates.io)', 'url': '/packages/abomonation.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2021-45708', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45708'}, {'text': 'GHSA-5vwc-r48g-wj6c', 'url': 'https://github.com/advisories/GHSA-5vwc-r48g-wj6c'}, {'text': 'GHSA-hfxp-p695-629x', 'url': 'https://github.com/advisories/GHSA-hfxp-p695-629x'}]
references: [{'text': 'https://github.com/TimelyDataflow/abomonation/issues/23', 'url': 'https://github.com/TimelyDataflow/abomonation/issues/23'}]
patched: no patched versions
description: This transmute is at the core of the abomonation crates. It's so easy to use it to violate alignment requirements that no test in the crate's test suite passes under miri.
The use of this transmute in serialization/deserialization also incorrectly assumes that the layout of a repr(Rust) type is stable.
This transmute can also disclose both the contents of padding bytes which may be an information leak and the contents of pointers, which may be used to defeat ASLR. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: slice-deque is unmaintained
reported: February 10, 2020
issued: October  7, 2021(last modified: November 18, 2021)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/94', 'url': 'https://github.com/gnzlbg/slice_deque/issues/94'}]
patched: no patched versions
description: The author of theslice-dequecrate is unresponsive and is not receiving security patches. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer may cause UB ('tectonic_xdv' crate)
reported: February 17, 2021
issued: September 18, 2021(last modified: June 13, 2023)
package: {'name': 'tectonic_xdv(crates.io)', 'url': '/packages/tectonic_xdv.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45703', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45703'}, {'text': 'GHSA-6692-8qqf-79jc', 'url': 'https://github.com/advisories/GHSA-6692-8qqf-79jc'}, {'text': 'GHSA-qwvx-c8j7-5g75', 'url': 'https://github.com/advisories/GHSA-qwvx-c8j7-5g75'}]
references: [{'text': 'https://github.com/tectonic-typesetting/tectonic/issues/752', 'url': 'https://github.com/tectonic-typesetting/tectonic/issues/752'}]
patched: >=0.1.12
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer. Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. The problem was fixed in commitcdff034by zero-initializing the buffer before passing it to a user-providedReadimplementation. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Crate has been renamed tocosmrs
reported: August 25, 2021
issued: August 25, 2021
package: {'name': 'cosmos_sdk(crates.io)', 'url': '/packages/cosmos_sdk.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/cosmos/cosmos-rust/issues/113', 'url': 'https://github.com/cosmos/cosmos-rust/issues/113'}]
patched: no patched versions
description: Thecosmos_sdkcrate, which provides a basic Rust SDK for the Cosmos ecosystem,
has rebranded to “CosmRS” in the spirit of other projects like CosmJS and CosmWasm. You can find the new home here: https://github.com/cosmos/cosmos-rust/tree/main/cosmrs The new crate name iscosmrs: https://crates.io/crates/cosmrs Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: spirv_headers is unmaintained, use spirv instead
reported: August 16, 2021
issued: August 23, 2021
package: {'name': 'spirv_headers(crates.io)', 'url': '/packages/spirv_headers.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/gfx-rs/rspirv/issues/197', 'url': 'https://github.com/gfx-rs/rspirv/issues/197'}]
patched: no patched versions
description: Because of versioning issues; thespirv_headerscrate is unmaintained. Usespirvfor parsing spirv files. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Reading on uninitialized memory may cause UB (util::read_spv())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'ash(crates.io)', 'url': '/packages/ash.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45688', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45688'}, {'text': 'GHSA-64wv-8vwp-xgw2', 'url': 'https://github.com/advisories/GHSA-64wv-8vwp-xgw2'}, {'text': 'GHSA-qj69-c89v-jwq2', 'url': 'https://github.com/advisories/GHSA-qj69-c89v-jwq2'}]
references: [{'text': 'https://github.com/MaikKlein/ash/issues/354', 'url': 'https://github.com/MaikKlein/ash/issues/354'}]
patched: >=0.33.1
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: mopais technically unsound
reported: June  1, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'mopa(crates.io)', 'url': '/packages/mopa.html'}
type: INFOUnsound
categories: ['memory-corruption', 'memory-exposure', 'code-execution']
keywords: []
aliases: [{'text': 'CVE-2021-45695', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45695'}, {'text': 'GHSA-2gxj-qrp2-53jv', 'url': 'https://github.com/advisories/GHSA-2gxj-qrp2-53jv'}, {'text': 'GHSA-8mv5-7x95-7wcf', 'url': 'https://github.com/advisories/GHSA-8mv5-7x95-7wcf'}]
references: [{'text': 'https://github.com/chris-morgan/mopa/issues/13', 'url': 'https://github.com/chris-morgan/mopa/issues/13'}]
patched: no patched versions
description: Themopacrate redefines the deprecatedTraitObjectstruct fromcore::rawlike so: This is done to then transmute a reference to a trait object (&dyn Traitfor any traitTrait) into this struct and retrieve thedatafield for the purpose of downcasting. This is used to implementdowncast_ref_unchecked(), in terms of whichdowncast_ref()is also implemented. Same goes for mutable reference downcasting andBoxdowncasting. The Rust compiler explicitly reserves the right to change the memory layout of&dyn Traitfor any traitTrait. The worst case scenario is that it swapsdataandvtable, making an executable location breach and compromisation of ASLR possible, since reads fromdatawould readvtableinstead. Likewise, arbitrary code execution is also theoretically possible if reads ofvtablegenerated by the compiler readdatainstead. While, as of Rust 1.52, this unsound assumption still holds true, updating the compiler may silently create UB in a crate which previously compiled and run without issues, compromising the security of builds which are believed to be reproducible. A potential strategy to resolve this has already been suggested in an issue on the GitHub repository of the crate. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer infill_buf()andread_up_to()
reported: December 27, 2020
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'acc_reader(crates.io)', 'url': '/packages/acc_reader.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36513', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36513'}, {'text': 'CVE-2020-36514', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36514'}, {'text': 'GHSA-799f-r78p-gq9c', 'url': 'https://github.com/advisories/GHSA-799f-r78p-gq9c'}, {'text': 'GHSA-hv9v-7w3v-rj6f', 'url': 'https://github.com/advisories/GHSA-hv9v-7w3v-rj6f'}, {'text': 'GHSA-p4cr-64x4-f92f', 'url': 'https://github.com/advisories/GHSA-p4cr-64x4-f92f'}]
references: [{'text': 'https://github.com/netvl/acc_reader/issues/1', 'url': 'https://github.com/netvl/acc_reader/issues/1'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer may cause UB (read_entry())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'flumedb(crates.io)', 'url': '/packages/flumedb.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45684', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45684'}, {'text': 'GHSA-p46c-w9m3-7qr2', 'url': 'https://github.com/advisories/GHSA-p46c-w9m3-7qr2'}, {'text': 'GHSA-p56p-gq3f-whg8', 'url': 'https://github.com/advisories/GHSA-p56p-gq3f-whg8'}]
references: [{'text': 'https://github.com/sunrise-choir/flumedb-rs/issues/10', 'url': 'https://github.com/sunrise-choir/flumedb-rs/issues/10'}, {'text': 'https://github.com/sunrise-choir/flumedb-rs/pull/12', 'url': 'https://github.com/sunrise-choir/flumedb-rs/pull/12'}]
patched: >=0.1.6
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation.
There are two of such cases (go_offset_log::read_entry()&offset_log::read_entry()). ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: readon uninitialized buffer may cause UB (bite::read::BiteReadExpandedExt::read_framed_max)
reported: December 31, 2020
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'bite(crates.io)', 'url': '/packages/bite.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36511', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36511'}, {'text': 'GHSA-72r2-rg28-47v9', 'url': 'https://github.com/advisories/GHSA-72r2-rg28-47v9'}, {'text': 'GHSA-v2ch-fc8f-qm33', 'url': 'https://github.com/advisories/GHSA-v2ch-fc8f-qm33'}]
references: [{'text': 'https://github.com/hinaria/bite/issues/1', 'url': 'https://github.com/hinaria/bite/issues/1'}]
patched: no patched versions
description: Affected versions of this crate calls a user providedReadimplementation on an uninitialized buffer. Readon uninitialized buffer is defined as undefined behavior in Rust. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: 'Read' on uninitialized memory may cause UB
reported: January  3, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'binjs_io(crates.io)', 'url': '/packages/binjs_io.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45683', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45683'}, {'text': 'GHSA-c6px-4grw-hrjr', 'url': 'https://github.com/advisories/GHSA-c6px-4grw-hrjr'}, {'text': 'GHSA-cw4j-cf6c-mmfv', 'url': 'https://github.com/advisories/GHSA-cw4j-cf6c-mmfv'}]
references: [{'text': 'https://github.com/binast/binjs-ref/issues/460', 'url': 'https://github.com/binast/binjs-ref/issues/460'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. The crate currently contains 4 occurrences of such cases. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: columnar:Readon uninitialized buffer may cause UB (ColumnarReadExt::read_typed_vec())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'columnar(crates.io)', 'url': '/packages/columnar.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45685', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45685'}, {'text': 'GHSA-9mp7-45qh-r8j8', 'url': 'https://github.com/advisories/GHSA-9mp7-45qh-r8j8'}, {'text': 'GHSA-cxcc-q839-2cw9', 'url': 'https://github.com/advisories/GHSA-cxcc-q839-2cw9'}]
references: [{'text': 'https://github.com/frankmcsherry/columnar/issues/6', 'url': 'https://github.com/frankmcsherry/columnar/issues/6'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation (ColumnarReadExt::read_typed_vec()). ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Window can read out of bounds if Read instance returns more bytes than buffer size
reported: February  3, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'rdiff(crates.io)', 'url': '/packages/rdiff.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45694', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45694'}, {'text': 'GHSA-2rxc-8f9w-fjq8', 'url': 'https://github.com/advisories/GHSA-2rxc-8f9w-fjq8'}, {'text': 'GHSA-q579-9wp9-gfp2', 'url': 'https://github.com/advisories/GHSA-q579-9wp9-gfp2'}]
references: [{'text': 'https://github.com/dyule/rdiff/issues/3', 'url': 'https://github.com/dyule/rdiff/issues/3'}]
patched: no patched versions
description: rdiffperforms a diff of two provided strings or files. As part of its reading
code it uses the return value of aReadinstance to set the length of
its internal character vector. If theReadimplementation claims that it has read more bytes than the length
of the provided buffer, the length of the vector will be set to longer than its
capacity. This causesrdiffAPIs to return uninitialized memory in its API
methods. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: InputStream::read_exact :Readon uninitialized buffer causes UB
reported: December 31, 2020
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'buffoon(crates.io)', 'url': '/packages/buffoon.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36512', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36512'}, {'text': 'GHSA-hmx9-jm3v-33hv', 'url': 'https://github.com/advisories/GHSA-hmx9-jm3v-33hv'}, {'text': 'GHSA-v938-qcc9-rwv8', 'url': 'https://github.com/advisories/GHSA-v938-qcc9-rwv8'}]
references: [{'text': 'https://github.com/carllerche/buffoon/issues/2', 'url': 'https://github.com/carllerche/buffoon/issues/2'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized memory may cause UB (fn preamble_skipcount())
reported: January  5, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'csv-sniffer(crates.io)', 'url': '/packages/csv-sniffer.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45686', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45686'}, {'text': 'GHSA-9783-42pm-x5jq', 'url': 'https://github.com/advisories/GHSA-9783-42pm-x5jq'}, {'text': 'GHSA-r67p-m7g9-gxw6', 'url': 'https://github.com/advisories/GHSA-r67p-m7g9-gxw6'}]
references: [{'text': 'https://github.com/jblondin/csv-sniffer/issues/1', 'url': 'https://github.com/jblondin/csv-sniffer/issues/1'}, {'text': 'https://github.com/jblondin/csv-sniffer/pull/2', 'url': 'https://github.com/jblondin/csv-sniffer/pull/2'}]
patched: >=0.2.0
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation (withinfn preamble_skipcount()). ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Readon uninitialized buffer can cause UB (impl ofReadKVExt)
reported: January  3, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'bronzedb-protocol(crates.io)', 'url': '/packages/bronzedb-protocol.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45682', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45682'}, {'text': 'GHSA-5phc-849h-vcxg', 'url': 'https://github.com/advisories/GHSA-5phc-849h-vcxg'}, {'text': 'GHSA-jv2r-jx6q-89jg', 'url': 'https://github.com/advisories/GHSA-jv2r-jx6q-89jg'}]
references: [{'text': 'https://github.com/Hexilee/BronzeDB/issues/1', 'url': 'https://github.com/Hexilee/BronzeDB/issues/1'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Reading on uninitialized buffer may cause UB (gfx_auxil::read_spirv())
reported: January  7, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'gfx-auxil(crates.io)', 'url': '/packages/gfx-auxil.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-45689', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45689'}, {'text': 'GHSA-28p5-7rg4-8v99', 'url': 'https://github.com/advisories/GHSA-28p5-7rg4-8v99'}, {'text': 'GHSA-ff2r-xpwq-6whj', 'url': 'https://github.com/advisories/GHSA-ff2r-xpwq-6whj'}]
references: [{'text': 'https://github.com/gfx-rs/gfx/issues/3567', 'url': 'https://github.com/gfx-rs/gfx/issues/3567'}]
patched: no patched versions
description: Affected versions of this crate passes an uninitialized buffer to a user-providedReadimplementation. ArbitraryReadimplementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: vec-const attempts to construct a Vec from a pointer to a const slice
reported: August 14, 2021
issued: August 21, 2021(last modified: June 13, 2023)
package: {'name': 'vec-const(crates.io)', 'url': '/packages/vec-const.html'}
type: INFOUnsound
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-45680', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45680'}, {'text': 'GHSA-jmwx-r3gq-qq3p', 'url': 'https://github.com/advisories/GHSA-jmwx-r3gq-qq3p'}, {'text': 'GHSA-x76r-966h-5qv9', 'url': 'https://github.com/advisories/GHSA-x76r-966h-5qv9'}]
references: [{'text': 'https://github.com/Eolu/vec-const/issues/1#issuecomment-898908241', 'url': 'https://github.com/Eolu/vec-const/issues/1#issuecomment-898908241'}]
patched: >=2.0.0
description: Affected versions of this crate claimed to construct a constVecwith nonzero length and capacity, but that cannot be done because such aVecrequires a pointer from an allocator. The implementation was later changed to just construct astd::borrow::Cow. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: anymap is unmaintained.
reported: May  7, 2021
issued: May  7, 2021(last modified: June 13, 2023)
package: {'name': 'anymap(crates.io)', 'url': '/packages/anymap.html'}
type: INFOUnmaintained
aliases: [{'text': 'CVE-2021-38187', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38187'}, {'text': 'GHSA-hc92-9h3m-c39j', 'url': 'https://github.com/advisories/GHSA-hc92-9h3m-c39j'}]
references: [{'text': 'https://github.com/chris-morgan/anymap/issues/37', 'url': 'https://github.com/chris-morgan/anymap/issues/37'}]
patched: no patched versions
description: Theanymapcrate does not appear to be maintained, and the most recent
published version 0.12.1 includes a soundness bug. This has beenfixeda few years ago, but
was never released. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cpuid-boolhas been renamed tocpufeatures
reported: May  6, 2021
issued: May  6, 2021
package: {'name': 'cpuid-bool(crates.io)', 'url': '/packages/cpuid-bool.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/utils/pull/381', 'url': 'https://github.com/RustCrypto/utils/pull/381'}]
patched: no patched versions
description: Please use the `cpufeatures`` crate going forward: https://github.com/RustCrypto/utils/tree/master/cpufeatures There will be no further releases ofcpuid-bool. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: aes-ctrhas been merged into theaescrate
reported: April 29, 2021
issued: May  3, 2021
package: {'name': 'aes-ctr(crates.io)', 'url': '/packages/aes-ctr.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/block-ciphers/pull/200', 'url': 'https://github.com/RustCrypto/block-ciphers/pull/200'}]
patched: no patched versions
description: Please use theaescrate going forward. The new repository location is at: https://github.com/RustCrypto/block-ciphers/tree/master/aes Theaescrate now has an optionalctrfeature which autodetects SIMD
features oni686/x86-64targets and uses them if available, or otherwise
falls back to the implementation in thectrcrate. If you would prefer not to have this autodetection performed, use theaescrate directly with thectrcrate. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: project abandoned; migrate to theaes-sivcrate
reported: February 28, 2021
issued: May  3, 2021
package: {'name': 'miscreant(crates.io)', 'url': '/packages/miscreant.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/miscreant/miscreant.rs/commit/5d921f579e0c2b9960d472cf377b8487d97fbcec', 'url': 'https://github.com/miscreant/miscreant.rs/commit/5d921f579e0c2b9960d472cf377b8487d97fbcec'}]
patched: no patched versions
description: The Miscreant project has been abandoned and archived. The Rust implementation has been adapted into the newaes-sivcrate which
implements both the AES-CMAC-SIV and AES-PMAC-SIV constructions: https://github.com/RustCrypto/AEADs/tree/master/aes-siv Please migrate to theaes-sivcrate. Alternatively see theaes-gcm-sivcrate for a newer, faster construction
which provides similar properties: https://github.com/RustCrypto/AEADs/tree/master/aes-gcm-siv Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: aesnihas been merged into theaescrate
reported: April 29, 2021
issued: May  3, 2021
package: {'name': 'aesni(crates.io)', 'url': '/packages/aesni.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/block-ciphers/pull/200', 'url': 'https://github.com/RustCrypto/block-ciphers/pull/200'}]
patched: no patched versions
description: Please use theaescrate going forward. The new repository location is at: https://github.com/RustCrypto/block-ciphers/tree/master/aes AES-NI is now autodetected at runtime oni686/x86-64platforms.
If AES-NI is not present, theaescrate will fallback to a constant-time
portable software implementation. To prevent this fallback (and have absence of AES-NI result in an illegal
instruction crash instead), continue to pass the same RUSTFLAGS which were
previously required for theaesnicrate to compile: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: aes-softhas been merged into theaescrate
reported: April 29, 2021
issued: May  3, 2021
package: {'name': 'aes-soft(crates.io)', 'url': '/packages/aes-soft.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/block-ciphers/pull/200', 'url': 'https://github.com/RustCrypto/block-ciphers/pull/200'}]
patched: no patched versions
description: Please use theaescrate going forward. The new repository location is at: https://github.com/RustCrypto/block-ciphers/tree/master/aes AES-NI is now autodetected at runtime oni686/x86-64platforms.
If AES-NI is not present, theaescrate will fallback to a constant-time
portable software implementation. To force the use of a constant-time portable implementation on these platforms,
even if AES-NI is available, use the newforce-softfeature of theaescrate to disable autodetection. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rulinalg is unmaintained, use nalgebra instead
reported: February 11, 2020
issued: March  4, 2021
package: {'name': 'rulinalg(crates.io)', 'url': '/packages/rulinalg.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/AtheMathmo/rulinalg/issues/201#issuecomment-584749313', 'url': 'https://github.com/AtheMathmo/rulinalg/issues/201#issuecomment-584749313'}]
patched: no patched versions
description: Therulinalgcrate is no longer maintained, usenalgebrainstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: office is unmaintained, use calamine instead
reported: February  4, 2021
issued: March  3, 2021
package: {'name': 'office(crates.io)', 'url': '/packages/office.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustSec/advisory-db/issues/742#issuecomment-773313783', 'url': 'https://github.com/RustSec/advisory-db/issues/742#issuecomment-773313783'}]
patched: no patched versions
description: Theofficecrate is unmaintained. Usecalaminefor reading excel files. Contact theofficeauthor for ownership of the package name. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toqjsonrpc
reported: February 15, 2021
issued: February 15, 2021
package: {'name': 'jsonrpc-quic(crates.io)', 'url': '/packages/jsonrpc-quic.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_api/pull/623', 'url': 'https://github.com/maidsafe/sn_api/pull/623'}]
patched: no patched versions
description: This crate has been renamed fromjsonrpc-quictoqjsonrpc. The new repository location is: https://github.com/maidsafe/sn_api Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_api
reported: February 15, 2021
issued: February 15, 2021
package: {'name': 'safe-api(crates.io)', 'url': '/packages/safe-api.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_api/pull/619', 'url': 'https://github.com/maidsafe/sn_api/pull/619'}]
patched: no patched versions
description: This crate has been renamed fromsafe-apitosn_api. The new repository location is: https://github.com/maidsafe/sn_api Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: lzw is unmaintained
reported: February 10, 2020
issued: February 10, 2021
package: {'name': 'lzw(crates.io)', 'url': '/packages/lzw.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/nwin/lzw/issues/2', 'url': 'https://github.com/nwin/lzw/issues/2'}]
patched: no patched versions
unaffected: >0.10.0
description: The author of thelzwcrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: stderr is unmaintained; use eprintln instead
reported: December 22, 2020
issued: January 20, 2021
package: {'name': 'stderr(crates.io)', 'url': '/packages/stderr.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/biluohc/stderr/issues/5', 'url': 'https://github.com/biluohc/stderr/issues/5'}]
patched: no patched versions
description: Thestderrcrate is no longer maintained by its current owner. The author recommends using theeprintlnmacro from the standard library as a
replacement. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: difference is unmaintained
reported: December 20, 2020
issued: January  6, 2021(last modified: January 24, 2021)
package: {'name': 'difference(crates.io)', 'url': '/packages/difference.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/johannhof/difference.rs/issues/45', 'url': 'https://github.com/johannhof/difference.rs/issues/45'}]
patched: no patched versions
unaffected: >2.0.0
description: The author of thedifferencecrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: interfaces2 is unmaintained, use interfaces instead
reported: January  4, 2021
issued: January  6, 2021
package: {'name': 'interfaces2(crates.io)', 'url': '/packages/interfaces2.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/aep/interfaces-rs', 'url': 'https://github.com/aep/interfaces-rs'}]
patched: no patched versions
description: Theinterfaces2crate is not maintained any more;
useinterfacesinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been superseded bysn_client
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_authenticator(crates.io)', 'url': '/packages/safe_authenticator.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_client/pull/1267', 'url': 'https://github.com/maidsafe/sn_client/pull/1267'}]
patched: no patched versions
description: This crate has been superseded bysn_client. The new repository location is: https://github.com/maidsafe/sn_client Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_node
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_vault(crates.io)', 'url': '/packages/safe_vault.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_node/pull/1116', 'url': 'https://github.com/maidsafe/sn_node/pull/1116'}]
patched: no patched versions
description: This crate has been renamed fromsafe_vaulttosn_node. The new repository location is: https://github.com/maidsafe/sn_node Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been superseded bysn_client
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_app(crates.io)', 'url': '/packages/safe_app.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_client/pull/1267', 'url': 'https://github.com/maidsafe/sn_client/pull/1267'}]
patched: no patched versions
description: This crate has been superseded bysn_client. The new repository location is: https://github.com/maidsafe/sn_client Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_client
reported: December  7, 2020
issued: December  7, 2020
package: {'name': 'safe_core(crates.io)', 'url': '/packages/safe_core.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_client/pull/1267', 'url': 'https://github.com/maidsafe/sn_client/pull/1267'}]
patched: no patched versions
description: This crate has been renamed fromsafe_coretosn_client. The new repository location is: https://github.com/maidsafe/sn_client Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_routing
reported: November  2, 2020
issued: December  2, 2020
package: {'name': 'routing(crates.io)', 'url': '/packages/routing.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_routing/pull/2190', 'url': 'https://github.com/maidsafe/sn_routing/pull/2190'}]
patched: no patched versions
description: This crate has been renamed fromroutingtosn_routing. The new repository location is: https://github.com/maidsafe/sn_routing Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: memmap is unmaintained
reported: December  2, 2020
issued: December  2, 2020(last modified: August 25, 2022)
package: {'name': 'memmap(crates.io)', 'url': '/packages/memmap.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/danburkert/memmap-rs/issues/90', 'url': 'https://github.com/danburkert/memmap-rs/issues/90'}]
patched: no patched versions
unaffected: >0.7.0
description: The author of thememmapcrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Some lock_api lock guard objects can cause data races
reported: November  8, 2020
issued: November 18, 2020(last modified: June 13, 2023)
package: {'name': 'lock_api(crates.io)', 'url': '/packages/lock_api.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35910', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35910'}, {'text': 'CVE-2020-35911', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35911'}, {'text': 'CVE-2020-35912', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35912'}, {'text': 'CVE-2020-35913', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35913'}, {'text': 'CVE-2020-35914', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35914'}, {'text': 'GHSA-5wg8-7c9q-794v', 'url': 'https://github.com/advisories/GHSA-5wg8-7c9q-794v'}, {'text': 'GHSA-gmv4-vmx3-x9f3', 'url': 'https://github.com/advisories/GHSA-gmv4-vmx3-x9f3'}, {'text': 'GHSA-hj9h-wrgg-hgmx', 'url': 'https://github.com/advisories/GHSA-hj9h-wrgg-hgmx'}, {'text': 'GHSA-ppj3-7jw3-8vc4', 'url': 'https://github.com/advisories/GHSA-ppj3-7jw3-8vc4'}, {'text': 'GHSA-vh4p-6j7g-f4j9', 'url': 'https://github.com/advisories/GHSA-vh4p-6j7g-f4j9'}]
references: [{'text': 'https://github.com/Amanieu/parking_lot/pull/262', 'url': 'https://github.com/Amanieu/parking_lot/pull/262'}]
patched: >=0.4.2
affected functions: Version
lock_api::mappedmutexguard: >=0.1.0
lock_api::mappedrwlockreadguard: >=0.1.0
lock_api::mappedrwlockwriteguard: >=0.1.0
lock_api::rwlockreadguard: >=0.1.0
lock_api::rwlockwriteguard: >=0.1.0
description: Affected versions of lock_api had unsound implementations of theSendorSynctraits for some guard objects, namely: These guards could allow data races through types that are not safe toSendacross thread boundaries in safe Rust code. This issue was fixed by changing the trait bounds on theMappedguard types
and removing theSynctrait for theRwLockguards. Advisory available underCC0-1.0license.
affected_functions: lock_api;;mappedmutexguard
version_of_Affected: >=0.1.0

---
classification: INFO
subtitle: crate has been renamed toqp2p
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'quic-p2p(crates.io)', 'url': '/packages/quic-p2p.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/qp2p/pull/141', 'url': 'https://github.com/maidsafe/qp2p/pull/141'}]
patched: no patched versions
description: This crate has been renamed fromquic-p2ptoqp2p. The new repository location is: https://github.com/maidsafe/qp2p Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosafe-nd
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'safe-nd(crates.io)', 'url': '/packages/safe-nd.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_data_types/pull/218', 'url': 'https://github.com/maidsafe/sn_data_types/pull/218'}]
patched: no patched versions
description: This crate has been renamed fromsafe-ndtosn_data_types. The new repository location is: https://github.com/maidsafe/sn_data_types Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_fake_clock
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'fake_clock(crates.io)', 'url': '/packages/fake_clock.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_fake_clock/pull/38', 'url': 'https://github.com/maidsafe/sn_fake_clock/pull/38'}]
patched: no patched versions
description: This crate has been renamed fromfake_clocktosn_fake_clock. The new repository location is: https://github.com/maidsafe/sn_fake_clock Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_bindgen
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'safe_bindgen(crates.io)', 'url': '/packages/safe_bindgen.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_bindgen/pull/67', 'url': 'https://github.com/maidsafe/sn_bindgen/pull/67'}]
patched: no patched versions
description: This crate has been renamed fromsafe_bindgentosn_bindgen. The new repository location is: https://github.com/maidsafe/sn_bindgen Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tosn_ffi_utils
reported: November  2, 2020
issued: November  2, 2020
package: {'name': 'ffi_utils(crates.io)', 'url': '/packages/ffi_utils.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/sn_ffi_utils/pull/45', 'url': 'https://github.com/maidsafe/sn_ffi_utils/pull/45'}]
patched: no patched versions
description: This crate has been renamed fromffi_utilstosn_ffi_utils. The new repository location is: https://github.com/maidsafe/sn_ffi_utils Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: stdweb is unmaintained
reported: May  4, 2020
issued: October 25, 2020
package: {'name': 'stdweb(crates.io)', 'url': '/packages/stdweb.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/koute/stdweb/issues/403', 'url': 'https://github.com/koute/stdweb/issues/403'}]
patched: no patched versions
unaffected: >0.4.20
description: The author of thestdwebcrate is unresponsive. Maintained alternatives: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Fix for UB in failure to catch panics crossing FFI boundaries
reported: March 10, 2019
issued: October 25, 2020(last modified: June 13, 2023)
package: {'name': 'libpulse-binding(crates.io)', 'url': '/packages/libpulse-binding.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2019-25055', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25055'}, {'text': 'GHSA-wcxc-jf6c-8rx9', 'url': 'https://github.com/advisories/GHSA-wcxc-jf6c-8rx9'}, {'text': 'GHSA-xvcg-2q82-r87j', 'url': 'https://github.com/advisories/GHSA-xvcg-2q82-r87j'}]
references: [{'text': 'https://github.com/jnqnfe/pulse-binding-rust/commit/7fd282aef7787577c385aed88cb25d004b85f494', 'url': 'https://github.com/jnqnfe/pulse-binding-rust/commit/7fd282aef7787577c385aed88cb25d004b85f494'}]
patched: >=2.6.0
description: Affected versions of this crate failed to catch panics crossing FFI boundaries via callbacks, which
is a form of UB. This flaw was corrected bythis commitwhich was included in version 2.6.0. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tocipher
reported: October 15, 2020
issued: October 25, 2020
package: {'name': 'block-cipher(crates.io)', 'url': '/packages/block-cipher.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/traits/pull/337', 'url': 'https://github.com/RustCrypto/traits/pull/337'}]
patched: no patched versions
description: This crate has been renamed fromblock-ciphertocipher. The new repository location is at: https://github.com/RustCrypto/traits/tree/master/cipher Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed tocipher
reported: October 15, 2020
issued: October 25, 2020
package: {'name': 'stream-cipher(crates.io)', 'url': '/packages/stream-cipher.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/traits/pull/337', 'url': 'https://github.com/RustCrypto/traits/pull/337'}]
patched: no patched versions
description: This crate has been renamed fromstream-ciphertocipher. The new repository location is at: https://github.com/RustCrypto/traits/tree/master/cipher Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crate has been renamed toblock-cipher
reported: May 26, 2020
issued: October  1, 2020
package: {'name': 'block-cipher-trait(crates.io)', 'url': '/packages/block-cipher-trait.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustCrypto/traits/pull/139', 'url': 'https://github.com/RustCrypto/traits/pull/139'}]
patched: no patched versions
description: This crate has been renamed fromblock-cipher-traittoblock-cipher. The new repository location is at: https://github.com/RustCrypto/traits/tree/master/block-cipher Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tempdircrate has been deprecated; usetempfileinstead
reported: February 13, 2018
issued: October  1, 2020
package: {'name': 'tempdir(crates.io)', 'url': '/packages/tempdir.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/rust-lang-deprecated/tempdir/pull/46', 'url': 'https://github.com/rust-lang-deprecated/tempdir/pull/46'}]
patched: no patched versions
description: Thetempdircrate has been deprecated
and the functionality is merged intotempfile. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: term is looking for a new maintainer
reported: November 19, 2018
issued: October  1, 2020
package: {'name': 'term(crates.io)', 'url': '/packages/term.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/Stebalien/term/issues/93', 'url': 'https://github.com/Stebalien/term/issues/93'}]
patched: no patched versions
unaffected: >0.6.1
description: The author of thetermcrate does not have time to maintain it and is looking
for a new maintainer. Some maintained alternatives you can potentially switch to instead, depending
on your needs: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: net2crate has been deprecated; usesocket2instead
reported: May  1, 2020
issued: October  1, 2020
package: {'name': 'net2(crates.io)', 'url': '/packages/net2.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/deprecrated/net2-rs/commit/3350e3819adf151709047e93f25583a5df681091', 'url': 'https://github.com/deprecrated/net2-rs/commit/3350e3819adf151709047e93f25583a5df681091'}]
patched: no patched versions
description: Thenet2crate has been deprecated
and users are encouraged to consideredsocket2instead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: stb_truetypecrate has been deprecated; usettf-parserinstead
reported: April 18, 2020
issued: October  1, 2020
package: {'name': 'stb_truetype(crates.io)', 'url': '/packages/stb_truetype.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.redox-os.org/redox-os/stb_truetype-rs/-/commit/f1f5be4794e87bfc80a4255bc3f23ed75dd77645', 'url': 'https://gitlab.redox-os.org/redox-os/stb_truetype-rs/-/commit/f1f5be4794e87bfc80a4255bc3f23ed75dd77645'}]
patched: no patched versions
description: This crate was maintained for use in rusttype which has switched to usettf-parser Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: Library exclusively intended to obfuscate code.
reported: April 23, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'plutonium(crates.io)', 'url': '/packages/plutonium.html'}
type: INFONotice
aliases: [{'text': 'GHSA-gfg9-x6px-r7gr', 'url': 'https://github.com/advisories/GHSA-gfg9-x6px-r7gr'}]
references: [{'text': 'https://docs.rs/plutonium', 'url': 'https://docs.rs/plutonium'}]
patched: no patched versions
description: This crate allows you to write safe functions with unsafe bodies without theunsafekeyword. The value this adds is questionable, and hidesunsafeusages from naive analysis. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: cassandracrate is unmaintained; usecassandra-cppinstead
reported: December 15, 2016
issued: October  1, 2020
package: {'name': 'cassandra(crates.io)', 'url': '/packages/cassandra.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/tupshin/cassandra-rs/issues/52', 'url': 'https://github.com/tupshin/cassandra-rs/issues/52'}]
patched: no patched versions
unaffected: >0.8.1
description: Thecassandracrate has not seen a release since December 2016, and its author
is unresponsive. Thecassandra-cppcrate is a maintained fork: https://github.com/Metaswitch/cassandra-rs Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: libusb is unmaintained; use rusb instead
reported: September 10, 2016
issued: October  1, 2020
package: {'name': 'libusb(crates.io)', 'url': '/packages/libusb.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/dcuddeback/libusb-rs/issues/33', 'url': 'https://github.com/dcuddeback/libusb-rs/issues/33'}]
patched: no patched versions
unaffected: >0.3.0
description: Thelibusbcrate has not seen a release since September 2016, and its author
is unresponsive. Therusbcrate is a maintained fork: https://github.com/a1ien/rusb Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rust_sodium is unmaintained; switch to a modern alternative
reported: January 20, 2020
issued: October  1, 2020
package: {'name': 'rust_sodium(crates.io)', 'url': '/packages/rust_sodium.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/rust_sodium/pull/117', 'url': 'https://github.com/maidsafe/rust_sodium/pull/117'}]
patched: no patched versions
unaffected: >0.10.2
description: Therust_sodiumcrate is no longer maintained by its current owner, who
advise in the repository readme that they are looking for
someone else to take ownership of it. We recommend you switch to an alternative crate such as: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: rust-crypto is unmaintained; switch to a modern alternative
reported: September  6, 2016
issued: October  1, 2020(last modified: January  9, 2022)
package: {'name': 'rust-crypto(crates.io)', 'url': '/packages/rust-crypto.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/DaGenix/rust-crypto/issues/440', 'url': 'https://github.com/DaGenix/rust-crypto/issues/440'}]
patched: no patched versions
unaffected: >0.2.36
description: Therust-cryptocrate has not seen a release or GitHub commit since 2016,
and its author is unresponsive. NOTE: The (old)rust-cryptocrate (with hyphen) should not be confused with
similarly named (new)RustCrypto GitHub Org(without hyphen). The GitHub Org
is actively maintained. We recommend you switch to one of the following crates instead, depending on
which algorithms you need: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: tiberius is unmaintained
reported: February 28, 2020
issued: October  1, 2020
package: {'name': 'tiberius(crates.io)', 'url': '/packages/tiberius.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/RustSec/advisory-db/issues/261', 'url': 'https://github.com/RustSec/advisory-db/issues/261'}]
patched: no patched versions
unaffected: >0.3.2
description: The author oftiberiushas archived the GitHub repository and left the
following note: Suggested alternatives are: Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: smallvec creates uninitialized value of any type
reported: September 25, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2018-25023', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-25023'}, {'text': 'GHSA-55m5-whcv-c49c', 'url': 'https://github.com/advisories/GHSA-55m5-whcv-c49c'}, {'text': 'GHSA-66p5-j55p-32r9', 'url': 'https://github.com/advisories/GHSA-66p5-j55p-32r9'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/126', 'url': 'https://github.com/servo/rust-smallvec/issues/126'}]
patched: >=0.6.13
description: Affected versions of this crate calledmem::uninitialized()to create values of a user-supplied typeT.
This is unsound e.g. ifTis a reference type (which must be non-null and thus may not remain uninitialized). The flaw was corrected by avoiding the use ofmem::uninitialized(), usingMaybeUninitinstead. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: chan is end-of-life; use crossbeam-channel instead
reported: July 31, 2018
issued: October  1, 2020
package: {'name': 'chan(crates.io)', 'url': '/packages/chan.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/BurntSushi/chan/commit/0a5c0d4ad4adc90a54ee04a427389acf2e157275', 'url': 'https://github.com/BurntSushi/chan/commit/0a5c0d4ad4adc90a54ee04a427389acf2e157275'}]
patched: no patched versions
unaffected: >0.1.23
description: chanhas reached its end-of-life and is now deprecated. The intended successor of this crate iscrossbeam-channel.
Its API is strikingly similar, but comes with a much betterselect!macro,
better performance, a better test suite and an all-around better
implementation. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: lz4-compress is unmaintained
reported: April 17, 2017
issued: October  1, 2020
package: {'name': 'lz4-compress(crates.io)', 'url': '/packages/lz4-compress.html'}
type: INFOUnmaintained
references: [{'text': 'https://gitlab.redox-os.org/redox-os/tfs/issues/89', 'url': 'https://gitlab.redox-os.org/redox-os/tfs/issues/89'}]
patched: no patched versions
description: According to the developersthis crate is no longer maintained. The suggested alternative islz4-compression, a maintained fork oflz4-compress. See alsolz-fearwhich is compatible with the reference LZ4 implementation in C, but not with lz4-compress. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: crust repo has been archived; use libp2p instead
reported: November 21, 2019
issued: October  1, 2020
package: {'name': 'crust(crates.io)', 'url': '/packages/crust.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/maidsafe/crust', 'url': 'https://github.com/maidsafe/crust'}]
patched: no patched versions
unaffected: >0.32.1
description: ** Thecrustcrate repo was archived with no warning or explanation.** Given that it was archived with no warning or successor, there's not an
official replacement butrust-libp2plooks like it's got a similar feature set and is actively maintained. Advisory available underCC0-1.0license.

---
classification: INFO
subtitle: quickersort is deprecated and unmaintained
reported: June 30, 2018
issued: October  1, 2020
package: {'name': 'quickersort(crates.io)', 'url': '/packages/quickersort.html'}
type: INFOUnmaintained
references: [{'text': 'https://github.com/notriddle/quickersort/commit/0bc164366315801f0c6b31f4081b7df9fc894076', 'url': 'https://github.com/notriddle/quickersort/commit/0bc164366315801f0c6b31f4081b7df9fc894076'}]
patched: no patched versions
unaffected: >3.0.1
description: The author of thequickersortcrate has deprecated it and does not recommend using it anymore. Everything in it has been incorporated intostd::sort_unstablein the standard library as of Rust 1.20. Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: gix-path uses local config across repos when it is the highest scope
reported: August 31, 2024
issued: September  1, 2024(last modified: September  3, 2024)
package: {'name': 'gix-path(crates.io)', 'url': '/packages/gix-path.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2024-45305', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45305'}, {'text': 'GHSA-v26r-4c9c-h3j6', 'url': 'https://github.com/advisories/GHSA-v26r-4c9c-h3j6'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-v26r-4c9c-h3j6', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-v26r-4c9c-h3j6'}, {'text': 'https://github.com/advisories/GHSA-v26r-4c9c-h3j6', 'url': 'https://github.com/advisories/GHSA-v26r-4c9c-h3j6'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-45305', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-45305'}]
cvss score: 2.5LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N
patched: >=0.10.10
affected functions: Version
gix_path::env::installation_config: *
gix_path::env::installation_config_prefix: *
description: 
unaffected: ["gix-pathexecutesgitto find the path of a configuration file that belongs to thegitinstallation itself, but mistakenly treats the local repository's configuration as system-wide if no higher scoped configuration is found. In rare cases, this causes a less trusted repository to be treated as more trusted, or leaks sensitive information from one repository to another, such as sending credentials to another repository's remote."]
References: ['It is believed to be very difficult to exploit this vulnerability deliberately, due to the need either to anticipate a situation in which higher-scoped configuration variables would be absent, or to arrange for this to happen. Although any operating system may be affected, users running Apple Git on macOS are much less likely to be affected.', "In the example shown above, more secure general practices would avoid it: using a credential manager, or even usinghttp.<url>.extraHeaderwith as specific a<url>as possible, rather than the more generalhttp.extraHeader. Many scenarios are analogous: if each repository's configuration is as secure as possible for how the repository is used, and secrets are stored securely and separately, then the circumstances under which an unacceptably unsecure configuration is used, or under which a leak of credentials would occur, become unlikely.", 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: gix_path;;env;;installation_config
version_of_Affected: *

---
classification: LOW
subtitle: gitoxide-core does not neutralize special characters for terminals
reported: August 22, 2024
issued: August 23, 2024
package: {'name': 'gitoxide-core(crates.io)', 'url': '/packages/gitoxide-core.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2024-43785', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-43785'}, {'text': 'GHSA-88g2-r9rw-g55h', 'url': 'https://github.com/advisories/GHSA-88g2-r9rw-g55h'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-88g2-r9rw-g55h', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-88g2-r9rw-g55h'}, {'text': 'https://github.com/advisories/GHSA-88g2-r9rw-g55h', 'url': 'https://github.com/advisories/GHSA-88g2-r9rw-g55h'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-43785', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-43785'}, {'text': 'https://github.com/Byron/gitoxide/issues/1534', 'url': 'https://github.com/Byron/gitoxide/issues/1534'}]
cvss score: 2.5LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N
patched: no patched versions
description: 
unaffected: ['Thegixandeincommands write pathnames and other metadata literally to terminals, even if they contain characters terminals treat specially, including ANSI escape sequences. This sometimes allows an untrusted repository to misrepresent its contents and to alter or concoct error messages.']
References: ['For users who do not clone or operate in clones of untrusted repositories, there is no impact.', 'Windows is much less affected than Unix-like systems due to limitations on what characters can appear in filenames, and because traditionally Windows terminals do not support as many ANSI escape sequences.', 'Because differentgixandeincommands display different data in different formats, the author of a malicious repository must guess how it will be used, which complicates crafting truly convincing output, though it may be possible to craft a repository wheregix clonefails to clone it but produces a misleading message.', 'Although this is mainly exploitable on systemsotherthan Windows, in the ability to produce misleading output this superficially resemblesCVE-2024-35197. But this is much more limited, because:', {'text': 'CVE-2024-35197', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, 'The misleading output can only be made to go where the application is already sending output. Redirection is not defeated, and devices to access cannot be chosen by the attacker.', 'The misleading output can only be take placewhenthe application is already producing output. This limitation complicates the production of believable messages.', 'Only terminals are affected. Even if a standard stream is redirected to another file or device, these special characters would not have a special effect, unless echoed later without sanitization.', 'Reading and blocking cannot be performed.', 'Applications other than the gitoxidegixandeinexecutables are unaffected. The exception is if another application usesgitoxide-core. But this is explicitly discouraged in thegitoxide-coredocumentation and is believed to be rare.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: LOW
subtitle: Apache Arrow Rust Object Store: AWS WebIdentityToken exposure in log files
reported: July 23, 2024
issued: July 23, 2024
package: {'name': 'object_store(crates.io)', 'url': '/packages/object_store.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2024-41178', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-41178'}]
references: [{'text': 'https://github.com/apache/arrow-rs/pull/6074', 'url': 'https://github.com/apache/arrow-rs/pull/6074'}, {'text': 'https://www.openwall.com/lists/oss-security/2024/07/23/3', 'url': 'https://www.openwall.com/lists/oss-security/2024/07/23/3'}]
cvss score: 3.8LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: Low
user interaction: None
scope: Changed
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N
patched: >=0.10.2
unaffected: <0.5.0
description: Exposure of temporary credentials in logs in Apache Arrow Rust Object Store,
version 0.10.1 and earlier on all platforms using AWS WebIdentityTokens. On certain error conditions, the logs may contain the OIDC token passed toAssumeRoleWithWebIdentity.
This allows someone with access to the logs to impersonate that identity,
including performing their own calls to AssumeRoleWithWebIdentity, until the
OIDC token expires. Typically OIDC tokens are valid for up to an hour, although
this will vary depending on the issuer. Users are recommended to use a different AWS authentication mechanism, disable
logging or upgrade to version 0.10.2, which fixes this issue. When using AWS WebIdentityTokens with theobject_storecrate, in the event of
a failure and automatic retry, the underlyingreqwesterror, including the
full URL with the credentials, potentially in the parameters, is written to the
logs. Thanks to Paul Hatcherian for reporting this vulnerability Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: sudo-rs: Path Traversal vulnerability
reported: November  1, 2023
issued: November  6, 2023
package: {'name': 'sudo-rs(crates.io)', 'url': '/packages/sudo-rs.html'}
type: Vulnerability
categories: ['file-disclosure']
keywords: []
aliases: [{'text': 'CVE-2023-42456', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42456'}, {'text': 'GHSA-2r3c-m6v7-9354', 'url': 'https://github.com/advisories/GHSA-2r3c-m6v7-9354'}]
references: [{'text': 'https://github.com/advisories/GHSA-2r3c-m6v7-9354', 'url': 'https://github.com/advisories/GHSA-2r3c-m6v7-9354'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42456', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42456'}]
cvss score: 3.1LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: High
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:H/UI:R/S:U/C:N/I:L/A:L
patched: >=0.2.1
description: An issue was discovered where usernames containing the . and / characters could result in the corruption of specific files on the filesystem. As usernames are generally not limited by the characters they can contain, a username appearing to be a relative path can be constructed. For example we could add a user to the system containing the username ../../../../bin/cp. When logged in as a user with that name, that user could run sudo -K to clear their session record file. The session code then constructs the path to the session file by concatenating the username to the session file storage directory, resulting in a resolved path of /bin/cp. The code then clears that file, resulting in the cp binary effectively being removed from the system. An attacker needs to be able to login as a user with a constructed username. Given that such a username is unlikely to exist on an existing system, they will also need to be able to create the users with the constructed usernames. The bug is fixed in version 0.2.1 of sudo-rs. Sudo-rs now uses the uid for the user instead of their username for determining the filename. Note that an upgrade to this version will result in existing session files being ignored and users will be forced to re-authenticate. It also fully eliminates any possibility of path traversal, given that uids are always integer values. The issue was corrected in commitbfdbda22968e3de43fa8246cab1681cfd5d5493d. Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: Default functions in VolatileMemory trait lack bounds checks, potentially leading to out-of-bounds memory accesses
reported: September  1, 2023
issued: September  6, 2023
package: {'name': 'vm-memory(crates.io)', 'url': '/packages/vm-memory.html'}
type: INFOUnsound
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2023-41051', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-41051'}, {'text': 'GHSA-49hh-fprx-m68g', 'url': 'https://github.com/advisories/GHSA-49hh-fprx-m68g'}]
references: [{'text': 'https://github.com/rust-vmm/vm-memory/issues/250', 'url': 'https://github.com/rust-vmm/vm-memory/issues/250'}, {'text': 'https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8', 'url': 'https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8'}]
cvss score: 2.5LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'Low'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: None
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L
patched: >=0.12.2
affected functions: Version
vm_memory::volatile_memory::volatilememory::aligned_as_mut: <0.12.2
vm_memory::volatile_memory::volatilememory::aligned_as_ref: <0.12.2
vm_memory::volatile_memory::volatilememory::get_array_ref: <0.12.2
vm_memory::volatile_memory::volatilememory::get_atomic_ref: <0.12.2
vm_memory::volatile_memory::volatilememory::get_ref: <0.12.2
description: An issue was discovered in the default implementations of theVolatileMemory::{get_atomic_ref, aligned_as_ref, aligned_as_mut, get_ref, get_array_ref}trait functions, which allows out-of-bounds memory access if theVolatileMemory::get_slicefunction returns aVolatileSlicewhose length is less than the function’scountargument. No implementations ofget_sliceprovided invm_memoryare affected. Users of customVolatileMemoryimplementations may be impacted if the custom implementation does not adhere toget_slice's documentation. The issue started in version 0.1.0 but was fixed in version 0.12.2 by inserting a check that verifies that theVolatileSlicereturned byget_sliceis of the correct length. Advisory available underCC0-1.0license.
affected_functions: vm_memory;;volatile_memory;;volatilememory;;aligned_as_mut
version_of_Affected: <0.12.2

---
classification: LOW
subtitle: taurifilesystem scope partial bypass
reported: September 19, 2022
issued: February 25, 2023
package: {'name': 'tauri(crates.io)', 'url': '/packages/tauri.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2022-41874', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41874'}, {'text': 'GHSA-q9wv-22m9-vhqh', 'url': 'https://github.com/advisories/GHSA-q9wv-22m9-vhqh'}]
references: [{'text': 'https://github.com/tauri-apps/tauri/issues/5234', 'url': 'https://github.com/tauri-apps/tauri/issues/5234'}]
cvss score: 2.3LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: High
user interaction: Required
scope: Changed
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:H/UI:R/S:C/C:L/I:N/A:N
patched: >=1.0.7, <1.1.0>=1.1.2
unaffected: <1.0.0
description: A bug identified inthisissue allows a partial filesystem scope bypass if glob characters are used within file dialog or drag-and-drop functionalities. ThisPR fixes the issue by escaping glob characters. Advisory available underCC0-1.0license.

---
classification: LOW
subtitle: File exposure in pleaser
reported: May 27, 2021
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['file-disclosure']
aliases: [{'text': 'CVE-2021-31153', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31153'}, {'text': 'GHSA-f3fg-5j9p-vchc', 'url': 'https://github.com/advisories/GHSA-f3fg-5j9p-vchc'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31153', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2021-31153'}]
cvss score: 3.3LOW
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N
patched: >=0.4
description: pleaser before 0.4 allows a local unprivileged attacker to gain knowledge about the existence of files or directories in privileged locations via the search_path function, the --check option, or the -d option. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: gix-path can use a fake program files location
reported: July 18, 2024
issued: July 18, 2024
package: {'name': 'gix-path(crates.io)', 'url': '/packages/gix-path.html'}
type: Vulnerability
categories: ['code-execution', 'privilege-escalation']
keywords: []
aliases: [{'text': 'CVE-2024-40644', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40644'}, {'text': 'GHSA-mgvv-9p9g-3jv4', 'url': 'https://github.com/advisories/GHSA-mgvv-9p9g-3jv4'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-mgvv-9p9g-3jv4', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-mgvv-9p9g-3jv4'}, {'text': 'https://github.com/advisories/GHSA-mgvv-9p9g-3jv4', 'url': 'https://github.com/advisories/GHSA-mgvv-9p9g-3jv4'}]
cvss score: 6.8MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow', 'Privileges required': 'Low', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow
privileges required: Low
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:L
patched: >=0.10.9
unaffected: ['When looking for Git for Windows so it can run it to report its paths,gix-pathcan be tricked into running anothergit.exeplaced in an untrusted location by a limited user account.']
affected oses: windows
affected functions: Version
gix_path::env::exe_invocation: *
gix_path::env::installation_config: *
gix_path::env::installation_config_prefix: *
gix_path::env::system_prefix: *
description: 
References: ['Only Windows is affected. Exploitation is unlikely except on a 32-bit system. In particular, running a 32-bit build on a 64-bit system is not a risk factor. Furthermore, the attacker must have a user account on the system, though it may be a relatively unprivileged account. Such a user can perform privilege escalation and execute code as another user, though it may be difficult to do so reliably because the targeted user account must run an application or service that usesgix-pathand must not havegitin itsPATH.', 'The main exploitable configuration is one where Git for Windows has been installed but not added toPATH. This is one of the options in its installer, though not the default option. Alternatively, an affected program that sanitizes itsPATHto remove seemingly nonessential directories could allow exploitation. But for the most part, if the target user has configured aPATHin which the realgit.execan be found, then this cannot be exploited.', 'This vulnerability is comparable toCVE-2022-24765, in which an uncontrolled path likeC:\\.git\\config, which a limited user can create, could supply configuration used by other users. However, in this case, exploitation is slightly simpler because, rather than using configuration, an executable is directly run.', {'text': 'CVE-2022-24765', 'url': 'https://github.com/git-for-windows/git/security/advisories/GHSA-vw2c-22j4-2fh2'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: gix_path;;env;;exe_invocation
version_of_Affected: *

---
classification: MEDIUM
subtitle: Refs and paths with reserved Windows device names access the devices
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-index(crates.io)', 'url': '/packages/gix-index.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2024-35197', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35197'}, {'text': 'GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://github.com/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197'}]
cvss score: 5.4MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L
patched: >=0.33.0
affected oses: windows
description: 
unaffected: ['On Windows, fetching refs that clash with legacy device names reads from the devices, and checking out paths that clash with such names writes arbitrary data to the devices. This allows a repository, when cloned, to cause indefinite blocking or the production of arbitrary message that appear to have come from the application, and potentially other harmful effects under limited circumstances.']
References: ['If Windows is not used, or untrusted repositories are not cloned or otherwise used, then there is no impact.', 'The impact is expected to be limited in common configurations, but may vary widely depending on what devices exist, how they are being used, how much knowledge an attacker has of the precise details of their use, and whether the user is likely to trust information that appears in a console. Accessing devices through refs is expected to be less dangerous than accessing them through filenames, since it is trivial to attempt to write arbitrary data using filenames.', "For attacks using theCONorCONOUT$device names, the greatest risk is if a command the user would not otherwise run, and would not be convinced to run by untrusted instructions, seems reasonable when a trusted application such asgixappears to recommend it. The user may then be misled into running an attacker's command.", 'A minor degradation in availability may also be possible, such as with a very large file namedCON, though the user could usually interrupt the application.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: Refs and paths with reserved Windows device names access the devices
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-worktree(crates.io)', 'url': '/packages/gix-worktree.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2024-35197', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35197'}, {'text': 'GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://github.com/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197'}]
cvss score: 5.4MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L
patched: >=0.34.0
affected oses: windows
description: 
unaffected: ['On Windows, fetching refs that clash with legacy device names reads from the devices, and checking out paths that clash with such names writes arbitrary data to the devices. This allows a repository, when cloned, to cause indefinite blocking or the production of arbitrary message that appear to have come from the application, and potentially other harmful effects under limited circumstances.']
References: ['If Windows is not used, or untrusted repositories are not cloned or otherwise used, then there is no impact.', 'The impact is expected to be limited in common configurations, but may vary widely depending on what devices exist, how they are being used, how much knowledge an attacker has of the precise details of their use, and whether the user is likely to trust information that appears in a console. Accessing devices through refs is expected to be less dangerous than accessing them through filenames, since it is trivial to attempt to write arbitrary data using filenames.', "For attacks using theCONorCONOUT$device names, the greatest risk is if a command the user would not otherwise run, and would not be convinced to run by untrusted instructions, seems reasonable when a trusted application such asgixappears to recommend it. The user may then be misled into running an attacker's command.", 'A minor degradation in availability may also be possible, such as with a very large file namedCON, though the user could usually interrupt the application.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: Refs and paths with reserved Windows device names access the devices
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-ref(crates.io)', 'url': '/packages/gix-ref.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2024-35197', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35197'}, {'text': 'GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://github.com/advisories/GHSA-49jc-r788-3fc9', 'url': 'https://github.com/advisories/GHSA-49jc-r788-3fc9'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35197'}]
cvss score: 5.4MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L
patched: >=0.44.0
affected oses: windows
description: 
unaffected: ['On Windows, fetching refs that clash with legacy device names reads from the devices, and checking out paths that clash with such names writes arbitrary data to the devices. This allows a repository, when cloned, to cause indefinite blocking or the production of arbitrary message that appear to have come from the application, and potentially other harmful effects under limited circumstances.']
References: ['If Windows is not used, or untrusted repositories are not cloned or otherwise used, then there is no impact.', 'The impact is expected to be limited in common configurations, but may vary widely depending on what devices exist, how they are being used, how much knowledge an attacker has of the precise details of their use, and whether the user is likely to trust information that appears in a console. Accessing devices through refs is expected to be less dangerous than accessing them through filenames, since it is trivial to attempt to write arbitrary data using filenames.', "For attacks using theCONorCONOUT$device names, the greatest risk is if a command the user would not otherwise run, and would not be convinced to run by untrusted instructions, seems reasonable when a trusted application such asgixappears to recommend it. The user may then be misled into running an attacker's command.", 'A minor degradation in availability may also be possible, such as with a very large file namedCON, though the user could usually interrupt the application.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: serdedeserialization forFamStructWrapperlacks bound checks that could potentially lead to out-of-bounds memory access
reported: January  2, 2024
issued: January 13, 2024
package: {'name': 'vmm-sys-util(crates.io)', 'url': '/packages/vmm-sys-util.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2023-50711', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-50711'}, {'text': 'GHSA-875g-mfp6-g7f9', 'url': 'https://github.com/advisories/GHSA-875g-mfp6-g7f9'}]
references: [{'text': 'https://github.com/advisories/GHSA-875g-mfp6-g7f9', 'url': 'https://github.com/advisories/GHSA-875g-mfp6-g7f9'}]
cvss score: 5.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:L
patched: >=0.12.0
unaffected: <0.5.0
affected functions: Version
vmm_sys_util::fam::famstructwrapper::deserialize: <0.12.0, >=0.5.0
description: An issue was discovered in theFamStructWrapper::deserializeimplementation
provided by the crate forvmm_sys_util::fam::FamStructWrapper, which can lead
to out of bounds memory accesses. The deserialization does not check that the
length stored in the header matches the flexible array length. Mismatch in the
lengths might allow out of bounds memory access through Rust-safe methods. Impacted versions: >= 0.5.0 The issue was corrected in version 0.12.0 by inserting a check that verifies
the lengths of compared flexible arrays are equal for any deserialized header
and aborting deserialization otherwise. Moreover, the API was changed so that
header length can only be modified through Rust-unsafe code. This ensures that
users cannot trigger out-of-bounds memory access from Rust-safe code. Advisory available underCC0-1.0license.
affected_functions: vmm_sys_util;;fam;;famstructwrapper;;deserialize
version_of_Affected: <0.12.0, >=0.5.0

---
classification: MEDIUM
subtitle: Marvin Attack: potential key recovery through timing sidechannels
reported: November 22, 2023
issued: November 28, 2023(last modified: December 15, 2023)
package: {'name': 'rsa(crates.io)', 'url': '/packages/rsa.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2023-49092', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-49092'}, {'text': 'GHSA-c38w-74pg-36hr', 'url': 'https://github.com/advisories/GHSA-c38w-74pg-36hr'}, {'text': 'GHSA-4grx-2x9w-596c', 'url': 'https://github.com/advisories/GHSA-4grx-2x9w-596c'}]
references: [{'text': 'https://github.com/RustCrypto/RSA/issues/19#issuecomment-1822995643', 'url': 'https://github.com/RustCrypto/RSA/issues/19#issuecomment-1822995643'}, {'text': 'https://people.redhat.com/~hkario/marvin/', 'url': 'https://people.redhat.com/~hkario/marvin/'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: no patched versions
description: 
unaffected: ['Due to a non-constant-time implementation, information about the private key is leaked through timing information which is observable over the network. An attacker may be able to use that information to recover the key.']
References: ['This vulnerability was discovered as part of the "Marvin Attack", which revealed several implementations of RSA including OpenSSL had not properly mitigated timing sidechannel attacks.', {'text': 'Marvin Attack', 'url': 'https://people.redhat.com/~hkario/marvin/'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: MEDIUM
subtitle: Sequential calls of encryption API (encrypt,wrap, anddump) result in nonce reuse
reported: October 15, 2023
issued: October 23, 2023(last modified: February 10, 2024)
package: {'name': 'cocoon(crates.io)', 'url': '/packages/cocoon.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'GHSA-6878-6wc2-pf5h', 'url': 'https://github.com/advisories/GHSA-6878-6wc2-pf5h'}]
references: [{'text': 'https://github.com/fadeevab/cocoon/issues/22', 'url': 'https://github.com/fadeevab/cocoon/issues/22'}]
cvss score: 4.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:N
patched: >=0.4.0
affected functions: Version
cocoon::cocoon::dump: <=0.3.3
cocoon::cocoon::encrypt: <=0.3.3
cocoon::cocoon::wrap: <=0.3.3
cocoon::minicocoon::dump: <=0.3.3
cocoon::minicocoon::encrypt: <=0.3.3
cocoon::minicocoon::wrap: <=0.3.3
description: Problem: Trying to create a new encrypted message with the same cocoon
object generates the same ciphertext. It mostly affectsMiniCocoonandCocoonobjects with custom seeds and RNGs (whereStdRngis used under
the hood). Note: The issue doesNOTaffect objects created withCocoon::newwhich utilizesThreadRng. Cause:StdRngproduces the same nonce becauseStdRng::cloneresets its
state. Measure: Make encryption API mutable (encrypt,wrap, anddump). Workaround: Create a new cocoon object with a newseedper each
encryption. Forcocoon <= 0.3.3, create a new cocoon with a differentseedper eachencrypt/wrap/dumpcall. Advisory available underCC0-1.0license.
affected_functions: cocoon;;cocoon;;dump
version_of_Affected: <=0.3.3

---
classification: MEDIUM
subtitle: Vulnerable to privilege escalation using ioctls TIOCSTI and TIOCLINUX
reported: April 29, 2023
issued: October  3, 2023(last modified: February 10, 2024)
package: {'name': 'pleaser(crates.io)', 'url': '/packages/pleaser.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2023-46277', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-46277'}, {'text': 'GHSA-cgf8-h3fp-h956', 'url': 'https://github.com/advisories/GHSA-cgf8-h3fp-h956'}]
references: [{'text': 'https://gitlab.com/edneville/please/-/issues/13', 'url': 'https://gitlab.com/edneville/please/-/issues/13'}]
cvss score: 4.6MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: Low
user interaction: Required
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N
patched: no patched versions
description: please is vulnerable to privilege escalation using ioctls TIOCSTI
and TIOCLINUX on systems where they are not disabled. Here is how to see it in action: Please note that: This affects both the case where root wants to drop privileges as well when non-root wants to gain other privileges. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Versionize::deserializeimplementation forFamStructWrapper<T>is lacking bound checks, potentially leading to out of bounds memory accesses
reported: March 24, 2023
issued: March 25, 2023(last modified: June 13, 2023)
package: {'name': 'versionize(crates.io)', 'url': '/packages/versionize.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2023-28448', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-28448'}, {'text': 'GHSA-8vxc-r5wp-vgvc', 'url': 'https://github.com/advisories/GHSA-8vxc-r5wp-vgvc'}]
references: [{'text': 'https://github.com/firecracker-microvm/versionize/pull/53', 'url': 'https://github.com/firecracker-microvm/versionize/pull/53'}]
cvss score: 5.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:L
patched: >=0.1.10
affected oses: linux
description: An issue was discovered in theVersionize::deserializeimplementation provided by theversionizecrate forvmm_sys_util::fam::FamStructWrapper, which can lead to out of bounds memory accesses. The impact started with version 0.1.1. The issue was corrected in version 0.1.10 by inserting a check that verifies, for any deserialized header, the lengths of compared flexible arrays are equal and aborting deserialization otherwise. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: pnet_packetbuffer overrun inset_payloadsetters
reported: June 19, 2020
issued: February  9, 2023(last modified: June 13, 2023)
package: {'name': 'pnet_packet(crates.io)', 'url': '/packages/pnet_packet.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-cf4g-fcf8-3cr9', 'url': 'https://github.com/advisories/GHSA-cf4g-fcf8-3cr9'}]
references: [{'text': 'https://github.com/libpnet/libpnet/issues/449', 'url': 'https://github.com/libpnet/libpnet/issues/449'}]
cvss score: 6MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'High', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: High
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H
patched: >=0.27.2
description: As indicated by thisissue, a buffer overrun is possible in theset_payloadsetter of the various mutable "Packet" struct setters. The offendingset_payloadfunctions were defined within the structimplblocks in earlier versions of the package, and later by thepacketmacro. Fixed in thepacketmacro bythisPR. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: aliyun-oss-clientsecret exposure
reported: November 19, 2022
issued: February  7, 2023
package: {'name': 'aliyun-oss-client(crates.io)', 'url': '/packages/aliyun-oss-client.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-39397', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39397'}, {'text': 'GHSA-3w3h-7xgx-grwc', 'url': 'https://github.com/advisories/GHSA-3w3h-7xgx-grwc'}]
references: [{'text': 'https://github.com/advisories/GHSA-3w3h-7xgx-grwc', 'url': 'https://github.com/advisories/GHSA-3w3h-7xgx-grwc'}]
cvss score: 5.6MEDIUM
cvss details: {'Attack vector': 'Physical', 'Attack complexity': 'LowPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityHighIntegrityLowAvailabilityNone', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'High', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Physical
attack complexity: LowPrivileges requiredHighUser interactionRequiredScopeChangedConfidentialityHighIntegrityLowAvailabilityNone
privileges required: High
user interaction: Required
scope: Changed
confidentiality: High
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:P/AC:L/PR:H/UI:R/S:C/C:H/I:L/A:N
patched: >=0.8.1
description: Thealiyun-oss-clientunintentionally divulges the authentication secret. This bug was fixed inthiscommit by limiting the concerned traits to bepubonly within the crate. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: tauri'sreadDirendpoint allows possible enumeration outside of filesystem scope
reported: August  7, 2022
issued: February  5, 2023
package: {'name': 'tauri(crates.io)', 'url': '/packages/tauri.html'}
type: Vulnerability
categories: ['privilege-escalation']
aliases: [{'text': 'CVE-2022-39215', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-39215'}, {'text': 'GHSA-28m8-9j7v-x499', 'url': 'https://github.com/advisories/GHSA-28m8-9j7v-x499'}]
references: [{'text': 'https://github.com/tauri-apps/tauri/issues/4882', 'url': 'https://github.com/tauri-apps/tauri/issues/4882'}]
cvss score: 5.8MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityLowIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Changed
confidentiality: Low
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:N
patched: >=1.0.6
description: It is possible forreadDirto incorrectly enumerate files from a symlinked directory if called recursively when specifying an empty string for the dir parameter as outlined inthisissue. This is corrected inthisPR by checking if a directory is a symlink before reading from it. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: kamadak-exif DoS with untrusted PNG data
reported: January  4, 2021
issued: September  8, 2022
package: {'name': 'kamadak-exif(crates.io)', 'url': '/packages/kamadak-exif.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2021-21235', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21235'}, {'text': 'GHSA-px9g-8hgv-jvg2', 'url': 'https://github.com/advisories/GHSA-px9g-8hgv-jvg2'}]
references: [{'text': 'https://github.com/kamadak/exif-rs/commit/1b05eab57e484cd7d576d4357b9cda7fdc57df8c', 'url': 'https://github.com/kamadak/exif-rs/commit/1b05eab57e484cd7d576d4357b9cda7fdc57df8c'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H
patched: >=0.5.3
unaffected: <0.5.2
affected functions: Version
kamadak_exif::reader::read_from_container: >=0.5.2, <0.5.3
description: Attacker crafted data can cause a infinite loop leading to DoS if used with untrusted data. Advisory available underCC0-1.0license.
affected_functions: kamadak_exif;;reader;;read_from_container
version_of_Affected: >=0.5.2, <0.5.3

---
classification: MEDIUM
subtitle: OCSP_basic_verifymay incorrectly verify the response signing certificate
reported: May  3, 2022
issued: May 19, 2022(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-1343', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1343'}, {'text': 'GHSA-mfm6-r9g2-q4r7', 'url': 'https://github.com/advisories/GHSA-mfm6-r9g2-q4r7'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20220503.txt', 'url': 'https://www.openssl.org/news/secadv/20220503.txt'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=300.0.6
unaffected: <300.0
description: The functionOCSP_basic_verifyverifies the signer certificate on an OCSP
response. In the case where the (non-default) flag OCSP_NOCHECKS is used then
the response will be positive (meaning a successful verification) even in the
case where the response signing certificate fails to verify. It is anticipated that most users ofOCSP_basic_verifywill not use the
OCSP_NOCHECKS flag. In this case theOCSP_basic_verifyfunction will return
a negative value (indicating a fatal error) in the case of a certificate
verification failure. The normal expected return value in this case would be 0. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Incorrect MAC key used in the RC4-MD5 ciphersuite
reported: May  3, 2022
issued: May 19, 2022(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2022-1434', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1434'}, {'text': 'GHSA-638m-m8mh-7gw2', 'url': 'https://github.com/advisories/GHSA-638m-m8mh-7gw2'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20220503.txt', 'url': 'https://www.openssl.org/news/secadv/20220503.txt'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N
patched: >=300.0.6
unaffected: <300.0
description: The OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the
AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to
modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that
the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint
will always be rejected by the recipient and the connection will fail at that
point. Many application protocols require data to be sent from the client to the
server first. Therefore, in such a case, only an OpenSSL 3.0 server would be
impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being
sent in both directions. In this case both clients and servers could be
affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0
endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the
handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker
cannot decrypt data that has been encrypted using this ciphersuite - they can
only modify it. In order for this attack to work both endpoints must legitimately negotiate the
RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0,
and is not available within the default provider or the default ciphersuite
list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In
order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must
have occurred: Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Timing attack
reported: May  9, 2022
issued: May  9, 2022(last modified: June 13, 2023)
package: {'name': 'totp-rs(crates.io)', 'url': '/packages/totp-rs.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2022-29185', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-29185'}, {'text': 'GHSA-8vxv-2g8p-2249', 'url': 'https://github.com/advisories/GHSA-8vxv-2g8p-2249'}]
references: [{'text': 'https://github.com/constantoine/totp-rs/security/advisories/GHSA-8vxv-2g8p-2249', 'url': 'https://github.com/constantoine/totp-rs/security/advisories/GHSA-8vxv-2g8p-2249'}]
cvss score: 4.2MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'High', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredHighUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: High
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:H/I:N/A:N
patched: >=1.1.0
affected functions: Version
totp_rs::totp::check: <1.1.0
description: Affecting versions did not compare tokens in constant time, which could make it possible for an attacker to guess the 2fa token of a user. This has been fixed by using using the crate constant_time_eq for comparison. Advisory available underCC0-1.0license.
affected_functions: totp_rs;;totp;;check
version_of_Affected: <1.1.0

---
classification: MEDIUM
subtitle: Multiple Vulnerabilities in Wasmtime
reported: September 17, 2021
issued: September 17, 2021(last modified: June 13, 2023)
package: {'name': 'wasmtime(crates.io)', 'url': '/packages/wasmtime.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
keywords: []
aliases: [{'text': 'CVE-2021-39216', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39216'}, {'text': 'CVE-2021-39218', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39218'}, {'text': 'CVE-2021-39219', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39219'}, {'text': 'GHSA-4873-36h9-wv49', 'url': 'https://github.com/advisories/GHSA-4873-36h9-wv49'}, {'text': 'GHSA-q879-9g95-56mx', 'url': 'https://github.com/advisories/GHSA-q879-9g95-56mx'}, {'text': 'GHSA-v4cp-h94r-m7xf', 'url': 'https://github.com/advisories/GHSA-v4cp-h94r-m7xf'}]
references: [{'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-v4cp-h94r-m7xf', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-v4cp-h94r-m7xf'}, {'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49'}, {'text': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-q879-9g95-56mx', 'url': 'https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-q879-9g95-56mx'}]
cvss score: 6.3MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H
patched: >=0.30.0
affected functions: Version
wasmtime::linker::func_new: <0.30.0
wasmtime::linker::func_wrap: <0.30.0
wasmtime::store::gc: <0.30.0
description: Advisory available underCC0-1.0license.
affected_functions: wasmtime;;linker;;func_new
version_of_Affected: <0.30.0

---
classification: MEDIUM
subtitle: Observable Discrepancy in libsecp256k1-rs
reported: January 22, 2020
issued: September  9, 2021(last modified: September 10, 2021)
package: {'name': 'libsecp256k1-rs(crates.io)', 'url': '/packages/libsecp256k1-rs.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2019-20399', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20399'}, {'text': 'GHSA-7cqg-8449-rmfv', 'url': 'https://github.com/advisories/GHSA-7cqg-8449-rmfv'}]
references: [{'text': 'https://nvd.nist.gov/vuln/detail/CVE-2019-20399', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2019-20399'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: >=0.3.1
description: A timing vulnerability in the Scalar::check_overflow function in Parity libsecp256k1-rs before 0.3.1 potentially allows an attacker to leak information via a side-channel attack. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Lenienthyperheader parsing ofContent-Lengthcould allow request smuggling
reported: July  7, 2021
issued: August  8, 2021(last modified: October 19, 2021)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-32715', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32715'}, {'text': 'GHSA-f3pg-qwvg-p99c', 'url': 'https://github.com/advisories/GHSA-f3pg-qwvg-p99c'}]
references: [{'text': 'https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c', 'url': 'https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.14.10
description: hyper's HTTP header parser accepted, according to RFC 7230, illegal contents insideContent-Lengthheaders.
Due to this, upstream HTTP proxies that ignore the header may still forward them along if it chooses to ignore the error. To be vulnerable,hypermust be used as an HTTP/1 server and using an HTTP proxy upstream that ignores the header's contents
but still forwards it. Due to all the factors that must line up, an attack exploiting this vulnerability is unlikely. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Null pointer deref inX509_issuer_and_serial_hash()
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2021-23841', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-23841'}, {'text': 'GHSA-84rm-qf37-fgc2', 'url': 'https://github.com/advisories/GHSA-84rm-qf37-fgc2'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210216.txt', 'url': 'https://www.openssl.org/news/secadv/20210216.txt'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.14
description: The OpenSSL public API functionX509_issuer_and_serial_hash()attempts to
create a unique hash value based on the issuer and serial number data contained
within an X509 certificate. However it fails to correctly handle any errors
that may occur while parsing the issuer field (which might occur if the issuer
field is maliciously constructed). This may subsequently result in a NULL
pointer deref and a crash leading to a potential denial of service attack. The functionX509_issuer_and_serial_hash()is never directly called by OpenSSL
itself so applications are only vulnerable if they use this function directly
and they use it on certificates that may have been obtained from untrusted
sources. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: NULL pointer deref in signature_algorithms processing
reported: May  1, 2021
issued: May  1, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2021-3449', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3449'}, {'text': 'GHSA-83mx-573x-5rw9', 'url': 'https://github.com/advisories/GHSA-83mx-573x-5rw9'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210325.txt', 'url': 'https://www.openssl.org/news/secadv/20210325.txt'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=111.15
description: An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation
ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits
the signature_algorithms extension (where it was present in the initial
ClientHello), but includes a signature_algorithms_cert extension then a NULL
pointer dereference will result, leading to a crash and a denial of service
attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which
is the default configuration). OpenSSL TLS clients are not impacted by this
issue. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Generators can cause data races if non-Send types are used in their generator functions
reported: November 16, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'generator(crates.io)', 'url': '/packages/generator.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36471', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36471'}, {'text': 'GHSA-w3g5-2848-2v8r', 'url': 'https://github.com/advisories/GHSA-w3g5-2848-2v8r'}]
references: [{'text': 'https://github.com/Xudong-Huang/generator-rs/issues/27', 'url': 'https://github.com/Xudong-Huang/generator-rs/issues/27'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.7.0
description: TheGeneratortype is an iterable which uses a generator function that yields
values. In affected versions of the crate, the provided function yielding values
had noSendbounds despite theGeneratoritself implementingSend. The generator function lacking aSendbound means that types that are
dangerous to send across threads such asRccould be sent as part of a
generator, potentially leading to data races. This flaw was fixed in commitf7d120a3bby enforcing that the generator function be bound bySend. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: ImmediateIO and TransactionalIO can cause data races
reported: December 18, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'max7301(crates.io)', 'url': '/packages/max7301.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36472', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36472'}, {'text': 'GHSA-rmff-f8w9-c9rm', 'url': 'https://github.com/advisories/GHSA-rmff-f8w9-c9rm'}]
references: [{'text': 'https://github.com/edarc/max7301/issues/1', 'url': 'https://github.com/edarc/max7301/issues/1'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.0
description: TheImmediateIOandTransactionalIOtypes implementSyncfor all containedExpander<EI>types regardless of if theExpanderitself is safe to use
across threads. As theIOtypes allow retrieving theExpander, this can lead to non-thread
safe types being sent across threads as part of theExpanderleading to data
races. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: RingBuffer can create multiple mutable references and cause data races
reported: December 17, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'disrustor(crates.io)', 'url': '/packages/disrustor.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36470', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36470'}, {'text': 'GHSA-w9r2-qrpm-4rmj', 'url': 'https://github.com/advisories/GHSA-w9r2-qrpm-4rmj'}]
references: [{'text': 'https://github.com/sklose/disrustor/issues/1', 'url': 'https://github.com/sklose/disrustor/issues/1'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3
description: TheRingBuffertype retrieves mutable references from theDataProviderin a
non-atomic manner, potentially allowing the creation of multiple mutable
references.RingBufferalso implements theSendandSynctraits for all
typesT. This allows undefined behavior from the aliased mutable references as well
as data races. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Data race and memory safety issue inIndex
reported: November 15, 2020
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'appendix(crates.io)', 'url': '/packages/appendix.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36469', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36469'}, {'text': 'GHSA-fvhr-7j8m-3cvc', 'url': 'https://github.com/advisories/GHSA-fvhr-7j8m-3cvc'}]
references: [{'text': 'https://github.com/krl/appendix/issues/6', 'url': 'https://github.com/krl/appendix/issues/6'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Theappendixcrate implements a key-value mapping data structure calledIndex<K, V>that is stored on disk. The crate allows for any type to inhabit
the genericKandVtype parameters and implements Send and Sync for them
unconditionally. Using a type that is not marked asSendorSyncwithIndexcan allow it
to be used across multiple threads leading to data races. Additionally using
reference types for the keys or values will lead to the segmentation faults
in the crate's code. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Multiple soundness issues inPtr
reported: December 10, 2020
issued: March 26, 2021(last modified: June 13, 2023)
package: {'name': 'cgc(crates.io)', 'url': '/packages/cgc.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36466', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36466'}, {'text': 'CVE-2020-36467', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36467'}, {'text': 'CVE-2020-36468', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36468'}, {'text': 'GHSA-f3mq-99jr-ww4r', 'url': 'https://github.com/advisories/GHSA-f3mq-99jr-ww4r'}, {'text': 'GHSA-f9xr-3m55-5q2v', 'url': 'https://github.com/advisories/GHSA-f9xr-3m55-5q2v'}, {'text': 'GHSA-pwhf-7427-9vv2', 'url': 'https://github.com/advisories/GHSA-pwhf-7427-9vv2'}]
references: [{'text': 'https://github.com/playXE/cgc/issues/5', 'url': 'https://github.com/playXE/cgc/issues/5'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions of this crate have the following issues: Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: XSS incomrak
reported: February 21, 2021
issued: February 21, 2021(last modified: June 13, 2023)
package: {'name': 'comrak(crates.io)', 'url': '/packages/comrak.html'}
type: Vulnerability
categories: ['format-injection']
keywords: []
aliases: [{'text': 'CVE-2021-27671', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27671'}, {'text': 'GHSA-xmr7-v725-2jjr', 'url': 'https://github.com/advisories/GHSA-xmr7-v725-2jjr'}]
references: [{'text': 'https://github.com/kivikakk/comrak/releases/tag/0.9.1', 'url': 'https://github.com/kivikakk/comrak/releases/tag/0.9.1'}]
cvss score: 6.1MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: Required
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
patched: >=0.9.1
description: Thecomrakwe were matching unsafe URL prefixes, such asdata:orjavascript:, in a case-sensitive manner. This meant prefixes likeData:were untouched. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: insert_slice_clone can double drop if Clone panics.
reported: February  3, 2021
issued: February  4, 2021(last modified: June 13, 2023)
package: {'name': 'qwutils(crates.io)', 'url': '/packages/qwutils.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-26954', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26954'}, {'text': 'GHSA-68p4-pjpf-xwcq', 'url': 'https://github.com/advisories/GHSA-68p4-pjpf-xwcq'}]
references: [{'text': 'https://github.com/qwertz19281/rust_utils/issues/3', 'url': 'https://github.com/qwertz19281/rust_utils/issues/3'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L
patched: >=0.3.1
affected functions: Version
qwutils::imp::vec::vecext::insert_slice_clone: <0.3.1
description: Affected versions of this crate usedptr::copywhen inserting into the middle
of aVec. When ownership was temporarily duplicated during this copy, it calls
the clone method of a user provided element. This issue can result in an element being double-freed if the clone call panics. Commit20cb73dfixed this issue by adding aset_len(0)call before
operating on the vector to avoid dropping the elements during a panic. Advisory available underCC0-1.0license.
affected_functions: qwutils;;imp;;vec;;vecext;;insert_slice_clone
version_of_Affected: <0.3.1

---
classification: MEDIUM
subtitle: Demuxercan carry non-Send types across thread boundaries
reported: December 22, 2020
issued: January 21, 2021(last modified: June 13, 2023)
package: {'name': 'va-ts(crates.io)', 'url': '/packages/va-ts.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36220', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36220'}, {'text': 'GHSA-3hj2-hh36-hv9v', 'url': 'https://github.com/advisories/GHSA-3hj2-hh36-hv9v'}]
references: [{'text': 'https://github.com/video-audio/va-ts/issues/4', 'url': 'https://github.com/video-audio/va-ts/issues/4'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.0.4
description: In the affected versions of this crate,Demuxer<T>unconditionally implementedSendwith no trait bounds onT. This allows sending a non-Send typeTacross thread boundaries, which can cause undefined behavior like unlocking a mutex from a thread that didn't lock the mutex, or memory corruption from data race. The flaw was corrected in commit 0562cbf by adding aT: Sendbound to theSendimpl forDemuxer<T>. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: may_queue's Queue lacks Send/Sync bound for its Send/Sync trait.
reported: November 10, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'may_queue(crates.io)', 'url': '/packages/may_queue.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36217', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36217'}, {'text': 'GHSA-pphf-f93w-gc84', 'url': 'https://github.com/advisories/GHSA-pphf-f93w-gc84'}]
references: [{'text': 'https://github.com/Xudong-Huang/may/issues/88', 'url': 'https://github.com/Xudong-Huang/may/issues/88'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: Affected versions ofmay_queueimplementsSend/Syncfor itsQueuetype without restricting it toSendable types andSyncable types. This allows non-Synctypes such asCellto be shared across threads leading to undefined behavior and memory corruption in concurrent programs. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: ButtplugFutureStateShared allows data race to (!Send|!Sync) objects
reported: December 18, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'buttplug(crates.io)', 'url': '/packages/buttplug.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36218', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36218'}, {'text': 'GHSA-r7rv-2rph-hvhj', 'url': 'https://github.com/advisories/GHSA-r7rv-2rph-hvhj'}]
references: [{'text': 'https://github.com/buttplugio/buttplug-rs/issues/225', 'url': 'https://github.com/buttplugio/buttplug-rs/issues/225'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0.4
description: ButtplugFutureStateShared<T>implementsSend&Syncregardless ofT. IfT: !SendforButtplugFutureStateShared<T>, it is possible to move non-Send types across thread boundaries (e.g.T=Rc<T>) and lead to undefined behavior.
IfT: !SyncforButtplugFutureStateShared<T>, it is possible to cause data race toT(e.g.T=Arc<Cell<_>>) and lead to undefined behavior. The flaw was corrected in version 1.0.4 by removing manual implementations ofSend/SyncforButtplugFutureStateShared<T>to let rustc generate auto trait implementations with correct trait bounds onT. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: AtomicOption should have Send + Sync bound on its type argument.
reported: October 31, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'atomic-option(crates.io)', 'url': '/packages/atomic-option.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36219', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36219'}, {'text': 'GHSA-8gf5-q9p9-wvmc', 'url': 'https://github.com/advisories/GHSA-8gf5-q9p9-wvmc'}]
references: [{'text': 'https://github.com/reem/rust-atomic-option/issues/4', 'url': 'https://github.com/reem/rust-atomic-option/issues/4'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: In the affected versions of this crate,AtomicOption<T>unconditionally implementsSync. This allows programmers to move non-Sync types across thread boundaries (e.g.Rc<T>,Arc<Cell<T>>), which can lead to data races and undefined behavior.
It is also possible to send non-Send types likestd::sync::MutexGuardto other threads, which can lead to undefined behavior. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Queues allow non-Send types to be sent to other threads, allowing data races
reported: December 19, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'multiqueue2(crates.io)', 'url': '/packages/multiqueue2.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36214', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36214'}, {'text': 'GHSA-jphw-p3m6-pj3c', 'url': 'https://github.com/advisories/GHSA-jphw-p3m6-pj3c'}]
references: [{'text': 'https://github.com/abbychau/multiqueue2/issues/10', 'url': 'https://github.com/abbychau/multiqueue2/issues/10'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.1.7
description: Affected versions of this crate unconditionally implementedSendfor types used in queue implementations (InnerSend<RW, T>,InnerRecv<RW, T>,FutInnerSend<RW, T>,FutInnerRecv<RW, T>). This allows users to send non-Send types to other threads, which can lead to data race bugs or other undefined behavior. The flaw was corrected in v0.1.7 by addingT: Sendbound to to theSendimpl of four data types explained above. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Soundness issue: Inputcan be misused to create data race to an object
reported: December 20, 2020
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'eventio(crates.io)', 'url': '/packages/eventio.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36216', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36216'}, {'text': 'GHSA-69vj-xx27-g45w', 'url': 'https://github.com/advisories/GHSA-69vj-xx27-g45w'}]
references: [{'text': 'https://github.com/petabi/eventio/issues/33', 'url': 'https://github.com/petabi/eventio/issues/33'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.5.1
description: Input<R>implementsSendwithout requiringR: Send. Affected versions of this crate allows users to send non-Send types to other threads,
which can lead to undefined behavior such as data race and memory corruption. The flaw was corrected in version 0.5.1 by addingR: Sendbound to theSendimpl ofInput<R>. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: TreeFocus lacks bounds on its Send and Sync traits
reported: November  9, 2020
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'im(crates.io)', 'url': '/packages/im.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-36204', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36204'}, {'text': 'GHSA-q9h2-4xhf-23xx', 'url': 'https://github.com/advisories/GHSA-q9h2-4xhf-23xx'}]
references: [{'text': 'https://github.com/bodil/im-rs/issues/157', 'url': 'https://github.com/bodil/im-rs/issues/157'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=15.1.0
unaffected: <12.0.0
description: Affected versions ofimcontainsTreeFocusthat unconditionally implementsSendandSync. This allows a data race in safe Rust code ifTreeFocusis extracted fromFocustype.
Typical users that only useFocustype are not affected. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Missing Send bound for Lazy
reported: January 17, 2021
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'lazy-init(crates.io)', 'url': '/packages/lazy-init.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25901', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25901'}, {'text': 'GHSA-w47j-hqpf-qw9w', 'url': 'https://github.com/advisories/GHSA-w47j-hqpf-qw9w'}]
references: [{'text': 'https://github.com/khuey/lazy-init/issues/9', 'url': 'https://github.com/khuey/lazy-init/issues/9'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L
patched: >0.4.0
description: All current versions of this crate allow causing data races in safe code. The flaw will be fixed in the next release. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Soundness issue with base::Error
reported: December 10, 2020
issued: January 18, 2021(last modified: June 13, 2023)
package: {'name': 'xcb(crates.io)', 'url': '/packages/xcb.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
aliases: [{'text': 'CVE-2020-36205', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36205'}, {'text': 'GHSA-c8hq-x4mm-p6q6', 'url': 'https://github.com/advisories/GHSA-c8hq-x4mm-p6q6'}]
references: [{'text': 'https://github.com/rust-x-bindings/rust-xcb/issues/93', 'url': 'https://github.com/rust-x-bindings/rust-xcb/issues/93'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0
description: base::Errortype contains public field namedptr.
With this definition, it is possible to create abase::Errorwith an invalid pointer and trigger memory safety errors
such as use-after-free or double-free with safe Rust. The users ofxcbcrate are advised not to manipulate the field. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Unsound: can makeARefsscontain a !Send, !Sync object.
reported: December  1, 2020
issued: January  6, 2021(last modified: June 13, 2023)
package: {'name': 'reffers(crates.io)', 'url': '/packages/reffers.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-36203', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36203'}, {'text': 'GHSA-39xg-8p43-h76x', 'url': 'https://github.com/advisories/GHSA-39xg-8p43-h76x'}]
references: [{'text': 'https://github.com/diwic/reffers-rs/issues/7', 'url': 'https://github.com/diwic/reffers-rs/issues/7'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.6.1
description: ARefss<'a, V>is a type that is assumed to contain objects that areSend + Sync. In the affected versions of this crate,Send/Synctraits are unconditionally implemented forARefss<'a, V>. By using theARefss::map()API, we can insert a!Sendor!Syncobject intoARefss<'a, V>. After that, it is possible to create a data race to the inner object ofARefss<'a, V>, which can lead to undefined behavior & memory corruption. The flaw was corrected in commit 6dd7ca0 (https://github.com/diwic/reffers-rs/commit/6dd7ca0d50f2464df708975cdafcfaeeb6d41c66) by adding trait boundV: Send + SynctoARefss::map()API. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: XSS in mdBook's search page
reported: January  4, 2021
issued: January  4, 2021(last modified: October 19, 2021)
package: {'name': 'mdbook(crates.io)', 'url': '/packages/mdbook.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2020-26297', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26297'}]
references: [{'text': 'https://groups.google.com/g/rustlang-security-announcements/c/3-sO6of29O0', 'url': 'https://groups.google.com/g/rustlang-security-announcements/c/3-sO6of29O0'}]
cvss score: 6.1MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Changed', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeChangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: Required
scope: Changed
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
patched: >=0.4.5
unaffected: <=0.1.3
description: The Rust Security Response Working Group was recently notified of a security
issue affecting the search feature of mdBook, which could allow an attacker to
execute arbitrary JavaScript code on the page. The CVE for this vulnerability isCVE-2020-26297. The search feature of mdBook (introduced in version 0.1.4) was affected by a
cross site scripting vulnerability that allowed an attacker to execute
arbitrary JavaScript code on an user's browser by tricking the user into typing
a malicious search query, or tricking the user into clicking a link to the
search page with the malicious search query prefilled. mdBook 0.4.5 fixes the vulnerability by properly escaping the search query. Owners of websites built with mdBook have to upgrade to mdBook 0.4.5 or greater
and rebuild their website contents with it. It's possible to install mdBook
0.4.5 on the local system with: Thanks to Kamil Vavra for responsibly disclosing the vulnerability to us
according toour security policy. All times are listed in UTC. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Send/Sync bound needed on V inimpl Send/Sync for ARCache<K, V>
reported: November 13, 2020
issued: December 17, 2020(last modified: June 13, 2023)
package: {'name': 'concread(crates.io)', 'url': '/packages/concread.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35928', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35928'}, {'text': 'GHSA-4xj5-vv9x-63jp', 'url': 'https://github.com/advisories/GHSA-4xj5-vv9x-63jp'}]
references: [{'text': 'https://github.com/kanidm/concread/issues/48', 'url': 'https://github.com/kanidm/concread/issues/48'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.6
description: Affected versions of this crate unconditionally implementedSend/Synctraits forARCache<K, V>type. This allows users to send/access types that do not implementSend/Sync, which can cause a data race. The flaw was corrected in the 0.2.6 release by adding boundsK: Send + Sync&V: Send + Syncto affectedSend/Synctrait implementations. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: nanorand 0.5.0 - RNGs failed to generate properly for non-64-bit numbers
reported: December  9, 2020
issued: December  9, 2020(last modified: June 13, 2023)
package: {'name': 'nanorand(crates.io)', 'url': '/packages/nanorand.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2020-35926', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35926'}, {'text': 'GHSA-m9m5-cg5h-r582', 'url': 'https://github.com/advisories/GHSA-m9m5-cg5h-r582'}]
references: [{'text': 'https://twitter.com/aspenluxxxy/status/1336684692284772352', 'url': 'https://twitter.com/aspenluxxxy/status/1336684692284772352'}]
cvss score: 5.1MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N
patched: >=0.5.1
description: In versions ofnanorandprior to 0.5.1,RandomGenimplementations for standard unsigned integers could
fail to properly generate numbers, due to using bit-shifting to truncate a 64-bit number, rather than just
anasconversion. This often manifested as RNGs returning nothing but 0, including the cryptographically secureChaCharandom
number generator.. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Thexallows data races of non-Send types across threads
reported: December  8, 2020
issued: December  9, 2020(last modified: June 13, 2023)
package: {'name': 'thex(crates.io)', 'url': '/packages/thex.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35927', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35927'}, {'text': 'GHSA-j42v-6wpm-r847', 'url': 'https://github.com/advisories/GHSA-j42v-6wpm-r847'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: no patched versions
description: thex::Thex<T>implementsSyncfor all typesT. However, it is missing a
bound forT: Send. This allows non-Send types such asRcto be sent across thread boundaries
which can trigger undefined behavior and memory corruption. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: TryMutexallows sending non-Send type across threads
reported: November 17, 2020
issued: December  7, 2020(last modified: June 13, 2023)
package: {'name': 'try-mutex(crates.io)', 'url': '/packages/try-mutex.html'}
type: Vulnerability
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35924', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35924'}, {'text': 'GHSA-64j8-7gp2-xjx5', 'url': 'https://github.com/advisories/GHSA-64j8-7gp2-xjx5'}]
references: [{'text': 'https://github.com/mpdn/try-mutex/issues/2', 'url': 'https://github.com/mpdn/try-mutex/issues/2'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.0
description: Affected versions of this crate unconditionally implemented Sync trait forTryMutex<T>type. This allows users to put non-SendTtype inTryMutexand send it to another thread, which can cause a data race. The flaw was corrected in the 0.3.0 release by addingT: Sendbound for the Sync trait implementation. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: MPMCConsumer/Producer allows sending non-Send type across threads
reported: November 29, 2020
issued: December  7, 2020(last modified: June 13, 2023)
package: {'name': 'magnetic(crates.io)', 'url': '/packages/magnetic.html'}
type: Vulnerability
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35925', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35925'}, {'text': 'GHSA-wv4p-jp67-jr97', 'url': 'https://github.com/advisories/GHSA-wv4p-jp67-jr97'}]
references: [{'text': 'https://github.com/johnshaw/magnetic/issues/9', 'url': 'https://github.com/johnshaw/magnetic/issues/9'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=2.0.1
description: Affected versions of this crate unconditionally implementedSyncandSendtraits forMPMCConsumerandMPMCProducertypes. This allows users to send types that do not implementSendtrait across thread boundaries, which can cause a data race. The flaw was corrected in the 2.0.1 release by addingT: Sendbound to affected Sync/Send trait implementations. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: ordered_float:NotNan may contain NaN after panic in assignment operators
reported: December  6, 2020
issued: December  6, 2020(last modified: June 13, 2023)
package: {'name': 'ordered-float(crates.io)', 'url': '/packages/ordered-float.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35923', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35923'}, {'text': 'GHSA-566x-hhrf-qf8m', 'url': 'https://github.com/advisories/GHSA-566x-hhrf-qf8m'}]
references: [{'text': 'https://github.com/reem/rust-ordered-float/pull/71', 'url': 'https://github.com/reem/rust-ordered-float/pull/71'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: ^1.1.1>=2.0.1
unaffected: <0.2.2
description: After using an assignment operators such asNotNan::add_assign,NotNan::mul_assign, etc., it was possible for the resultingNotNanvalue to contain aNaN.  This could cause undefined behavior in safe code, because the safeNotNan::cmpmethod contains internal unsafe code that assumes the value is neverNaN.  (It could also cause undefined behavior in third-party unsafe code that makes the same assumption, as well as logic errors in safe code.) This was mitigated starting in version 0.4.0, by panicking if the assigned value is NaN.  However, in affected versions from 0.4.0 onward, code that uses theNotNanvalue during unwinding, or that continues after catching the panic, could still observe the invalid value and trigger undefined behavior. The flaw is fully corrected in versions 1.1.1 and 2.0.1, by ensuring that the assignment operators panic without modifying the operand, if the result would beNaN. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: miowinvalidly assumes the memory layout of std::net::SocketAddr
reported: November 13, 2020
issued: December  2, 2020(last modified: June 13, 2023)
package: {'name': 'miow(crates.io)', 'url': '/packages/miow.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35921', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35921'}, {'text': 'GHSA-jrcf-4jp8-m28v', 'url': 'https://github.com/advisories/GHSA-jrcf-4jp8-m28v'}]
references: [{'text': 'https://github.com/yoshuawuyts/miow/issues/38', 'url': 'https://github.com/yoshuawuyts/miow/issues/38'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: ^0.2.2>=0.3.6
description: Themiowcrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: net2invalidly assumes the memory layout of std::net::SocketAddr
reported: November  7, 2020
issued: December  2, 2020(last modified: July  8, 2023)
package: {'name': 'net2(crates.io)', 'url': '/packages/net2.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35919', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35919'}, {'text': 'CVE-2020-35920', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35920'}, {'text': 'GHSA-458v-4hrf-g3m4', 'url': 'https://github.com/advisories/GHSA-458v-4hrf-g3m4'}, {'text': 'GHSA-c79c-gwph-gqfm', 'url': 'https://github.com/advisories/GHSA-c79c-gwph-gqfm'}]
references: [{'text': 'https://github.com/deprecrated/net2-rs/issues/105', 'url': 'https://github.com/deprecrated/net2-rs/issues/105'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.36
description: Thenet2crate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: socket2invalidly assumes the memory layout of std::net::SocketAddr
reported: November  6, 2020
issued: December  2, 2020(last modified: February 10, 2024)
package: {'name': 'socket2(crates.io)', 'url': '/packages/socket2.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35919', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35919'}, {'text': 'CVE-2020-35920', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35920'}, {'text': 'GHSA-458v-4hrf-g3m4', 'url': 'https://github.com/advisories/GHSA-458v-4hrf-g3m4'}, {'text': 'GHSA-c79c-gwph-gqfm', 'url': 'https://github.com/advisories/GHSA-c79c-gwph-gqfm'}]
references: [{'text': 'https://github.com/rust-lang/socket2-rs/issues/119', 'url': 'https://github.com/rust-lang/socket2-rs/issues/119'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.16
description: Thesocket2crate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: mioinvalidly assumes the memory layout of std::net::SocketAddr
reported: November  2, 2020
issued: December  2, 2020(last modified: June 13, 2023)
package: {'name': 'mio(crates.io)', 'url': '/packages/mio.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35922', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35922'}, {'text': 'GHSA-pf3p-x6qj-6j7q', 'url': 'https://github.com/advisories/GHSA-pf3p-x6qj-6j7q'}]
references: [{'text': 'https://github.com/tokio-rs/mio/issues/1386', 'url': 'https://github.com/tokio-rs/mio/issues/1386'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.7.6
unaffected: <0.7.0
description: Themiocrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Unexpected panic when decoding tokens
reported: November 29, 2020
issued: November 29, 2020(last modified: June 13, 2023)
package: {'name': 'branca(crates.io)', 'url': '/packages/branca.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35918', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35918'}, {'text': 'GHSA-c9rv-3jmq-527w', 'url': 'https://github.com/advisories/GHSA-c9rv-3jmq-527w'}]
references: [{'text': 'https://github.com/return/branca/issues/24', 'url': 'https://github.com/return/branca/issues/24'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.10.0
affected functions: Version
branca::branca::decode: <0.10.0
branca::decode: <0.10.0
description: Prior to0.10.0it was possible to have both decoding functions panic unexpectedly,
by supplying tokens with an incorrect base62 encoding. The documentation stated that an error should have been reported instead. Advisory available underCC0-1.0license.
affected_functions: branca;;branca;;decode
version_of_Affected: <0.10.0

---
classification: MEDIUM
subtitle: Reference counting error inFrom<Py<T>>
reported: November 28, 2020
issued: November 28, 2020(last modified: June 13, 2023)
package: {'name': 'pyo3(crates.io)', 'url': '/packages/pyo3.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35917', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35917'}, {'text': 'GHSA-2vx6-fcw6-hpr6', 'url': 'https://github.com/advisories/GHSA-2vx6-fcw6-hpr6'}]
references: [{'text': 'https://github.com/PyO3/pyo3/pull/1297', 'url': 'https://github.com/PyO3/pyo3/pull/1297'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.12.4
unaffected: <0.12.0
description: A bug inFrom<Py<T>>would lead to an extra reference count decrement, often
leading to use-after-free issues. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Mutable reference with immutable provenance
reported: November 12, 2020
issued: November 20, 2020(last modified: June 13, 2023)
package: {'name': 'image(crates.io)', 'url': '/packages/image.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-35916', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35916'}, {'text': 'GHSA-9wgh-vjj7-7433', 'url': 'https://github.com/advisories/GHSA-9wgh-vjj7-7433'}]
references: [{'text': 'https://github.com/image-rs/image/issues/1357', 'url': 'https://github.com/image-rs/image/issues/1357'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.23.12
affected functions: Version
image::bgr::from_slice_mut: <0.23.12
image::bgra::from_slice_mut: <0.23.12
image::luma::from_slice_mut: <0.23.12
image::lumaa::from_slice_mut: <0.23.12
image::rgb::from_slice_mut: <0.23.12
image::rgba::from_slice_mut: <0.23.12
description: A mutable reference to a struct was constructed by dereferencing a pointer
obtained fromslice::as_ptr. Instead,slice::as_mut_ptrshould have been
called on the mutable slice argument. The former performs an implicit reborrow
as an immutable shared reference which does not allow writing through the
derived pointer. There is no evidence for miscompilation, exploitable or otherwise, caused by
this bug.Further investigation on Zulipsuggests that the unoptimized
generated LLVM IR does not contain any UB itself, effectively mitigating
further effects. Advisory available underCC0-1.0license.
affected_functions: image;;bgr;;from_slice_mut
version_of_Affected: <0.23.12

---
classification: MEDIUM
subtitle: Potential segfault in the time crate
reported: November 18, 2020
issued: November 18, 2020(last modified: June  5, 2024)
package: {'name': 'time(crates.io)', 'url': '/packages/time.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-26235', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26235'}, {'text': 'GHSA-wcg3-cvx6-7396', 'url': 'https://github.com/advisories/GHSA-wcg3-cvx6-7396'}]
references: [{'text': 'https://github.com/time-rs/time/issues/293', 'url': 'https://github.com/time-rs/time/issues/293'}]
cvss score: 6.2MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.2.23
unaffected: ["The affected functions set environment variables without synchronization. On Unix-like operating systems, this can crash in multithreaded programs. Programs may segfault due to dereferencing a dangling pointer if an environment variable is read in a different thread than the affected functions. This may occur without the user's knowledge, notably in the Rust standard library or third-party libraries.", 'The affected functions from time 0.2.7 through 0.2.22 are:', 'time::UtcOffset::local_offset_at', 'time::UtcOffset::try_local_offset_at', 'time::UtcOffset::current_local_offset', 'time::UtcOffset::try_current_local_offset', 'time::OffsetDateTime::now_local', 'time::OffsetDateTime::try_now_local', 'The affected functions in time 0.1 (all versions) are:', 'time::at_utc', 'time::at', 'time::now', 'time::tzset', 'Non-Unix targets (including Windows and wasm) are unaffected.']
affected oses: linuxredoxsolarisandroidiosmacosnetbsdopenbsdfreebsd
affected functions: Version
time::offsetdatetime::now_local: <0.2.23
time::offsetdatetime::try_now_local: <0.2.23
time::utcoffset::current_local_offset: <0.2.23
time::utcoffset::local_offset_at: <0.2.23
time::utcoffset::try_current_local_offset: <0.2.23
time::utcoffset::try_local_offset_at: <0.2.23
time::at: ^0.1
time::at_utc: ^0.1
time::now: ^0.1
description: 
References: ['A possible workaround for crates affected through the transitive dependency inchrono, is to avoid using the defaultoldtimefeature dependency of thechronocrate by disabling itsdefault-featuresand manually specifying the required features instead.', 'Cargo.toml:', 'Commandline:', 'Sources:', 'chronotope/chrono#602 (comment)', {'text': 'chronotope/chrono#602 (comment)', 'url': 'https://github.com/chronotope/chrono/issues/602#issuecomment-1242149249'}, 'vityafx/serde-aux#21', {'text': 'vityafx/serde-aux#21', 'url': 'https://github.com/vityafx/serde-aux/issues/21'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: time;;offsetdatetime;;now_local
version_of_Affected: <0.2.23

---
classification: MEDIUM
subtitle: GenericMutexGuard allows data races of non-Sync types across threads
reported: October 31, 2020
issued: November 18, 2020(last modified: June 13, 2023)
package: {'name': 'futures-intrusive(crates.io)', 'url': '/packages/futures-intrusive.html'}
type: INFOUnsound
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35915', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35915'}, {'text': 'GHSA-4hjg-cx88-g9f9', 'url': 'https://github.com/advisories/GHSA-4hjg-cx88-g9f9'}]
references: [{'text': 'https://github.com/Matthias247/futures-intrusive/issues/53', 'url': 'https://github.com/Matthias247/futures-intrusive/issues/53'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.4.0
description: GenericMutexGuard<T>was given theSyncauto trait as long asTisSenddue to its contained members. However, since the guard is supposed to represent
anacquired lockand allows concurrent access to the underlying data from
different threads, it should only beSyncwhen the underlying data is. This is a soundness issue and allows data races, potentially leading to crashes
and segfaults from safe Rust code. The flaw was corrected by adding aT: Send + Syncbound forGenericMutexGuard'sSynctrait. This bug issimilar to oneinstd::sync::Mutex. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Argument injection in sendmail transport
reported: November 11, 2020
issued: November 11, 2020(last modified: June 13, 2023)
package: {'name': 'lettre(crates.io)', 'url': '/packages/lettre.html'}
type: Vulnerability
categories: ['code-execution', 'file-disclosure']
keywords: []
aliases: [{'text': 'CVE-2020-28247', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-28247'}, {'text': 'GHSA-vc2p-r46x-m3vx', 'url': 'https://github.com/advisories/GHSA-vc2p-r46x-m3vx'}]
references: [{'text': 'https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b', 'url': 'https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.10.0-alpha.4<0.10.0-alpha.1, >=0.9.5<0.9.0, >=0.8.4<0.8.0, >=0.7.1
unaffected: <0.7.0
affected functions: Version
lettre::sendmail::sendmailtransport::send: <0.10.0-alpha.1
lettre::transport::sendmail::sendmailtransport::send: >=0.10.0-alpha.1, <=0.10.0-alpha.3
lettre::transport::sendmail::sendmailtransport::send_raw: >=0.10.0-alpha.1, <=0.10.0-alpha.3
description: Affected versions of lettre allowed argument injection
to the sendmail command. It was possible, using forgedtoaddresses,
to pass arbitrary arguments to the sendmail executable. Depending on the implementation (original sendmail, postfix, exim, etc.)
it could be possible in some cases to write email data into arbitrary files (using sendmail's
logging features). The flaw is corrected by modifying the executed command to stop parsing arguments
before passing the destination addresses. NOTE: This vulnerability only affects thesendmailtransport. Others, includingsmtp, are not
affected. This vulnerability was reported by vin01. Advisory available underCC0-1.0license.
affected_functions: lettre;;sendmail;;sendmailtransport;;send
version_of_Affected: <0.10.0-alpha.1

---
classification: MEDIUM
subtitle: futures_task::noop_waker_ref can segfault due to dereferencing a NULL pointer
reported: May  3, 2020
issued: October 31, 2020(last modified: June 13, 2023)
package: {'name': 'futures-task(crates.io)', 'url': '/packages/futures-task.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2020-35907', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35907'}, {'text': 'GHSA-p9m5-3hj7-cp5r', 'url': 'https://github.com/advisories/GHSA-p9m5-3hj7-cp5r'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/issues/2091', 'url': 'https://github.com/rust-lang/futures-rs/issues/2091'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.5
affected functions: Version
futures_task::noop_waker_ref: >=0.3.0
description: Affected versions of the crate used aUnsafeCellin thread-local storage to return a noop waker reference,
assuming that the reference would never be returned from another thread. This resulted in a segmentation fault crash ifWaker::wake_by_ref()was called on a waker returned from another thread due to
it attempting to dereference a pointer that wasn't accessible from the main thread. Reproduction Example (from issue): The flaw was corrected by using aOnceCell::Lazy<>wrapper around the noop waker instead of thread-local storage. Advisory available underCC0-1.0license.
affected_functions: futures_task;;noop_waker_ref
version_of_Affected: >=0.3.0

---
classification: MEDIUM
subtitle: ImproperSyncimplementation onFuturesUnorderedin futures-utils can cause data corruption
reported: January 24, 2020
issued: October 31, 2020(last modified: June 13, 2023)
package: {'name': 'futures-util(crates.io)', 'url': '/packages/futures-util.html'}
type: Vulnerability
categories: ['memory-corruption', 'thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35908', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35908'}, {'text': 'GHSA-5r9g-j7jj-hw6c', 'url': 'https://github.com/advisories/GHSA-5r9g-j7jj-hw6c'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/issues/2050', 'url': 'https://github.com/rust-lang/futures-rs/issues/2050'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.2
unaffected: <0.3.0
affected functions: Version
futures_util::stream::futuresunordered: >=0.3.0
description: Affected versions of the crate had an unsoundSyncimplementation on theFuturesUnorderedstructure, which used aCellfor
interior mutability without any code to handle synchronized access to the underlying task list's length and head safely. This could of lead to data corruption since two threads modifying the list at once could see incorrect values due to the lack
of access synchronization. The issue was fixed by adding access synchronization code around insertion of tasks into the list. Advisory available underCC0-1.0license.
affected_functions: futures_util;;stream;;futuresunordered
version_of_Affected: >=0.3.0

---
classification: MEDIUM
subtitle: MutexGuard::map can cause a data race in safe code
reported: October 22, 2020
issued: October 30, 2020(last modified: June 13, 2023)
package: {'name': 'futures-util(crates.io)', 'url': '/packages/futures-util.html'}
type: Vulnerability
categories: ['thread-safety']
keywords: []
aliases: [{'text': 'CVE-2020-35905', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35905'}, {'text': 'GHSA-rh4w-94hh-9943', 'url': 'https://github.com/advisories/GHSA-rh4w-94hh-9943'}]
references: [{'text': 'https://github.com/rust-lang/futures-rs/issues/2239', 'url': 'https://github.com/rust-lang/futures-rs/issues/2239'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.7
unaffected: <0.3.2
affected functions: Version
futures_util::lock::mutexguard::map: >=0.3.2
description: Affected versions of the crate had a Send/Sync implementation for MappedMutexGuard that only considered variance on T, while MappedMutexGuard dereferenced to U. This could of led to data races in safe Rust code when a closure used in MutexGuard::map() returns U that is unrelated to T. The issue was fixed by fixingSendandSyncimplementations, and by adding aPhantomData<&'a mut U>marker to theMappedMutexGuardtype to tell the compiler that the guard is over
U too. Advisory available underCC0-1.0license.
affected_functions: futures_util;;lock;;mutexguard;;map
version_of_Affected: >=0.3.2

---
classification: MEDIUM
subtitle: Possible use-after-free withproplist::Iterator
reported: December 22, 2018
issued: October 22, 2020(last modified: February 10, 2024)
package: {'name': 'libpulse-binding(crates.io)', 'url': '/packages/libpulse-binding.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2018-25001', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-25001'}, {'text': 'GHSA-6gvc-4jvj-pwq4', 'url': 'https://github.com/advisories/GHSA-6gvc-4jvj-pwq4'}, {'text': 'GHSA-f56g-chqp-22m9', 'url': 'https://github.com/advisories/GHSA-f56g-chqp-22m9'}]
references: [{'text': 'https://github.com/advisories/GHSA-6gvc-4jvj-pwq4', 'url': 'https://github.com/advisories/GHSA-6gvc-4jvj-pwq4'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityNone
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N
patched: >=2.5.0
unaffected: <1.0.5
description: Affected versions contained a possible use-after-free issue with property list iteration
due to a lack of a lifetime constraint tying the lifetime of aproplist::Iteratorto theProplistobject for which it was created. This made it possible for users, without
experiencing a compiler error/warning, to destroy theProplistobject before the iterator,
thus destroying the underlying C object the iterator works upon, before the iterator may be
finished with it. This impacts all versions of the crate before2.5.0back to1.0.5. Before version1.0.5the function that produces the iterator was broken to the point of being useless. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: bespoke Cell implementation allows obtaining several mutable references to the same data
reported: January  8, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-service(crates.io)', 'url': '/packages/actix-service.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35899', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35899'}, {'text': 'GHSA-whc7-5p35-4ww2', 'url': 'https://github.com/advisories/GHSA-whc7-5p35-4ww2'}]
references: [{'text': 'https://github.com/actix/actix-net/pull/158', 'url': 'https://github.com/actix/actix-net/pull/158'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=1.0.6
description: The custom implementation of a Cell primitive in the affected versions of this crate
does not keep track of mutable references to the underlying data. This allows obtaining several mutable references to the same object
which may result in arbitrary memory corruption, most likely use-after-free. The flaw was corrected by switching from a bespokeCell<T>implementation toRc<RefCell<T>>. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Malicious input could cause uninitialized memory to be exposed
reported: August 25, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'claxon(crates.io)', 'url': '/packages/claxon.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20992', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20992'}, {'text': 'GHSA-8c6g-4xc5-w96c', 'url': 'https://github.com/advisories/GHSA-8c6g-4xc5-w96c'}]
references: [{'text': 'https://github.com/ruuda/claxon/commit/8f28ec275e412dd3af4f3cda460605512faf332c', 'url': 'https://github.com/ruuda/claxon/commit/8f28ec275e412dd3af4f3cda460605512faf332c'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N
patched: ^0.3.2>=0.4.1
description: Affected versions of Claxon made an invalid assumption about the decode buffer
size being a multiple of a value read from the bitstream. This could cause parts
of the decode buffer to not be overwritten. If the decode buffer was newly
allocated and uninitialized, this uninitialized memory could be exposed. This allows an attacker to observe parts of the uninitialized memory in the
decoded audio stream. The flaw was corrected by checking that the value read from the bitstream divides
the decode buffer size, and returning a format error if it does not. If an error
is returned, the decode buffer is not exposed. Regression tests and an
additional fuzzer have been added to prevent similar flaws in the future. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: HTTP download and execution allows MitM RCE
reported: August  1, 2016
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'portaudio(crates.io)', 'url': '/packages/portaudio.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2016-10933', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10933'}, {'text': 'GHSA-pq6v-x7gp-7776', 'url': 'https://github.com/advisories/GHSA-pq6v-x7gp-7776'}]
references: [{'text': 'https://github.com/RustAudio/rust-portaudio/issues/144', 'url': 'https://github.com/RustAudio/rust-portaudio/issues/144'}]
cvss score: 5.9MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N
patched: no patched versions
description: The build script in the portaudio crate will attempt to download via HTTP
the portaudio source and build it. A Mallory in the middle can intercept the download with their own archive
and get RCE. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: scalarmult() vulnerable to degenerate public keys
reported: January 26, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'sodiumoxide(crates.io)', 'url': '/packages/sodiumoxide.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-1000168', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-1000168'}, {'text': 'GHSA-2wc6-2rcj-8v76', 'url': 'https://github.com/advisories/GHSA-2wc6-2rcj-8v76'}]
references: [{'text': 'https://github.com/dnaq/sodiumoxide/issues/154', 'url': 'https://github.com/dnaq/sodiumoxide/issues/154'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N
patched: >=0.0.14
description: Thescalarmult()function included in previous versions of this crate
accepted all-zero public keys, for which the resulting Diffie-Hellman shared
secret will always be zero regardless of the private key used. This issue was fixed by checking for this class of keys and rejecting them
if they are used. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Compiler optimisation for next_with_timeout in pnet::transport::IcmpTransportChannelIterator flaws to SEGFAULT
reported: June 11, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'pnet(crates.io)', 'url': '/packages/pnet.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-25054', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25054'}, {'text': 'GHSA-24g6-5rx7-58wj', 'url': 'https://github.com/advisories/GHSA-24g6-5rx7-58wj'}, {'text': 'GHSA-r6ff-2q3c-v3pv', 'url': 'https://github.com/advisories/GHSA-r6ff-2q3c-v3pv'}]
references: [{'text': 'https://github.com/libpnet/libpnet/issues/449', 'url': 'https://github.com/libpnet/libpnet/issues/449'}]
cvss score: 6MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'High', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredHighUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: High
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H
patched: >=0.27.2
affected functions: Version
pnet::transport::icmptransportchanneliterator: <0.27.2
description: Affected versions of this crate were optimized out by compiler,
which caused dereference of uninitialized file descriptor which caused segfault. Advisory available underCC0-1.0license.
affected_functions: pnet;;transport;;icmptransportchanneliterator
version_of_Affected: <0.27.2

---
classification: MEDIUM
subtitle: Hostname verification skipped when custom root certs used
reported: March 15, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'security-framework(crates.io)', 'url': '/packages/security-framework.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-18588', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18588'}, {'text': 'GHSA-jqqr-c2r2-9cvr', 'url': 'https://github.com/advisories/GHSA-jqqr-c2r2-9cvr'}]
references: [{'text': 'https://github.com/sfackler/rust-security-framework/pull/27', 'url': 'https://github.com/sfackler/rust-security-framework/pull/27'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.1.12
description: If custom root certificates were registered with aClientBuilder, the
hostname of the target server would not be validated against its presented leaf
certificate. This issue was fixed by properly configuring the trust evaluation logic to
perform that check. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: Unsafe Send implementation in Atom allows data races
reported: September 21, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'atom(crates.io)', 'url': '/packages/atom.html'}
type: INFOUnsound
categories: ['thread-safety']
aliases: [{'text': 'CVE-2020-35897', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35897'}, {'text': 'GHSA-9cg2-2j2h-59v9', 'url': 'https://github.com/advisories/GHSA-9cg2-2j2h-59v9'}]
references: [{'text': 'https://github.com/slide-rs/atom/issues/13', 'url': 'https://github.com/slide-rs/atom/issues/13'}]
cvss score: 4.7MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: HighPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.3.6
description: Theatomcrate contains a security issue revolving around its implementation
of the Send trait. It incorrectly allows any arbitrary type to be sent across
threads potentially leading to use-after-free issues through memory races. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: HTTP Request smuggling through malformed Transfer Encoding headers
reported: June 16, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'tiny_http(crates.io)', 'url': '/packages/tiny_http.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35884', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35884'}, {'text': 'GHSA-7v2r-wxmg-mgvc', 'url': 'https://github.com/advisories/GHSA-7v2r-wxmg-mgvc'}]
references: [{'text': 'https://github.com/tiny-http/tiny-http/issues/173', 'url': 'https://github.com/tiny-http/tiny-http/issues/173'}]
cvss score: 6.5MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N
patched: >=0.8.0^0.6.3
description: HTTP pipelining issues and request smuggling attacks are possible due to incorrect
Transfer encoding header parsing. It is possible conduct HTTP request smuggling attacks (CL:TE/TE:TE) by sending invalid Transfer Encoding headers. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack, or obtain sensitive information
from requests other than their own. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: VecCopy allows misaligned access to elements
reported: September 27, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'dync(crates.io)', 'url': '/packages/dync.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35903', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35903'}, {'text': 'GHSA-qxjq-v4wf-ppvh', 'url': 'https://github.com/advisories/GHSA-qxjq-v4wf-ppvh'}]
references: [{'text': 'https://github.com/elrnv/dync/issues/4', 'url': 'https://github.com/elrnv/dync/issues/4'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
patched: >=0.5.0
description: VecCopy::datais created as a Vec of u8 but can be used to store and retrieve
elements of different types leading to misaligned access. The issue was resolved in v0.5.0 by replacing data being stored byVec<u8>with a custom managed
pointer.  Elements are now stored and retrieved using types with proper alignment corresponding to
original types. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: HTTPS MitM vulnerability due to lack of hostname verification
reported: May  9, 2016
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'CVE-2016-10932', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-10932'}, {'text': 'GHSA-9xjr-m6f3-v5wm', 'url': 'https://github.com/advisories/GHSA-9xjr-m6f3-v5wm'}]
references: [{'text': 'https://github.com/hyperium/hyper/blob/master/CHANGELOG.md#v094-2016-05-09', 'url': 'https://github.com/hyperium/hyper/blob/master/CHANGELOG.md#v094-2016-05-09'}]
related: RUSTSEC-2016-0001
cvss score: 4.8MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'Low', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityLowIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: Low
integrity: Low
availability: None
cvss vector: CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N
patched: >=0.9.4
affected oses: windows
description: When used on Windows platforms, all versions of Hyper prior to 0.9.4 did not
perform hostname verification when making HTTPS requests. This allows an attacker to perform MitM attacks by preventing any valid
CA-issued certificate, even if there's a hostname mismatch. The problem was addressed by leveraging rust-openssl's built-in support for
hostname verification. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: headers containing newline characters can split messages
reported: January 23, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2017-18587', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18587'}, {'text': 'GHSA-q89x-f52w-6hj2', 'url': 'https://github.com/advisories/GHSA-q89x-f52w-6hj2'}]
references: [{'text': 'https://github.com/hyperium/hyper/wiki/Security-001', 'url': 'https://github.com/hyperium/hyper/wiki/Security-001'}]
cvss score: 5.3MEDIUM
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'Low', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityLowAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: Low
availability: None
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N
patched: >=0.10.2<0.10.0, >=0.9.18
description: Serializing of headers to the socket did not filter the values for newline bytes (\ror\n),
which allowed for header values to split a request or response. People would not likely include
newlines in the headers in their own applications, so the way for most people to exploit this
is if an application constructs headers based on unsanitized user input. This issue was fixed by replacing all newline characters with a space during serialization of
a header value. Advisory available underCC0-1.0license.

---
classification: MEDIUM
subtitle: array_queue pop_back() may cause a use-after-free
reported: September 26, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'array-queue(crates.io)', 'url': '/packages/array-queue.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35900', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35900'}, {'text': 'GHSA-75cq-g75g-rxff', 'url': 'https://github.com/advisories/GHSA-75cq-g75g-rxff'}]
references: [{'text': 'https://github.com/raviqqe/array-queue/issues/2', 'url': 'https://github.com/raviqqe/array-queue/issues/2'}]
cvss score: 5.5MEDIUM
cvss details: {'Attack vector': 'Local', 'Attack complexity': 'LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone', 'Privileges required': 'Low', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'None'}
attack vector: Local
attack complexity: LowPrivileges requiredLowUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityNone
privileges required: Low
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: None
cvss vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N
patched: no patched versions
unaffected: <0.3.0
description: array_queue implements a circular queue that wraps around an array. However, it
fails to properly index into the array in thepop_backfunction allowing the
reading of previously dropped or uninitialized memory. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Reduced entropy due to inadequate character set usage
reported: June  3, 2024
issued: June  3, 2024(last modified: June 15, 2024)
package: {'name': 'nano-id(crates.io)', 'url': '/packages/nano-id.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'GHSA-2hfw-w739-p7x5', 'url': 'https://github.com/advisories/GHSA-2hfw-w739-p7x5'}, {'text': 'GHSA-9hc7-6w9r-wj94', 'url': 'https://github.com/advisories/GHSA-9hc7-6w9r-wj94'}, {'text': 'CVE-2024-36400', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-36400'}]
cvss score: 9.4CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L
patched: >=0.4.0
affected functions: Version
nano_id::base58: <0.4.0
nano_id::base62: <0.4.0
nano_id::gen: <0.4.0
description: Affected versions of the nano-id crate incorrectly generated IDs using a reduced character set in thenano_id::base62andnano_id::base58functions. Specifically, thebase62function used a character set of 32 symbols instead of the intended 62 symbols, and thebase58function used a character set of 16 symbols instead of the intended 58 symbols. Additionally, thenano_id::genmacro is also affected when a custom character set that is not a power of 2 in size is specified. It should be noted thatnano_id::base64is not affected by this vulnerability. This can result in a significant reduction in entropy, making the generated IDs predictable and vulnerable to brute-force attacks when the IDs are used in security-sensitive contexts such as session tokens or unique identifiers. The flaws were corrected in commita9022772b2f1ce38929b5b81eccc670ac9d3ab23by updating the thenano_id::genmacro to use all specified characters correctly. Advisory available underCC0-1.0license.
affected_functions: nano_id;;base58
version_of_Affected: <0.4.0

---
classification: CRITICAL
subtitle: Memory corruption in liblz4
reported: August 25, 2022
issued: August 26, 2022(last modified: June 13, 2023)
package: {'name': 'lz4-sys(crates.io)', 'url': '/packages/lz4-sys.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'GHSA-9q5j-jm53-v7vr', 'url': 'https://github.com/advisories/GHSA-9q5j-jm53-v7vr'}]
references: [{'text': 'https://github.com/lz4/lz4/pull/972', 'url': 'https://github.com/lz4/lz4/pull/972'}]
related: CVE-2021-3520
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.9.4
description: lz4-sys up to v1.9.3 bundles a version of liblz4 that is vulnerable toCVE-2021-3520. Attackers could craft a payload that triggers an integer overflow upon
decompression, causing an out-of-bounds write. The flaw has been corrected in version v1.9.4 of liblz4, which is included
in lz4-sys 1.9.4. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Generated code can read and write out of bounds in safe code
reported: October 31, 2021
issued: November  7, 2021(last modified: June 13, 2023)
package: {'name': 'flatbuffers(crates.io)', 'url': '/packages/flatbuffers.html'}
type: Vulnerability
aliases: [{'text': 'GHSA-3jch-9qgp-4844', 'url': 'https://github.com/advisories/GHSA-3jch-9qgp-4844'}]
references: [{'text': 'https://github.com/google/flatbuffers/issues/6627', 'url': 'https://github.com/google/flatbuffers/issues/6627'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=22.9.29
description: Code generated by flatbuffers' compiler isunsafebut not marked as such.
See https://github.com/google/flatbuffers/issues/6627 for details. For example, if generated code is used to decode malformed or untrusted input,
undefined behavior (and thus security vulnerabilities) is possible even without
the use of theunsafekeyword,violating the the meaning of "safe"code; All users that use generated code byflatbufferscompiler are recommended to: Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: SM2 Decryption Buffer Overflow
reported: August 24, 2021
issued: August 24, 2021(last modified: June 13, 2023)
package: {'name': 'openssl-src(crates.io)', 'url': '/packages/openssl-src.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2021-3711', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3711'}, {'text': 'GHSA-5ww6-px42-wc85', 'url': 'https://github.com/advisories/GHSA-5ww6-px42-wc85'}]
references: [{'text': 'https://www.openssl.org/news/secadv/20210824.txt', 'url': 'https://www.openssl.org/news/secadv/20210824.txt'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=111.16
description: In order to decrypt SM2 encrypted data an application is expected to call the
API functionEVP_PKEY_decrypt(). Typically an application will call this
function twice. The first time, on entry, the "out" parameter can be NULL and,
on exit, the "outlen" parameter is populated with the buffer size required to
hold the decrypted plaintext. The application can then allocate a sufficiently
sized buffer and callEVP_PKEY_decrypt()again, but this time passing a non-NULL
value for the "out" parameter. A bug in the implementation of the SM2 decryption code means that the
calculation of the buffer size required to hold the plaintext returned by the
first call toEVP_PKEY_decrypt()can be smaller than the actual size required by
the second call. This can lead to a buffer overflow whenEVP_PKEY_decrypt()is
called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an
application could cause attacker chosen data to overflow the buffer by up to a
maximum of 62 bytes altering the contents of other data held after the
buffer, possibly changing application behaviour or causing the application to
crash. The location of the buffer is application dependent but is typically
heap allocated. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Data race in crossbeam-deque
reported: July 30, 2021
issued: August 21, 2021(last modified: October 19, 2021)
package: {'name': 'crossbeam-deque(crates.io)', 'url': '/packages/crossbeam-deque.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'GHSA-pqqp-xmhj-wgcw', 'url': 'https://github.com/advisories/GHSA-pqqp-xmhj-wgcw'}, {'text': 'CVE-2021-32810', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32810'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-pqqp-xmhj-wgcw', 'url': 'https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-pqqp-xmhj-wgcw'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.7.4, <0.8.0>=0.8.1
description: In the affected version of this crate, the result of the race condition is that one or more tasks in the worker queue can be popped twice instead of other tasks that are forgotten and never popped. If tasks are allocated on the heap, this can cause double free and a memory leak. If not, this still can cause a logical bug. Crates usingStealer::steal,Stealer::steal_batch, orStealer::steal_batch_and_popare affected by this issue. Credits to @kmaork for discovering, reporting and fixing the bug. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Integer overflow inhyper's parsing of theTransfer-Encodingheader leads to data loss
reported: July  7, 2021
issued: August  8, 2021(last modified: October 19, 2021)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2021-32714', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32714'}, {'text': 'GHSA-5h46-h7hh-c6x9', 'url': 'https://github.com/advisories/GHSA-5h46-h7hh-c6x9'}]
references: [{'text': 'https://github.com/hyperium/hyper/security/advisories/GHSA-5h46-h7hh-c6x9', 'url': 'https://github.com/hyperium/hyper/security/advisories/GHSA-5h46-h7hh-c6x9'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H
patched: >=0.14.10
description: When decoding chunk sizes that are too large,hyper's code would encounter an integer overflow. Depending on the situation,
this could lead to data loss from an incorrect total size, or in rarer cases, a request smuggling attack. To be vulnerable, you must be usinghyperfor any HTTP/1 purpose, including as a client or server, and consumers must send
requests or responses that specify a chunk size greater than 18 exabytes. For a possible request smuggling attack to be possible,
any upstream proxies must accept a chunk size greater than 64 bits. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: grep-climay run arbitrary executables on Windows
reported: June 12, 2021
issued: June 15, 2021(last modified: June 13, 2023)
package: {'name': 'grep-cli(crates.io)', 'url': '/packages/grep-cli.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2021-3013', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3013'}, {'text': 'GHSA-g4xg-fxmg-vcg5', 'url': 'https://github.com/advisories/GHSA-g4xg-fxmg-vcg5'}]
references: [{'text': 'https://github.com/BurntSushi/ripgrep/issues/1773', 'url': 'https://github.com/BurntSushi/ripgrep/issues/1773'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.6
affected oses: windows
affected functions: Version
grep_cli::decompressionreader::new: <0.1.6
description: On Windows in versions ofgrep-cliprior to0.1.6, it's possible for some
of the routines to execute arbitrary executables. In particular, a quirk of
the Windows process execution API is that it will automatically consider the
current directory before other directories when resolving relative binary
names. Therefore, if you usegrep-clito read decompressed files in an
untrusted directory with that directory as the CWD, a malicious actor to could
put, e.g., agz.exebinary in that directory andgrep-cliwill use the
malicious actor's version ofgz.exeinstead of the system's. This is also technically possible on Unix as well, but only if thePATHvariable contains.. Conventionally, they do not. ADecompressionReaderhas been fixed to automatically resolve binary names
usingPATH, instead of relying on the Windows API to do it. If you usegrep-cli'sCommandReaderwith astd::process::Commandvalue
on Windows, then it is recommended to either construct theCommandwith an
absolute binary name, or usegrep-cli's newresolve_binaryhelper function. To be clear,grep-cli 0.1.6mitigates this issue in two ways: While the first mitigation fixes this issue for sensible values ofPATHwhen doing decompression search, the second mitigation is imperfect. The more
fundamental issue is thatstd::process::Commandis itself vulnerable to this. Advisory available underCC0-1.0license.
affected_functions: grep_cli;;decompressionreader;;new
version_of_Affected: <0.1.6

---
classification: CRITICAL
subtitle: KeyValueReader passes uninitialized memory to Read instance
reported: January 31, 2021
issued: April  2, 2021(last modified: June 13, 2023)
package: {'name': 'outer_cgi(crates.io)', 'url': '/packages/outer_cgi.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-30454', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-30454'}, {'text': 'GHSA-6vmq-jh76-hq43', 'url': 'https://github.com/advisories/GHSA-6vmq-jh76-hq43'}]
references: [{'text': 'https://github.com/SolraBizna/outer_cgi/issues/1', 'url': 'https://github.com/SolraBizna/outer_cgi/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.1
description: TheKeyValueReadertype in affected versions of this crate set up an
uninitialized memory buffer and passed them to be read in to a user-providedReadinstance. TheReadinstance could read uninitialized memory and cause undefined
behavior and miscompilations. This issue was fixed in commitdd59b30by zero-initializing the buffers before passing them. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: throughandthrough_andcauses a double free if the map function panics
reported: February 18, 2021
issued: March 30, 2021(last modified: June 13, 2023)
package: {'name': 'through(crates.io)', 'url': '/packages/through.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29940', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29940'}, {'text': 'GHSA-5hpj-m323-cphm', 'url': 'https://github.com/advisories/GHSA-5hpj-m323-cphm'}]
references: [{'text': 'https://github.com/gretchenfrage/through/issues/1', 'url': 'https://github.com/gretchenfrage/through/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: throughandthrough_andtake a mutable reference as well as a mapping
function to change the provided reference. They do this by callingptr::readon the reference which duplicates ownership and then calling the mapping
function. If the mapping function panics, both the original object and the one
duplicated byptr::readget dropped, causing a double free. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: misc::vec_with_size() can drop uninitialized memory if clone panics
reported: February 17, 2021
issued: March 29, 2021(last modified: June 13, 2023)
package: {'name': 'telemetry(crates.io)', 'url': '/packages/telemetry.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29937', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29937'}, {'text': 'GHSA-hpcx-3pw8-g3j2', 'url': 'https://github.com/advisories/GHSA-hpcx-3pw8-g3j2'}]
references: [{'text': 'https://github.com/Yoric/telemetry.rs/issues/45', 'url': 'https://github.com/Yoric/telemetry.rs/issues/45'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: misc::vec_with_sizecreates a vector of the providedsizeand immediately
callsvec.set_len(size)on it, initially filling it with uninitialized memory.
It then inserts elements usingvec[i] = value.clone(). If thevalue.clone()call panics, uninitialized items in the vector will be
dropped leading to undefined behavior. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: FromIterator implementation for Vector/Matrix can drop uninitialized memory
reported: January 11, 2021
issued: March 29, 2021(last modified: June 13, 2023)
package: {'name': 'adtensor(crates.io)', 'url': '/packages/adtensor.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-29936', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29936'}, {'text': 'GHSA-rg4m-gww5-7p47', 'url': 'https://github.com/advisories/GHSA-rg4m-gww5-7p47'}]
references: [{'text': 'https://github.com/charles-r-earp/adtensor/issues/4', 'url': 'https://github.com/charles-r-earp/adtensor/issues/4'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: TheFromIterator<T>methods forVectorandMatrixrely on the type
parameterNto allocate space in the iterable. If the passed inNtype parameter is larger than the number of items returned
by the iterator, it can lead to uninitialized memory being left in theVectororMatrixtype which gets dropped. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Fix a use-after-free bug in diesels Sqlite backend
reported: March  5, 2021
issued: March  5, 2021(last modified: June 13, 2023)
package: {'name': 'diesel(crates.io)', 'url': '/packages/diesel.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28305', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28305'}, {'text': 'GHSA-j8q9-5rp9-4mv9', 'url': 'https://github.com/advisories/GHSA-j8q9-5rp9-4mv9'}]
references: [{'text': 'https://github.com/diesel-rs/diesel/pull/2663', 'url': 'https://github.com/diesel-rs/diesel/pull/2663'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.4.6
affected functions: Version
diesel::sqliteconnection::query_by_name: <1.4.6
description: We've misusedsqlite3_column_name. TheSQLitedocumentation
states that the following: As part of ourquery_by_nameinfrastructure we've first received all
field names for the prepared statement and stored them as string slices
for later use. After that we calledsqlite3_step()for the first time,
which invalids the pointer and therefore the stored string slice. Advisory available underCC0-1.0license.
affected_functions: diesel;;sqliteconnection;;query_by_name
version_of_Affected: <1.4.6

---
classification: CRITICAL
subtitle: Intern: Data race allowed on T
reported: March  3, 2021
issued: March  4, 2021(last modified: June 13, 2023)
package: {'name': 'internment(crates.io)', 'url': '/packages/internment.html'}
type: Vulnerability
categories: ['thread-safety']
aliases: [{'text': 'CVE-2021-28037', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28037'}, {'text': 'GHSA-gppw-3h6h-v6q2', 'url': 'https://github.com/advisories/GHSA-gppw-3h6h-v6q2'}]
references: [{'text': 'https://github.com/droundy/internment/issues/20', 'url': 'https://github.com/droundy/internment/issues/20'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.2
description: Affected versions of this crate unconditionally implementsSyncforIntern<T>.
This allows users to create data race onT: !Sync, which may lead to undefined behavior
(for example, memory corruption). The flaw was corrected in commit 2928a87 by adding the trait boundT: Syncin theSyncimpl ofIntern<T>. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: push_cloned can drop uninitialized memory or double free on panic
reported: February 22, 2021
issued: March  3, 2021(last modified: June 13, 2023)
package: {'name': 'stack_dst(crates.io)', 'url': '/packages/stack_dst.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28034', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28034'}, {'text': 'CVE-2021-28035', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28035'}, {'text': 'GHSA-45w7-7g63-2m5w', 'url': 'https://github.com/advisories/GHSA-45w7-7g63-2m5w'}, {'text': 'GHSA-8mjx-h23h-w2pg', 'url': 'https://github.com/advisories/GHSA-8mjx-h23h-w2pg'}]
references: [{'text': 'https://github.com/thepowersgang/stack_dst-rs/issues/5', 'url': 'https://github.com/thepowersgang/stack_dst-rs/issues/5'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
affected functions: Version
stack_dst::stacka::push_cloned: <0.6.1
description: Affected versions ofstack_dstused apush_innerfunction that increased
the internal length of the array and then calledval.clone(). If theval.clone()call panics, the stack could drop an already dropped
element or drop uninitialized memory. This issue was fixed in2a4d538by increasing the length of the array after
elements are cloned. Advisory available underCC0-1.0license.
affected_functions: stack_dst;;stacka;;push_cloned
version_of_Affected: <0.6.1

---
classification: CRITICAL
subtitle: split_at allows obtaining multiple mutable references to the same data
reported: January 31, 2021
issued: March  2, 2021(last modified: June 13, 2023)
package: {'name': 'nano_arena(crates.io)', 'url': '/packages/nano_arena.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28032', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28032'}, {'text': 'GHSA-wp34-mqw5-jj85', 'url': 'https://github.com/advisories/GHSA-wp34-mqw5-jj85'}]
references: [{'text': 'https://github.com/bennetthardwick/nano-arena/issues/1', 'url': 'https://github.com/bennetthardwick/nano-arena/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.2
affected functions: Version
nano_arena::arena::split_at: <0.5.2
nano_arena::arenasplit::split_at: <0.5.2
description: Affected versions of this crate assumed thatBorrow<Idx>was guaranteed to
return the same value on.borrow(). The borrowed index value was used to
retrieve a mutable reference to a value. If theBorrow<Idx>implementation returned a different index, the split arena
would allow retrieving the index as a mutable reference creating two mutable
references to the same element. This violates Rust's aliasing rules and allows
for memory safety issues such as writing out of bounds and use-after-frees. The flaw was corrected in commit6b83f9dby storing the.borrow()value in
a temporary variable. Advisory available underCC0-1.0license.
affected_functions: nano_arena;;arena;;split_at
version_of_Affected: <0.5.2

---
classification: CRITICAL
subtitle: Deserializing an array can drop uninitialized memory on panic
reported: March  1, 2021
issued: March  2, 2021(last modified: June 13, 2023)
package: {'name': 'byte_struct(crates.io)', 'url': '/packages/byte_struct.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28033', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28033'}, {'text': 'GHSA-8fgg-5v78-6g76', 'url': 'https://github.com/advisories/GHSA-8fgg-5v78-6g76'}]
references: [{'text': 'https://github.com/wwylele/byte-struct-rs/issues/1', 'url': 'https://github.com/wwylele/byte-struct-rs/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
description: Theread_bytes_default_lefunction for[T; n]arrays, used to deserialize
arrays ofTfrom bytes created a[T; n]array withstd::mem::uninitializedand then calledT's deserialization method. IfT's deserialization method panicked, the uninitialized memory could drop
invalid objects. This flaw was corrected ina535678by removing the unsafe block and using
a.mapfunction to deserialize each element of the array instead. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: move_elements can double-free objects on panic
reported: February 18, 2021
issued: March  2, 2021(last modified: June 13, 2023)
package: {'name': 'scratchpad(crates.io)', 'url': '/packages/scratchpad.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-28031', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28031'}, {'text': 'GHSA-3qm2-rfqw-fmrw', 'url': 'https://github.com/advisories/GHSA-3qm2-rfqw-fmrw'}]
references: [{'text': 'https://github.com/okready/scratchpad/issues/1', 'url': 'https://github.com/okready/scratchpad/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.3.1
affected functions: Version
scratchpad::slicemovesource::move_elements: <1.3.1
description: Affected versions ofscratchpadusedptr::readto read elements while
calling a user provided functionfon them. Since the pointer read duplicates ownership, a panic inside the user providedffunction could cause a double free when unwinding. The flaw was fixed in commit891561beaby removing the unsafe block and using
a plain iterator. Advisory available underCC0-1.0license.
affected_functions: scratchpad;;slicemovesource;;move_elements
version_of_Affected: <1.3.1

---
classification: CRITICAL
subtitle: Loading a bgzip block can write out of bounds if size overflows.
reported: January  7, 2021
issued: March  1, 2021(last modified: June 13, 2023)
package: {'name': 'bam(crates.io)', 'url': '/packages/bam.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-28027', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-28027'}, {'text': 'GHSA-cpqj-r29q-chrh', 'url': 'https://github.com/advisories/GHSA-cpqj-r29q-chrh'}]
references: [{'text': 'https://gitlab.com/tprodanov/bam/-/issues/4', 'url': 'https://gitlab.com/tprodanov/bam/-/issues/4'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.3
affected functions: Version
bam::bgzip::block::load: <0.1.3
description: Affected versions ofbamset the length of an internal buffer usingself.compressed.set_len(block_size - HEADER_SIZE - MIN_EXTRA_SIZE)and then
wrote into it. Whileblock_sizewas constrained to a proper maximum, when it
was too small the subtraction could overflow negatively to a large number past
the capacity ofself.compressed. This can result in memory corruption in the form of writing out of bounds when
loading abgzipfile with a smallblock_size. Commit061eee38d4fixed this issue by checking for the underflow when setting
the buffer size. Advisory available underCC0-1.0license.
affected_functions: bam;;bgzip;;block;;load
version_of_Affected: <0.1.3

---
classification: CRITICAL
subtitle: Incorrect check on buffer length when seeding RNGs
reported: February 12, 2021
issued: February 15, 2021(last modified: June 13, 2023)
package: {'name': 'rand_core(crates.io)', 'url': '/packages/rand_core.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2021-27378', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27378'}, {'text': 'GHSA-w7j2-35mf-95p7', 'url': 'https://github.com/advisories/GHSA-w7j2-35mf-95p7'}]
references: [{'text': 'https://github.com/rust-random/rand/pull/1096', 'url': 'https://github.com/rust-random/rand/pull/1096'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.2
unaffected: <0.6.0
affected functions: Version
rand_core::le::read_u32_into: <0.6.2, >=0.6.0
rand_core::le::read_u64_into: <0.6.2, >=0.6.0
description: Summary: rand_core::le::read_u32_into and read_u64_into have incorrect checks on the source buffer length, allowing the destination buffer to be under-filled. Implications: some downstream RNGs, including Hc128Rng (but not the more widely used ChaCha*Rng), allow seeding using the SeedableRng::from_seed trait-function with too short keys. Advisory available underCC0-1.0license.
affected_functions: rand_core;;le;;read_u32_into
version_of_Affected: <0.6.2, >=0.6.0

---
classification: CRITICAL
subtitle: Use-after-free insubscript_nextandsubscript_prevwrappers
reported: February  9, 2021
issued: February 15, 2021(last modified: June 13, 2023)
package: {'name': 'yottadb(crates.io)', 'url': '/packages/yottadb.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-27377', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27377'}, {'text': 'GHSA-9658-c26v-7qvf', 'url': 'https://github.com/advisories/GHSA-9658-c26v-7qvf'}]
references: [{'text': 'https://gitlab.com/YottaDB/Lang/YDBRust/-/issues/40', 'url': 'https://gitlab.com/YottaDB/Lang/YDBRust/-/issues/40'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.2.0
affected functions: Version
yottadb::key::sub_next_self_st: <1.2.0
yottadb::key::sub_prev_self_st: <1.2.0
yottadb::keycontext::sub_next_self_st: <1.2.0
yottadb::keycontext::sub_prev_self_st: <1.2.0
description: Affected versions of this crate had an unsound implementation which could pass
a pointer to freed memory toydb_subscript_next_standydb_subscript_prev_stif the variable and subscripts did not have enough
memory allocated on the first call to hold the next variable in the database. For example, the following code had undefined behavior: yottadbhas no reverse-dependencies on crates.io and there are no known
instances of this API being used incorrectly in practice. The fix is backwards
compatible. The flaw was corrected by recalculating the pointer each time it was reallocated. Advisory available underCC0-1.0license.
affected_functions: yottadb;;key;;sub_next_self_st
version_of_Affected: <1.2.0

---
classification: CRITICAL
subtitle: nb-connectinvalidly assumes the memory layout of std::net::SocketAddr
reported: February 14, 2021
issued: February 14, 2021(last modified: June 13, 2023)
package: {'name': 'nb-connect(crates.io)', 'url': '/packages/nb-connect.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2021-27376', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27376'}, {'text': 'GHSA-rm4w-6696-r77p', 'url': 'https://github.com/advisories/GHSA-rm4w-6696-r77p'}]
references: [{'text': 'https://github.com/smol-rs/nb-connect/issues/1', 'url': 'https://github.com/smol-rs/nb-connect/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.0.3
description: Thenb-connectcrate has assumedstd::net::SocketAddrV4andstd::net::SocketAddrV6have the same memory layout as the system C representationsockaddr. It has simply casted the pointers to convert the socket addresses to the
system representation. The standard library does not say anything about the memory
layout, and this will cause invalid memory access if the standard library
changes the implementation. No warnings or errors will be emitted once the
change happens. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: FixedCapacityDequeLike::clone()can cause dropping uninitialized memory
reported: December 31, 2020
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'array-tools(crates.io)', 'url': '/packages/array-tools.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-36452', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36452'}, {'text': 'GHSA-6wp2-fw3v-mfmc', 'url': 'https://github.com/advisories/GHSA-6wp2-fw3v-mfmc'}]
references: [{'text': 'https://github.com/L117/array-tools/issues/2', 'url': 'https://github.com/L117/array-tools/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.2
description: Affected versions of this crate don't guard against panics, so that partially uninitialized buffer is dropped when user-providedT::clone()panics inFixedCapacityDequeLike<T, A>::clone(). This causes memory corruption. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Sectors::getaccesses unclaimed/uninitialized memory
reported: January  6, 2021
issued: January 30, 2021(last modified: June 13, 2023)
package: {'name': 'calamine(crates.io)', 'url': '/packages/calamine.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
aliases: [{'text': 'CVE-2021-26951', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26951'}, {'text': 'GHSA-ppqp-78xx-3r38', 'url': 'https://github.com/advisories/GHSA-ppqp-78xx-3r38'}]
references: [{'text': 'https://github.com/tafia/calamine/issues/199', 'url': 'https://github.com/tafia/calamine/issues/199'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.17.0
description: Affected versions of this crate arbitrarily callsVec::set_lento increase length of a vector without claiming more memory for the vector. Affected versions of this crate
also calls user-providedReadon the uninitialized memory of the vector that was
extended withVec::set_len. This can overwrite active entities in adjacent heap memory and seems to be a major security issue. Also, calling user-providedReadon uninitialized memory is defined as UB in Rust. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Contents of uninitialized memory exposed in DeflateOutput's AsyncRead implementation
reported: January 24, 2020
issued: January 27, 2021(last modified: June 13, 2023)
package: {'name': 'libp2p-deflate(crates.io)', 'url': '/packages/libp2p-deflate.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2020-36443', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36443'}, {'text': 'GHSA-gvcp-948f-8f2p', 'url': 'https://github.com/advisories/GHSA-gvcp-948f-8f2p'}]
references: [{'text': 'https://github.com/libp2p/rust-libp2p/issues/1932', 'url': 'https://github.com/libp2p/rust-libp2p/issues/1932'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.27.1
description: Affected versions of this crate passes an uninitialized buffer to a user-provided trait functionAsyncRead::poll_read(). ArbitraryAsyncRead::poll_read()implementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.
Reading from uninitialized memory produces undefined values that can quickly invoke undefined behavior. The flaw was fixed in commit 5ba266a by ensuring the newly allocated part of the buffer is zero-initialized before passing it to a user-providedAsyncRead::poll_read(). Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Reading uninitialized memory can cause UB (Deserializer::read_vec)
reported: January  2, 2021
issued: January 24, 2021(last modified: June 13, 2023)
package: {'name': 'cdr(crates.io)', 'url': '/packages/cdr.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-26305', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26305'}, {'text': 'GHSA-37jj-wp7g-7wj4', 'url': 'https://github.com/advisories/GHSA-37jj-wp7g-7wj4'}]
references: [{'text': 'https://github.com/hrektts/cdr-rs/issues/10', 'url': 'https://github.com/hrektts/cdr-rs/issues/10'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.4
description: Deserializer::read_vec()created an uninitialized buffer and passes it to a user-providedReadimplementation (Deserializer.reader.read_exact()). Passing an uninitialized buffer to an arbitraryReadimplementation is currently defined as undefined behavior in Rust. Official documentation for theReadtrait explains the following: "It is your responsibility to make sure that buf is initialized before calling read. Calling read with an uninitialized buf (of the kind one obtains via MaybeUninit) is not safe, and can lead to undefined behavior." The flaw was corrected in commit ce310f7 by zero-initializing the newly allocated buffer before handing it toDeserializer.reader.read_exact(). Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: reading on uninitialized buffer can cause UB (impl<R> BufRead for GreedyAccessReader<R>)
reported: January  2, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'bra(crates.io)', 'url': '/packages/bra.html'}
type: Vulnerability
categories: ['memory-exposure']
aliases: [{'text': 'CVE-2021-25905', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25905'}, {'text': 'GHSA-j8qq-58cr-8cc7', 'url': 'https://github.com/advisories/GHSA-j8qq-58cr-8cc7'}]
references: [{'text': 'https://github.com/Enet4/bra-rs/issues/1', 'url': 'https://github.com/Enet4/bra-rs/issues/1'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H
patched: >=0.1.1
description: Affected versions of this crate creates an uninitialized buffer and passes it to user-providedReadimplementation. This is unsound, because it allows safe Rust code to exhibit an undefined behavior (read from uninitialized memory). The flaw was corrected in version 0.1.1 by zero-initializing a newly allocated buffer
before handing it to a user-providedReadimplementation. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: panic safety: double drop may happen withinutil::{mutate, mutate2}
reported: January 12, 2021
issued: January 20, 2021(last modified: June 13, 2023)
package: {'name': 'containers(crates.io)', 'url': '/packages/containers.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2021-25907', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25907'}, {'text': 'GHSA-cv7x-6rc6-pq5v', 'url': 'https://github.com/advisories/GHSA-cv7x-6rc6-pq5v'}]
references: [{'text': 'https://github.com/strake/containers.rs/issues/2', 'url': 'https://github.com/strake/containers.rs/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.9.11
description: Upon panic in a user-provided functionf,fn mutate()&fn mutate2drops twice a same object. Affected versions of this crate did not guard against double drop while temporarily duplicating an object's ownership withptr::read(). Dropping a same object can result in memory corruption. The flaw was corrected in version "0.9.11" by fixing the code to abort upon panic. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Double free when callingsys_info::disk_infofrom multiple threads
reported: May 31, 2020
issued: January 19, 2021(last modified: June 13, 2023)
package: {'name': 'sys-info(crates.io)', 'url': '/packages/sys-info.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-36434', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36434'}, {'text': 'GHSA-2f5j-3mhq-xv58', 'url': 'https://github.com/advisories/GHSA-2f5j-3mhq-xv58'}]
references: [{'text': 'https://github.com/FillZpp/sys-info-rs/issues/63', 'url': 'https://github.com/FillZpp/sys-info-rs/issues/63'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.8.0
affected oses: linux
affected functions: Version
sys_info::disk_info: <=0.1.1
description: Affected versions ofsys-infouse a static, global, list to store temporary disk information while running. The function that cleans up this list,DFCleanup, assumes a single threaded environment and will try to free the same memory twice in a multithreaded environment. This results in consistent double-frees and segfaults when callingsys_info::disk_infofrom multiple threads at once. The issue was fixed by moving the global variable into a local scope. Advisory available underCC0-1.0license.
affected_functions: sys_info;;disk_info
version_of_Affected: <=0.1.1

---
classification: CRITICAL
subtitle: Buffer overflow in SmallVec::insert_many
reported: January  8, 2021
issued: January  8, 2021(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2021-25900', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25900'}, {'text': 'GHSA-43w2-9j62-hq99', 'url': 'https://github.com/advisories/GHSA-43w2-9j62-hq99'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/252', 'url': 'https://github.com/servo/rust-smallvec/issues/252'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.14, <1.0.0>=1.6.1
unaffected: <0.6.3
affected functions: Version
smallvec::smallvec::insert_many: >=0.6.3, <0.6.14>=1.0.0, <1.6.1
description: A bug in theSmallVec::insert_manymethod caused it to allocate a buffer that was smaller than needed.  It then wrote past the end of the buffer, causing a buffer overflow and memory corruption on the heap. This bug was only triggered if the iterator passed toinsert_manyyielded more items than the lower bound returned from itssize_hintmethod. The flaw was corrected in smallvec 0.6.14 and 1.6.1, by ensuring that additional space is always reserved for each item inserted.  The fix also simplified the implementation ofinsert_manyto use less unsafe code, so it is easier to verify its correctness. Thank you to Yechan Bae (@Qwaz) and the Rust group at Georgia Tech’s SSLab for finding and reporting this bug. Advisory available underCC0-1.0license.
affected_functions: smallvec;;smallvec;;insert_many
version_of_Affected: >=0.6.3, <0.6.14>=1.0.0, <1.6.1

---
classification: CRITICAL
subtitle: sigstack allocation bug can cause memory corruption or leak
reported: January 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'lucet-runtime-internals(crates.io)', 'url': '/packages/lucet-runtime-internals.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
aliases: [{'text': 'CVE-2020-35859', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35859'}, {'text': 'GHSA-3933-wvjf-pcvc', 'url': 'https://github.com/advisories/GHSA-3933-wvjf-pcvc'}]
references: [{'text': 'https://github.com/bytecodealliance/lucet/pull/401', 'url': 'https://github.com/bytecodealliance/lucet/pull/401'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H
patched: <0.5.0, >=0.4.3>=0.5.1
description: An embedding using affected versions of lucet-runtime configured to use
non-default Wasm globals sizes of more than 4KiB, or compiled in debug mode
without optimizations, could leak data from the signal handler stack to guest
programs. This can potentially cause data from the embedding host to leak to
guest programs or cause corruption of guest program memory. This flaw was resolved by correcting the sigstack allocation logic. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: traitobject assumes the layout of fat pointers
reported: June  1, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'traitobject(crates.io)', 'url': '/packages/traitobject.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35881', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35881'}, {'text': 'GHSA-j79j-cx3h-g27h', 'url': 'https://github.com/advisories/GHSA-j79j-cx3h-g27h'}]
references: [{'text': 'https://github.com/reem/rust-traitobject/issues/7', 'url': 'https://github.com/reem/rust-traitobject/issues/7'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
affected functions: Version
traitobject::data: 
traitobject::data_mut: 
description: This crate gets the data pointer from fat pointers assuming that the first
element in a fat pointer is the data pointer. This is currently true, but
it may change in a future Rust version, leading to memory corruption. This has been fixed in the master branch of the crate, but is has not
been released into crates.io. Advisory available underCC0-1.0license.
affected_functions: traitobject;;data
version_of_Affected: 

---
classification: CRITICAL
subtitle: Bug in SliceDeque::move_head_unchecked corrupts its memory
reported: May  7, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15543', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15543'}, {'text': 'GHSA-c3m3-c39q-pv23', 'url': 'https://github.com/advisories/GHSA-c3m3-c39q-pv23'}]
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/57', 'url': 'https://github.com/gnzlbg/slice_deque/issues/57'}]
related: RUSTSEC-2018-0008
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.0
description: Affected versions of this crate entered a corrupted state ifmem::size_of::<T>() % allocation_granularity() != 0and a specific allocation
pattern was used: sufficiently shifting the deque elements over the mirrored
page boundary. This allows an attacker that controls controls both element insertion and
removal to corrupt the deque, such that reading elements from it would read
bytes corresponding to other elements in the deque. (e.g. a read of T could read
some bytes from one value and some bytes from an adjacent one, resulting in a T
whose value representation is not meaningful). This is undefined behavior. The flaw was corrected by using a pair of pointers to track the head and tail of
the deque instead of a pair of indices. This pair of pointers are represented
using a Rust slice. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Bug in SliceDeque::move_head_unchecked allows read of corrupted memory
reported: December  5, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'slice-deque(crates.io)', 'url': '/packages/slice-deque.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20995', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20995'}, {'text': 'GHSA-hr3c-6mmp-6m39', 'url': 'https://github.com/advisories/GHSA-hr3c-6mmp-6m39'}]
references: [{'text': 'https://github.com/gnzlbg/slice_deque/issues/57', 'url': 'https://github.com/gnzlbg/slice_deque/issues/57'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.16
description: Affected versions of this crate did not properly update the
head and tail of the deque when inserting and removing elements from the front
if, before insertion or removal, the tail of the deque was in the mirrored
memory region, and if, after insertion or removal, the head of the deque is
exactly at the beginning of the mirrored memory region. An attacker that controls both element insertion and removal into the deque
could put it in a corrupted state. Once the deque enters such an state, its head
and tail are corrupted, but in bounds of the allocated memory. This can result
in partial reads and writes, reads of uninitialized memory, reads of memory
containing previously dropped objects, etc. An attacker could exploit this to
alter program execution. The flaw was corrected by properly updating the head and tail of the deque in
this case. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: linked-hash-map creates uninitialized NonNull pointer
reported: June 23, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'linked-hash-map(crates.io)', 'url': '/packages/linked-hash-map.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-25573', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25573'}, {'text': 'GHSA-r43h-gmrm-h5c9', 'url': 'https://github.com/advisories/GHSA-r43h-gmrm-h5c9'}]
references: [{'text': 'https://github.com/contain-rs/linked-hash-map/pull/100', 'url': 'https://github.com/contain-rs/linked-hash-map/pull/100'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.3
description: Affected versions of this crate calledmem::uninitialized()to create aNonNull<T>,
which is undefined behavior. The flaw was corrected by avoiding the use ofmem::uninitialized(). Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Parsing a specially crafted message can result in a stack overflow
reported: January 16, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'prost(crates.io)', 'url': '/packages/prost.html'}
type: Vulnerability
categories: ['denial-of-service', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2020-35858', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35858'}, {'text': 'GHSA-gv73-9mwv-fwgq', 'url': 'https://github.com/advisories/GHSA-gv73-9mwv-fwgq'}]
references: [{'text': 'https://github.com/danburkert/prost/issues/267', 'url': 'https://github.com/danburkert/prost/issues/267'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
description: Affected versions of this crate contained a bug in which decoding untrusted
input could overflow the stack. On architectures with stack probes (like x86), this can be used for denial of
service attacks, while on architectures without stack probes (like ARM)
overflowing the stack is unsound and can result in potential memory corruption
(or even RCE). The flaw was quickly corrected by @danburkert and released in version 0.6.1. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: generichash::Digest::eq always return true
reported: October 11, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'sodiumoxide(crates.io)', 'url': '/packages/sodiumoxide.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-25002', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25002'}, {'text': 'GHSA-wrvc-72w7-xpmj', 'url': 'https://github.com/advisories/GHSA-wrvc-72w7-xpmj'}]
references: [{'text': 'https://github.com/sodiumoxide/sodiumoxide/pull/381', 'url': 'https://github.com/sodiumoxide/sodiumoxide/pull/381'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.2.5
affected functions: Version
sodiumoxide::crypto::generichash::digest::eq: <0.2.5, >=0.2.0
sodiumoxide::crypto::generichash::digest::ne: <0.2.5, >=0.2.0
description: PartialEq implementation for generichash::Digest has compared itself to itself. Digest::eq always returns true and Digest::ne always returns false. Advisory available underCC0-1.0license.
affected_functions: sodiumoxide;;crypto;;generichash;;digest;;eq
version_of_Affected: <0.2.5, >=0.2.0

---
classification: CRITICAL
subtitle: Allows viewing and modifying arbitrary structs as bytes
reported: June 14, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rgb(crates.io)', 'url': '/packages/rgb.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2020-25016', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25016'}, {'text': 'GHSA-g4rw-8m5q-6453', 'url': 'https://github.com/advisories/GHSA-g4rw-8m5q-6453'}]
references: [{'text': 'https://github.com/kornelski/rust-rgb/issues/35', 'url': 'https://github.com/kornelski/rust-rgb/issues/35'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: >=0.8.20
unaffected: <0.5.4
description: Affected versions of rgb crate allow viewing and modifying data of any typeTwrapped inRGB<T>as bytes,
and do not correctly constrainRGB<T>and other wrapper structures to the types for which it is safe to do so. Safety violation possible for a type wrapped inRGB<T>and similar wrapper structures: The issue was resolved by requiring all types wrapped in structures provided by RGB crate to implement an unsafe marker trait. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: failure is officially deprecated/unmaintained
reported: May  2, 2020
issued: October  1, 2020(last modified: February 10, 2024)
package: {'name': 'failure(crates.io)', 'url': '/packages/failure.html'}
type: INFOUnmaintained
aliases: [{'text': 'CVE-2019-25010', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25010'}, {'text': 'CVE-2020-25575', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25575'}, {'text': 'GHSA-jq66-xh47-j9f3', 'url': 'https://github.com/advisories/GHSA-jq66-xh47-j9f3'}, {'text': 'GHSA-r98r-j25q-rmpr', 'url': 'https://github.com/advisories/GHSA-r98r-j25q-rmpr'}]
references: [{'text': 'https://github.com/rust-lang-nursery/failure/pull/347', 'url': 'https://github.com/rust-lang-nursery/failure/pull/347'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Thefailurecrate is officially end-of-life: it has been marked as deprecated
by the former maintainer, who has announced that there will be no updates or
maintenance work on it going forward. The following are some suggested actively developed alternatives to switch to: Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Type confusion ifprivate_get_type_idis overridden
reported: November 13, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'failure(crates.io)', 'url': '/packages/failure.html'}
type: INFOUnsound
keywords: []
aliases: [{'text': 'CVE-2019-25010', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25010'}, {'text': 'CVE-2020-25575', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25575'}, {'text': 'GHSA-jq66-xh47-j9f3', 'url': 'https://github.com/advisories/GHSA-jq66-xh47-j9f3'}, {'text': 'GHSA-r98r-j25q-rmpr', 'url': 'https://github.com/advisories/GHSA-r98r-j25q-rmpr'}]
references: [{'text': 'https://github.com/rust-lang-nursery/failure/issues/336', 'url': 'https://github.com/rust-lang-nursery/failure/issues/336'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
affected functions: Version
failure::fail::__private_get_type_id__: >=0.1.0
description: Safe Rust code can implement malfunctioning__private_get_type_id__and cause
type confusion when downcasting, which is an undefined behavior. Users who deriveFailtrait are not affected. Advisory available underCC0-1.0license.
affected_functions: failure;;fail;;__private_get_type_id__
version_of_Affected: >=0.1.0

---
classification: CRITICAL
subtitle: HeaderMap::Drain API is unsound
reported: November 16, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'http(crates.io)', 'url': '/packages/http.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-25009', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25009'}, {'text': 'GHSA-6rhx-hqxm-8p36', 'url': 'https://github.com/advisories/GHSA-6rhx-hqxm-8p36'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.20
affected functions: Version
http::header::headermap::drain: <0.1.20
description: Affected versions of this crate incorrectly used raw pointer,
which introduced unsoundness in its public safe API. Failing to drop the Drain struct causes double-free,
andit is possible to violate Rust's alias rule and cause data race with Drain's Iterator implementation. The flaw was corrected in 0.1.20 release ofhttpcrate. Advisory available underCC0-1.0license.
affected_functions: http;;header;;headermap;;drain
version_of_Affected: <0.1.20

---
classification: CRITICAL
subtitle: Unsoundimpl Follow for bool
reported: October 20, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'flatbuffers(crates.io)', 'url': '/packages/flatbuffers.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2019-25004', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-25004'}, {'text': 'GHSA-gx73-2498-r55c', 'url': 'https://github.com/advisories/GHSA-gx73-2498-r55c'}]
references: [{'text': 'https://github.com/google/flatbuffers/issues/5530', 'url': 'https://github.com/google/flatbuffers/issues/5530'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.1
unaffected: <0.4.0
affected functions: Version
flatbuffers::follow::follow: >=0.4.0<=0.6.0
description: The implementation ofimpl Follow for boolallows to reinterpret arbitrary bytes as abool. In Rustboolhas stringent requirements for its in-memory representation. Use of this function
allows to violate these requirements and invoke undefined behaviour in safe code. Advisory available underCC0-1.0license.
affected_functions: flatbuffers;;follow;;follow
version_of_Affected: >=0.4.0<=0.6.0

---
classification: CRITICAL
subtitle: Integer overflow leads to heap-based buffer overflow in encode_config_buf
reported: May  3, 2017
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'base64(crates.io)', 'url': '/packages/base64.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2017-1000430', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-1000430'}, {'text': 'GHSA-x67x-vg9m-65c3', 'url': 'https://github.com/advisories/GHSA-x67x-vg9m-65c3'}]
references: [{'text': 'https://github.com/alicemaz/rust-base64/commit/24ead980daf11ba563e4fb2516187a56a71ad319', 'url': 'https://github.com/alicemaz/rust-base64/commit/24ead980daf11ba563e4fb2516187a56a71ad319'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.2
description: Affected versions of this crate suffered from an integer overflow bug when
calculating the size of a buffer to use when encoding base64 using theencode_config_bufandencode_configfunctions.  If the input string
was large, this would cause a buffer to be allocated that was too small.
Since this function writes to the buffer using unsafe code, it would
allow an attacker to write beyond the buffer, causing memory corruption
and possibly the execution of arbitrary code. This flaw was corrected by using checked arithmetic to calculate
the size of the buffer. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Ozone contains several memory safety issues
reported: July  4, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'ozone(crates.io)', 'url': '/packages/ozone.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35877', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35877'}, {'text': 'CVE-2020-35878', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35878'}, {'text': 'GHSA-m3ww-7hrp-gw9w', 'url': 'https://github.com/advisories/GHSA-m3ww-7hrp-gw9w'}, {'text': 'GHSA-p2q9-9cq6-h3jw', 'url': 'https://github.com/advisories/GHSA-p2q9-9cq6-h3jw'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Ozone contains several memory safety issues includingout-of-bound accessand dropping ofuninitialized memory. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: CBox API allows to de-reference raw pointers withoutunsafecode
reported: March 19, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'cbox(crates.io)', 'url': '/packages/cbox.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35860', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35860'}, {'text': 'GHSA-3vjm-36rr-7qrq', 'url': 'https://github.com/advisories/GHSA-3vjm-36rr-7qrq'}]
references: [{'text': 'https://github.com/TomBebbington/cbox-rs/issues/2', 'url': 'https://github.com/TomBebbington/cbox-rs/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: CBoxandCSemiBoxare part of the public API of the cbox crate
and they allow to create smart pointers from raw pointers and de-reference
them without the need ofunsafecode. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: HMAC-BLAKE2 algorithms compute incorrect results
reported: August 25, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'blake2(crates.io)', 'url': '/packages/blake2.html'}
type: Vulnerability
categories: ['crypto-failure']
aliases: [{'text': 'CVE-2019-16143', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16143'}, {'text': 'GHSA-4x25-pvhw-5224', 'url': 'https://github.com/advisories/GHSA-4x25-pvhw-5224'}]
references: [{'text': 'https://github.com/RustCrypto/MACs/issues/19', 'url': 'https://github.com/RustCrypto/MACs/issues/19'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.8.1
description: When used in conjunction with the Hash-based Message Authentication Code (HMAC),
the BLAKE2b and BLAKE2s implementations inblake2crate versions prior to
v0.8.1 used an incorrect block size (32-bytes instead of 64-bytes for BLAKE2s,
and 64-bytes instead of 128-bytes for BLAKE2b), causing them to miscompute theMacResult. The v0.8.1 release of theblake2crate uses the correct block sizes. Note that this advisory only impacts usage of BLAKE2 with HMAC, and does not
impactDigestfunctionality. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Enum repr causing potential memory corruption
reported: December 18, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'arrayfire(crates.io)', 'url': '/packages/arrayfire.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2018-20998', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20998'}, {'text': 'GHSA-69fv-gw6g-8ccg', 'url': 'https://github.com/advisories/GHSA-69fv-gw6g-8ccg'}]
references: [{'text': 'https://github.com/arrayfire/arrayfire-rust/pull/177', 'url': 'https://github.com/arrayfire/arrayfire-rust/pull/177'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=3.6.0
unaffected: <=3.5.0
affected architectures: x86_64
affected oses: windows
description: The attribute repr() added to enums to be compatible with C-FFI caused
memory corruption on MSVC toolchain. arrayfire crates <= version 3.5.0 do not have this issue when used with
Rust versions 1.27 or earlier. The issue only started to appear since
Rust version 1.28. The issue seems to be interlinked with which version of Rust is being used. The issue was fixed in crate 3.6.0. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: bespoke Cell implementation allows obtaining several mutable references to the same data
reported: January  8, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-utils(crates.io)', 'url': '/packages/actix-utils.html'}
type: INFOUnsound
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35898', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35898'}, {'text': 'GHSA-hhw2-pqhf-vmx2', 'url': 'https://github.com/advisories/GHSA-hhw2-pqhf-vmx2'}]
references: [{'text': 'https://github.com/actix/actix-net/issues/160', 'url': 'https://github.com/actix/actix-net/issues/160'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H
patched: >=2.0.0
description: The custom implementation of a Cell primitive in the affected versions of this crate
does not keep track of mutable references to the underlying data. This allows obtaining several mutable references to the same object
which may result in arbitrary memory corruption, most likely use-after-free. The flaw was corrected by switching from a bespokeCell<T>implementation toRc<RefCell<T>>. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Matrix::new() drops uninitialized memory
reported: August 25, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'alg_ds(crates.io)', 'url': '/packages/alg_ds.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-36432', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-36432'}, {'text': 'GHSA-3vv3-frrq-6486', 'url': 'https://github.com/advisories/GHSA-3vv3-frrq-6486'}]
references: [{'text': 'https://gitlab.com/dvshapkin/alg-ds/-/issues/1', 'url': 'https://gitlab.com/dvshapkin/alg-ds/-/issues/1'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Matrix::new()internally callsMatrix::fill_with()which uses*ptr = valuepattern to initialize the buffer.
This pattern assumes that there is an initialized struct at the address and drops it, which results in dropping of uninitialized struct. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: bigint is unmaintained, use uint instead
reported: May  7, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'bigint(crates.io)', 'url': '/packages/bigint.html'}
type: INFOUnmaintained
aliases: [{'text': 'CVE-2020-35880', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35880'}, {'text': 'GHSA-wgx2-6432-j3fw', 'url': 'https://github.com/advisories/GHSA-wgx2-6432-j3fw'}]
references: [{'text': 'https://github.com/paritytech/bigint/commit/7e71521a61b009afc94c91135353102658550d42', 'url': 'https://github.com/paritytech/bigint/commit/7e71521a61b009afc94c91135353102658550d42'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: Thebigintcrate is not maintained any more and contains several known bugs (including a soundness bug);
useuintinstead. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Unaligned memory access
reported: April 19, 2019
issued: October  1, 2020(last modified: October 19, 2021)
package: {'name': 'rand_core(crates.io)', 'url': '/packages/rand_core.html'}
type: INFOUnsound
aliases: [{'text': 'GHSA-mmc9-pwm7-qj5w', 'url': 'https://github.com/advisories/GHSA-mmc9-pwm7-qj5w'}, {'text': 'CVE-2020-25576', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-25576'}]
references: [{'text': 'https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06', 'url': 'https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: ^0.3.1>=0.4.2
affected functions: Version
rand_core::blockrng::fill_bytes: <0.4.2
rand_core::blockrng::next_u64: <0.4.2
description: Affected versions of this crate violated alignment when casting byte slices to
integer slices, resulting in undefined behavior. The flaw was corrected by Ralf Jung and Diggory Hardy. Advisory available underCC0-1.0license.
affected_functions: rand_core;;blockrng;;fill_bytes
version_of_Affected: <0.4.2

---
classification: CRITICAL
subtitle: Use-after-free in Framed due to lack of pinning
reported: January 30, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'actix-codec(crates.io)', 'url': '/packages/actix-codec.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35902', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35902'}, {'text': 'GHSA-rqgx-hpg4-456r', 'url': 'https://github.com/advisories/GHSA-rqgx-hpg4-456r'}]
references: [{'text': 'https://github.com/actix/actix-net/issues/91', 'url': 'https://github.com/actix/actix-net/issues/91'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.0-beta.1
description: Affected versions of this crate did not require the buffer wrapped inFramedto be pinned,
but treated it as if it had a fixed location in memory. This may result in a use-after-free. The flaw was corrected by making the affected functions acceptPin<&mut Self>instead of&mut self. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: MsQueue and SegQueue suffer from double-free
reported: December  9, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'crossbeam(crates.io)', 'url': '/packages/crossbeam.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20996', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20996'}, {'text': 'GHSA-c3cw-c387-pj65', 'url': 'https://github.com/advisories/GHSA-c3cw-c387-pj65'}]
references: [{'text': 'https://github.com/crossbeam-rs/crossbeam-epoch/issues/82', 'url': 'https://github.com/crossbeam-rs/crossbeam-epoch/issues/82'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.1
unaffected: <0.4.0
description: Even if an element is popped from a queue, crossbeam would run its
destructor inside the epoch-based garbage collector. This is a source
of double frees. The flaw was corrected by wrapping elements inside queues in aManuallyDrop. Thanks to @c0gent for reporting the issue. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Use after free in CMS Signing
reported: June  1, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'openssl(crates.io)', 'url': '/packages/openssl.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20997', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20997'}, {'text': 'GHSA-xjxc-vfw2-cg96', 'url': 'https://github.com/advisories/GHSA-xjxc-vfw2-cg96'}]
references: [{'text': 'https://github.com/sfackler/rust-openssl/pull/942', 'url': 'https://github.com/sfackler/rust-openssl/pull/942'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.10.9
unaffected: <0.10.8
description: Affected versions of the OpenSSL crate used structures after they'd been freed. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Use-after-free in buffer conversion implementation
reported: September  1, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'chttp(crates.io)', 'url': '/packages/chttp.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16140', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16140'}, {'text': 'GHSA-5rrv-m36h-qwf8', 'url': 'https://github.com/advisories/GHSA-5rrv-m36h-qwf8'}]
references: [{'text': 'https://github.com/sagebind/isahc/issues/2', 'url': 'https://github.com/sagebind/isahc/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.3
unaffected: <0.1.1
description: The Fromimplementation for Vecwas not properly implemented,
returning a vector backed by freed memory. This could lead to memory corruption
or be exploited to cause undefined behavior. A fix was published in version 0.1.3. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Possible double free during unwinding in SmallVec::insert_many
reported: July 19, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-20991', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20991'}, {'text': 'GHSA-rxr4-x558-x7hw', 'url': 'https://github.com/advisories/GHSA-rxr4-x558-x7hw'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/96', 'url': 'https://github.com/servo/rust-smallvec/issues/96'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.3^0.3.4^0.4.5^0.5.1
unaffected: <0.3.2
description: If an iterator passed toSmallVec::insert_manypanicked inIterator::next,
destructors were run during unwinding while the vector was in an inconsistent
state, possibly causing a double free (a destructor running on two copies of
the same value). This is fixed in smallvec 0.6.3 by ensuring that the vector's length is not
updated to include moved items until they have been removed from their
original positions.  Items may now be leaked ifIterator::nextpanics, but
they will not be dropped more than once. Thank you to @Vurich for reporting this bug. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Double-free and use-after-free in SmallVec::grow()
reported: June  6, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15551', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15551'}, {'text': 'GHSA-mm7v-vpv8-xfc3', 'url': 'https://github.com/advisories/GHSA-mm7v-vpv8-xfc3'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/148', 'url': 'https://github.com/servo/rust-smallvec/issues/148'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.10
unaffected: <0.6.5
affected functions: Version
smallvec::smallvec::grow: <0.6.10, >=0.6.5
description: Attempting to callgrowon a spilled SmallVec with a value equal to the current capacity causes it to free the existing data. This performs a double free immediately and may lead to use-after-free on subsequent accesses to the SmallVec contents. An attacker that controls the value passed togrowmay exploit this flaw to obtain memory contents or gain remote code execution. Credits to @ehuss for discovering, reporting and fixing the bug. Advisory available underCC0-1.0license.
affected_functions: smallvec;;smallvec;;grow
version_of_Affected: <0.6.10, >=0.6.5

---
classification: CRITICAL
subtitle: Memory corruption in SmallVec::grow()
reported: July 19, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'smallvec(crates.io)', 'url': '/packages/smallvec.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
aliases: [{'text': 'CVE-2019-15554', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15554'}, {'text': 'GHSA-69gw-hgj3-45m7', 'url': 'https://github.com/advisories/GHSA-69gw-hgj3-45m7'}]
references: [{'text': 'https://github.com/servo/rust-smallvec/issues/149', 'url': 'https://github.com/servo/rust-smallvec/issues/149'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.6.10
unaffected: <0.6.3
affected functions: Version
smallvec::smallvec::grow: <0.6.10, >=0.6.3
description: Attempting to callgrowon a spilled SmallVec with a value less than the current capacity causes corruption of memory allocator data structures. An attacker that controls the value passed togrowmay exploit this flaw to obtain memory contents or gain remote code execution. Credits to @ehuss for discovering, reporting and fixing the bug. Advisory available underCC0-1.0license.
affected_functions: smallvec;;smallvec;;grow
version_of_Affected: <0.6.10, >=0.6.3

---
classification: CRITICAL
subtitle: Lifetime boundary forraw_sliceandraw_slice_mutare incorrect
reported: February 11, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rulinalg(crates.io)', 'url': '/packages/rulinalg.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35879', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35879'}, {'text': 'GHSA-q2gj-9r85-p832', 'url': 'https://github.com/advisories/GHSA-q2gj-9r85-p832'}]
references: [{'text': 'https://github.com/AtheMathmo/rulinalg/issues/201', 'url': 'https://github.com/AtheMathmo/rulinalg/issues/201'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
unaffected: <0.4.0
affected functions: Version
rulinalg::matrix::rowmut::raw_slice: >=0.4.0
rulinalg::matrix::rowmut::raw_slice_mut: >=0.4.0
description: The affected version ofrulinalghas incorrect lifetime boundary definitions
forRowMut::raw_sliceandRowMut::raw_slice_mut. They do not conform with
Rust's borrowing rule and allows the user to create multiple mutable references
to the same location. This may result in unexpected calculation result and data
race if both references are used at the same time. Advisory available underCC0-1.0license.
affected_functions: rulinalg;;matrix;;rowmut;;raw_slice
version_of_Affected: >=0.4.0

---
classification: CRITICAL
subtitle: MultiDecoder::read() drops uninitialized memory of arbitrary type on panic in client code
reported: July  4, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'libflate(crates.io)', 'url': '/packages/libflate.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-15552', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15552'}, {'text': 'GHSA-rpcm-whqc-jfw8', 'url': 'https://github.com/advisories/GHSA-rpcm-whqc-jfw8'}]
references: [{'text': 'https://github.com/sile/libflate/issues/35', 'url': 'https://github.com/sile/libflate/issues/35'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.1.25
unaffected: <0.1.14
affected functions: Version
libflate::gzip::multidecoder::read: <0.1.25, >=0.1.14
description: Affected versions of libflate have set a field of an internal structure with a generic type to an uninitialized value inMultiDecoder::read()and reverted it to the original value after the function completed. However, execution ofMultiDecoder::read()could be interrupted by a panic in caller-suppliedReadimplementation. This would causedrop()to be called on uninitialized memory of a generic type implementingRead. This is equivalent to a use-after-free vulnerability and could allow an attacker to gain arbitrary code execution. The flaw was corrected by aborting immediately instead of unwinding the stack in case of panic withinMultiDecoder::read(). The issue was discovered and fixed by Shnatsel. Advisory available underCC0-1.0license.
affected_functions: libflate;;gzip;;multidecoder;;read
version_of_Affected: <0.1.25, >=0.1.14

---
classification: CRITICAL
subtitle: rio allows a use-after-free buffer access when a future is leaked
reported: May 11, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'rio(crates.io)', 'url': '/packages/rio.html'}
type: Vulnerability
categories: ['memory-corruption', 'memory-exposure']
aliases: [{'text': 'CVE-2020-35876', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35876'}, {'text': 'GHSA-8rc5-mr4f-m243', 'url': 'https://github.com/advisories/GHSA-8rc5-mr4f-m243'}]
references: [{'text': 'https://github.com/spacejam/rio/issues/11', 'url': 'https://github.com/spacejam/rio/issues/11'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: When ario::Completionis leaked, its drop code will not run. The drop code
is responsible for waiting until the kernel completes the I/O operation into, or
out of, the buffer borrowed byrio::Completion. Leaking the struct will allow
one to access and/or drop the buffer, which can lead to a use-after-free,
data races or leaking secrets. Upstream is not interested in fixing the issue. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Flaw in generativity allows out-of-bounds access
reported: May 21, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'compact_arena(crates.io)', 'url': '/packages/compact_arena.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-16139', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16139'}, {'text': 'GHSA-7j36-gc4r-9x3r', 'url': 'https://github.com/advisories/GHSA-7j36-gc4r-9x3r'}]
references: [{'text': 'https://github.com/llogiq/compact_arena/issues/22', 'url': 'https://github.com/llogiq/compact_arena/issues/22'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.4.0
affected functions: Version
compact_arena::smallarena::new: <0.4.0
description: Affected versions of this crate did not properly implement the generativity,
because the invariant lifetimes were not necessarilydropped. This allows an attacker to mix up two arenas, using indices created from one
arena with another one. This might lead to an out-of-bounds read or write
access into the memory reserved for the arena. The flaw was corrected by implementing generativity correctly in version 0.4.0. Advisory available underCC0-1.0license.
affected_functions: compact_arena;;smallarena;;new
version_of_Affected: <0.4.0

---
classification: CRITICAL
subtitle: StrcCtx deallocates a memory region that it doesn't own
reported: August 20, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'alpm-rs(crates.io)', 'url': '/packages/alpm-rs.html'}
type: INFOUnsound
aliases: [{'text': 'CVE-2020-35885', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35885'}, {'text': 'GHSA-qc4m-gc8r-mg8m', 'url': 'https://github.com/advisories/GHSA-qc4m-gc8r-mg8m'}]
references: [{'text': 'https://github.com/pigeonhands/rust-arch/issues/2', 'url': 'https://github.com/pigeonhands/rust-arch/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: no patched versions
description: StrcCtxdeallocate a memory region that it doesn't own whenStrcCtxis created without usingStrcCtx::new.
This can introduce memory safety issues such as double-free and use-after-free to client programs. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Matrix::zip_elementscauses double free
reported: September 14, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'linea(crates.io)', 'url': '/packages/linea.html'}
type: Vulnerability
categories: ['memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-16880', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16880'}, {'text': 'GHSA-j52m-489x-v634', 'url': 'https://github.com/advisories/GHSA-j52m-489x-v634'}]
references: [{'text': 'https://github.com/strake/linea.rs/issues/2', 'url': 'https://github.com/strake/linea.rs/issues/2'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >0.9.4
description: Affected versions of this crate did not properly implements theMatrix::zip_elementsmethod, which causes an double free when the given trait implementation might panic. This allows an attacker to corrupt or take control of the memory. The flaw was corrected by Phosphorus15. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Stream callback function is not unwind safe
reported: September 14, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'portaudio-rs(crates.io)', 'url': '/packages/portaudio-rs.html'}
type: Vulnerability
categories: ['code-execution', 'memory-corruption']
keywords: []
aliases: [{'text': 'CVE-2019-16881', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16881'}, {'text': 'GHSA-qpjr-ch72-2qq4', 'url': 'https://github.com/advisories/GHSA-qpjr-ch72-2qq4'}]
references: [{'text': 'https://github.com/mvdnes/portaudio-rs/issues/20', 'url': 'https://github.com/mvdnes/portaudio-rs/issues/20'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >0.3.1
description: Affected versions of this crate is not panic safe within callback functionsstream_callbackandstream_finished_callback. The call to user-provided closure might panic before amem::forgetcall, which then causes a use after free that grants attacker to control the callback function pointer. This allows an attacker to construct an arbitrary code execution . The flaw was reported by Phosphorus15. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Internally mutating methods take immutable ref self
reported: September  2, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'renderdoc(crates.io)', 'url': '/packages/renderdoc.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16142', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16142'}, {'text': 'GHSA-vhfr-v4w9-45v8', 'url': 'https://github.com/advisories/GHSA-vhfr-v4w9-45v8'}]
references: [{'text': 'https://github.com/ebkalderon/renderdoc-rs/pull/32', 'url': 'https://github.com/ebkalderon/renderdoc-rs/pull/32'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.5.0
affected functions: Version
renderdoc::api::renderdocv110::trigger_multi_frame_capture: <0.5.0
renderdoc::api::renderdocv120::set_capture_file_comments: <0.5.0
description: Affected versions of this crate exposed several methods which tookselfby
immutable reference, despite the requesting the RenderDoc API to set a mutable
value internally. This is technically unsound and calling these methods from multiple threads
without synchronization could lead to unexpected and unpredictable behavior. The flaw was corrected in release 0.5.0. Advisory available underCC0-1.0license.
affected_functions: renderdoc;;api;;renderdocv110;;trigger_multi_frame_capture
version_of_Affected: <0.5.0

---
classification: CRITICAL
subtitle: Missing sanitization in mozwire allows local file overwrite of files ending in .conf
reported: August 18, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'mozwire(crates.io)', 'url': '/packages/mozwire.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2020-35883', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35883'}, {'text': 'GHSA-4vhw-4rw7-jfpv', 'url': 'https://github.com/advisories/GHSA-4vhw-4rw7-jfpv'}]
references: [{'text': 'https://github.com/NilsIrl/MozWire/issues/14', 'url': 'https://github.com/NilsIrl/MozWire/issues/14'}]
cvss score: 9.1CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H
patched: >0.4.1
description: The client software downloaded a list of servers from mozilla's servers and created local files named
after the hostname field in the json document. No verification of the content of the string was made, and it could therefore have included '../' leading to path traversal. This allows an attacker in control of mozilla's servers to overwrite/create local files named .conf. The flaw was corrected by sanitizing the hostname field. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Flaw in interface may drop uninitialized instance of arbitrary types
reported: August 21, 2019
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'image(crates.io)', 'url': '/packages/image.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2019-16138', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16138'}, {'text': 'GHSA-m2pf-hprp-3vqm', 'url': 'https://github.com/advisories/GHSA-m2pf-hprp-3vqm'}]
references: [{'text': 'https://github.com/image-rs/image/pull/985', 'url': 'https://github.com/image-rs/image/pull/985'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.21.3
unaffected: <0.10.2
affected functions: Version
image::hdr::hdrdecoder::read_image_transform: <0.21.3, >=0.10.2
description: Affected versions of this crate would callVec::set_lenon an uninitialized
vector with user-provided type parameter, in an interface of the HDR image
format decoder. They would then also call other code that could panic before
initializing all instances. This could run Drop implementations on uninitialized types, equivalent to
use-after-free, and allow an attacker arbitrary code execution. Two different fixes were applied. It is possible to conserve the interface by
ensuring proper initialization before callingVec::set_len. Drop is no longer
called in case of panic, though. Starting from version0.22, a breaking change to the interface requires
callers to pre-allocate the output buffer and pass a mutable slice instead,
avoiding all unsafe code. Advisory available underCC0-1.0license.
affected_functions: image;;hdr;;hdrdecoder;;read_image_transform
version_of_Affected: <0.21.3, >=0.10.2

---
classification: CRITICAL
subtitle: Vec-to-vec transmutations could lead to heap overflow/corruption
reported: November 27, 2018
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'safe-transmute(crates.io)', 'url': '/packages/safe-transmute.html'}
type: Vulnerability
keywords: []
aliases: [{'text': 'CVE-2018-21000', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-21000'}, {'text': 'GHSA-2v78-j59h-fmpf', 'url': 'https://github.com/advisories/GHSA-2v78-j59h-fmpf'}]
references: [{'text': 'https://github.com/nabijaczleweli/safe-transmute-rs/pull/36', 'url': 'https://github.com/nabijaczleweli/safe-transmute-rs/pull/36'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.10.1
unaffected: <0.4.0
description: Affected versions of this crate switched the length and capacity arguments in the Vec::from_raw_parts() constructor,
which could lead to memory corruption or data leakage. The flaw was corrected by using the constructor correctly. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Flaw in hyper allows request smuggling by sending a body in GET requests
reported: March 19, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'hyper(crates.io)', 'url': '/packages/hyper.html'}
type: Vulnerability
categories: ['format-injection']
keywords: []
aliases: [{'text': 'CVE-2020-35863', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35863'}, {'text': 'GHSA-h3qr-rq2j-74w4', 'url': 'https://github.com/advisories/GHSA-h3qr-rq2j-74w4'}]
references: [{'text': 'https://github.com/hyperium/hyper/issues/1925', 'url': 'https://github.com/hyperium/hyper/issues/1925'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.12.34
unaffected: <0.11.0
description: Vulnerable versions of hyper allow GET requests to have bodies, even if there is
no Transfer-Encoding or Content-Length header.  As per the HTTP 1.1
specification, such requests do not have bodies, so the body will be interpreted
as a separate HTTP request. This allows an attacker who can control the body and method of an HTTP request
made by hyper to inject a request with headers that would not otherwise be
allowed, as demonstrated by sending a malformed HTTP request from a Substrate
runtime.  This allows bypassing CORS restrictions.  In combination with other
vulnerabilities, such as an exploitable web server listening on loopback, it may
allow remote code execution. The flaw was corrected in hyper version 0.12.34. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: Missing check in ArrayVec leads to out-of-bounds write.
reported: September 24, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'stack(crates.io)', 'url': '/packages/stack.html'}
type: Vulnerability
aliases: [{'text': 'CVE-2020-35895', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35895'}, {'text': 'GHSA-h45v-vgvp-3h5v', 'url': 'https://github.com/advisories/GHSA-h45v-vgvp-3h5v'}]
references: [{'text': 'https://github.com/arcnmx/stack-rs/issues/4', 'url': 'https://github.com/arcnmx/stack-rs/issues/4'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.3.1
description: ArrayVec::insert allows insertion of an element into the array object into the
specified index. Due to a missing check on the upperbound of this index, it is
possible to write out of bounds. Advisory available underCC0-1.0license.

---
classification: CRITICAL
subtitle: use-after or double free of allocated memory
reported: March 27, 2020
issued: October  1, 2020(last modified: June 13, 2023)
package: {'name': 'bitvec(crates.io)', 'url': '/packages/bitvec.html'}
type: Vulnerability
categories: ['memory-corruption']
aliases: [{'text': 'CVE-2020-35862', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-35862'}, {'text': 'GHSA-7cjc-hvxf-gqh7', 'url': 'https://github.com/advisories/GHSA-7cjc-hvxf-gqh7'}]
references: [{'text': 'https://github.com/myrrlyn/bitvec/issues/55', 'url': 'https://github.com/myrrlyn/bitvec/issues/55'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=0.17.4
unaffected: <0.11.0
affected functions: Version
bitvec::vec::bitvec::into_boxed_bitslice: <0.17.4, >=0.11.0
description: Conversion ofBitVectoBitBoxdid not account for allocation movement. The flaw was corrected by using the address after resizing, rather than the original base address. Advisory available underCC0-1.0license.
affected_functions: bitvec;;vec;;bitvec;;into_boxed_bitslice
version_of_Affected: <0.17.4, >=0.11.0

---
classification: CRITICAL
subtitle: Buffer overflow vulnerability in str::repeat()
reported: September 21, 2018
issued: October  1, 2020
package: {'name': 'std', 'url': '/packages/std.html'}
type: Vulnerability
categories: ['denial-of-service', 'memory-corruption']
references: [{'text': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/CmSuTm-SaU0', 'url': 'https://groups.google.com/forum/#!topic/rustlang-security-announcements/CmSuTm-SaU0'}]
cvss score: 9.8CRITICAL
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
patched: >=1.29.1
unaffected: <1.26.0
affected functions: Version
std::str::repeat: <1.29.1, >=1.26.0
description: The Rust team was recently notified of a security vulnerability affecting
thestr::repeatfunction in the standard library. If your code does not
use this function, it is not affected. This vulnerability is an instance of CWE-680: Integer Overflow to Buffer
Overflow1. Thestr::repeatfunction in the standard library allows repeating a
string a fixed number of times, returning an owned version of the final
string. The capacity of the final string is calculated by multiplying
the length of the string being repeated by the number of copies. This
calculation can overflow, and this case was not properly checked for. The rest of the implementation ofstr::repeatcontains unsafe code
that relies on a preallocated vector having the capacity calculated
earlier. On integer overflow the capacity will be less than required,
and which then writes outside of the allocated buffer, leading to
buffer overflow. While thestr::repeatfunction has been in Rust since 1.16.0, this
vulnerability was introduced into the standard library in pull
request #486572. The pull request was merged on March 6, 2018 and
was first part of the 1.26.0 stable released on May 10, 2018. As such, this vulnerability affects: This bug can be mitigated manually by auditing for calls tostr::repeatand testing if the resulting vector's capacity will overflow. If it does,
then the program should panic. For Rust 1.29, we'll be releasing a 1.29.1 on 2018-09-25 with the fix,
which consists of checking for overflow and deterministically panicking
if it happens. Nightlies and betas produced after 2019-09-21 will also
contain a fix for this issue. We will not be releasing our own fixes for previous versions of Rust.
The patch to fix 1.29 should roughly applicable to older versions, although
the implementation has seen a few refactorings since it was introduced.
The patch for 1.29 is included at the end of this email. If you
need assistance patching an older version of Rust on your own, please reach
out to our security mailing list, security@rust-lang.org, and we'll be happy
to help. The current beta and nightly channels will be updated with a fix for this
issue as well. Thanks to Scott McMurray, who found this bug and reported it to us in
accordance with our security policy https://www.rust-lang.org/security.html. Advisory available underCC0-1.0license.
affected_functions: std;;str;;repeat
version_of_Affected: <1.29.1, >=1.26.0

---
classification: HIGH
subtitle: phonenumber:  panic on parsing crafted phonenumber inputs
reported: July  7, 2024
issued: September  5, 2024
package: {'name': 'phonenumber(crates.io)', 'url': '/packages/phonenumber.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2024-39697', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697'}, {'text': 'GHSA-mjw4-jj88-v687', 'url': 'https://github.com/advisories/GHSA-mjw4-jj88-v687'}]
references: [{'text': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687', 'url': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.3.6
unaffected: ['The phonenumber parsing code may panic due to a reachableassert!guard on the phonenumber string.', 'In a typical deployment of rust-phonenumber, this may get triggered by feeding a maliciously crafted phonenumber, e.g. over the network, specifically strings of the form+dwPAA;phone-context=AA, where the "number" part potentially parses as a number larger than 2^56.', 'Since f69abee1/0.3.4/#52.', '0.2.x series is not affected.']
affected functions: Version
phonenumber::parse: *
description: 
References: ['Patches have been published as version0.3.6+8.13.36.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: phonenumber;;parse
version_of_Affected: *

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-index(crates.io)', 'url': '/packages/gix-index.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.33.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-worktree(crates.io)', 'url': '/packages/gix-worktree.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.34.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Traversal outside working tree enables arbitrary code execution
reported: May 22, 2024
issued: July  8, 2024
package: {'name': 'gix-fs(crates.io)', 'url': '/packages/gix-fs.html'}
type: Vulnerability
categories: ['code-execution']
keywords: []
aliases: [{'text': 'CVE-2024-35186', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35186'}, {'text': 'GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}]
references: [{'text': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/Byron/gitoxide/security/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://github.com/advisories/GHSA-7w47-3wg8-547c', 'url': 'https://github.com/advisories/GHSA-7w47-3wg8-547c'}, {'text': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186', 'url': 'https://nvd.nist.gov/vuln/detail/CVE-2024-35186'}]
cvss score: 8.8HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'Required', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionRequiredScopeUnchangedConfidentialityHighIntegrityHighAvailabilityHigh
privileges required: None
user interaction: Required
scope: Unchanged
confidentiality: High
integrity: High
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H
patched: >=0.11.0
description: 
unaffected: ['During checkout, gitoxide does not verify that paths point to locations in the working tree. A specially crafted repository can, when cloned, place new files anywhere writable by the application.']
References: ['Any use ofgixor another application that makes use ofgix-worktree-state, or otherwise relies ongix-fsandgix-worktreefor validation, is affected, if used to clone untrusted repositories. The above description focuses on code execution, as that leads to a complete loss of confidentiality, integrity, and availability, but creating files outside a working tree without attempting to execute code can directly impact integrity as well.', 'In use cases where no untrusted repository is ever cloned, this vulnerability has no impact. Furthermore, the impact of this vulnerabilitymaybe lower whengixis used to clone a repository for CI/CD purposes, even if untrusted, since in such uses the environment is usually isolated and arbitrary code is usually run deliberately from the repository with necessary safeguards in place.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]

---
classification: HIGH
subtitle: Slow loris vulnerability with default configuration
reported: March 15, 2024
issued: May 20, 2024(last modified: May 21, 2024)
package: {'name': 'tls-listener(crates.io)', 'url': '/packages/tls-listener.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2024-28854', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28854'}, {'text': 'GHSA-2qph-qpvm-2qf7', 'url': 'https://github.com/advisories/GHSA-2qph-qpvm-2qf7'}]
references: [{'text': 'https://github.com/tmccombs/tls-listener/security/advisories/GHSA-2qph-qpvm-2qf7', 'url': 'https://github.com/tmccombs/tls-listener/security/advisories/GHSA-2qph-qpvm-2qf7'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.10.0
affected functions: Version
tls_listener::tlslistener::new: <0.10.0
description: tls-listener is a rust lang wrapper around a connection listener to support TLS. With the default configuration of tls-listener, a malicious user can open 6.4TcpStreams a second, sending 0 bytes, and can trigger a DoS. The default configuration options make any public service usingTlsListener::new()vulnerable to a slow-loris DoS attack. This impacts any publicly accessible service using the default configuration of tls-listener in versions prior to 0.10.0. Users are advised to upgrade. Users unable to upgrade may mitigate this by passing a large value, such asusize::MAXas the parameter toBuilder::max_handshakes. Advisory available underCC0-1.0license.
affected_functions: tls_listener;;tlslistener;;new
version_of_Affected: <0.10.0

---
classification: HIGH
subtitle: rustls::ConnectionCommon::complete_iocould fall into an infinite loop based on network input
reported: April 19, 2024
issued: April 19, 2024
package: {'name': 'rustls(crates.io)', 'url': '/packages/rustls.html'}
type: Vulnerability
categories: ['denial-of-service']
aliases: [{'text': 'CVE-2024-32650', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32650'}, {'text': 'GHSA-6g7w-8wpp-frhj', 'url': 'https://github.com/advisories/GHSA-6g7w-8wpp-frhj'}]
references: [{'text': 'https://github.com/rustls/rustls/security/advisories/GHSA-6g7w-8wpp-frhj', 'url': 'https://github.com/rustls/rustls/security/advisories/GHSA-6g7w-8wpp-frhj'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.23.5>=0.22.4, <0.23.0>=0.21.11, <0.22.0
affected functions: Version
rustls::connectioncommon::complete_io: <=0.23.4<=0.22.3<=0.21.10^0.20
description: If aclose_notifyalert is received during a handshake,complete_iodoes not terminate. Callers which do not callcomplete_ioare not affected. rustls-tokioandrustls-ffido not callcomplete_ioand are not affected. rustls::Streamandrustls::StreamOwnedtypes usecomplete_ioand are affected. Advisory available underCC0-1.0license.
affected_functions: rustls;;connectioncommon;;complete_io
version_of_Affected: <=0.23.4<=0.22.3<=0.21.10^0.20

---
classification: HIGH
subtitle: blurhash: panic on parsing crafted blurhash inputs
reported: September 19, 2023
issued: March  2, 2024
package: {'name': 'blurhash(crates.io)', 'url': '/packages/blurhash.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-42447', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447'}]
references: [{'text': 'https://github.com/whisperfish/blurhash-rs/security/advisories/GHSA-cxvp-82cq-57h2', 'url': 'https://github.com/whisperfish/blurhash-rs/security/advisories/GHSA-cxvp-82cq-57h2'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42447'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.2.0
affected functions: Version
blurhash::decode: *
description: The blurhash parsing code may panic due to multiple panic-guarded out-of-bounds accesses on untrusted input. In a typical deployment, this may get triggered by feeding a maliciously crafted blurhashes over the network. These may include: The patches were released under version 0.2.0, which may require user intervention because of slight API churn. Advisory available underCC0-1.0license.
affected_functions: blurhash;;decode
version_of_Affected: *

---
classification: HIGH
subtitle: phonenumber:  panic on parsing crafted RF3966 phonenumber inputs
reported: September 19, 2023
issued: February 29, 2024
package: {'name': 'phonenumber(crates.io)', 'url': '/packages/phonenumber.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-42444', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444'}]
references: [{'text': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2', 'url': 'https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2'}, {'text': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-42444'}]
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Changed', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeChangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Changed
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H
patched: >=0.2.5, <0.3.0>=0.3.3
affected functions: Version
phonenumber::parse: *
description: 
unaffected: ['The phonenumber parsing code may panic due to a panic-guarded out-of-bounds access on the phonenumber string.', 'In a typical deployment ofrust-phonenumber, this may get triggered by feeding a maliciously crafted phonenumber over the network, specifically the string.;phone-context=.']
References: ['Patches will be published as version0.3.3+8.13.9and backported as0.2.5+8.11.3.', 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: phonenumber;;parse
version_of_Affected: *

---
classification: HIGH
subtitle: Memory corruption, denial of service, and arbitrary code execution in libgit2
reported: February  6, 2024
issued: February  9, 2024(last modified: February 14, 2024)
package: {'name': 'libgit2-sys(crates.io)', 'url': '/packages/libgit2-sys.html'}
type: Vulnerability
categories: ['denial-of-service', 'code-execution', 'memory-corruption']
aliases: [{'text': 'GHSA-22q8-ghmq-63vf', 'url': 'https://github.com/advisories/GHSA-22q8-ghmq-63vf'}]
references: [{'text': 'https://github.com/rust-lang/git2-rs/pull/1017', 'url': 'https://github.com/rust-lang/git2-rs/pull/1017'}, {'text': 'https://github.com/libgit2/libgit2/releases/tag/v1.7.2', 'url': 'https://github.com/libgit2/libgit2/releases/tag/v1.7.2'}]
related: CVE-2024-24575CVE-2024-24577GHSA-54mf-x2rh-hq9vGHSA-j2v7-4f6v-gpg8
cvss score: 8.6HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityLowAvailabilityLow', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'Low', 'Availability': 'Low'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityLowAvailabilityLow
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: Low
availability: Low
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L
patched: >=0.16.2
affected functions: Version
libgit2_sys::git_index_add: <0.16.2
libgit2_sys::git_revparse_single: <0.16.2, >=0.13.0
description: Thelibgit2project fixed three security issues in the 1.7.2 release. These issues are: Thelibgit2-syscrate bundles libgit2, or optionally links to a system libgit2 library. In either case, versions of the libgit2 library less than 1.7.2 are vulnerable. The 0.16.2 release oflibgit2-sysbundles the fixed version of 1.7.2, and requires a system libgit2 version of at least 1.7.2. It is recommended that all users upgrade. Advisory available underCC0-1.0license.
affected_functions: libgit2_sys;;git_index_add
version_of_Affected: <0.16.2

---
classification: HIGH
subtitle: KyberSlash: division timings depending on secrets
reported: December  1, 2023
issued: February  9, 2024(last modified: April 12, 2024)
package: {'name': 'pqc_kyber(crates.io)', 'url': '/packages/pqc_kyber.html'}
type: Vulnerability
categories: ['crypto-failure']
keywords: []
aliases: [{'text': 'GHSA-x5j2-g63m-f8g4', 'url': 'https://github.com/advisories/GHSA-x5j2-g63m-f8g4'}]
references: [{'text': 'https://github.com/Argyle-Software/kyber/issues/108', 'url': 'https://github.com/Argyle-Software/kyber/issues/108'}, {'text': 'https://kyberslash.cr.yp.to/faq.html', 'url': 'https://kyberslash.cr.yp.to/faq.html'}, {'text': 'https://kyberslash.cr.yp.to/libraries.html', 'url': 'https://kyberslash.cr.yp.to/libraries.html'}, {'text': 'https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6', 'url': 'https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6'}]
cvss score: 7.4HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'High', 'Integrity': 'High', 'Availability': 'None'}
attack vector: Network
attack complexity: HighPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityHighIntegrityHighAvailabilityNone
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: High
integrity: High
availability: None
cvss vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N
patched: no patched versions
description: Various Kyber software libraries in various environments leak secret information into timing, specifically because The KyberSlash pages track which Kyberlibrarieshave this issue, and include aFAQabout the issue. The KyberSlash pages were written by Daniel J. Bernstein. The FAQ originally said "I", but some people seemed to have trouble finding this authorship statement, so the FAQ now says "Bernstein" instead. The permanent link for the KyberSlash pages ishttps://kyberslash.cr.yp.to. The issue has not been resolved in the upstreampqc_kybercrate. A third-party fork that mitigates this attack vector has been published assafe_pqc_kyber. Theml-kemcrate is a maintained
alternative pure Rust implementation of ML-KEM / Kyber. Advisory available underCC0-1.0license.

---
classification: HIGH
subtitle: Infinite decoding loop through specially crafted payload
reported: December  8, 2023
issued: December  9, 2023
package: {'name': 'candid(crates.io)', 'url': '/packages/candid.html'}
type: Vulnerability
categories: ['denial-of-service']
keywords: []
aliases: [{'text': 'CVE-2023-6245', 'url': 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6245'}, {'text': 'GHSA-7787-p7x6-fq3j', 'url': 'https://github.com/advisories/GHSA-7787-p7x6-fq3j'}]
references: [{'text': 'https://github.com/dfinity/candid/pull/478', 'url': 'https://github.com/dfinity/candid/pull/478'}]
cvss score: 7.5HIGH
cvss details: {'Attack vector': 'Network', 'Attack complexity': 'LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh', 'Privileges required': 'None', 'User interaction': 'None', 'Scope': 'Unchanged', 'Confidentiality': 'None', 'Integrity': 'None', 'Availability': 'High'}
attack vector: Network
attack complexity: LowPrivileges requiredNoneUser interactionNoneScopeUnchangedConfidentialityNoneIntegrityNoneAvailabilityHigh
privileges required: None
user interaction: None
scope: Unchanged
confidentiality: None
integrity: None
availability: High
cvss vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
patched: >=0.9.10
unaffected: ['Rust canisters using candid< 0.9.0or>= 0.9.10', 'Rust canister interfaces of type other thanrecord { * }', 'Motoko based canisters', 'dfx (for asset canister)<= 0.14.3or>= 0.15.2']
affected functions: Version
candid::decode: >=0.9.0, <0.9.10
description: The Candid library causes a Denial of Service while parsing a specially crafted payload withemptydata type. For example, if the payload isrecord { * ; empty }and  the canister interface expectsrecord { * }then the rust candid decoder treatsemptyas an extra field required by the type.  The problem with typeemptyis that the candid rust library wrongly categorizesemptyas a recoverable error when skipping the field and thus causing an infinite decoding loop. Canisters using affected versions of candid are exposed to denial of service by causing the decoding to run indefinitely until the canister traps due to reaching maximum instruction limit per execution round. Repeated exposure to the payload will result in degraded performance of the canister. For asset canister users,dfxversions>= 0.14.4to<= 0.15.2-beta.0ships asset canister with an affected version of candid.
References: ['GitHub Security Advisory (GHSA-7787-p7x6-fq3j)', {'text': 'GitHub Security Advisory (GHSA-7787-p7x6-fq3j)', 'url': 'https://github.com/dfinity/candid/security/advisories/GHSA-7787-p7x6-fq3j'}, 'dfinity/candid/pull/478', {'text': 'dfinity/candid/pull/478', 'url': 'https://github.com/dfinity/candid/pull/478'}, 'Candid Library Reference', {'text': 'Candid Library Reference', 'url': 'https://internetcomputer.org/docs/current/references/candid-ref'}, 'Candid Specification', {'text': 'Candid Specification', 'url': 'https://github.com/dfinity/candid/blob/master/spec/Candid.md'}, 'Internet Computer Specification', {'text': 'Internet Computer Specification', 'url': 'https://internetcomputer.org/docs/current/references/ic-interface-spec'}, 'Advisory available underCC0-1.0license.', {'text': 'CC0-1.0', 'url': 'https://spdx.org/licenses/CC0-1.0.html'}]
affected_functions: candid;;decode
version_of_Affected: >=0.9.0, <0.9.10
